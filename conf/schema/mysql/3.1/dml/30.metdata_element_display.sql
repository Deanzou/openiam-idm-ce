use openiam;

DELETE FROM LANGUAGE_MAPPING WHERE ID LIKE '%ElementMigrate%';

DELIMITER $$

DROP PROCEDURE IF EXISTS migrateMetadataElement$$

CREATE PROCEDURE migrateMetadataElement()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE _id VARCHAR(32);
		DECLARE _value VARCHAR(40);
		DECLARE cur1 CURSOR FOR (
			SELECT METADATA_ID, ATTRIBUTE_NAME FROM METADATA_ELEMENT WHERE METADATA_ID NOT IN(
				SELECT REFERENCE_ID FROM LANGUAGE_MAPPING WHERE REFERENCE_TYPE='MetadataElementEntity'
			)
		);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
			
		REPEAT 
			FETCH cur1 INTO _id, _value;
			IF (_id IS NOT NULL) THEN
				IF (_value IS NOT NULL) THEN
					IF ((SELECT count(*) FROM LANGUAGE_MAPPING WHERE ID=CONCAT('ElementMigrate',_id))= 0) THEN
						INSERT INTO LANGUAGE_MAPPING(ID, LANGUAGE_ID, REFERENCE_TYPE, REFERENCE_ID, TEXT_VALUE) VALUES(CONCAT('ElementMigrate',_id), '1', 'MetadataElementEntity', _id, _value);
					END IF;
				END IF;
			END IF;
		UNTIL done END REPEAT;
		CLOSE cur1;
	END$$
DELIMITER ;

call migrateMetadataElement();

DROP PROCEDURE migrateMetadataElement;