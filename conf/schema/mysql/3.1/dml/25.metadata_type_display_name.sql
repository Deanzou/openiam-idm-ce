use openiam;


DELETE FROM METADATA_TYPE WHERE TYPE_ID LIKE '%_REFDATA%';
DELETE FROM METADATA_TYPE WHERE TYPE_ID IN(SELECT STATUS_CD FROM STATUS WHERE STATUS_CD NOT IN('CONTRACTOR'));
DELETE FROM METADATA_TYPE WHERE TYPE_ID IN('CONTRACTOR TYPE');
UPDATE USERS SET EMPLOYEE_TYPE='CONTRACTOR TYPE' WHERE EMPLOYEE_TYPE='CONTRACTOR';

DELIMITER $$

DROP PROCEDURE IF EXISTS migrateRefData$$

CREATE PROCEDURE migrateRefData()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE _id VARCHAR(32);
		DECLARE _name VARCHAR(40);
		DECLARE _group VARCHAR(32);
		DECLARE _idx INT DEFAULT 1;
		DECLARE cur1 CURSOR FOR (SELECT STATUS_CD, CODE_GROUP, DESCRIPTION FROM STATUS);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
			
		REPEAT 
			FETCH cur1 INTO _id, _group, _name;
			IF (_id IS NOT NULL) THEN
				IF (_group IS NOT NULL) THEN
					IF (_name IS NOT NULL) THEN
						IF ((SELECT count(*) FROM METADATA_TYPE WHERE GROUPING=_group AND DESCRIPTION=_name)= 0) THEN
							IF (_id = 'CONTRACTOR') THEN
								INSERT INTO METADATA_TYPE(TYPE_ID, DESCRIPTION, ACTIVE, SYNC_MANAGED_SYS, GROUPING, IS_BINARY) VALUES('CONTRACTOR TYPE', _name, 'Y', 'Y', _group, 'N');
							ELSE
								INSERT INTO METADATA_TYPE(TYPE_ID, DESCRIPTION, ACTIVE, SYNC_MANAGED_SYS, GROUPING, IS_BINARY) VALUES(_id, _name, 'Y', 'Y', _group, 'N');
							END IF;
							SET _idx = _idx + 1;
						END IF;
					END IF;
				END IF;
			END IF;
		UNTIL done END REPEAT;
		CLOSE cur1;
	END$$
DELIMITER ;

call migrateRefData();

DROP PROCEDURE migrateRefData;

DELETE FROM LANGUAGE_MAPPING WHERE REFERENCE_TYPE='MetadataTypeEntity';


DELIMITER $$

DROP PROCEDURE IF EXISTS addDisplayName$$

CREATE PROCEDURE addDisplayName()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE _name VARCHAR(40);
		DECLARE _id VARCHAR(32);
		DECLARE _idx INT DEFAULT 1;
		DECLARE cur1 CURSOR FOR (SELECT TYPE_ID, DESCRIPTION FROM METADATA_TYPE);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
			
		REPEAT 
			FETCH cur1 INTO _id, _name;
			IF (_id IS NOT NULL) THEN
				IF (_name IS NOT NULL) THEN
					IF ((SELECT count(*) FROM LANGUAGE_MAPPING WHERE REFERENCE_TYPE='MetadataTypeEntity' AND REFERENCE_ID=_id)= 0) THEN
						INSERT INTO LANGUAGE_MAPPING(ID, LANGUAGE_ID, REFERENCE_TYPE, REFERENCE_ID, TEXT_VALUE) VALUES(CONCAT('MetadataTypeEntity', _idx), '1', 'MetadataTypeEntity', _id, _name);
						SET _idx = _idx + 1;
					END IF;
				END IF;
			END IF;
		UNTIL done END REPEAT;
		CLOSE cur1;
	END$$
DELIMITER ;

call addDisplayName();

DROP PROCEDURE addDisplayName;