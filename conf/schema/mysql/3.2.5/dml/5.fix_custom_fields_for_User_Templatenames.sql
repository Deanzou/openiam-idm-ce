use openiam;

delete from LANGUAGE_MAPPING where ID like '%UI_FIELD_TEMPLATE_EN%';

DELIMITER $$

DROP PROCEDURE IF EXISTS ADD_DEFAULT_VALUES_FOR_UI_TEMPLATE_FIELDS$$

CREATE PROCEDURE ADD_DEFAULT_VALUES_FOR_UI_TEMPLATE_FIELDS()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE cnt INT DEFAULT 0;
		DECLARE uifieldid VARCHAR(32);
		DECLARE xrefid VARCHAR(32);
		DECLARE name VARCHAR(100);
		DECLARE cur1 CURSOR FOR (SELECT a1.UI_FIELD_ID, a1.XREF_ID, a2.NAME FROM UI_FIELD_TEMPLATE_XREF a1 INNER JOIN UI_TEMPLATE_FIELDS a2 ON a1.UI_FIELD_ID=a2.UI_FIELD_ID);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;		
		REPEAT
			FETCH cur1 INTO uifieldid, xrefid, name;
			IF (xrefid IS NOT NULL) THEN
				IF NOT EXISTS (SELECT * FROM LANGUAGE_MAPPING WHERE LANGUAGE_ID='1' AND REFERENCE_ID=xrefid) THEN
					SET cnt = cnt + 1;
					INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES (CONCAT('UI_FIELD_TEMPLATE_EN_',cnt),'1',xrefid,'MetadataFieldTemplateXrefEntity.languageMap', name);
				END IF;
			END IF;
		UNTIL done END REPEAT; 
		CLOSE cur1;
	END$$
DELIMITER ;

call ADD_DEFAULT_VALUES_FOR_UI_TEMPLATE_FIELDS();
DROP PROCEDURE ADD_DEFAULT_VALUES_FOR_UI_TEMPLATE_FIELDS;

