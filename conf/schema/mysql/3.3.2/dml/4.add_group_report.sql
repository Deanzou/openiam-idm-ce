use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS ADD_GROUP_REPORT$$
CREATE PROCEDURE ADD_GROUP_REPORT()
  BEGIN

    IF NOT EXISTS (SELECT * FROM REPORT_PARAMETER_TYPE WHERE RCPT_ID = 4) THEN
      INSERT INTO REPORT_PARAMETER_TYPE (RCPT_ID,TYPE_NAME,TYPE_DESCRIPTION) VALUES (4,'BOOLEAN','Boolean');
    END IF;

    IF NOT EXISTS (SELECT * FROM RES WHERE RESOURCE_ID = 'GROUP_REPORT_111') THEN
      INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL, MIN_AUTH_LEVEL, IS_PUBLIC,
            ADMIN_RESOURCE_ID, RISK, TYPE_ID, COORELATED_NAME) VALUES
        ('GROUP_REPORT_111', 'REPORT', NULL, 'GROUP_REPORT_111', NULL, NULL, NULL, 'Y', NULL, NULL, NULL, 'GROUP_REPORT');
     END IF;

    IF NOT EXISTS (SELECT * FROM REPORT_INFO WHERE REPORT_INFO_ID = '111') THEN
      INSERT INTO REPORT_INFO (REPORT_INFO_ID, REPORT_NAME, DATASOURCE_FILE_PATH, REPORT_FILE_PATH, BUILT_IN, RESOURCE_ID) VALUES
        ('111', 'GROUP_REPORT', 'GroupReport.groovy', 'GroupReport.rptdesign', 'Y', 'GROUP_REPORT_111');
    END IF;

    DELETE FROM REPORT_CRITERIA_PARAMETER WHERE REPORT_INFO_ID = '111';
    INSERT INTO REPORT_CRITERIA_PARAMETER (RCP_ID, REPORT_INFO_ID, PARAM_NAME, PARAM_VALUE, RCPT_ID, PARAM_META_TYPE_ID, IS_MULTIPLE, IS_REQUIRED, CAPTION, DISPLAY_ORDER, REQUEST_PARAMS) VALUES
      ('1111', '111', 'GROUP_ID', NULL, '1', 'GROUP', 'Y', 'N', 'Group', 1, NULL),
      ('1112', '111', 'ORG_ID', NULL, '1', 'ORGANIZATION', 'N', 'N', 'Organization', 2, NULL),
      ('1113', '111', 'RISK', NULL, '1', 'RISK', 'N', 'N', 'Risk', 3, NULL),
      ('1114', '111', 'MANAGED_SYS_ID', NULL, '1', 'MANAGED_SYSTEM', 'N', 'N', 'Managed System', 4, NULL),
      ('1115', '111', 'USER_ID', NULL, '1', 'USER', 'N', 'N', 'Memeber', 5, NULL),
      ('1116', '111', 'DETAILS', NULL, '4', NULL, 'N', 'N', 'Show details', 6, NULL),
      ('1117', '111', 'MEMBERS', NULL, '4', NULL, 'N', 'N', 'Show member users', 7, NULL);
  END$$
DELIMITER ;

call ADD_GROUP_REPORT();
DROP PROCEDURE ADD_GROUP_REPORT;
