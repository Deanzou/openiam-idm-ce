use openiam;


DELIMITER $$

DROP PROCEDURE IF EXISTS DROP_UI_TYPE_CONSTRAINT$$
CREATE PROCEDURE DROP_UI_TYPE_CONSTRAINT()
	BEGIN
		IF EXISTS (SELECT * FROM information_schema.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'METADATA_ELEMENT_PAGE_TEMPLATE' AND CONSTRAINT_NAME = 'TEMPLATE_TYPE_FK') THEN
			ALTER TABLE METADATA_ELEMENT_PAGE_TEMPLATE DROP FOREIGN KEY TEMPLATE_TYPE_FK;
 		END IF;
 		IF EXISTS (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA='openiam' and table_name = 'METADATA_ELEMENT_PAGE_TEMPLATE' AND column_name = 'TEMPLATE_TYPE_ID') THEN
 			ALTER TABLE METADATA_ELEMENT_PAGE_TEMPLATE DROP COLUMN TEMPLATE_TYPE_ID;
 		END IF;
	END$$
DELIMITER ;

call DROP_UI_TYPE_CONSTRAINT();
DROP PROCEDURE DROP_UI_TYPE_CONSTRAINT;

DROP TABLE IF EXISTS UI_FIELD_TEMPLATE_XREF;
DROP TABLE IF EXISTS UI_TEMPLATE_FIELDS;
DROP TABLE IF EXISTS UI_TEMPLATE_TYPE;

CREATE TABLE UI_TEMPLATE_TYPE (
	TEMPLATE_TYPE_ID VARCHAR(32) NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	DESCRIPTION VARCHAR(200),
	PRIMARY KEY(TEMPLATE_TYPE_ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

INSERT INTO UI_TEMPLATE_TYPE (TEMPLATE_TYPE_ID, NAME, DESCRIPTION) VALUES('USER_TEMPLATE', 'User Page Tempate', 'Template for SelfService User-centric pages');

ALTER TABLE METADATA_ELEMENT_PAGE_TEMPLATE ADD COLUMN TEMPLATE_TYPE_ID VARCHAR(32) NULL;

UPDATE METADATA_ELEMENT_PAGE_TEMPLATE SET TEMPLATE_TYPE_ID='USER_TEMPLATE';

ALTER TABLE METADATA_ELEMENT_PAGE_TEMPLATE MODIFY COLUMN TEMPLATE_TYPE_ID VARCHAR(32) NOT NULL;

ALTER TABLE METADATA_ELEMENT_PAGE_TEMPLATE ADD CONSTRAINT TEMPLATE_TYPE_FK FOREIGN KEY(TEMPLATE_TYPE_ID) REFERENCES UI_TEMPLATE_TYPE(TEMPLATE_TYPE_ID);

CREATE TABLE UI_TEMPLATE_FIELDS (
	UI_FIELD_ID VARCHAR(32) NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	DESCRIPTION VARCHAR(200),
	TEMPLATE_TYPE_ID VARCHAR(32) NOT NULL,
	IS_REQUIRED CHAR(1) NOT NULL DEFAULT 'N',
	PRIMARY KEY(UI_FIELD_ID),
  	CONSTRAINT TEMPLATE_TYPE_UI_TEMPL_FK FOREIGN KEY (TEMPLATE_TYPE_ID) REFERENCES UI_TEMPLATE_TYPE(TEMPLATE_TYPE_ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID, IS_REQUIRED) VALUES('USER_FIRST_NAME', 'First Name', 'USER_TEMPLATE', 'Y');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID, IS_REQUIRED) VALUES('USER_LAST_NAME', 'Last Name', 'USER_TEMPLATE', 'Y');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_MIDDLE_INIT', 'Middle Initial', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_MAIDEN_NAME', 'Maiden Name', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_NICKNAME', 'User NickName', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_DOB', 'Date of Birth', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_TITLE', 'User Title', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_GENDER', 'Gender', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_EMPLOYEE_ID', 'Employee ID', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_EMPLOYEE_TYPE', 'Employee Type', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_LOCATION_CODE', 'Location Code', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_LOCATION_NAME', 'Location Name', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_SELECT_SUPERVISOR', 'Select Supervisor', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_CLASSICIATION', 'User Classification', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_PREFIX', 'Prefix', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_STATUS', 'User Status', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_SECONDARY_STATUS', 'Account Status', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_SUFFIX', 'User Suffix', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_ALTERNATE_CONTACT', 'Alternate Contact', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_MAILCODE', 'Mail Code', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_COST_CENTER', 'Cost Center', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_JOB_CODE', 'Job Code', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_USER_TYPE', 'User Type', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_OBJECT_TYPE', 'User Type', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_START_DATE', 'Start Date', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_END_DATE', 'End Date', 'USER_TEMPLATE');

INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_ADDRESS_REQUIRED', 'User is required to input at least one address', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_PHONES_REQUIRED', 'User is required to input at least one phone number', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_PHONES_CREATABLE', 'User can input phone numbers', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_ADDRESSES_CREATABLE', 'User can input addresses', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_SHOW_ROLES', 'User can select a Role', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_SHOW_GROUPS', 'User can select a Group', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_SHOW_ORGANIZATIONS', 'User can define his organizational structure', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID, IS_REQUIRED) VALUES('USER_CREATE_LOGIN', 'User can create a custom login', 'USER_TEMPLATE', 'Y');

CREATE TABLE UI_FIELD_TEMPLATE_XREF (
	UI_FIELD_ID VARCHAR(32) NOT NULL,
	TEMPLATE_ID VARCHAR(32) NOT NULL,
	IS_REQUIRED CHAR(1) NOT NULL DEFAULT 'N',
	IS_EDITABLE CHAR(1) NOT NULL DEFAULT 'Y',
	DISPLAY_ORDER INT(3) NOT NULL,
	CONSTRAINT TEMPLATE_XREF_UI_FIELD_FK FOREIGN KEY (UI_FIELD_ID) REFERENCES UI_TEMPLATE_FIELDS(UI_FIELD_ID),
	CONSTRAINT TEMPLATE_XREF_TEMPLATE_FK FOREIGN KEY (TEMPLATE_ID) REFERENCES METADATA_ELEMENT_PAGE_TEMPLATE(ID),
	CONSTRAINT TEMPLATE_XREF_UNIQUE UNIQUE(TEMPLATE_ID, UI_FIELD_ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;
