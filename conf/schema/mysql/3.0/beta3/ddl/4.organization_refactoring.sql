use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS ORG_MIGRATION$$
CREATE PROCEDURE ORG_MIGRATION()
	BEGIN
		IF EXISTS (SELECT * FROM information_schema.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'COMPANY' AND CONSTRAINT_NAME = 'COMPANY_ORG_TYPE_FK') THEN
			ALTER TABLE COMPANY DROP FOREIGN KEY COMPANY_ORG_TYPE_FK;
 		END IF;
		
		IF EXISTS (SELECT * FROM information_schema.columns WHERE TABLE_SCHEMA='openiam' and table_name = 'COMPANY' AND column_name = 'ORG_TYPE_ID') THEN
			ALTER TABLE COMPANY DROP COLUMN ORG_TYPE_ID;
 		END IF;
 		
 		IF EXISTS (SELECT * FROM information_schema.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'USER_AFFILIATION' AND CONSTRAINT_NAME = 'FK_USR_ORG_AFFL') THEN
			ALTER TABLE USER_AFFILIATION DROP FOREIGN KEY FK_USR_ORG_AFFL;
 		END IF;
 		
 		IF EXISTS (SELECT * FROM information_schema.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'USER_AFFILIATION' AND CONSTRAINT_NAME = 'FK_USR_USER_AFFIL') THEN
			ALTER TABLE USER_AFFILIATION DROP FOREIGN KEY FK_USR_USER_AFFIL;
 		END IF;
 		
 		IF EXISTS (SELECT * FROM information_schema.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'USER_AFFILIATION' AND CONSTRAINT_NAME = 'USER_AFFILIATION_UNIQUE') THEN
			ALTER TABLE USER_AFFILIATION DROP INDEX USER_AFFILIATION_UNIQUE;
 		END IF;
	END$$
DELIMITER ;

call ORG_MIGRATION();
DROP PROCEDURE ORG_MIGRATION;

DROP TABLE IF EXISTS RES_ORG_MEMBERSHIP;
DROP TABLE IF EXISTS ROLE_ORG_MEMBERSHIP;
DROP TABLE IF EXISTS GRP_ORG_MEMBERSHIP;
DROP TABLE IF EXISTS USER_ORG_MEMBERSHIP;
DROP TABLE IF EXISTS ORG_TYPE_VALID_MEMBERSHIP;
DROP TABLE IF EXISTS ORGANIZATION_TYPE;

CREATE TABLE ORGANIZATION_TYPE (
  ORG_TYPE_ID VARCHAR(32) NOT NULL,
  NAME VARCHAR(100) NOT NULL,
  DESCRIPTION VARCHAR(100) NULL,
  PRIMARY KEY (ORG_TYPE_ID)
) Engine=InnoDB;

INSERT INTO ORGANIZATION_TYPE (ORG_TYPE_ID, NAME) VALUES('ORGANIZATION', 'Organization');
INSERT INTO ORGANIZATION_TYPE (ORG_TYPE_ID, NAME) VALUES('DEPARTMENT', 'Department');
INSERT INTO ORGANIZATION_TYPE (ORG_TYPE_ID, NAME) VALUES('DIVISION', 'Division');
INSERT INTO ORGANIZATION_TYPE (ORG_TYPE_ID, NAME) VALUES('SUBSIDIARY', 'Subsidiary');

CREATE TABLE ORG_TYPE_VALID_MEMBERSHIP (
	ORG_TYPE_ID VARCHAR(32) NOT NULL,
	MEMBER_ORG_TYPE_ID VARCHAR(32) NOT NULL
) Engine=InnoDB;

INSERT INTO ORG_TYPE_VALID_MEMBERSHIP (ORG_TYPE_ID, MEMBER_ORG_TYPE_ID) VALUES('ORGANIZATION', 'DEPARTMENT');
INSERT INTO ORG_TYPE_VALID_MEMBERSHIP (ORG_TYPE_ID, MEMBER_ORG_TYPE_ID) VALUES('ORGANIZATION', 'DIVISION');
INSERT INTO ORG_TYPE_VALID_MEMBERSHIP (ORG_TYPE_ID, MEMBER_ORG_TYPE_ID) VALUES('ORGANIZATION', 'SUBSIDIARY');
INSERT INTO ORG_TYPE_VALID_MEMBERSHIP (ORG_TYPE_ID, MEMBER_ORG_TYPE_ID) VALUES('SUBSIDIARY', 'DIVISION');
INSERT INTO ORG_TYPE_VALID_MEMBERSHIP (ORG_TYPE_ID, MEMBER_ORG_TYPE_ID) VALUES('DIVISION', 'DEPARTMENT');

ALTER TABLE ORG_TYPE_VALID_MEMBERSHIP ADD CONSTRAINT ORG_T_VAL_MEM_SOURCE_FK FOREIGN KEY (ORG_TYPE_ID) REFERENCES ORGANIZATION_TYPE(ORG_TYPE_ID);
ALTER TABLE ORG_TYPE_VALID_MEMBERSHIP ADD CONSTRAINT ORG_T_VAL_MEM_TARGET_FK FOREIGN KEY (MEMBER_ORG_TYPE_ID) REFERENCES ORGANIZATION_TYPE(ORG_TYPE_ID);
ALTER TABLE ORG_TYPE_VALID_MEMBERSHIP ADD CONSTRAINT UNIQUE_USER_ORG_TYPE UNIQUE(ORG_TYPE_ID, MEMBER_ORG_TYPE_ID);

ALTER TABLE COMPANY ADD COLUMN ORG_TYPE_ID VARCHAR(32) NULL;
UPDATE COMPANY SET ORG_TYPE_ID=CLASSIFICATION;
UPDATE COMPANY SET ORG_TYPE_ID=NULL WHERE ORG_TYPE_ID NOT IN (SELECT ORG_TYPE_ID FROM ORGANIZATION_TYPE);
ALTER TABLE COMPANY ADD CONSTRAINT COMPANY_ORG_TYPE_FK FOREIGN KEY (ORG_TYPE_ID) REFERENCES ORGANIZATION_TYPE(ORG_TYPE_ID);


ALTER TABLE USER_AFFILIATION ADD CONSTRAINT FK_USR_ORG_AFFL FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(COMPANY_ID);
ALTER TABLE USER_AFFILIATION ADD CONSTRAINT FK_USR_USER_AFFIL FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID);
ALTER TABLE USER_AFFILIATION ADD CONSTRAINT USER_AFFILIATION_UNIQUE UNIQUE(USER_ID, COMPANY_ID);