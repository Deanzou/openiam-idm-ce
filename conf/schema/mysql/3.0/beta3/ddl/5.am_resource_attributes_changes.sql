use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS AUTH_RES_ATTRIBUTE_SCHEMA_CHANGE$$
CREATE PROCEDURE AUTH_RES_ATTRIBUTE_SCHEMA_CHANGE()
	BEGIN
        DECLARE done INT DEFAULT FALSE;
		DECLARE reflectionKey VARCHAR(255);	
        DECLARE attrId INT DEFAULT 1;	
		DECLARE cur1 CURSOR FOR (SELECT REFLECTION_KEY FROM AUTH_RESOURCE_AM_ATTRIBUTE);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

        #drop FK
		IF EXISTS (SELECT * FROM information_schema.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'AUTH_RESOURCE_ATTRIBUTE_MAP' AND CONSTRAINT_NAME = 'FK_AUTH_AM_ATTR') THEN
			ALTER TABLE AUTH_RESOURCE_ATTRIBUTE_MAP DROP FOREIGN KEY FK_AUTH_AM_ATTR;
 		END IF;
        IF EXISTS (SELECT * FROM information_schema.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'URI_PATTERN_META_VALUE' AND CONSTRAINT_NAME = 'URI_PATTERN_META_VALUE_AM_FK') THEN
			ALTER TABLE URI_PATTERN_META_VALUE DROP FOREIGN KEY URI_PATTERN_META_VALUE_AM_FK;
 		END IF;
        #drop PK from AUTH_RESOURCE_AM_ATTRIBUTE   
        IF EXISTS (SELECT * FROM information_schema.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'AUTH_RESOURCE_AM_ATTRIBUTE' AND CONSTRAINT_NAME = 'PRIMARY') THEN
			ALTER TABLE AUTH_RESOURCE_AM_ATTRIBUTE DROP PRIMARY KEY;
 		END IF;
        # RENAME columns
		IF EXISTS (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'AUTH_RESOURCE_AM_ATTRIBUTE' AND COLUMN_NAME = 'AM_ATTRIBUTE_ID') THEN
            ALTER TABLE AUTH_RESOURCE_AM_ATTRIBUTE CHANGE COLUMN AM_ATTRIBUTE_ID REFLECTION_KEY VARCHAR(255) NOT NULL;
 		END IF;
		IF EXISTS (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'AUTH_RESOURCE_ATTRIBUTE_MAP' AND COLUMN_NAME = 'AM_ATTRIBUTE_ID') THEN
            ALTER TABLE AUTH_RESOURCE_ATTRIBUTE_MAP CHANGE COLUMN AM_ATTRIBUTE_ID AM_RES_ATTRIBUTE_ID VARCHAR(32) NOT NULL;
 		END IF;
		IF EXISTS (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'URI_PATTERN_META_VALUE' AND COLUMN_NAME = 'AM_ATTRIBUTE_ID') THEN
            ALTER TABLE URI_PATTERN_META_VALUE CHANGE COLUMN AM_ATTRIBUTE_ID AM_RES_ATTRIBUTE_ID VARCHAR(32) NOT NULL;
 		END IF;
        # Add new PK column
 		IF NOT EXISTS (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'AUTH_RESOURCE_AM_ATTRIBUTE' AND COLUMN_NAME = 'AM_RES_ATTRIBUTE_ID') THEN
            ALTER TABLE AUTH_RESOURCE_AM_ATTRIBUTE ADD COLUMN AM_RES_ATTRIBUTE_ID VARCHAR(32) NOT NULL;
            ALTER TABLE AUTH_RESOURCE_AM_ATTRIBUTE ADD UNIQUE INDEX REFLECTION_KEY_IDX USING BTREE (REFLECTION_KEY ASC);

            OPEN cur1;
            REPEAT 
                FETCH cur1 INTO reflectionKey;
                IF (reflectionKey IS NOT NULL) THEN
                    update AUTH_RESOURCE_AM_ATTRIBUTE t
                    set t.AM_RES_ATTRIBUTE_ID =attrId
                    where t.REFLECTION_KEY = reflectionKey;
                    
                    update AUTH_RESOURCE_ATTRIBUTE_MAP t
                    set t.AM_RES_ATTRIBUTE_ID =attrId
                    where t.AM_RES_ATTRIBUTE_ID = reflectionKey;

                    update URI_PATTERN_META_VALUE t
                    set t.AM_RES_ATTRIBUTE_ID =attrId
                    where t.AM_RES_ATTRIBUTE_ID = reflectionKey;

                    set attrId:=attrId+1;
                END IF;
            UNTIL done END REPEAT; 
            CLOSE cur1;
 		END IF;

	END$$
DELIMITER ;

call AUTH_RES_ATTRIBUTE_SCHEMA_CHANGE();
DROP PROCEDURE AUTH_RES_ATTRIBUTE_SCHEMA_CHANGE;



ALTER TABLE AUTH_RESOURCE_AM_ATTRIBUTE ADD PRIMARY KEY (AM_RES_ATTRIBUTE_ID);

ALTER TABLE AUTH_RESOURCE_ATTRIBUTE_MAP 
  ADD CONSTRAINT FK_AUTH_AM_ATTR FOREIGN KEY (AM_RES_ATTRIBUTE_ID) REFERENCES AUTH_RESOURCE_AM_ATTRIBUTE (AM_RES_ATTRIBUTE_ID);

ALTER TABLE URI_PATTERN_META_VALUE 
  ADD CONSTRAINT URI_PATTERN_META_VALUE_AM_FK FOREIGN KEY (AM_RES_ATTRIBUTE_ID) REFERENCES AUTH_RESOURCE_AM_ATTRIBUTE (AM_RES_ATTRIBUTE_ID);

