CREATE TABLE SECURITY_DOMAIN (
  DOMAIN_ID VARCHAR2(20) NOT NULL,
  NAME VARCHAR2(40) NULL,
  STATUS VARCHAR2(20) NULL,
  AUTH_SYS_ID VARCHAR2(32) NULL,
  LOGIN_MODULE VARCHAR2(100) NULL,
  PASSWORD_POLICY VARCHAR2(32) NULL,
  AUTHENTICATION_POLICY VARCHAR2(32) NULL,
  AUDIT_POLICY VARCHAR2(32) NULL,
  PRIMARY KEY (DOMAIN_ID)
);

CREATE TABLE APPROVER_ASSOC (
  APPROVER_ASSOC_ID VARCHAR2(32) NOT NULL,
  REQUEST_TYPE VARCHAR2(32) NULL,
  APPROVER_LEVEL NUMBER(4) DEFAULT (1),
  ASSOCIATION_TYPE VARCHAR2(20) NULL,
  ASSOCIATION_OBJ_ID VARCHAR2(32) NULL,
  APPROVER_USER_ID VARCHAR2(32) NULL,
  ON_APPROVE_NOTIFY_USER_ID VARCHAR2(32) NULL,
  ON_REJECT_NOTIFY_USER_ID VARCHAR2(32) NULL,
  APPROVE_NOTIFY_USER_TYPE VARCHAR2(20) NULL,
  REJECT_NOTIFY_USER_TYPE VARCHAR2(20) NULL,
  ACTN VARCHAR2(32) DEFAULT ('START'),
  APPROVER_ROLE_ID VARCHAR2(32) NULL,
  APPROVER_ROLE_DOMAIN VARCHAR2(20) NULL,
  APPLY_DELEGATION_FILTER NUMBER(4) NULL,
  PRIMARY KEY (APPROVER_ASSOC_ID)
);

CREATE TABLE ATTRIBUTE_MAP (
  ATTRIBUTE_MAP_ID VARCHAR2(32) NOT NULL,
  MANAGED_SYS_ID VARCHAR2(32) NOT NULL,
  RESOURCE_ID VARCHAR2(32) NULL,
  MAP_FOR_OBJECT_TYPE VARCHAR2(20) DEFAULT ('USER'),
  ATTRIBUTE_NAME VARCHAR2(50) NULL,
  TARGET_ATTRIBUTE_NAME VARCHAR2(50) NULL,
  AUTHORITATIVE_SRC NUMBER(4) DEFAULT (0),
  ATTRIBUTE_POLICY_ID VARCHAR2(32) NULL,
  RULE_TEXT CLOB,
  STATUS VARCHAR2(20) DEFAULT 'ACTIVE',
  START_DATE date NULL,
  END_DATE date NULL,
  STORE_IN_IAMDB NUMBER(4) DEFAULT (0),
  DATA_TYPE VARCHAR2(20) NULL,
  DEFAULT_VALUE VARCHAR2(32) NULL,
  PRIMARY KEY (ATTRIBUTE_MAP_ID)
);

CREATE TABLE AUTH_LEVEL (
  AUTH_LEVEL_ID 	VARCHAR2(32) NOT NULL,
  AUTH_LEVEL_NAME VARCHAR2(100) NOT NULL,
  AUTH_LEVEL_DIG 	NUMBER(3) NOT NULL,
  PRIMARY KEY (AUTH_LEVEL_ID)
);

CREATE UNIQUE INDEX UNIQUE_AUTH_LEVEL_NAME ON AUTH_LEVEL(AUTH_LEVEL_NAME);
CREATE UNIQUE INDEX UNIQUE_AUTH_LEVEL_LEVEL ON AUTH_LEVEL(AUTH_LEVEL_DIG);


CREATE TABLE AUTH_PROVIDER_TYPE (
  PROVIDER_TYPE VARCHAR2(32) NOT NULL,
  DESCRIPTION VARCHAR2(40) NULL,
  ACTIVE char(1) DEFAULT ('Y'),
  PRIMARY KEY (PROVIDER_TYPE)
);

CREATE TABLE AUTH_RESOURCE_AM_ATTRIBUTE (
  AM_ATTRIBUTE_ID VARCHAR2(32) NOT NULL,
  ATTRIBUTE_NAME VARCHAR2(100) NOT NULL,
  PRIMARY KEY (AM_ATTRIBUTE_ID)
);


CREATE TABLE BATCH_CONFIG (
  TASK_ID VARCHAR2(32) NOT NULL,
  TASK_NAME VARCHAR2(50) NULL,
  FREQUENCY NUMBER(4) NULL,
  FREQUENCY_UNIT_OF_MEASURE VARCHAR2(10) NULL,
  LAST_EXEC_TIME DATE NULL,
  ENABLED NUMBER(4) DEFAULT (1),
  TASK_URL VARCHAR2(255) NULL,
  EXECUTION_ORDER NUMBER(4) DEFAULT (1),
  STATUS VARCHAR2(20) NULL,
  PARAM1 VARCHAR2(255) NULL,
  PARAM2 VARCHAR2(255) NULL,
  PARAM3 VARCHAR2(255) NULL,
  PARAM4 VARCHAR2(255) NULL,
  RULE_TYPE VARCHAR2(20) NULL,
  PRIMARY KEY (TASK_ID)
);
CREATE TABLE ENTITLEMENT (
  ENTITLEMENT_ID VARCHAR2(32) NOT NULL,
  ENTITLEMENT_NAME VARCHAR2(40) NULL,
  ENTITLEMENT_VALUE VARCHAR2(80) NULL,
  DESCRIPTION VARCHAR2(255) NULL,
  CREATE_DATE DATE NULL,
  CREATED_BY VARCHAR2(20) NULL,
  PRIMARY KEY (ENTITLEMENT_ID)
);

CREATE TABLE CATEGORY (
  CATEGORY_ID VARCHAR2(32) NOT NULL,
  PARENT_ID VARCHAR2(32) NULL,
  CATEGORY_NAME VARCHAR2(40) NULL,
  CATEGORY_DESC VARCHAR2(80) NULL,
  CREATE_DATE DATE NULL,
  CREATED_BY VARCHAR2(20) NULL,
  SHOW_LIST NUMBER(4) DEFAULT (0),
  DISPLAY_ORDER NUMBER(4) DEFAULT (0),
  PRIMARY KEY (CATEGORY_ID)
);


CREATE TABLE IDM_AUDIT_LOG (
  LOG_ID VARCHAR2(32) NOT NULL,
  OBJECT_TYPE_ID VARCHAR2(20) NOT NULL,
  OBJECT_ID VARCHAR2(32) NULL,
  ACTION_ID VARCHAR2(50) NOT NULL,
  ACTION_STATUS VARCHAR2(100) NULL,
  REASON VARCHAR2(1000) NULL,
  REASON_DETAIL CLOB,
  ACTION_DATETIME DATE NULL,
  OBJECT_NAME VARCHAR2(255) NULL,
  RESOURCE_NAME VARCHAR2(255) NULL,
  USER_ID VARCHAR2(32) NULL,
  SERVICE_ID VARCHAR2(20) NULL,
  LOGIN_ID VARCHAR2(320) NULL,
  HOST VARCHAR2(100) NULL,
  NODE_IP VARCHAR2(60) NULL,
  CLIENT_ID VARCHAR2(20) NULL,
  REQ_URL VARCHAR2(255) NULL,
  LINKED_LOG_ID VARCHAR2(40) NULL,
  LINK_SEQUENCE NUMBER(4) NULL,
  LOG_HASH VARCHAR2(80) NULL,
  SRC_SYSTEM_ID VARCHAR2(40) NULL,
  TARGET_SYSTEM_ID VARCHAR2(40) NULL,
  REQUEST_ID VARCHAR2(40) NULL,
  SESSION_ID VARCHAR2(40) NULL,
  PRIMARY KEY (LOG_ID)
);


CREATE TABLE IDM_AUDIT_LOG_CUSTOM (
  CUSTOM_LOG_ID VARCHAR2(32) NOT NULL,
  LOG_ID VARCHAR2(32) NOT NULL,
  NAME VARCHAR2(255) NULL,
  VALUE VARCHAR2(255) NULL,
  TYPE NUMBER(4) NOT NULL,
  DISPLAY_ORDER NUMBER(4) NOT NULL,
  PRIMARY KEY (CUSTOM_LOG_ID),
  CONSTRAINT FK_LOG_ID FOREIGN KEY (LOG_ID) REFERENCES IDM_AUDIT_LOG (LOG_ID)
);

CREATE TABLE IMAGE (
  IMAGE_ID VARCHAR2(20) NOT NULL,
  IMAGE_FILE VARCHAR2(80) NULL,
  IMAGE_TYPE VARCHAR2(20) NULL,
  DESCRIPTION VARCHAR2(250) NULL,
  MIME_TYPE VARCHAR2(30) NULL,
  URL VARCHAR2(100) NULL,
  FILE_SIZE NUMBER(4) NULL,
  IMAGE_BLOB blob,
  PRIMARY KEY (IMAGE_ID)
);



CREATE TABLE LOCATION (
  LOCATION_ID VARCHAR2(32) NOT NULL,
  NAME VARCHAR2(80) NULL,
  DESCRIPTION VARCHAR2(255) NULL,
  COUNTRY VARCHAR2(30) NULL,
  BLDG_NUM VARCHAR2(10) NULL,
  STREET_DIRECTION VARCHAR2(20) NULL,
  ADDRESS1 VARCHAR2(45) NULL,
  ADDRESS2 VARCHAR2(45) NULL,
  ADDRESS3 VARCHAR2(45) NULL,
  CITY VARCHAR2(30) NULL,
  STATE VARCHAR2(15) NULL,
  POSTAL_CD VARCHAR2(10) NULL,
  ORGANIZATION_ID VARCHAR2(32) NULL,
  INTERNAL_LOCATION_ID VARCHAR2(32) NULL,
  ACTIVE NUMBER(4) DEFAULT (1),
  SENSITIVE_LOCATION NUMBER(4) DEFAULT (0),
  PRIMARY KEY (LOCATION_ID)
);


CREATE TABLE LANGUAGE (
  ID VARCHAR2(32) NOT NULL,
  LANGUAGE VARCHAR2(20) NULL,
  IS_USED VARCHAR2(1) DEFAULT ('N')  NOT NULL ,
  LANGUAGE_CODE VARCHAR2(2) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE LANGUAGE_LOCALE (
  ID VARCHAR2(32) NOT NULL,
  LANGUAGE_ID VARCHAR2(32) NOT NULL,
  LOCALE VARCHAR2(32) NOT NULL,
  CONSTRAINT LANGUAGE_LOCALE_LANGUAGE_FK FOREIGN KEY (LANGUAGE_ID) REFERENCES LANGUAGE (ID)
);


CREATE UNIQUE INDEX LANGUAGE_LOCALE_UNIQUE ON LANGUAGE_LOCALE(LOCALE);
CREATE INDEX LANGUAGE_LOCALE_LANGUAGE_FK ON LANGUAGE_LOCALE(LANGUAGE_ID);

CREATE TABLE LANGUAGE_MAPPING (
  ID VARCHAR2(32) NOT NULL,
  LANGUAGE_ID 		VARCHAR2(32) NOT NULL,
  REFERENCE_ID 		VARCHAR2(32) NOT NULL,
  REFERENCE_TYPE 	VARCHAR2(100) NOT NULL,
  TEXT_VALUE 			VARCHAR2(400) NOT NULL,
  PRIMARY KEY (ID),
  CONSTRAINT LANGUAGE_MAPPING_LANGUAGE_FK FOREIGN KEY (LANGUAGE_ID) REFERENCES LANGUAGE (ID)
);

CREATE UNIQUE INDEX LANGUAGE_MAPPING_UNIQUE ON LANGUAGE_MAPPING(LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE);


CREATE TABLE CATEGORY_LANGUAGE (
  CATEGORY_ID VARCHAR2(32) NOT NULL,
  LANGUAGE_ID VARCHAR2(32) NOT NULL,
  CATEGORY_NAME VARCHAR2(40) NULL,
  PRIMARY KEY (CATEGORY_ID,LANGUAGE_ID),
  CONSTRAINT FK_CATEGORY_LANGUAGE_LANGUAGE FOREIGN KEY (LANGUAGE_ID) REFERENCES LANGUAGE (ID),
  CONSTRAINT FK_CATEGORY_LANGUAGE_CATEGORY FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY (CATEGORY_ID) ON DELETE CASCADE
);

CREATE INDEX FK_CATEGORY_LANGUAGE_LANGUAGE ON CATEGORY_LANGUAGE(LANGUAGE_ID);




CREATE TABLE EXCLUDE_WORD_LIST (
  WORD VARCHAR2(30) NOT NULL,
  LANGUAGE_ID VARCHAR2(32) NOT NULL,
  PRIMARY KEY (WORD,LANGUAGE_ID),
  CONSTRAINT FK_EXCLUDE_WORD_LIST_LANGUAGE FOREIGN KEY (LANGUAGE_ID) REFERENCES LANGUAGE (ID)
);

CREATE INDEX FK_EXCLUDE_WORD_LIST_LANGUAGE ON EXCLUDE_WORD_LIST(LANGUAGE_ID);


CREATE TABLE PRIVILEGE (
  PRIVILEGE_ID VARCHAR2(32) NOT NULL,
  RESOURCE_ID VARCHAR2(32) NOT NULL,
  ABBRV VARCHAR2(3) NOT NULL,
  DESCRIPTION VARCHAR2(40) NULL,
  PRIMARY KEY (PRIVILEGE_ID)
);


CREATE TABLE METADATA_TYPE (
  TYPE_ID VARCHAR2(32) NOT NULL,
  DESCRIPTION VARCHAR2(40) NULL,
  ACTIVE char(1) DEFAULT ('N') NOT NULL,
  SYNC_MANAGED_SYS char(1)  DEFAULT ('N') NOT NULL,
  GROUPING VARCHAR2(100) NULL,
  PRIMARY KEY (TYPE_ID)
);

CREATE TABLE CATEGORY_TYPE (
  CATEGORY_ID VARCHAR2(32) NOT NULL,
  TYPE_ID VARCHAR2(32) NOT NULL,
  PRIMARY KEY (TYPE_ID,CATEGORY_ID),
  CONSTRAINT FK_CATEGORY_METADATA_TYPE FOREIGN KEY (TYPE_ID) REFERENCES METADATA_TYPE (TYPE_ID),
  CONSTRAINT FK_CATEGORY_TYPE_CATEGORY FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY (CATEGORY_ID)
);

CREATE INDEX FK_CATEGORY_TYPE_CATEGORY ON CATEGORY_TYPE(CATEGORY_ID);


CREATE TABLE PROVISION_CONNECTOR (
  CONNECTOR_ID VARCHAR2(32) NOT NULL,
  NAME VARCHAR2(40) NULL,
  METADATA_TYPE_ID VARCHAR2(20) NULL,
  STD_COMPLIANCE_LEVEL VARCHAR2(20) NULL,
  CLIENT_COMM_PROTOCOL VARCHAR2(20) NULL,
  SERVICE_URL VARCHAR2(100) NULL,
  SERVICE_NAMESPACE VARCHAR2(100) NULL,
  SERVICE_PORT VARCHAR2(100) NULL,
  SERVICE_WSDL VARCHAR2(100) NULL,
  CLASS_NAME VARCHAR2(60) NULL,
  HOST VARCHAR2(60) NULL,
  PORT VARCHAR2(10) NULL,
  CONNECTOR_INTERFACE VARCHAR2(20) NULL,
  PRIMARY KEY (CONNECTOR_ID)
);

CREATE TABLE MANAGED_SYS (
  MANAGED_SYS_ID VARCHAR2(32) NOT NULL,
  NAME VARCHAR2(40) NULL,
  DESCRIPTION VARCHAR2(80) NULL,
  STATUS VARCHAR2(20) NULL,
  CONNECTOR_ID VARCHAR2(32) NULL,
  DOMAIN_ID VARCHAR2(20) NULL,
  HOST_URL VARCHAR2(80) NULL,
  APPL_URL VARCHAR2(80) NULL,
  PORT NUMBER(4) NULL,
  COMM_PROTOCOL VARCHAR2(20) NULL,
  USER_ID VARCHAR2(150) NULL,
  PSWD VARCHAR2(255) NULL,
  START_DATE date NULL,
  END_DATE date NULL,
  RESOURCE_ID VARCHAR2(32) NULL,
  PRIMARY_REPOSITORY NUMBER(4) NULL,
  SECONDARY_REPOSITORY_ID VARCHAR2(32) NULL,
  ALWAYS_UPDATE_SECONDARY NUMBER(4) NULL,
  RES_DEPENDENCY VARCHAR2(32) NULL,
  ADD_HNDLR VARCHAR2(100) NULL,
  MODIFY_HNDLR VARCHAR2(100) NULL,
  DELETE_HNDLR VARCHAR2(100) NULL,
  SETPASS_HNDLR VARCHAR2(100) NULL,
  SUSPEND_HNDLR VARCHAR2(100) NULL,
  SEARCH_HNDLR VARCHAR2(100) NULL,
  LOOKUP_HNDLR VARCHAR2(100) NULL,
  TEST_CONNECTION_HNDLR VARCHAR2(100) NULL,
  RECONCILE_RESOURCE_HNDLR VARCHAR2(100) NULL,
  HNDLR_5 VARCHAR2(100) NULL,
  DRIVER_URL VARCHAR2(100) NULL,
  CONNECTION_STRING VARCHAR2(100) NULL,
  PRIMARY KEY (MANAGED_SYS_ID),
  CONSTRAINT FK_MNG_SYS_PROV_CON FOREIGN KEY (CONNECTOR_ID) REFERENCES PROVISION_CONNECTOR (CONNECTOR_ID)
);


CREATE INDEX FK_MNG_SYS_PROV_CON ON MANAGED_SYS(CONNECTOR_ID);



CREATE TABLE RESOURCE_TYPE (
  RESOURCE_TYPE_ID VARCHAR2(20) NOT NULL,
  DESCRIPTION VARCHAR2(100) NULL,
  METADATA_TYPE_ID VARCHAR2(32) NULL,
  PROVISION_RESOURCE NUMBER(4) NULL,
  PROCESS_NAME VARCHAR2(80) NULL,
  PRIMARY KEY (RESOURCE_TYPE_ID)
);


CREATE TABLE RES (
  RESOURCE_ID VARCHAR2(32) NOT NULL,
  RESOURCE_TYPE_ID VARCHAR2(20) NOT NULL,
  DESCRIPTION VARCHAR2(100) NULL,
  NAME VARCHAR2(150) NOT NULL,
  BRANCH_ID VARCHAR2(32) NULL,
  CATEGORY_ID VARCHAR2(20) NULL,
  DISPLAY_ORDER NUMBER(4) DEFAULT (1),
  MANAGED_SYS_ID VARCHAR2(32) NULL,
  URL VARCHAR2(255) NULL,
  RES_OWNER_GROUP_ID VARCHAR2(32) NULL,
  RES_OWNER_USER_ID VARCHAR2(32) NULL,
  MIN_AUTH_LEVEL VARCHAR2(32) NULL,
  DOMAIN VARCHAR2(64) NULL,
  IS_PUBLIC char(1) DEFAULT ('Y'),
  IS_SSL char(1) DEFAULT ('N'),
  PRIMARY KEY (RESOURCE_ID),
  CONSTRAINT FK_RESOURCE_CATEGORY FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY (CATEGORY_ID),
  CONSTRAINT FK_RESOURCE_RESOURCE_TYPE FOREIGN KEY (RESOURCE_TYPE_ID) REFERENCES RESOURCE_TYPE (RESOURCE_TYPE_ID)
);

CREATE UNIQUE INDEX NAME ON RES(NAME);
CREATE INDEX FK_RESOURCE_RESOURCE_TYPE ON RES(RESOURCE_TYPE_ID);
CREATE INDEX FK_RESOURCE_CATEGORY ON RES(CATEGORY_ID);


CREATE TABLE RESOURCE_PRIVILEGE (
  RESOURCE_PRIVLEGE_ID VARCHAR2(32) NOT NULL,
  RESOURCE_ID VARCHAR2(32) NULL,
  PRIVILEGE_NAME VARCHAR2(32) NULL,
  PRIVILEGE_TYPE VARCHAR2(20) NULL,
  DESCRIPTION VARCHAR2(40) NULL,
  PRIMARY KEY (RESOURCE_PRIVLEGE_ID),
  CONSTRAINT FK_RESOURCE_PRIVILEGE_RES FOREIGN KEY (RESOURCE_ID) REFERENCES RES (RESOURCE_ID)
);

CREATE INDEX FK_RESOURCE_PRIVILEGE_RES ON RESOURCE_PRIVILEGE(RESOURCE_ID);


CREATE TABLE RESOURCE_PROP (
  RESOURCE_PROP_ID VARCHAR2(32) NOT NULL,
  RESOURCE_ID VARCHAR2(32) NULL,
  METADATA_ID VARCHAR2(20) NULL,
  NAME VARCHAR2(40) NOT NULL,
  PROP_VALUE VARCHAR2(500) NULL,
  PROP_GROUP VARCHAR2(20) NULL,
  PRIMARY KEY (RESOURCE_PROP_ID),
  CONSTRAINT FK_RESOURCE_PROP_RESOURCE FOREIGN KEY (RESOURCE_ID) REFERENCES RES (RESOURCE_ID)
);
CREATE INDEX FK_RESOURCE_PROP_RESOURCE ON RESOURCE_PROP(RESOURCE_ID);


CREATE TABLE METADATA_ELEMENT_PAGE_TEMPLATE (
  ID VARCHAR2(32) NOT NULL,
  NAME VARCHAR2(40) NOT NULL,
  RESOURCE_ID VARCHAR2(32) NOT NULL,
  IS_PUBLIC char(1) DEFAULT ('Y') NOT NULL,
  PRIMARY KEY (ID),
  CONSTRAINT METADATA_PAGE_TEMPLATE_RES_FK FOREIGN KEY (RESOURCE_ID) REFERENCES RES (RESOURCE_ID)
);

CREATE UNIQUE INDEX PAGE_TEMPLATE_UNIQUE ON METADATA_ELEMENT_PAGE_TEMPLATE(NAME);
CREATE INDEX METADATA_PAGE_TEMPLATE_RES_FK ON METADATA_ELEMENT_PAGE_TEMPLATE(RESOURCE_ID);


CREATE TABLE METADATA_ELEMENT (
  METADATA_ID VARCHAR2(32) NOT NULL,
  TYPE_ID VARCHAR2(32) NOT NULL,
  ATTRIBUTE_NAME VARCHAR2(50) NULL,
  DESCRIPTION VARCHAR2(40) NULL,
  DATA_TYPE VARCHAR2(20) NULL,
  AUDITABLE char(1)  DEFAULT ('Y') NOT NULL,
  REQUIRED char(1)  DEFAULT ('N') NOT NULL,
  SELF_EDITABLE char(1)  DEFAULT ('N') NOT NULL,
  TEMPLATE_ID VARCHAR2(32) NULL,
  RESOURCE_ID VARCHAR2(32) NULL,
  VALIDATOR VARCHAR2(150) NULL,
  STATIC_DEFAULT_VALUE VARCHAR2(400) NULL,
  IS_PUBLIC char(1)  DEFAULT ('Y') NOT NULL,
  PRIMARY KEY (METADATA_ID),
  CONSTRAINT FK_MD_ELMT_TYPE_FK FOREIGN KEY (TYPE_ID) REFERENCES METADATA_TYPE (TYPE_ID),
  CONSTRAINT METADATA_ELEMENT_RES_FK FOREIGN KEY (RESOURCE_ID) REFERENCES RES (RESOURCE_ID),
  CONSTRAINT METADATA_ELEMENT_TEMPLATE_FK FOREIGN KEY (TEMPLATE_ID) REFERENCES METADATA_ELEMENT_PAGE_TEMPLATE (ID)
);

CREATE INDEX METADATA_ELEMENT_TEMPLATE_FK ON METADATA_ELEMENT(TEMPLATE_ID);
CREATE INDEX METADATA_ELEMENT_RES_FK ON METADATA_ELEMENT(RESOURCE_ID);


CREATE TABLE GRP (
  GRP_ID VARCHAR2(32) NOT NULL,
  GRP_NAME VARCHAR2(80) NOT NULL,
  CREATE_DATE DATE NULL,
  CREATED_BY VARCHAR2(20) NULL,
  COMPANY_ID VARCHAR2(32) NULL,
  OWNER_ID VARCHAR2(32) NULL,
  PROVISION_METHOD VARCHAR2(20) NULL,
  PROVISION_OBJ_NAME VARCHAR2(80) NULL,
  TYPE_ID VARCHAR2(20) NULL,
  GROUP_DESC VARCHAR2(80) NULL,
  STATUS VARCHAR2(20) NULL,
  LAST_UPDATE DATE NULL,
  LAST_UPDATED_BY VARCHAR2(32) NULL,
  INTERNAL_GROUP_ID VARCHAR2(32) NULL,
  EXTERNAL_GRP_NAME VARCHAR2(200) NULL,
  PRIMARY KEY (GRP_ID),
  CONSTRAINT FK_GRP_METADATA_TYPE FOREIGN KEY (TYPE_ID) REFERENCES METADATA_TYPE (TYPE_ID)
);

CREATE UNIQUE INDEX GRP_NAME ON GRP(GRP_NAME);
CREATE INDEX FK_GRP_METADATA_TYPE ON GRP(TYPE_ID);


CREATE TABLE GRP_ATTRIBUTES (
  ID VARCHAR2(32) NOT NULL,
  GRP_ID VARCHAR2(32) NOT NULL,
  METADATA_ID VARCHAR2(20) NULL,
  NAME VARCHAR2(20) NULL,
  VALUE VARCHAR2(255) NULL,
  PRIMARY KEY (ID),
  CONSTRAINT GRP_ATTR_META_ELMT_FK FOREIGN KEY (METADATA_ID) REFERENCES METADATA_ELEMENT (METADATA_ID),
  CONSTRAINT GRP_ATTRIBUTES_ibfk_1 FOREIGN KEY (GRP_ID) REFERENCES GRP (GRP_ID)
);


CREATE INDEX GRP_ID ON GRP_ATTRIBUTES(GRP_ID);
CREATE INDEX GRP_ATTR_META_ELMT_FK ON GRP_ATTRIBUTES(METADATA_ID);

CREATE TABLE RESOURCE_GROUP (
  RES_GROUP_ID VARCHAR2(32) NOT NULL,
  RESOURCE_ID VARCHAR2(32) NOT NULL,
  GRP_ID VARCHAR2(32) NOT NULL,
  START_DATE DATE NULL,
  END_DATE DATE NULL,
  PRIMARY KEY (RES_GROUP_ID),
  CONSTRAINT FK_RESOURCE_GRP FOREIGN KEY (GRP_ID) REFERENCES GRP (GRP_ID),
  CONSTRAINT FK_RESOURCE_GRP_RESOURCE FOREIGN KEY (RESOURCE_ID) REFERENCES RES (RESOURCE_ID)
);

CREATE UNIQUE INDEX UNIQUE_RESOURCE_GROUP ON RESOURCE_GROUP(GRP_ID,RESOURCE_ID);
CREATE INDEX FK_RESOURCE_GRP_RESOURCE ON RESOURCE_GROUP(RESOURCE_ID);




CREATE TABLE ROLE (
  SERVICE_ID VARCHAR2(20) NOT NULL,
  ROLE_NAME VARCHAR2(80) NOT NULL,
  CREATE_DATE DATE NULL,
  CREATED_BY VARCHAR2(32) NULL,
  DESCRIPTION VARCHAR2(255) NULL,
  TYPE_ID VARCHAR2(20) NULL,
  OWNER_ID VARCHAR2(32) NULL,
  STATUS VARCHAR2(20) NULL,
  INTERNAL_ROLE_ID VARCHAR2(32) NULL,
  ROLE_ID VARCHAR2(32) NOT NULL,
  PRIMARY KEY (ROLE_ID),
  CONSTRAINT FK_ROLE_SERVICE FOREIGN KEY (SERVICE_ID) REFERENCES SECURITY_DOMAIN (DOMAIN_ID)
);

CREATE UNIQUE INDEX ROLE_NAME ON ROLE(ROLE_NAME);
CREATE INDEX FK_ROLE_SERVICE ON ROLE(SERVICE_ID);

CREATE TABLE ROLE_ATTRIBUTE (
  ROLE_ATTR_ID VARCHAR2(32) NOT NULL,
  NAME VARCHAR2(40) NULL,
  VALUE VARCHAR2(255) NULL,
  METADATA_ID VARCHAR2(20) NULL,
  ATTR_GROUP VARCHAR2(20) NULL,
  ROLE_ID VARCHAR2(32) NOT NULL,
  PRIMARY KEY (ROLE_ATTR_ID),
  CONSTRAINT FK_ROLE_ROLE_ATTRIBUTE FOREIGN KEY (ROLE_ID) REFERENCES ROLE (ROLE_ID)
);


CREATE TABLE ROLE_POLICY (
  ROLE_POLICY_ID VARCHAR2(32) NOT NULL,
  ACTION VARCHAR2(20) NULL,
  NAME VARCHAR2(40) NULL,
  VALUE1 VARCHAR2(40) NULL,
  VALUE2 VARCHAR2(40) NULL,
  ACTION_QUALIFIER VARCHAR2(20) NULL,
  EXECUTION_ORDER NUMBER(4) NULL,
  POLICY_SCRIPT VARCHAR2(100) NULL,
  ROLE_ID VARCHAR2(32) NOT NULL,
  PRIMARY KEY (ROLE_POLICY_ID),
  CONSTRAINT FK_ROLE_POLICY_ROLE FOREIGN KEY (ROLE_ID) REFERENCES ROLE (ROLE_ID)
);


CREATE INDEX FK_ROLE_POLICY_ROLE ON ROLE_POLICY(ROLE_ID);


CREATE TABLE GRP_ROLE (
  GRP_ID VARCHAR2(32) NOT NULL,
  ROLE_ID VARCHAR2(32) NOT NULL,
  PRIMARY KEY (GRP_ID,ROLE_ID),
  CONSTRAINT FK_GRP_ROLE_GRP FOREIGN KEY (GRP_ID) REFERENCES GRP (GRP_ID),
  CONSTRAINT FK_GRP_ROLE_ROLE FOREIGN KEY (ROLE_ID) REFERENCES ROLE (ROLE_ID)
);

CREATE INDEX FK_GRP_ROLE_ROLE ON GRP_ROLE(ROLE_ID);


CREATE TABLE WEB_RESOURCE_ATTRIBUTE (
  ATTRIBUTE_MAP_ID VARCHAR2(32) NOT NULL,
  RESOURCE_ID VARCHAR2(32) NOT NULL,
  TARGET_ATTRIBUTE_NAME VARCHAR2(100) NOT NULL,
  AM_ATTRIBUTE_NAME VARCHAR2(100) NULL,
  AM_POLICY_URL VARCHAR2(100) NULL,
  PRIMARY KEY (ATTRIBUTE_MAP_ID)
);

CREATE UNIQUE INDEX RESOURCE_ID ON WEB_RESOURCE_ATTRIBUTE(RESOURCE_ID,TARGET_ATTRIBUTE_NAME);

CREATE TABLE grp_to_grp_membership (
  GROUP_ID VARCHAR2(32) NOT NULL,
  MEMBER_GROUP_ID VARCHAR2(32) NOT NULL,
  CREATE_DATE DATE NULL,
  UPDATE_DATE DATE NULL,
  CREATED_BY VARCHAR2(32) NULL,
  UPDATED_BY VARCHAR2(32) NULL,
  PRIMARY KEY (GROUP_ID,MEMBER_GROUP_ID),
  CONSTRAINT grp_to_grp_membership_ibfk_1 FOREIGN KEY (GROUP_ID) REFERENCES GRP (GRP_ID),
  CONSTRAINT grp_to_grp_membership_ibfk_2 FOREIGN KEY (MEMBER_GROUP_ID) REFERENCES GRP (GRP_ID)
);

CREATE INDEX MEMBER_GROUP_ID ON grp_to_grp_membership(MEMBER_GROUP_ID);


CREATE TABLE res_to_res_membership (
  RESOURCE_ID VARCHAR2(32) NOT NULL,
  MEMBER_RESOURCE_ID VARCHAR2(32) NOT NULL,
  CREATE_DATE DATE NULL,
  UPDATE_DATE DATE NULL,
  CREATED_BY VARCHAR2(32) NULL,
  UPDATED_BY VARCHAR2(32) NULL,
  PRIMARY KEY (RESOURCE_ID,MEMBER_RESOURCE_ID),
  CONSTRAINT res_to_res_membership_ibfk_1 FOREIGN KEY (RESOURCE_ID) REFERENCES RES (RESOURCE_ID),
  CONSTRAINT res_to_res_membership_ibfk_2 FOREIGN KEY (MEMBER_RESOURCE_ID) REFERENCES RES (RESOURCE_ID)
);
CREATE INDEX MEMBER_RESOURCE_ID ON res_to_res_membership(MEMBER_RESOURCE_ID);


CREATE TABLE role_to_role_membership (
  ROLE_ID VARCHAR2(32) NOT NULL,
  MEMBER_ROLE_ID VARCHAR2(32) NOT NULL,
  CREATE_DATE DATE NULL,
  UPDATE_DATE DATE NULL,
  CREATED_BY VARCHAR2(32) NULL,
  UPDATED_BY VARCHAR2(32) NULL,
  PRIMARY KEY (ROLE_ID,MEMBER_ROLE_ID),
  CONSTRAINT role_to_role_membership_ibfk_1 FOREIGN KEY (ROLE_ID) REFERENCES ROLE (ROLE_ID),
  CONSTRAINT role_to_role_membership_ibfk_2 FOREIGN KEY (MEMBER_ROLE_ID) REFERENCES ROLE (ROLE_ID)
);
CREATE INDEX ROLE_ROLE_MMSP_MEMBER_ROLE_ID ON role_to_role_membership(MEMBER_ROLE_ID);


CREATE TABLE AUTH_PROVIDER (
  PROVIDER_ID VARCHAR2(32) NOT NULL,
  PROVIDER_TYPE VARCHAR2(32) NOT NULL,
  MANAGED_SYS_ID VARCHAR2(32) NOT NULL,
  RESOURCE_ID VARCHAR2(32) NOT NULL,
  NAME VARCHAR2(50) NOT NULL,
  DESCRIPTION VARCHAR2(255) NULL,
  SIGN_REQUEST char(1) DEFAULT ('N') NOT NULL,
  PUBLIC_KEY blob,
  PRIVATE_KEY blob,
  PRIMARY KEY (PROVIDER_ID),
  CONSTRAINT FK_MNG_AUTH_PROVIDER FOREIGN KEY (MANAGED_SYS_ID) REFERENCES MANAGED_SYS (MANAGED_SYS_ID),
  CONSTRAINT FK_PROVIDER_TYPE_PROVIDER FOREIGN KEY (PROVIDER_TYPE) REFERENCES AUTH_PROVIDER_TYPE (PROVIDER_TYPE),
  CONSTRAINT FK_RES_AUTH_PROVIDER FOREIGN KEY (RESOURCE_ID) REFERENCES RES (RESOURCE_ID)
);

CREATE INDEX FK_PROVIDER_TYPE_PROVIDER ON AUTH_PROVIDER(PROVIDER_TYPE);
CREATE INDEX FK_MNG_AUTH_PROVIDER ON AUTH_PROVIDER(MANAGED_SYS_ID);
CREATE INDEX FK_RES_AUTH_PROVIDER ON AUTH_PROVIDER(RESOURCE_ID);

CREATE TABLE AUTH_ATTRIBUTE (
  AUTH_ATTRIBUTE_ID VARCHAR2(32) NOT NULL,
  ATTRIBUTE_NAME VARCHAR2(100) NOT NULL,
  PROVIDER_TYPE VARCHAR2(32) NOT NULL,
  DESCRIPTION VARCHAR2(255) NULL,
  REQUIRED char(1) DEFAULT ('N'),
  DATA_TYPE VARCHAR2(20) DEFAULT ('singleValue') NOT NULL ,
  DEFAULT_VALUE VARCHAR2(255) NULL,
  PRIMARY KEY (AUTH_ATTRIBUTE_ID),
  CONSTRAINT FK_PROVIDER_TYPE_ATTRIBUTE FOREIGN KEY (PROVIDER_TYPE) REFERENCES AUTH_PROVIDER_TYPE (PROVIDER_TYPE)
);

CREATE UNIQUE INDEX IDX_ATTRIBUTE_PT ON AUTH_ATTRIBUTE(ATTRIBUTE_NAME,PROVIDER_TYPE);
CREATE INDEX FK_PROVIDER_TYPE_ATTRIBUTE ON AUTH_ATTRIBUTE(PROVIDER_TYPE);

CREATE TABLE AUTH_PROVIDER_ATTRIBUTE (
  PROVIDER_ATTRIBUTE_ID VARCHAR2(32) NOT NULL,
  PROVIDER_ID VARCHAR2(32) NOT NULL,
  AUTH_ATTRIBUTE_ID VARCHAR2(32) NOT NULL,
  VALUE VARCHAR2(255) NOT NULL,
  DATA_TYPE VARCHAR2(20) DEFAULT ('singleValue') NOT NULL ,
  PRIMARY KEY (PROVIDER_ATTRIBUTE_ID),
  CONSTRAINT FK_PROVIDER_PROVIDER_ATTRIBUTE FOREIGN KEY (PROVIDER_ID) REFERENCES AUTH_PROVIDER (PROVIDER_ID),
  CONSTRAINT FK_PROVIDER_ATTRIBUTE FOREIGN KEY (AUTH_ATTRIBUTE_ID) REFERENCES AUTH_ATTRIBUTE (AUTH_ATTRIBUTE_ID)
);


CREATE UNIQUE INDEX IDX_PROVIDER_ATTRIBUTE ON AUTH_PROVIDER_ATTRIBUTE(PROVIDER_ID,AUTH_ATTRIBUTE_ID);
CREATE INDEX FK_PROVIDER_PROVIDER_ATTRIBUTE ON AUTH_PROVIDER_ATTRIBUTE(PROVIDER_ID);
CREATE INDEX FK_PROVIDER_ATTRIBUTE ON AUTH_PROVIDER_ATTRIBUTE(AUTH_ATTRIBUTE_ID);


CREATE TABLE AUTH_RESOURCE_ATTRIBUTE_MAP (
  ATTRIBUTE_MAP_ID VARCHAR2(32) NOT NULL,
  PROVIDER_ID VARCHAR2(32) NOT NULL,
  TARGET_ATTRIBUTE_NAME VARCHAR2(100) NOT NULL,
  AM_ATTRIBUTE_ID VARCHAR2(100) NULL,
  AM_POLICY_URL VARCHAR2(100) NULL,
  ATTRIBUTE_VALUE VARCHAR2(100) NULL,
  ATTRIBUTE_TYPE VARCHAR2(32) NOT NULL,
  PRIMARY KEY (ATTRIBUTE_MAP_ID),
  CONSTRAINT FK_AUTH_AM_ATTR FOREIGN KEY (AM_ATTRIBUTE_ID) REFERENCES AUTH_RESOURCE_AM_ATTRIBUTE (AM_ATTRIBUTE_ID),
  CONSTRAINT FK_PROVIDER_AUTH_RES_ATTR_MAP FOREIGN KEY (PROVIDER_ID) REFERENCES AUTH_PROVIDER (PROVIDER_ID)
);


CREATE TABLE COMPANY (
  COMPANY_ID VARCHAR2(32) NOT NULL,
  COMPANY_NAME VARCHAR2(200) NULL,
  LST_UPDATE DATE NULL,
  LST_UPDATED_BY VARCHAR2(40) NULL,
  PARENT_ID VARCHAR2(32) NULL,
  STATUS VARCHAR2(20) NULL,
  TYPE_ID VARCHAR2(20) NULL,
  CREATE_DATE DATE NULL,
  CREATED_BY VARCHAR2(40) NULL,
  ALIAS VARCHAR2(200) NULL,
  DESCRIPTION VARCHAR2(200) NULL,
  DOMAIN_NAME VARCHAR2(40) NULL,
  LDAP_STR VARCHAR2(255) NULL,
  CLASSIFICATION VARCHAR2(40) NULL,
  INTERNAL_COMPANY_ID VARCHAR2(200) NULL,
  ABBREVIATION VARCHAR2(20) NULL,
  SYMBOL VARCHAR2(10) NULL,
  PRIMARY KEY (COMPANY_ID),
  CONSTRAINT FK_COMPANY_METADATA_TYPE FOREIGN KEY (TYPE_ID) REFERENCES METADATA_TYPE (TYPE_ID)
);

CREATE INDEX FK_COMPANY_METADATA_TYPE ON COMPANY(TYPE_ID);

CREATE TABLE COMPANY_ATTRIBUTE (
  COMPANY_ATTR_ID VARCHAR2(32) NOT NULL,
  COMPANY_ID VARCHAR2(32) NOT NULL,
  NAME VARCHAR2(20) NULL,
  VALUE VARCHAR2(255) NULL,
  METADATA_ID VARCHAR2(20) NULL,
  PRIMARY KEY (COMPANY_ATTR_ID),
  CONSTRAINT FK_COMPANY_ATTRIBUTE_COMPANY FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (COMPANY_ID),
  CONSTRAINT FK_COMPANY_METADATA_ELEMENT FOREIGN KEY (METADATA_ID) REFERENCES METADATA_ELEMENT (METADATA_ID)
);

CREATE INDEX FK_COMPANY_ATTRIBUTE_COMPANY ON COMPANY_ATTRIBUTE(COMPANY_ID);
CREATE INDEX FK_COMPANY_METADATA_ELEMENT ON COMPANY_ATTRIBUTE(METADATA_ID);


CREATE TABLE COMPANY_TO_COMPANY_MEMBERSHIP (
  COMPANY_ID VARCHAR2(32) NOT NULL,
  MEMBER_COMPANY_ID VARCHAR2(32) NOT NULL,
  CREATE_DATE DATE NULL,
  UPDATE_DATE DATE NULL,
  CREATED_BY VARCHAR2(32) NULL,
  UPDATED_BY VARCHAR2(32) NULL,
  PRIMARY KEY (COMPANY_ID,MEMBER_COMPANY_ID),
  CONSTRAINT COMPANY_COMPANY_PARENT FOREIGN KEY (MEMBER_COMPANY_ID) REFERENCES COMPANY (COMPANY_ID),
  CONSTRAINT COMPANY_COMPANY_CHILD FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (COMPANY_ID)
);

CREATE INDEX COMPANY_COMPANY_PARENT ON COMPANY_TO_COMPANY_MEMBERSHIP(MEMBER_COMPANY_ID);

CREATE TABLE USERS (
  USER_ID VARCHAR2(32) NOT NULL,
  FIRST_NAME VARCHAR2(50) NULL,
  LAST_NAME VARCHAR2(50) NULL,
  MIDDLE_INIT VARCHAR2(50) NULL,
  TYPE_ID VARCHAR2(20) NULL,
  CLASSIFICATION VARCHAR2(20) NULL,
  TITLE VARCHAR2(100) NULL,
  DEPT_CD VARCHAR2(50) NULL,
  DEPT_NAME VARCHAR2(100) NULL,
  MAIL_CODE VARCHAR2(50) NULL,
  DIVISION VARCHAR2(50) NULL,
  COST_CENTER VARCHAR2(20) NULL,
  STATUS VARCHAR2(40) NULL,
  SECONDARY_STATUS VARCHAR2(40) NULL,
  BIRTHDATE DATE NULL,
  SEX char(1) NULL,
  CREATE_DATE DATE NULL,
  CREATED_BY VARCHAR2(40) NULL,
  LAST_UPDATE DATE NULL,
  LAST_UPDATED_BY VARCHAR2(40) NULL,
  PREFIX VARCHAR2(4) NULL,
  SUFFIX VARCHAR2(20) NULL,
  USER_TYPE_IND VARCHAR2(20) NULL,
  EMPLOYEE_ID VARCHAR2(32) NULL,
  EMPLOYEE_TYPE VARCHAR2(20) NULL,
  LOCATION_CD VARCHAR2(50) NULL,
  LOCATION_NAME VARCHAR2(100) NULL,
  COMPANY_ID VARCHAR2(32) NULL,
  COMPANY_OWNER_ID VARCHAR2(32) NULL,
  JOB_CODE VARCHAR2(50) NULL,
  MANAGER_ID VARCHAR2(32) NULL,
  ALTERNATE_ID VARCHAR2(32) NULL,
  START_DATE date NULL,
  LAST_DATE date NULL,
  MAIDEN_NAME VARCHAR2(40) NULL,
  NICKNAME VARCHAR2(40) NULL,
  PASSWORD_THEME VARCHAR2(20) NULL,
  SHOW_IN_SEARCH NUMBER(4) NULL,
  DEL_ADMIN NUMBER(4) NULL,
  USER_OWNER_ID VARCHAR2(32) NULL,
  DATE_PASSWORD_CHANGED DATE NULL,
  DATE_CHALLENGE_RESP_CHANGED DATE NULL,
  SYSTEM_FLAG VARCHAR2(1) NULL,
  PRIMARY KEY (USER_ID),
  CONSTRAINT FK_USERS_COMPANY FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (COMPANY_ID),
  CONSTRAINT FK_USERS_METADATA_TYPE FOREIGN KEY (TYPE_ID) REFERENCES METADATA_TYPE (TYPE_ID)
);


CREATE INDEX FK_USERS_METADATA_TYPE ON USERS(TYPE_ID);
CREATE INDEX LAST_NAME ON USERS(LAST_NAME);
CREATE INDEX USER_EMPLOYEE_INDX ON USERS(EMPLOYEE_ID);
CREATE INDEX FK_USERS_COMPANY ON USERS(COMPANY_ID);


CREATE TABLE AUTH_STATE (
  USER_ID VARCHAR2(32) NOT NULL,
  AUTH_STATE decimal(5,1) NULL,
  TOKEN VARCHAR2(2000) NULL,
  AA VARCHAR2(20) NULL,
  EXPIRATION decimal(18,0) NULL,
  LAST_LOGIN DATE NULL,
  IP_ADDRESS VARCHAR2(20) NULL,
  PRIMARY KEY (USER_ID),
  CONSTRAINT FK_AUTH_STATE_USERS FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID)
);


CREATE TABLE ADDRESS (
  ADDRESS_ID varchar(32) NOT NULL,
  NAME varchar(100) NULL,
  COUNTRY varchar(100) NULL,
  BLDG_NUM varchar(100) NULL,
  STREET_DIRECTION VARCHAR2(20) NULL,
  SUITE VARCHAR2(20) NULL,
  ADDRESS1 VARCHAR2(45) NULL,
  ADDRESS2 VARCHAR2(45) NULL,
  ADDRESS3 VARCHAR2(45) NULL,
  ADDRESS4 VARCHAR2(45) NULL,
  ADDRESS5 VARCHAR2(45) NULL,
  ADDRESS6 VARCHAR2(45) NULL,
  ADDRESS7 VARCHAR2(45) NULL,
  CITY VARCHAR2(100) NULL,
  STATE VARCHAR2(100) NULL,
  POSTAL_CD VARCHAR2(100) NULL,
  IS_DEFAULT char(1) DEFAULT ('N'),
  DESCRIPTION VARCHAR2(100) NULL,
  ACTIVE char(1) DEFAULT ('Y'),
  PARENT_ID VARCHAR2(32) NULL,
  LAST_UPDATE DATE NULL,
  CREATE_DATE DATE DEFAULT CURRENT_DATE,
  PRIMARY KEY (ADDRESS_ID),
  CONSTRAINT ADDRESS_USER_FK FOREIGN KEY (PARENT_ID) REFERENCES USERS (USER_ID)
  );
  
  CREATE INDEX ADDRESS_USER_FK ON ADDRESS(PARENT_ID);
  


CREATE TABLE EMAIL_ADDRESS (
  EMAIL_ID VARCHAR2(32) NOT NULL,
  NAME VARCHAR2(100) NULL,
  DESCRIPTION VARCHAR2(100) NULL,
  EMAIL_ADDRESS VARCHAR2(320) NULL,
  IS_DEFAULT char(1) DEFAULT ('N'),
  ACTIVE char(1) DEFAULT ('Y'),
  PARENT_ID VARCHAR2(32) NULL,
  LAST_UPDATE DATE NULL,
  CREATE_DATE DATE DEFAULT CURRENT_DATE,
  PRIMARY KEY (EMAIL_ID),
  CONSTRAINT EMAIL_ADDRESS_USER_FK FOREIGN KEY (PARENT_ID) REFERENCES USERS (USER_ID)
);

CREATE INDEX EMAIL_ADDRESS_USER_FK ON EMAIL_ADDRESS(PARENT_ID);
 

CREATE TABLE PHONE (
  PHONE_ID VARCHAR2(32) NOT NULL,
  NAME VARCHAR2(40) NULL,
  AREA_CD VARCHAR2(10) NULL,
  COUNTRY_CD VARCHAR2(3) NULL,
  DESCRIPTION VARCHAR2(100) NULL,
  PHONE_NBR VARCHAR2(50) NULL,
  PHONE_EXT VARCHAR2(20) NULL,
  IS_DEFAULT char(1) DEFAULT ('N'),
  ACTIVE char(1) DEFAULT ('Y'),
  PARENT_ID VARCHAR2(32) NULL,
  PHONE_TYPE VARCHAR2(20) NULL,
  LAST_UPDATE DATE NULL,
  CREATE_DATE DATE DEFAULT CURRENT_DATE,
  PRIMARY KEY (PHONE_ID),
  CONSTRAINT PHONE_USER_FK FOREIGN KEY (PARENT_ID) REFERENCES USERS (USER_ID)
);

CREATE INDEX AREA_CD ON PHONE(AREA_CD,PHONE_NBR);
CREATE INDEX PHONE_USER_FK ON PHONE(AREA_CD,PARENT_ID);


CREATE TABLE CREDENTIALS (
  USER_ID VARCHAR2(32) NOT NULL,
  CREDENTIAL_TYPE VARCHAR2(20) NOT NULL,
  VALUE           VARCHAR2(100) NULL,
  IS_PUBLIC       NUMBER(1) NULL,
  PRIMARY KEY (USER_ID,CREDENTIAL_TYPE),
  CONSTRAINT FK_CREDENTIALS_USERS FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID)
);


CREATE TABLE USER_ATTACHMENT_REF (
  USER_ATTACH_REF_ID VARCHAR2(20) NOT NULL,
  USER_ID VARCHAR2(20) NULL,
  NAME VARCHAR2(20) NULL,
  VALUE VARCHAR2(50) NULL,
  URL VARCHAR2(50) NULL,
  PRIMARY KEY (USER_ATTACH_REF_ID),
  CONSTRAINT FK_USER_ATTACHMENT_REF_USERS FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID)
);

CREATE INDEX FK_USER_ATTACHMENT_REF_USERS ON USER_ATTACHMENT_REF(USER_ID);


CREATE TABLE USER_ATTRIBUTES (
  ID VARCHAR2(32) NOT NULL,
  USER_ID VARCHAR2(32) NULL,
  METADATA_ID VARCHAR2(32) NULL,
  NAME VARCHAR2(50) NULL,
  VALUE VARCHAR2(1000) NULL,
  ATTR_GROUP VARCHAR2(20) NULL,
  PRIMARY KEY (ID),
  CONSTRAINT FK_USR_ATTR_ELMT_FK FOREIGN KEY (METADATA_ID) REFERENCES METADATA_ELEMENT (METADATA_ID),
  CONSTRAINT USER_ATTRIBUTES_ibfk_1 FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID)
);

CREATE INDEX USER_ID ON USER_ATTRIBUTES(USER_ID);
CREATE INDEX FK_USR_ATTR_ELMT_FK ON USER_ATTRIBUTES(METADATA_ID);



CREATE TABLE USER_DELEGATION_ATTRIBUTE (
  ID VARCHAR2(32) NOT NULL,
  USER_ID VARCHAR2(32) NULL,
  OBJ_TYPE VARCHAR2(50) NULL,
  NAME VARCHAR2(50) NULL,
  VALUE VARCHAR2(255) NULL,
  PRIMARY KEY (ID),
  CONSTRAINT USER_DELEG_ATTRIBUTE_ibfk_1 FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID)
);

CREATE INDEX USER_DELEG_USER_ID ON USER_DELEGATION_ATTRIBUTE(USER_ID);




CREATE TABLE USER_ROLE (
  USER_ROLE_ID VARCHAR2(32) NOT NULL,
  USER_ID VARCHAR2(32) NOT NULL,
  STATUS VARCHAR2(20) NULL,
  CREATE_DATE DATE NULL,
  START_DATE DATE NULL,
  END_DATE DATE NULL,
  CREATED_BY VARCHAR2(32) NULL,
  ROLE_ID VARCHAR2(32) NOT NULL,
  PRIMARY KEY (ROLE_ID,USER_ID),
  CONSTRAINT FK_USR_ROLE_ROLE FOREIGN KEY (ROLE_ID) REFERENCES ROLE (ROLE_ID),
  CONSTRAINT FK_USR_ROLE_USR FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID)
);

CREATE INDEX FK_USR_ROLE_USR ON USER_ROLE(USER_ID);

CREATE TABLE USER_GRP (
  USER_GRP_ID VARCHAR2(32) NOT NULL,
  GRP_ID VARCHAR2(32) NOT NULL,
  USER_ID VARCHAR2(32) NOT NULL,
  STATUS VARCHAR2(20) DEFAULT 'ACTIVE',
  CREATE_DATE DATE NULL,
  CREATED_BY VARCHAR2(32) NULL,
  START_DATE DATE NULL,
  END_DATE DATE NULL,
  PRIMARY KEY (USER_GRP_ID),
  CONSTRAINT FK_USR_GRP_GPR FOREIGN KEY (GRP_ID) REFERENCES GRP (GRP_ID),
  CONSTRAINT FK_USR_GRP_USR FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID)
);

CREATE UNIQUE INDEX USER_GRP_UNIQUE_RECORD ON USER_GRP(USER_ID,GRP_ID);
CREATE INDEX FK_USR_GRP_GPR ON USER_GRP(GRP_ID);

CREATE TABLE USER_KEY (
  USER_KEY_ID VARCHAR2(32) NOT NULL,
  USER_ID VARCHAR2(32) NOT NULL,
  NAME VARCHAR2(40) NOT NULL,
  KEY_VALUE VARCHAR2(255) NOT NULL,
  PRIMARY KEY (USER_KEY_ID),
  CONSTRAINT FK_USER_KEY_USER_ID FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID)
);

CREATE INDEX FK_USER_KEY_USER_ID ON USER_KEY(USER_ID);


CREATE TABLE USER_NOTE (
  USER_NOTE_ID VARCHAR2(32) NOT NULL,
  USER_ID VARCHAR2(32) NULL,
  NOTE_TYPE VARCHAR2(20) NULL,
  DESCRIPTION VARCHAR2(2000) NULL,
  CREATE_DATE DATE NULL,
  CREATED_BY VARCHAR2(20) NULL,
  PRIMARY KEY (USER_NOTE_ID),
  CONSTRAINT FK_USER_NOTE_USERS FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID)
);

CREATE INDEX FK_USER_NOTE_USERS ON USER_NOTE(USER_ID);



CREATE TABLE LOGIN (
  SERVICE_ID VARCHAR2(20) NOT NULL,
  LOGIN VARCHAR2(320) NOT NULL,
  LOWERCASE_LOGIN VARCHAR2(320) NOT NULL,
  MANAGED_SYS_ID VARCHAR2(32) NOT NULL,
  IDENTITY_TYPE VARCHAR2(20) NULL,
  CANONICAL_NAME VARCHAR2(100) NULL,
  USER_ID VARCHAR2(32) NULL,
  PASSWORD VARCHAR2(255) NULL,
  PWD_EQUIVALENT_TOKEN VARCHAR2(255) NULL,
  PWD_CHANGED DATE NULL,
  PWD_EXP DATE NULL,
  RESET_PWD NUMBER(4) DEFAULT (0) NOT NULL,
  FIRST_TIME_LOGIN NUMBER(4) DEFAULT (1) NOT NULL ,
  IS_LOCKED NUMBER(4)  DEFAULT (0) NOT NULL,
  STATUS VARCHAR2(20) NULL,
  GRACE_PERIOD DATE NULL,
  CREATE_DATE DATE NULL,
  CREATED_BY VARCHAR2(32) NULL,
  CURRENT_LOGIN_HOST VARCHAR2(40) NULL,
  AUTH_FAIL_COUNT NUMBER(4)  DEFAULT (0) NOT NULL,
  LAST_AUTH_ATTEMPT DATE NULL, 
  LAST_LOGIN DATE NULL,
  LAST_LOGIN_IP VARCHAR2(60) NULL,
  PREV_LOGIN DATE NULL,
  PREV_LOGIN_IP VARCHAR2(60) NULL,
  IS_DEFAULT NUMBER(4) DEFAULT (0),
  PWD_CHANGE_COUNT NUMBER(4) DEFAULT (0),
  PSWD_RESET_TOKEN VARCHAR2(80) NULL,
  PSWD_RESET_TOKEN_EXP DATE NULL,
  LOGIN_ID VARCHAR2(32) NOT NULL,
  LAST_UPDATE DATE NULL,
  PRIMARY KEY (LOGIN_ID),
  CONSTRAINT FK_LOGIN_SERVICE FOREIGN KEY (SERVICE_ID) REFERENCES SECURITY_DOMAIN (DOMAIN_ID),
  CONSTRAINT FK_LOGIN_USERS FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID)
);
 
 CREATE UNIQUE INDEX UNIQUE_LOGIN ON LOGIN(LOGIN,MANAGED_SYS_ID,SERVICE_ID);
 CREATE INDEX login_user_indx ON LOGIN(USER_ID);
 CREATE INDEX FK_LOGIN_SERVICE ON LOGIN(SERVICE_ID);
 
 
 CREATE TABLE LOGIN_ATTRIBUTE (
  LOGIN_ATTR_ID VARCHAR2(32) NOT NULL,
  NAME VARCHAR2(20) NULL,
  VALUE VARCHAR2(255) NULL,
  METADATA_ID VARCHAR2(20) NULL,
  ATTR_GROUP VARCHAR2(20) NULL,
  LOGIN_ID VARCHAR2(32) NOT NULL,
  PRIMARY KEY (LOGIN_ATTR_ID),
  CONSTRAINT LOGIN_ID_LOGIN_ATTR_FK FOREIGN KEY (LOGIN_ID) REFERENCES LOGIN (LOGIN_ID)
);
 
CREATE INDEX LOGIN_ID_LOGIN_ATTR_FK ON LOGIN_ATTRIBUTE(LOGIN_ID);

CREATE TABLE PWD_HISTORY (
  PWD_HISTORY_ID VARCHAR2(32) NOT NULL,
  DATE_CREATED DATE NOT NULL,
  PASSWORD VARCHAR2(255) NULL,
  LOGIN_ID VARCHAR2(32) NOT NULL,
  PRIMARY KEY (PWD_HISTORY_ID),
  CONSTRAINT LOGIN_ID_PWD_HIST_FK FOREIGN KEY (LOGIN_ID) REFERENCES LOGIN (LOGIN_ID)
);

CREATE INDEX LOGIN_ID_PWD_HIST_FK ON PWD_HISTORY(LOGIN_ID);


CREATE TABLE ORG_STRUCTURE (
  ORG_STRUCTURE_ID VARCHAR2(32) NOT NULL,
  SUPERVISOR_ID VARCHAR2(32) NOT NULL,
  STAFF_ID VARCHAR2(32) NOT NULL,
  SUPERVISOR_TYPE VARCHAR2(20) NULL,
  IS_PRIMARY_SUPER NUMBER(4) DEFAULT (0),
  START_DATE DATE NULL,
  END_DATE DATE NULL,
  STATUS VARCHAR2(20) NULL,
  COMMENTS VARCHAR2(255) NULL,
  PRIMARY KEY (ORG_STRUCTURE_ID),
  CONSTRAINT FK_SUPR_USER FOREIGN KEY (SUPERVISOR_ID) REFERENCES USERS (USER_ID),
  CONSTRAINT FK_STAFF_USER FOREIGN KEY (STAFF_ID) REFERENCES USERS (USER_ID)
);

CREATE INDEX FK_SUPR_USER ON ORG_STRUCTURE(SUPERVISOR_ID);
CREATE INDEX FK_STAFF_USER ON ORG_STRUCTURE(STAFF_ID);


CREATE TABLE USER_AFFILIATION (
  USER_AFFILIATION_ID VARCHAR2(32) NOT NULL,
  COMPANY_ID VARCHAR2(32) NOT NULL,
  USER_ID VARCHAR2(32) NOT NULL,
  STATUS VARCHAR2(20) NULL,
  CREATE_DATE DATE NULL,
  START_DATE DATE NULL,
  END_DATE DATE NULL,
  CREATED_BY VARCHAR2(32) NULL,
  PRIMARY KEY (USER_AFFILIATION_ID),
  CONSTRAINT FK_USR_ORG_AFFL FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (COMPANY_ID),
  CONSTRAINT FK_USR_USER_AFFIL FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID)
);


CREATE INDEX FK_USR_ORG_AFFL ON USER_AFFILIATION(COMPANY_ID);
CREATE INDEX FK_USR_USER_AFFIL ON USER_AFFILIATION(USER_ID);


CREATE TABLE PROV_REQUEST (
  REQUEST_ID VARCHAR2(32) NOT NULL,
  REQUESTOR_ID VARCHAR2(100) NULL,
  REQUEST_DATE DATE NULL,
  STATUS VARCHAR2(20) NULL,
  STATUS_DATE DATE NULL,
  REQUEST_REASON VARCHAR2(500) NULL,
  REQUEST_TYPE VARCHAR2(20) NULL,
  CHANGE_ACCESS_BY VARCHAR2(32) NULL,
  REQUEST_XML CLOB,
  NEW_ROLE_ID VARCHAR2(32) NULL,
  NEW_SERVICE_ID VARCHAR2(20) NULL,
  MANAGED_RESOURCE_ID VARCHAR2(32) NULL,
  REQUEST_FOR_ORG_ID VARCHAR2(32) NULL,
  PRIMARY KEY (REQUEST_ID)
);
CREATE TABLE REQUEST_ATTACHMENT (
  REQUEST_ATTACHMENT_ID VARCHAR2(32) NOT NULL,
  NAME VARCHAR2(20) NULL,
  ATTACHMENT VARCHAR2(20) NULL,
  USER_ID VARCHAR2(32) NULL,
  ATTACHMENT_DATE DATE NULL,
  REQUEST_ID VARCHAR2(32) NOT NULL,
  PRIMARY KEY (REQUEST_ATTACHMENT_ID),
  CONSTRAINT RefPROV_REQUEST1001 FOREIGN KEY (REQUEST_ID) REFERENCES PROV_REQUEST (REQUEST_ID)
);

CREATE INDEX RefPROV_REQUEST1001 ON REQUEST_ATTACHMENT(REQUEST_ID);

CREATE TABLE REQUEST_ATTRIBUTE (
  REQUEST_ATTR_ID VARCHAR2(32) NOT NULL,
  NAME VARCHAR2(40) NULL,
  VALUE VARCHAR2(255) NULL,
  METADATA_ID VARCHAR2(32) NULL,
  ATTR_GROUP VARCHAR2(20) NULL,
  REQUEST_ID VARCHAR2(32) NULL,
  PRIMARY KEY (REQUEST_ATTR_ID),
  CONSTRAINT RefPROV_REQUEST1011 FOREIGN KEY (REQUEST_ID) REFERENCES PROV_REQUEST (REQUEST_ID)
);

CREATE INDEX REQUEST_ATTRIBUTE_PROV_REQUEST ON REQUEST_ATTRIBUTE(REQUEST_ID);


CREATE TABLE REQUEST_USER (
  REQ_USER_ID VARCHAR2(32) NOT NULL,
  USER_ID VARCHAR2(32) NULL,
  FIRST_NAME VARCHAR2(20) NULL,
  LAST_NAME VARCHAR2(20) NULL,
  MIDDLE_INIT VARCHAR2(20) NULL,
  DEPT_CD VARCHAR2(20) NULL,
  DIVISION VARCHAR2(20) NULL,
  LOCATION_CD VARCHAR2(20) NULL,
  AFFILIATION VARCHAR2(20) NULL,
  REQUEST_ID VARCHAR2(32) NULL,
  PRIMARY KEY (REQ_USER_ID),
  CONSTRAINT RefPROV_REQUEST931 FOREIGN KEY (REQUEST_ID) REFERENCES PROV_REQUEST (REQUEST_ID)
);

CREATE INDEX REQUEST_USER_PROV_REQUEST ON REQUEST_USER(REQUEST_ID);


CREATE TABLE REQ_APPROVER (
  REQ_APPROVER_ID VARCHAR2(32) NOT NULL,
  APPROVER_ID VARCHAR2(32) NULL,
  APPROVER_TYPE VARCHAR2(20) NULL,
  APPROVER_LEVEL NUMBER(4) NULL,
  REQUEST_ID VARCHAR2(32) NULL,
  ACTION_DATE DATE NULL,
  STATUS VARCHAR2(20) NULL,
  ACTION VARCHAR2(20) NULL,
  CMT VARCHAR2(1000) NULL,
  MANAGED_SYS_ID VARCHAR2(32) NULL,
  MNG_SYS_GROUP_ID VARCHAR2(32) NULL,
  ROLE_DOMAIN VARCHAR2(20) NULL,
  PRIMARY KEY (REQ_APPROVER_ID)
);



CREATE TABLE MNG_SYS_GROUP (
  MNG_SYS_GROUP_ID VARCHAR2(32) NOT NULL,
  MANAGED_SYS_ID VARCHAR2(32) NOT NULL,
  PRIMARY KEY (MANAGED_SYS_ID,MNG_SYS_GROUP_ID),
  CONSTRAINT Refmanaged_sys831 FOREIGN KEY (MANAGED_SYS_ID) REFERENCES MANAGED_SYS (MANAGED_SYS_ID)
);

CREATE TABLE MNG_SYS_LIST (
  MANAGED_SYS_ID VARCHAR2(32) NOT NULL,
  REQUEST_ID VARCHAR2(32) NOT NULL,
  PRIMARY KEY (MANAGED_SYS_ID,REQUEST_ID),
  CONSTRAINT Refmanaged_sys941 FOREIGN KEY (MANAGED_SYS_ID) REFERENCES MANAGED_SYS (MANAGED_SYS_ID),
  CONSTRAINT RefPROV_REQUEST951 FOREIGN KEY (REQUEST_ID) REFERENCES PROV_REQUEST (REQUEST_ID)
);

CREATE INDEX RefPROV_REQUEST951 ON MNG_SYS_LIST(REQUEST_ID);


CREATE TABLE MNG_SYS_OBJECT_MATCH (
  OBJECT_SEARCH_ID VARCHAR2(32) NOT NULL,
  MANAGED_SYS_ID VARCHAR2(32) NOT NULL,
  OBJECT_TYPE VARCHAR2(20) DEFAULT 'USER',
  MATCH_METHOD VARCHAR2(20) DEFAULT 'BASE_DN',
  BASE_DN VARCHAR2(200) NULL,
  SEARCH_BASE_DN VARCHAR2(200) NULL,
  SEARCH_FILTER VARCHAR2(1000) NULL,
  KEY_FIELD VARCHAR2(40) NULL,
  PRIMARY KEY (OBJECT_SEARCH_ID),
  CONSTRAINT FK_MNG_SYS_OBJ_MATC FOREIGN KEY (MANAGED_SYS_ID) REFERENCES MANAGED_SYS (MANAGED_SYS_ID)
);

CREATE INDEX FK_MNG_SYS_OBJ_MATC ON MNG_SYS_OBJECT_MATCH(MANAGED_SYS_ID);


CREATE TABLE MANAGED_SYS_ATTRIBUTE (
  MNG_SYS_ATTR_ID VARCHAR2(32) NOT NULL,
  NAME VARCHAR2(60) NULL,
  VALUE1 VARCHAR2(255) NULL,
  VALUE2 VARCHAR2(255) NULL,
  MANAGED_SYS_ID VARCHAR2(32) NULL,
  PRIMARY KEY (MNG_SYS_ATTR_ID),
  CONSTRAINT FK_MNG_MNG_ATTR FOREIGN KEY (MANAGED_SYS_ID) REFERENCES MANAGED_SYS (MANAGED_SYS_ID)
);
CREATE INDEX FK_MNG_MNG_ATTR ON MANAGED_SYS_ATTRIBUTE(MANAGED_SYS_ID);


CREATE TABLE IDENTITY_QUEST_GRP (
  IDENTITY_QUEST_GRP_ID VARCHAR2(32) NOT NULL,
  NAME VARCHAR2(60) NULL,
  STATUS VARCHAR2(20) NULL,
  COMPANY_OWNER_ID VARCHAR2(32) NULL,
  CREATE_DATE DATE NULL,
  CREATED_BY VARCHAR2(20) NULL,
  LAST_UPDATE DATE NULL,
  LAST_UPDATED_BY VARCHAR2(20) NULL,
  PRIMARY KEY (IDENTITY_QUEST_GRP_ID)
);

CREATE TABLE IDENTITY_QUESTION (
  IDENTITY_QUESTION_ID VARCHAR2(32) NOT NULL,
  IDENTITY_QUEST_GRP_ID VARCHAR2(32) NULL,
  QUESTION_TEXT VARCHAR2(255) NULL,
  ACTIVE char(1) DEFAULT ('Y'),
  PRIMARY KEY (IDENTITY_QUESTION_ID),
  CONSTRAINT ID_QU_IDEN_QUEST_GRP_FK FOREIGN KEY (IDENTITY_QUEST_GRP_ID) REFERENCES IDENTITY_QUEST_GRP (IDENTITY_QUEST_GRP_ID)
);

CREATE INDEX ID_QU_IDEN_QUEST_GRP_FK ON IDENTITY_QUESTION(IDENTITY_QUEST_GRP_ID);

CREATE TABLE USER_IDENTITY_ANS (
  IDENTITY_ANS_ID VARCHAR2(32) NOT NULL,
  IDENTITY_QUESTION_ID VARCHAR2(32) NOT NULL,
  USER_ID VARCHAR2(32) NULL,
  QUESTION_ANSWER VARCHAR2(255) NULL,
  PRIMARY KEY (IDENTITY_ANS_ID),
  CONSTRAINT FK_ID_AND_QUEST_FK FOREIGN KEY (IDENTITY_QUESTION_ID) REFERENCES IDENTITY_QUESTION (IDENTITY_QUESTION_ID),
  CONSTRAINT FK_USER_IDENTITY_ANS_USERS FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID)
);
CREATE INDEX FK_USER_IDENTITY_ANS_USERS ON USER_IDENTITY_ANS(USER_ID);
CREATE INDEX FK_ID_AND_QUEST_FK ON USER_IDENTITY_ANS(IDENTITY_QUESTION_ID);



CREATE TABLE CONTENT_PROVIDER (
  CONTENT_PROVIDER_ID VARCHAR2(32) NOT NULL,
  CONTENT_PROVIDER_NAME VARCHAR2(100) NOT NULL,
  IS_PUBLIC char(1) DEFAULT ('N') NOT NULL ,
  MIN_AUTH_LEVEL VARCHAR2(32) NOT NULL,
  DOMAIN_PATTERN VARCHAR2(100) NOT NULL,
  IS_SSL char(1) NULL,
  RESOURCE_ID VARCHAR2(32) NOT NULL,
  PRIMARY KEY (CONTENT_PROVIDER_ID),
  CONSTRAINT CP_AUTH_LEVEL_FK FOREIGN KEY (MIN_AUTH_LEVEL) REFERENCES AUTH_LEVEL (AUTH_LEVEL_ID),
  CONSTRAINT CP_RES_FK FOREIGN KEY (RESOURCE_ID) REFERENCES RES (RESOURCE_ID)
);

CREATE UNIQUE INDEX UNIQUE_CP_NAME ON CONTENT_PROVIDER(CONTENT_PROVIDER_NAME);
CREATE UNIQUE INDEX UNIQUE_CP_PATTERN ON CONTENT_PROVIDER(DOMAIN_PATTERN,IS_SSL);
CREATE INDEX CP_AUTH_LEVEL_FK ON CONTENT_PROVIDER(MIN_AUTH_LEVEL);
CREATE INDEX CP_RES_FK ON CONTENT_PROVIDER(RESOURCE_ID);

CREATE TABLE CONTENT_PROVIDER_SERVER (
  CONTENT_PROVIDER_SERVER_ID VARCHAR2(32) NOT NULL,
  CONTENT_PROVIDER_ID VARCHAR2(32) NOT NULL,
  SERVER_URL VARCHAR2(100) NOT NULL,
  PRIMARY KEY (CONTENT_PROVIDER_SERVER_ID),
  CONSTRAINT CP_SERVER_CP_FK FOREIGN KEY (CONTENT_PROVIDER_ID) REFERENCES CONTENT_PROVIDER (CONTENT_PROVIDER_ID)
);

CREATE UNIQUE INDEX UNIQUE_CP_SERVER ON CONTENT_PROVIDER_SERVER(CONTENT_PROVIDER_ID,SERVER_URL);

CREATE TABLE PAGE_TEMPLATE_XREF (
  TEMPLATE_ID VARCHAR2(32) NOT NULL,
  METADATA_ELEMENT_ID VARCHAR2(32) NOT NULL,
  DISPLAY_ORDER NUMBER(4) NOT NULL,
  PRIMARY KEY (TEMPLATE_ID,METADATA_ELEMENT_ID),
  CONSTRAINT META_PG_TEMPLATE_FK FOREIGN KEY (TEMPLATE_ID) REFERENCES METADATA_ELEMENT_PAGE_TEMPLATE (ID),
  CONSTRAINT MD_ELMT_TEMPLATE_FK FOREIGN KEY (METADATA_ELEMENT_ID) REFERENCES METADATA_ELEMENT (METADATA_ID)
);




CREATE TABLE URI_PATTERN (
  URI_PATTERN_ID VARCHAR2(32) NOT NULL,
  CONTENT_PROVIDER_ID VARCHAR2(32) NOT NULL,
  MIN_AUTH_LEVEL VARCHAR2(32) NOT NULL,
  PATTERN VARCHAR2(100) NOT NULL,
  IS_PUBLIC char(1) DEFAULT ('N')  NOT NULL ,
  RESOURCE_ID VARCHAR2(32) NOT NULL,
  PRIMARY KEY (URI_PATTERN_ID),
  CONSTRAINT URI_PATTERN_AUTH_LEVEL_FK FOREIGN KEY (MIN_AUTH_LEVEL) REFERENCES AUTH_LEVEL (AUTH_LEVEL_ID),
  CONSTRAINT URI_PATTERN_RES_FK FOREIGN KEY (RESOURCE_ID) REFERENCES RES (RESOURCE_ID),
  CONSTRAINT URI_PATTERN_CP_FK FOREIGN KEY (CONTENT_PROVIDER_ID) REFERENCES CONTENT_PROVIDER (CONTENT_PROVIDER_ID)
);

CREATE UNIQUE INDEX URI_PATTERN_UNIQUE ON URI_PATTERN(CONTENT_PROVIDER_ID,PATTERN);
CREATE INDEX URI_PATTERN_AUTH_LEVEL_FK ON URI_PATTERN(MIN_AUTH_LEVEL);
CREATE INDEX URI_PATTERN_RES_FK ON URI_PATTERN(RESOURCE_ID);



CREATE TABLE METADATA_URI_XREF (
  TEMPLATE_ID VARCHAR2(32) NOT NULL,
  URI_PATTERN_ID VARCHAR2(32) NOT NULL,
  CONSTRAINT TEMPLETE_PATTERN_XREF_FK FOREIGN KEY (TEMPLATE_ID) REFERENCES METADATA_ELEMENT_PAGE_TEMPLATE (ID),
  CONSTRAINT TEMPLATE_PATRN_XREF_PATRN_FK FOREIGN KEY (URI_PATTERN_ID) REFERENCES URI_PATTERN (URI_PATTERN_ID)
);
CREATE INDEX TEMPLATE_PATRN_XREF_PATRN_FK ON METADATA_URI_XREF(URI_PATTERN_ID);
CREATE INDEX TEMPLETE_PATTERN_XREF_FK ON METADATA_URI_XREF(TEMPLATE_ID);



CREATE TABLE MD_ELEMENT_VALID_VALUES (
  ID VARCHAR2(32) NOT NULL,
  METADATA_ELEMENT_ID VARCHAR2(32) NOT NULL,
  UI_VALUE VARCHAR2(200) NOT NULL,
  DISPLAY_ORDER NUMBER(4) NOT NULL,
  PRIMARY KEY (ID),
  CONSTRAINT VALID_VALUES_ELEMENT_FK FOREIGN KEY (METADATA_ELEMENT_ID) REFERENCES METADATA_ELEMENT (METADATA_ID)
);
CREATE INDEX VALID_VALUES_ELEMENT_FK ON MD_ELEMENT_VALID_VALUES(METADATA_ELEMENT_ID);


CREATE TABLE URI_PATTERN_META_TYPE (
  URI_PATTERN_META_TYPE_ID VARCHAR2(32) NOT NULL,
  METADATA_TYPE_NAME VARCHAR2(100) NOT NULL,
  SPRING_BEAN_NAME VARCHAR2(100) NOT NULL,
  PRIMARY KEY (URI_PATTERN_META_TYPE_ID)
);

CREATE UNIQUE INDEX META_SPRING_BEAN_UNIQUE ON URI_PATTERN_META_TYPE(SPRING_BEAN_NAME);
CREATE UNIQUE INDEX URI_META_TYPE_NAME_UNIQUE ON URI_PATTERN_META_TYPE(METADATA_TYPE_NAME);


CREATE TABLE URI_PATTERN_META (
  URI_PATTERN_META_ID VARCHAR2(32) NOT NULL,
  URI_PATTERN_ID VARCHAR2(32) NOT NULL,
  URI_PATTERN_META_TYPE_ID VARCHAR2(32) NOT NULL,
  URI_PATTERN_NAME VARCHAR2(100) NOT NULL,
  PRIMARY KEY (URI_PATTERN_META_ID),
  CONSTRAINT URI_PATTERN_META_META_TYPE_FK FOREIGN KEY (URI_PATTERN_META_TYPE_ID) REFERENCES URI_PATTERN_META_TYPE (URI_PATTERN_META_TYPE_ID),
  CONSTRAINT URI_PATTERN_META_URI_PATRN_FK FOREIGN KEY (URI_PATTERN_ID) REFERENCES URI_PATTERN (URI_PATTERN_ID)
);

CREATE INDEX URI_PATTERN_META_URI_PATRN_FK ON URI_PATTERN_META(URI_PATTERN_ID);
CREATE INDEX URI_PATTERN_META_META_TYPE_FK ON URI_PATTERN_META(URI_PATTERN_META_TYPE_ID);

CREATE TABLE URI_PATTERN_META_VALUE (
  URI_PATTERN_META_VALUE_ID VARCHAR2(32) NOT NULL,
  URI_PATTERN_META_ID VARCHAR2(32) NOT NULL,
  META_ATTRIBUTE_NAME VARCHAR2(100) NOT NULL,
  AM_ATTRIBUTE_ID VARCHAR2(32) NULL,
  STATIC_VALUE VARCHAR2(100) NULL,
  PRIMARY KEY (URI_PATTERN_META_VALUE_ID),
  CONSTRAINT URI_PATTERN_META_VALUE_AM_FK FOREIGN KEY (AM_ATTRIBUTE_ID) REFERENCES AUTH_RESOURCE_AM_ATTRIBUTE (AM_ATTRIBUTE_ID),
  CONSTRAINT URI_PATTERN_META_VALUE_META_FK FOREIGN KEY (URI_PATTERN_META_ID) REFERENCES URI_PATTERN_META (URI_PATTERN_META_ID)
);

CREATE INDEX URI_PATTERN_META_VALUE_AM_FK ON URI_PATTERN_META_VALUE(AM_ATTRIBUTE_ID);
CREATE INDEX URI_PATTERN_META_VALUE_META_FK ON URI_PATTERN_META_VALUE(URI_PATTERN_META_ID);



CREATE TABLE NOTIFICATION_CONFIG (
  NOTIFICATION_CONFIG_ID VARCHAR2(32) NOT NULL,
  NAME VARCHAR2(40) NULL,
  SELECTION_PARAM_XML CLOB,
  MSG_SUBJECT VARCHAR2(100) NULL,
  MSG_TEMPLATE_URL VARCHAR2(100) NULL,
  MSG_FROM VARCHAR2(100) NULL,
  MSG_BCC VARCHAR2(100) NULL,
  PRIMARY KEY (NOTIFICATION_CONFIG_ID)
);

CREATE TABLE ORG_POLICY (
  ORG_POLICY_ID VARCHAR2(32) NOT NULL,
  NAME VARCHAR2(40) NULL,
  TARGET_AUDIENCE_TYPE VARCHAR2(20) NULL,
  TARGET_AUDIENCE VARCHAR2(255) NULL,
  START_DATE date NULL,
  END_DATE date NULL,
  POLICY_TEXT CLOB,
  PRIMARY KEY (ORG_POLICY_ID)
);


CREATE TABLE ORG_POLICY_USER_LOG (
  ORG_POLICY_LOG_ID VARCHAR2(32) NOT NULL,
  ORG_POLICY_ID VARCHAR2(32) NOT NULL,
  USER_ID VARCHAR2(32) NOT NULL,
  TIME_STAMP DATE NOT NULL,
  RESPONSE VARCHAR2(255) NULL,
  PRIMARY KEY (ORG_POLICY_LOG_ID)
);



CREATE TABLE POLICY_DEF (
  POLICY_DEF_ID VARCHAR2(32) NOT NULL,
  NAME VARCHAR2(60) NULL,
  DESCRIPTION VARCHAR2(255) NULL,
  POLICY_TYPE VARCHAR2(20) NULL,
  LOCATION_TYPE VARCHAR2(20) NULL,
  POLICY_RULE VARCHAR2(500) NULL,
  POLICY_HANDLER VARCHAR2(255) NULL,
  POLICY_ADVISE_HANDLER VARCHAR2(255) NULL,
  PRIMARY KEY (POLICY_DEF_ID)
);

CREATE TABLE POLICY_DEF_PARAM (
  DEF_PARAM_ID VARCHAR2(32) NOT NULL,
  POLICY_DEF_ID VARCHAR2(32) NULL,
  NAME VARCHAR2(60) NULL,
  DESCRIPTION VARCHAR2(255) NULL,
  OPERATION VARCHAR2(20) NULL,
  VALUE1 VARCHAR2(255) NULL,
  VALUE2 VARCHAR2(255) NULL,
  REPEATS NUMBER(4) NULL,
  PARAM_GROUP VARCHAR2(20) NULL,
  HANDLER_LANGUAGE VARCHAR2(20) NULL,
  POLICY_PARAM_HANDLER VARCHAR2(255) NULL,
  PRIMARY KEY (DEF_PARAM_ID),
  CONSTRAINT FK_POLICY_DEF_PARAM_POLICY_DEF FOREIGN KEY (POLICY_DEF_ID) REFERENCES POLICY_DEF (POLICY_DEF_ID)
);

CREATE INDEX FK_POLICY_DEF_PARAM_POLICY_DEF ON POLICY_DEF_PARAM(POLICY_DEF_ID);


CREATE TABLE POLICY (
  POLICY_ID VARCHAR2(32) NOT NULL,
  POLICY_DEF_ID VARCHAR2(32) NULL,
  NAME VARCHAR2(60) NULL,
  DESCRIPTION VARCHAR2(255) NULL,
  STATUS NUMBER(4) NULL,
  CREATE_DATE DATE NULL,
  CREATED_BY VARCHAR2(20) NULL,
  LAST_UPDATE DATE NULL,
  LAST_UPDATED_BY VARCHAR2(20) NULL,
  RULE_SRC_URL VARCHAR2(80) NULL,
  RULE_TEXT CLOB,
  ENABLEMENT NUMBER(4) DEFAULT (1),
  PRIMARY KEY (POLICY_ID)
);

CREATE INDEX FK_POLICY_POLICY_DEF ON POLICY(POLICY_DEF_ID);


CREATE TABLE POLICY_ATTRIBUTE (
  POLICY_ATTR_ID VARCHAR2(32) NOT NULL,
  DEF_PARAM_ID VARCHAR2(32) NULL,
  POLICY_ID VARCHAR2(32) NULL,
  NAME VARCHAR2(60) NULL,
  OPERATION VARCHAR2(20) NULL,
  VALUE1 VARCHAR2(255) NULL,
  VALUE2 VARCHAR2(255) NULL,
  RULE_TEXT CLOB,
  PRIMARY KEY (POLICY_ATTR_ID),
  CONSTRAINT POLI_ATTR_POL_DEF_PARAM FOREIGN KEY (DEF_PARAM_ID) REFERENCES POLICY_DEF_PARAM (DEF_PARAM_ID),
  CONSTRAINT FK_POLICY_ATTRIBUTE_POLICY FOREIGN KEY (POLICY_ID) REFERENCES POLICY (POLICY_ID)
);

CREATE INDEX FK_POLICY_ATTRIBUTE_POLICY ON POLICY_ATTRIBUTE(POLICY_ID);
CREATE INDEX POLI_ATTR_POL_DEF_PARAM ON POLICY_ATTRIBUTE(DEF_PARAM_ID);


CREATE TABLE POLICY_OBJECT_ASSOC (
  POLICY_OBJECT_ID VARCHAR2(32) NOT NULL,
  POLICY_ID VARCHAR2(32) NULL,
  ASSOCIATION_LEVEL VARCHAR2(20) NULL,
  ASSOCIATION_VALUE VARCHAR2(255) NULL,
  OBJECT_TYPE VARCHAR2(100) NULL,
  OBJECT_ID VARCHAR2(32) NULL,
  PARENT_ASSOC_ID VARCHAR2(32) NULL,
  PRIMARY KEY (POLICY_OBJECT_ID)
);





CREATE TABLE RECONCILIATION_CONFIG (
  RECON_CONFIG_ID VARCHAR2(32) NOT NULL,
  RESOURCE_ID VARCHAR2(32) NULL,
  FREQUENCY VARCHAR2(20) NULL,
  STATUS VARCHAR2(20) DEFAULT 'ACTIVE',
  PRIMARY KEY (RECON_CONFIG_ID)
);

CREATE TABLE RECONCILIATION_SITUATION (
  RECON_SITUATION_ID VARCHAR2(32) NOT NULL,
  RECON_CONFIG_ID VARCHAR2(32) NULL,
  SITUATION VARCHAR2(40) NULL,
  SITUATION_RESP VARCHAR2(40) NULL,
  SCRIPT VARCHAR2(80) NULL,
  PRIMARY KEY (RECON_SITUATION_ID),
  CONSTRAINT RECON_SITUATION FOREIGN KEY (RECON_CONFIG_ID) REFERENCES RECONCILIATION_CONFIG (RECON_CONFIG_ID)
);


CREATE INDEX RECON_SITUATION ON RECONCILIATION_SITUATION(RECON_CONFIG_ID);


CREATE TABLE REPORT_INFO (
  REPORT_INFO_ID VARCHAR2(32) NOT NULL,
  REPORT_NAME VARCHAR2(64) NOT NULL,
  DATASOURCE_FILE_PATH VARCHAR2(255) NOT NULL,
  REPORT_FILE_PATH VARCHAR2(255) NULL,
  PRIMARY KEY (REPORT_INFO_ID)
);

CREATE UNIQUE INDEX REPORT_NAME ON REPORT_INFO(REPORT_NAME);


CREATE TABLE RESOURCE_ROLE (
  RESOURCE_ID VARCHAR2(32) NOT NULL,
  START_DATE DATE NULL,
  END_DATE DATE NULL,
  ROLE_ID VARCHAR2(32) NOT NULL,
  PRIMARY KEY (RESOURCE_ID,ROLE_ID),
  CONSTRAINT FK_RESOURCE_ROLE_RESOURCE FOREIGN KEY (RESOURCE_ID) REFERENCES RES (RESOURCE_ID),
  CONSTRAINT FK_RESOURCE_ROLE_ROLE FOREIGN KEY (ROLE_ID) REFERENCES ROLE (ROLE_ID)
);

CREATE TABLE RESOURCE_USER (
  RESOURCE_USER_ID VARCHAR2(32) NOT NULL,
  RESOURCE_ID VARCHAR2(32) NOT NULL,
  USER_ID VARCHAR2(32) NOT NULL,
  PRIVILEGE_LIST VARCHAR2(100) NULL,
  OP_AGAINST_ROLE NUMBER(4) NULL,
  STATUS VARCHAR2(20) NULL,
  START_DATE DATE NULL,
  END_DATE DATE NULL,
  PRIMARY KEY (RESOURCE_USER_ID),
  CONSTRAINT FK_RESOURCE_USER_USERS FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID),
  CONSTRAINT RESOURCE_USER_ibfk_1 FOREIGN KEY (RESOURCE_ID) REFERENCES RES (RESOURCE_ID)
);

CREATE UNIQUE INDEX FK_RESOURCE_USER_USERS ON RESOURCE_USER(USER_ID);
CREATE UNIQUE INDEX RESOURCE_ID_UNIQUE ON RESOURCE_USER(RESOURCE_ID);

CREATE TABLE SYNCH_CONFIG (
  SYNCH_CONFIG_ID VARCHAR2(32) NOT NULL,
  NAME VARCHAR2(60) NULL,
  STATUS VARCHAR2(20) NULL,
  SYNCH_SRC VARCHAR2(20) NULL,
  FILE_NAME VARCHAR2(80) NULL,
  SRC_LOGIN_ID VARCHAR2(100) NULL,
  SRC_PASSWORD VARCHAR2(100) NULL,
  SRC_HOST VARCHAR2(100) NULL,
  DRIVER VARCHAR2(100) NULL,
  CONNECTION_URL VARCHAR2(100) NULL,
  QUERY VARCHAR2(1000) NULL,
  QUERY_TIME_FIELD VARCHAR2(50) NULL,
  BASE_DN VARCHAR2(50) NULL,
  LAST_EXEC_TIME DATE NULL,
  LAST_REC_PROCESSED VARCHAR2(32) NULL,
  MANAGED_SYS_ID VARCHAR2(32) NULL,
  LOAD_MATCH_ONLY NUMBER(4) DEFAULT (0),
  UPDATE_ATTRIBUTE NUMBER(4) DEFAULT (1),
  SYNCH_FREQUENCY VARCHAR2(20) NULL,
  SYNCH_TYPE VARCHAR2(20) NULL,
  DELETE_RULE VARCHAR2(80) NULL,
  PROCESS_RULE VARCHAR2(80) NULL,
  VALIDATION_RULE VARCHAR2(80) NULL,
  TRANSFORMATION_RULE VARCHAR2(80) NULL,
  MATCH_FIELD_NAME VARCHAR2(40) NULL,
  MATCH_MANAGED_SYS_ID VARCHAR2(32) NULL,
  MATCH_SRC_FIELD_NAME VARCHAR2(40) NULL,
  CUSTOM_MATCH_RULE VARCHAR2(100) NULL,
  CUSTOM_ADAPTER_SCRIPT VARCHAR2(100) NULL,
  CUSTOM_MATCH_ATTR VARCHAR2(40) NULL,
  WS_URL VARCHAR2(100) NULL,
  WS_SCRIPT VARCHAR2(100) NULL,
  PRIMARY KEY (SYNCH_CONFIG_ID)
);

CREATE TABLE SYNCH_CONFIG_DATA_MAPPING (
  MAPPING_ID VARCHAR2(32) NOT NULL,
  SYNCH_CONFIG_ID VARCHAR2(32) NULL,
  IDM_FIELD_NAME VARCHAR2(40) NULL,
  SRC_FIELD_NAME VARCHAR2(40) NULL,
  MULTIVALUED NUMBER(4) NULL,
  PRIMARY KEY (MAPPING_ID),
  CONSTRAINT SYNCH_DATA_MAP FOREIGN KEY (SYNCH_CONFIG_ID) REFERENCES SYNCH_CONFIG (SYNCH_CONFIG_ID)
);

CREATE UNIQUE INDEX SYNCH_DATA_MAP ON SYNCH_CONFIG_DATA_MAPPING(SYNCH_CONFIG_ID);

CREATE TABLE RELATION_SET (
  RELATION_SET_ID VARCHAR2(20) NOT NULL,
  DESCRIPTION VARCHAR2(80) NULL,
  PRIMARY KEY (RELATION_SET_ID)
);

CREATE TABLE RELATION_TYPE (
  RELATION_TYPE_ID VARCHAR2(20) NOT NULL,
  DESCRIPTION VARCHAR2(80) NOT NULL,
  PRIMARY KEY (RELATION_TYPE_ID)
);

CREATE TABLE RELATIONSHIP (
  RELATIONSHIP_ID VARCHAR2(20) NOT NULL,
  RELATION_SET_ID VARCHAR2(20) NULL,
  ITEM_OBJ VARCHAR2(20) NULL,
  ITEM_ID VARCHAR2(20) NULL,
  RANK NUMBER(4) NULL,
  ACTIVE NUMBER(1) NULL,
  PRIMARY KEY (RELATIONSHIP_ID),
  CONSTRAINT FK_RELATIONSHIP_RELATION_SET FOREIGN KEY (RELATION_SET_ID) REFERENCES RELATION_SET (RELATION_SET_ID)
);

CREATE INDEX FK_RELATIONSHIP_RELATION_SET ON RELATIONSHIP(RELATION_SET_ID);


CREATE TABLE RELATION_SOURCE (
  RELATION_TYPE_ID VARCHAR2(20) NOT NULL,
  SOURCE_OBJ VARCHAR2(20) NOT NULL,
  SOURCE_ID VARCHAR2(20) NOT NULL,
  RELATION_SET_ID VARCHAR2(20) NULL,
  PRIMARY KEY (RELATION_TYPE_ID,SOURCE_OBJ,SOURCE_ID),
  CONSTRAINT FK_RELAT_SOURCE_RELATION_SET FOREIGN KEY (RELATION_SET_ID) REFERENCES RELATION_SET (RELATION_SET_ID),
  CONSTRAINT FK_RELAT_SOURCE_RELATION_TYPE FOREIGN KEY (RELATION_TYPE_ID) REFERENCES RELATION_TYPE (RELATION_TYPE_ID)
);

CREATE INDEX FK_RELAT_SOURCE_RELATION_SET ON RELATION_SOURCE(RELATION_SET_ID);

CREATE TABLE RELATION_CATEGORY (
  RELATION_SET_ID VARCHAR2(20) NOT NULL,
  CATEGORY_ID VARCHAR2(20) NOT NULL,
  PRIMARY KEY (RELATION_SET_ID,CATEGORY_ID),
  CONSTRAINT REL_CAT_REL_SET_FK FOREIGN KEY (RELATION_SET_ID) REFERENCES RELATION_SET (RELATION_SET_ID),
  CONSTRAINT FK_RELATION_CATEGORY_CATEGORY FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY (CATEGORY_ID)
);

CREATE INDEX FK_RELATION_CATEGORY_CATEGORY ON RELATION_CATEGORY(CATEGORY_ID);


CREATE TABLE RESOURCE_POLICY (
  RESOURCE_POLICY_ID VARCHAR2(32) NOT NULL,
  RESOURCE_ID VARCHAR2(32) NULL,
  POLICY_START DATE NULL,
  POLICY_END DATE NULL,
  APPLY_TO_CHILDREN NUMBER(4) NULL,
  ROLE_ID VARCHAR2(32) NOT NULL,
  PRIMARY KEY (RESOURCE_POLICY_ID),
  CONSTRAINT FK_RESOURCE_POLICY_ROLE FOREIGN KEY (ROLE_ID) REFERENCES ROLE (ROLE_ID),
  CONSTRAINT RS_PL_RS_RSID FOREIGN KEY (RESOURCE_ID) REFERENCES RES (RESOURCE_ID)
);

CREATE INDEX RS_PL_RS_RSID ON RESOURCE_POLICY(RESOURCE_ID);
CREATE INDEX FK_RESOURCE_POLICY_ROLE ON RESOURCE_POLICY(ROLE_ID);

CREATE TABLE SEQUENCE_GEN (
  ATTRIBUTE VARCHAR2(32) NOT NULL,
  NEXT_ID NUMBER(4) NULL,
  PRIMARY KEY (ATTRIBUTE)
);

CREATE TABLE SERVICE (
  SERVICE_ID VARCHAR2(20) NOT NULL,
  SERVICE_NAME VARCHAR2(40) NULL,
  STATUS VARCHAR2(20) NULL,
  LOCATION_IP_ADDRESS VARCHAR2(80) NULL,
  COMPANY_OWNER_ID VARCHAR2(20) NULL,
  START_DATE DATE NULL,
  END_DATE DATE NULL,
  LICENSE_KEY VARCHAR2(255) NULL,
  SERVICE_TYPE VARCHAR2(20) NULL,
  PARENT_SERVICE_ID VARCHAR2(20) NULL,
  ROOT_RESOURCE_ID VARCHAR2(20) NULL,
  ACCESS_CONTROL_MODEL VARCHAR2(20) NULL,
  PARAM1 VARCHAR2(20) NULL,
  PARAM2 VARCHAR2(20) NULL,
  PARAM3 VARCHAR2(20) NULL,
  PARAM4 VARCHAR2(20) NULL,
  PARAM5 VARCHAR2(20) NULL,
  PRIMARY KEY (SERVICE_ID)
);

CREATE TABLE SERVICE_CONFIG (
  SERVICE_CONFIG_ID VARCHAR2(20) NOT NULL,
  SERVICE_ID VARCHAR2(20) NULL,
  NAME VARCHAR2(40) NULL,
  VALUE VARCHAR2(40) NULL,
  PRIMARY KEY (SERVICE_CONFIG_ID),
  CONSTRAINT FK_SRV_SRV_CONF FOREIGN KEY (SERVICE_ID) REFERENCES SERVICE (SERVICE_ID)
);

CREATE INDEX FK_SRV_SRV_CONF ON SERVICE_CONFIG(SERVICE_ID);


CREATE TABLE STATUS (
  STATUS_CD VARCHAR2(40) NOT NULL,
  STATUS_TYPE VARCHAR2(20) NULL,
  DESCRIPTION VARCHAR2(80) NULL,
  CODE_GROUP VARCHAR2(40) NOT NULL,
  LANGUAGE_CD VARCHAR2(2) NOT NULL,
  COMPANY_OWNER_ID VARCHAR2(32) NOT NULL,
  SERVICE_ID VARCHAR2(20) NOT NULL,
  WEIGHT NUMBER(4) NULL,
  PRIMARY KEY (CODE_GROUP,STATUS_CD,LANGUAGE_CD)
);

CREATE TRIGGER role_role_mem_insert 
BEFORE 
INSERT ON role_to_role_membership 
	FOR EACH ROW
	BEGIN
		:NEW.CREATE_DATE := SYSDATE;
		:NEW.UPDATE_DATE := SYSDATE;
	END;
/

CREATE TRIGGER ON_USER_INSERT 
BEFORE 
INSERT ON USERS 
	FOR EACH ROW
	BEGIN
		:NEW.CREATE_DATE := SYSDATE;
		:NEW.LAST_UPDATE := SYSDATE;
	END;
/
	
CREATE TRIGGER ON_USER_UPDATE
BEFORE 
UPDATE ON USERS 
	FOR EACH ROW
	BEGIN
		:NEW.LAST_UPDATE := SYSDATE;
	END;
/	

CREATE TRIGGER ON_COMPANY_XREF_INSERT
BEFORE
INSERT ON COMPANY_TO_COMPANY_MEMBERSHIP
	FOR EACH ROW
	BEGIN
		:NEW.CREATE_DATE := SYSDATE;
		:NEW.UPDATE_DATE := SYSDATE;
	END;
/	

CREATE TRIGGER ON_LOGIN_INSERT 
BEFORE 
INSERT ON LOGIN 
	FOR EACH ROW
	BEGIN
		:NEW.CREATE_DATE := SYSDATE;
		:NEW.LAST_UPDATE := SYSDATE;
	END;
/
	
CREATE TRIGGER ON_LOGIN_UPDATE
BEFORE 
UPDATE ON LOGIN 
	FOR EACH ROW
	BEGIN
		:NEW.LAST_UPDATE := SYSDATE;
	END;
/
	
CREATE TRIGGER ON_EMAIL_INSERT 
BEFORE 
INSERT ON EMAIL_ADDRESS 
	FOR EACH ROW
	BEGIN
		:NEW.CREATE_DATE := SYSDATE;
		:NEW.LAST_UPDATE := SYSDATE;
	END;
/
	
CREATE TRIGGER ON_EMAIL_UPDATE
BEFORE 
UPDATE ON EMAIL_ADDRESS 
	FOR EACH ROW
	BEGIN
		:NEW.LAST_UPDATE := SYSDATE;
	END;
/ 
  
CREATE TRIGGER ON_PHONE_INSERT 
BEFORE 
INSERT ON PHONE 
	FOR EACH ROW
	BEGIN
		:NEW.CREATE_DATE := SYSDATE;
		:NEW.LAST_UPDATE := SYSDATE;
	END;
/
	
CREATE TRIGGER ON_PHONE_UPDATE
BEFORE 
UPDATE ON PHONE 
	FOR EACH ROW
	BEGIN
		:NEW.LAST_UPDATE := SYSDATE;
	END;
/
	
CREATE TRIGGER ON_ADDRESS_INSERT 
BEFORE 
INSERT ON ADDRESS 
	FOR EACH ROW
	BEGIN
		:NEW.CREATE_DATE := SYSDATE;
		:NEW.LAST_UPDATE := SYSDATE;
	END;
/
	
CREATE TRIGGER ON_ADDRESS_UPDATE
BEFORE 
UPDATE ON ADDRESS 
	FOR EACH ROW
	BEGIN
		:NEW.LAST_UPDATE := SYSDATE;
	END;
/
	
CREATE TRIGGER res_res_mem_insert
BEFORE
INSERT ON res_to_res_membership
	FOR EACH ROW
	BEGIN
		:NEW.CREATE_DATE := SYSDATE;
		:NEW.UPDATE_DATE := SYSDATE;
	END;
/	

CREATE TRIGGER grp_grp_mem_insert 
BEFORE 
INSERT ON grp_to_grp_membership 
	FOR EACH ROW
	BEGIN
		:NEW.CREATE_DATE := SYSDATE;
		:NEW.UPDATE_DATE := SYSDATE;
	END;
	
/