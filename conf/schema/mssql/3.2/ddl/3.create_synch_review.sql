use openiam;

IF OBJECT_ID('SYNCH_REVIEW_RECORD_VALUE', 'U') IS NOT NULL
	DROP TABLE SYNCH_REVIEW_RECORD_VALUE;
	
IF OBJECT_ID('SYNCH_REVIEW_RECORD', 'U') IS NOT NULL
	DROP TABLE SYNCH_REVIEW_RECORD;
	
IF OBJECT_ID('SYNCH_REVIEW', 'U') IS NOT NULL
	DROP TABLE SYNCH_REVIEW;
	

CREATE TABLE SYNCH_REVIEW (
	SYNCH_REVIEW_ID NVARCHAR(32) NOT NULL,
	SYNCH_CONFIG_ID NVARCHAR(32) NOT NULL,
	SRC_REJECTED NVARCHAR(1) NOT NULL DEFAULT 'N',
	SKIP_SRC_VALID NVARCHAR(1) NOT NULL DEFAULT 'N',
	SKIP_REC_VALID NVARCHAR(1) NOT NULL DEFAULT 'N',
	CREATE_TIME DATETIME NOT NULL,
	MODIFY_TIME DATETIME NULL,
	EXEC_TIME DATETIME NULL,
	PRIMARY KEY (SYNCH_REVIEW_ID),
	CONSTRAINT SYNCH_CONFIG_FK FOREIGN KEY (SYNCH_CONFIG_ID) REFERENCES SYNCH_CONFIG(SYNCH_CONFIG_ID) ON DELETE CASCADE);

CREATE TABLE SYNCH_REVIEW_RECORD (
	SYNCH_REVIEW_RECORD_ID NVARCHAR(32) NOT NULL,
	SYNCH_REVIEW_ID NVARCHAR(32) NOT NULL,
	HEADER NVARCHAR(1) NOT NULL DEFAULT 'N',
	PRIMARY KEY (SYNCH_REVIEW_RECORD_ID),
	CONSTRAINT SYNCH_REVIEW_FK FOREIGN KEY (SYNCH_REVIEW_ID) REFERENCES SYNCH_REVIEW(SYNCH_REVIEW_ID) ON DELETE CASCADE);

CREATE TABLE SYNCH_REVIEW_RECORD_VALUE (
	SYNCH_REVIEW_RECORD_VALUE_ID NVARCHAR(32) NOT NULL,
	SYNCH_REVIEW_RECORD_ID NVARCHAR(32) NOT NULL,
	VALUE NVARCHAR(MAX) NULL,
	PRIMARY KEY (SYNCH_REVIEW_RECORD_VALUE_ID),
	CONSTRAINT SYNCH_REVIEW_RECORD_FK FOREIGN KEY (SYNCH_REVIEW_RECORD_ID) REFERENCES SYNCH_REVIEW_RECORD(SYNCH_REVIEW_RECORD_ID) ON DELETE CASCADE);

CREATE INDEX SYNCH_CONFIG_IDX ON SYNCH_REVIEW(SYNCH_CONFIG_ID);
CREATE INDEX SYNCH_REVIEW_IDX ON SYNCH_REVIEW_RECORD(SYNCH_REVIEW_ID);
CREATE INDEX SYNCH_REVIEW_RECORD_IDX ON SYNCH_REVIEW_RECORD_VALUE(SYNCH_REVIEW_RECORD_ID);
