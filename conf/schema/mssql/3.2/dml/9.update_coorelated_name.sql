use openiam;


IF OBJECT_ID ( 'MIGRATE_COORELATED_NAME', 'P' ) IS NOT NULL 
    DROP PROCEDURE MIGRATE_COORELATED_NAME;
GO
CREATE PROCEDURE MIGRATE_COORELATED_NAME
AS
		DECLARE @theId NVARCHAR(32);
		DECLARE @theName NVARCHAR(250);
		DECLARE cur1 CURSOR FOR (SELECT RESOURCE_ID, NAME FROM AUTH_PROVIDER WHERE RESOURCE_ID IS NOT NULL);
		OPEN cur1;
		
		FETCH NEXT FROM cur1 INTO @theId, @theName;
		WHILE @@FETCH_STATUS = 0
		BEGIN
			IF (@theId IS NOT NULL AND @theName IS NOT NULL) 
			BEGIN
				UPDATE RES SET COORELATED_NAME=@theName WHERE RESOURCE_ID=@theId;
			END;
		END; 
		CLOSE cur1;
GO

EXECUTE  MIGRATE_COORELATED_NAME;




IF OBJECT_ID ( 'MIGRATE_COORELATED_NAME', 'P' ) IS NOT NULL 
    DROP PROCEDURE MIGRATE_COORELATED_NAME;
GO
CREATE PROCEDURE MIGRATE_COORELATED_NAME
AS
		DECLARE @theId NVARCHAR(32);
		DECLARE @theName NVARCHAR(250);
		DECLARE cur2 CURSOR FOR (SELECT ADMIN_RESOURCE_ID, COMPANY_NAME FROM COMPANY WHERE ADMIN_RESOURCE_ID IS NOT NULL);
		OPEN cur2;
		
		FETCH NEXT FROM cur2 INTO @theId, @theName;
		WHILE @@FETCH_STATUS = 0
		BEGIN
			IF (@theId IS NOT NULL AND @theName IS NOT NULL) 
			BEGIN
				UPDATE RES SET COORELATED_NAME=@theName WHERE RESOURCE_ID=@theId;
			END;
		END; 
		CLOSE cur2;
GO

EXECUTE  MIGRATE_COORELATED_NAME;


IF OBJECT_ID ( 'MIGRATE_COORELATED_NAME', 'P' ) IS NOT NULL 
    DROP PROCEDURE MIGRATE_COORELATED_NAME;
GO
CREATE PROCEDURE MIGRATE_COORELATED_NAME
AS
		DECLARE @theId NVARCHAR(32);
		DECLARE @theName NVARCHAR(250);
		DECLARE cur3 CURSOR FOR (SELECT RESOURCE_ID, CONTENT_PROVIDER_NAME FROM CONTENT_PROVIDER WHERE RESOURCE_ID IS NOT NULL);
		OPEN cur3;
		
		FETCH NEXT FROM cur3 INTO @theId, @theName;
		WHILE @@FETCH_STATUS = 0
		BEGIN
			IF (@theId IS NOT NULL AND @theName IS NOT NULL) 
			BEGIN
				UPDATE RES SET COORELATED_NAME=@theName WHERE RESOURCE_ID=@theId;
			END;
		END; 
		CLOSE cur3;
GO

EXECUTE  MIGRATE_COORELATED_NAME;


IF OBJECT_ID ( 'MIGRATE_COORELATED_NAME', 'P' ) IS NOT NULL 
    DROP PROCEDURE MIGRATE_COORELATED_NAME;
GO
CREATE PROCEDURE MIGRATE_COORELATED_NAME
AS
		DECLARE @theId NVARCHAR(32);
		DECLARE @theName NVARCHAR(250);
		DECLARE cur4 CURSOR FOR (SELECT ADMIN_RESOURCE_ID, GRP_NAME FROM GRP WHERE ADMIN_RESOURCE_ID IS NOT NULL);
		OPEN cur4;
		
		FETCH NEXT FROM cur4 INTO @theId, @theName;
		WHILE @@FETCH_STATUS = 0
		BEGIN
			IF (@theId IS NOT NULL AND @theName IS NOT NULL) 
			BEGIN
				UPDATE RES SET COORELATED_NAME=@theName WHERE RESOURCE_ID=@theId;
			END;
		END; 
		CLOSE cur4;
GO

EXECUTE  MIGRATE_COORELATED_NAME;

IF OBJECT_ID ( 'MIGRATE_COORELATED_NAME', 'P' ) IS NOT NULL 
    DROP PROCEDURE MIGRATE_COORELATED_NAME;
GO
CREATE PROCEDURE MIGRATE_COORELATED_NAME
AS
		DECLARE @theId NVARCHAR(32);
		DECLARE @theName NVARCHAR(250);
		DECLARE cur5 CURSOR FOR (SELECT RESOURCE_ID, ATTRIBUTE_NAME FROM METADATA_ELEMENT WHERE RESOURCE_ID IS NOT NULL);
		OPEN cur5;
		
		FETCH NEXT FROM cur5 INTO @theId, @theName;
		WHILE @@FETCH_STATUS = 0
		BEGIN
			IF (@theId IS NOT NULL AND @theName IS NOT NULL) 
			BEGIN
				UPDATE RES SET COORELATED_NAME=@theName WHERE RESOURCE_ID=@theId;
			END;
		END; 
		CLOSE cur5;
GO

EXECUTE  MIGRATE_COORELATED_NAME;

IF OBJECT_ID ( 'MIGRATE_COORELATED_NAME', 'P' ) IS NOT NULL 
    DROP PROCEDURE MIGRATE_COORELATED_NAME;
GO
CREATE PROCEDURE MIGRATE_COORELATED_NAME
AS
		DECLARE @theId NVARCHAR(32);
		DECLARE @theName NVARCHAR(250);
		DECLARE cur6 CURSOR FOR (SELECT RESOURCE_ID, NAME FROM METADATA_ELEMENT_PAGE_TEMPLATE WHERE RESOURCE_ID IS NOT NULL);
		OPEN cur6;
		
		FETCH NEXT FROM cur6 INTO @theId, @theName;
		WHILE @@FETCH_STATUS = 0
		BEGIN
			IF (@theId IS NOT NULL AND @theName IS NOT NULL) 
			BEGIN
				UPDATE RES SET COORELATED_NAME=@theName WHERE RESOURCE_ID=@theId;
			END;
		END; 
		CLOSE cur6;
GO

EXECUTE  MIGRATE_COORELATED_NAME;

IF OBJECT_ID ( 'MIGRATE_COORELATED_NAME', 'P' ) IS NOT NULL 
    DROP PROCEDURE MIGRATE_COORELATED_NAME;
GO
CREATE PROCEDURE MIGRATE_COORELATED_NAME
AS
		DECLARE @theId NVARCHAR(32);
		DECLARE @theName NVARCHAR(250);
		DECLARE cur7 CURSOR FOR (SELECT ADMIN_RESOURCE_ID, ROLE_NAME FROM ROLE WHERE ADMIN_RESOURCE_ID IS NOT NULL);
		OPEN cur7;
		
		FETCH NEXT FROM cur7 INTO @theId, @theName;
		WHILE @@FETCH_STATUS = 0
		BEGIN
			IF (@theId IS NOT NULL AND @theName IS NOT NULL) 
			BEGIN
				UPDATE RES SET COORELATED_NAME=@theName WHERE RESOURCE_ID=@theId;
			END;
		END; 
		CLOSE cur7;
GO

EXECUTE  MIGRATE_COORELATED_NAME;



IF OBJECT_ID ( 'MIGRATE_COORELATED_NAME', 'P' ) IS NOT NULL 
    DROP PROCEDURE MIGRATE_COORELATED_NAME;
GO
CREATE PROCEDURE MIGRATE_COORELATED_NAME
AS
		DECLARE @theId NVARCHAR(32);
		DECLARE @theName NVARCHAR(250);
		DECLARE cur8 CURSOR FOR (SELECT RESOURCE_ID, PATTERN FROM URI_PATTERN WHERE RESOURCE_ID IS NOT NULL);
		OPEN cur8;
		
		FETCH NEXT FROM cur8 INTO @theId, @theName;
		WHILE @@FETCH_STATUS = 0
		BEGIN
			IF (@theId IS NOT NULL AND @theName IS NOT NULL) 
			BEGIN
				UPDATE RES SET COORELATED_NAME=@theName WHERE RESOURCE_ID=@theId;
			END;
		END; 
		CLOSE cur8;
GO

EXECUTE  MIGRATE_COORELATED_NAME;

IF OBJECT_ID ( 'MIGRATE_COORELATED_NAME', 'P' ) IS NOT NULL 
    DROP PROCEDURE MIGRATE_COORELATED_NAME;
GO