use openiam;


DELETE FROM METADATA_TYPE WHERE TYPE_ID LIKE '%_REFDATA%';
DELETE FROM METADATA_TYPE WHERE TYPE_ID IN(SELECT STATUS_CD FROM STATUS WHERE STATUS_CD NOT IN('CONTRACTOR'));
DELETE FROM METADATA_TYPE WHERE TYPE_ID IN('CONTRACTOR TYPE');
UPDATE USERS SET EMPLOYEE_TYPE='CONTRACTOR TYPE' WHERE EMPLOYEE_TYPE='CONTRACTOR';


DECLARE @_id NVARCHAR(32);
DECLARE @_name NVARCHAR(40);
DECLARE @_group NVARCHAR(32);
DECLARE @_idx INT;
SET @_idx = 1;
DECLARE cur1 CURSOR FOR SELECT STATUS_CD, CODE_GROUP, DESCRIPTION FROM STATUS;
BEGIN
	OPEN cur1;
	FETCH NEXT FROM cur1 INTO @_id, @_group, @_name;
	WHILE @@FETCH_STATUS = 0
	BEGIN
		IF (@_id IS NOT NULL) 
		BEGIN
			IF (@_group IS NOT NULL) 
			BEGIN
				IF (@_name IS NOT NULL) 
				BEGIN
					IF ((SELECT count(*) FROM METADATA_TYPE WHERE GROUPING=@_group AND DESCRIPTION=@_name)= 0) 
					BEGIN
						IF (@_id = 'CONTRACTOR') 
						BEGIN
							INSERT INTO METADATA_TYPE(TYPE_ID, DESCRIPTION, ACTIVE, SYNC_MANAGED_SYS, GROUPING, IS_BINARY) VALUES('CONTRACTOR TYPE', @_name, 'Y', 'Y', @_group, 'N');
						END;
						ELSE
						BEGIN
							INSERT INTO METADATA_TYPE(TYPE_ID, DESCRIPTION, ACTIVE, SYNC_MANAGED_SYS, GROUPING, IS_BINARY) VALUES(@_id, @_name, 'Y', 'Y', @_group, 'N');
						END;
						SET @_idx = @_idx + 1;
					END;
				END;
			END;
		END;
		FETCH NEXT FROM cur1 INTO @_id, @_group, @_name;
	END;
	CLOSE cur1;
END;

DELETE FROM LANGUAGE_MAPPING WHERE REFERENCE_TYPE='MetadataTypeEntity';


DECLARE @_name1 NVARCHAR(40);
DECLARE @_id1 NVARCHAR(32);
DECLARE @_idx1 INT;
SET @_idx1 = 1;
DECLARE cur2 CURSOR FOR SELECT TYPE_ID, DESCRIPTION FROM METADATA_TYPE;
BEGIN
	OPEN cur2;
	FETCH NEXT FROM cur2 INTO @_id1, @_name1;	
	WHILE @@FETCH_STATUS = 0
	BEGIN
		IF (@_id1 IS NOT NULL) 
		BEGIN
			IF (@_name1 IS NOT NULL) 
			BEGIN
				IF ((SELECT count(*) FROM LANGUAGE_MAPPING WHERE REFERENCE_TYPE='MetadataTypeEntity' AND REFERENCE_ID=@_id1)= 0) 
				BEGIN
					INSERT INTO LANGUAGE_MAPPING(ID, LANGUAGE_ID, REFERENCE_TYPE, REFERENCE_ID, TEXT_VALUE) VALUES({fn CONCAT('MetadataTypeEntity', CAST(@_idx1 AS VARCHAR(10)))}, '1', 'MetadataTypeEntity', @_id1, @_name1);
					SET @_idx1 = @_idx1 + 1;
				END;
			END;
		END;
		FETCH NEXT FROM cur2 INTO @_id1, @_name1;
	END;
	CLOSE cur2;
END;