USE openiam;
/* 1 */
ALTER TABLE USER_ROLE DROP COLUMN CREATED_BY;
ALTER TABLE USER_ROLE DROP COLUMN END_DATE;
ALTER TABLE USER_ROLE DROP COLUMN START_DATE;
ALTER TABLE USER_ROLE DROP COLUMN CREATE_DATE;
ALTER TABLE USER_ROLE DROP COLUMN STATUS;
ALTER TABLE USER_ROLE DROP COLUMN USER_ROLE_ID;
ALTER TABLE USER_GRP DROP COLUMN CREATED_BY;
ALTER TABLE USER_GRP DROP COLUMN END_DATE;
ALTER TABLE USER_GRP DROP COLUMN START_DATE;
ALTER TABLE USER_GRP DROP COLUMN CREATE_DATE;

Declare @v_constraintname NVARCHAR(max)

set @v_constraintname ='ALTER TABLE USER_GRP DROP CONSTRAINT '

set @v_constraintname = @v_constraintname + (select c_obj.name as CONSTRAINT_NAME
from sysobjects c_obj
join syscomments com on c_obj.id = com.id
join sysobjects t_obj on c_obj.parent_obj = t_obj.id 
join sysconstraints con on c_obj.id = con.constid
join syscolumns col on t_obj.id = col.id
and con.colid = col.colid
where
c_obj.uid = user_id()
and c_obj.xtype = 'D'
and t_obj.name='USER_GRP' and col.name='STATUS')

exec(@v_constraintname)

GO

ALTER TABLE USER_GRP DROP COLUMN STATUS;


DECLARE @table NVARCHAR(512), @sql NVARCHAR(MAX);

SELECT @table = N'USER_GRP';

SELECT @sql = 'ALTER TABLE ' + @table 
    + ' DROP CONSTRAINT ' + name + ';'
    FROM sys.key_constraints
    WHERE [type] = 'PK'
    AND [parent_object_id] = OBJECT_ID(@table);

EXEC sp_executeSQL @sql;

ALTER TABLE USER_GRP DROP COLUMN USER_GRP_ID;

ALTER TABLE RESOURCE_USER DROP COLUMN END_DATE;
ALTER TABLE RESOURCE_USER DROP COLUMN STATUS;
ALTER TABLE RESOURCE_USER DROP COLUMN OP_AGAINST_ROLE;
ALTER TABLE RESOURCE_USER DROP COLUMN PRIVILEGE_LIST;


SELECT @table = N'RESOURCE_USER';

SELECT @sql = 'ALTER TABLE ' + @table 
    + ' DROP CONSTRAINT ' + name + ';'
    FROM sys.key_constraints
    WHERE [type] = 'PK'
    AND [parent_object_id] = OBJECT_ID(@table);

EXEC sp_executeSQL @sql;

ALTER TABLE RESOURCE_USER DROP COLUMN RESOURCE_USER_ID;

ALTER TABLE RESOURCE_USER ALTER COLUMN START_DATE DATETIME;
ALTER TABLE RESOURCE_USER ADD DEFAULT GETDATE() FOR START_DATE;
ALTER TABLE RESOURCE_USER ADD CONSTRAINT RESOURCE_USER_PK PRIMARY KEY (RESOURCE_ID, USER_ID);

ALTER TABLE USER_AFFILIATION DROP COLUMN CREATED_BY;
ALTER TABLE USER_AFFILIATION DROP COLUMN END_DATE;
ALTER TABLE USER_AFFILIATION DROP COLUMN START_DATE;
ALTER TABLE USER_AFFILIATION DROP COLUMN STATUS;

SELECT @table = N'USER_AFFILIATION';

SELECT @sql = 'ALTER TABLE ' + @table 
    + ' DROP CONSTRAINT ' + name + ';'
    FROM sys.key_constraints
    WHERE [type] = 'PK'
    AND [parent_object_id] = OBJECT_ID(@table);

EXEC sp_executeSQL @sql;

ALTER TABLE USER_AFFILIATION DROP COLUMN USER_AFFILIATION_ID;
ALTER TABLE USER_AFFILIATION ALTER COLUMN CREATE_DATE DATETIME;
ALTER TABLE USER_AFFILIATION ADD DEFAULT GETDATE() FOR CREATE_DATE;
ALTER TABLE USER_AFFILIATION ADD CONSTRAINT USER_AFFILIATION_PK PRIMARY KEY (COMPANY_ID, USER_ID);

ALTER TABLE RESOURCE_GROUP DROP COLUMN END_DATE;

SELECT @table = N'RESOURCE_GROUP';

SELECT @sql = 'ALTER TABLE ' + @table 
    + ' DROP CONSTRAINT ' + name + ';'
    FROM sys.key_constraints
    WHERE [type] = 'PK'
    AND [parent_object_id] = OBJECT_ID(@table);

EXEC sp_executeSQL @sql;

ALTER TABLE RESOURCE_GROUP DROP COLUMN RES_GROUP_ID;
ALTER TABLE RESOURCE_GROUP ADD CONSTRAINT RESOURCE_GROUP_PK PRIMARY KEY (RESOURCE_ID, GRP_ID);

ALTER TABLE RESOURCE_ROLE DROP COLUMN END_DATE;


/* 2 */

ALTER TABLE MANAGED_SYS DROP CONSTRAINT FK_MNG_SYS_PROV_CON;
ALTER TABLE MANAGED_SYS ADD CONSTRAINT FK_MNG_SYS_PROV_CON FOREIGN KEY (CONNECTOR_ID ) REFERENCES PROVISION_CONNECTOR (CONNECTOR_ID );

ALTER TABLE AUTH_PROVIDER DROP CONSTRAINT FK_MNG_AUTH_PROVIDER ;
ALTER TABLE AUTH_PROVIDER ADD CONSTRAINT FK_MNG_AUTH_PROVIDER FOREIGN KEY (MANAGED_SYS_ID ) REFERENCES MANAGED_SYS (MANAGED_SYS_ID );

ALTER TABLE MNG_SYS_OBJECT_MATCH DROP CONSTRAINT FK_MNG_SYS_OBJ_MATC ;
ALTER TABLE MNG_SYS_OBJECT_MATCH ADD CONSTRAINT FK_MNG_SYS_OBJ_MATC FOREIGN KEY (MANAGED_SYS_ID ) REFERENCES MANAGED_SYS (MANAGED_SYS_ID );

ALTER TABLE AUTH_PROVIDER_ATTRIBUTE DROP CONSTRAINT FK_PROVIDER_PROVIDER_ATTRIBUTE;
ALTER TABLE AUTH_PROVIDER_ATTRIBUTE ADD CONSTRAINT FK_PROVIDER_PROVIDER_ATTRIBUTE FOREIGN KEY (PROVIDER_ID ) REFERENCES AUTH_PROVIDER (PROVIDER_ID );


/* 3 */
ALTER TABLE GRP DROP COLUMN OWNER_ID;
ALTER TABLE GRP DROP COLUMN PROVISION_METHOD;
ALTER TABLE GRP DROP COLUMN PROVISION_OBJ_NAME;
ALTER TABLE GRP DROP CONSTRAINT FK_GRP_METADATA_TYPE;

DROP INDEX FK_GRP_METADATA_TYPE ON GRP;

ALTER TABLE GRP DROP COLUMN TYPE_ID;
ALTER TABLE GRP DROP COLUMN INTERNAL_GROUP_ID;
ALTER TABLE GRP DROP COLUMN EXTERNAL_GRP_NAME;
ALTER TABLE GRP ADD MANAGED_SYS_ID NVARCHAR(32) NULL;
ALTER TABLE GRP ADD CONSTRAINT GRP_MNG_SYS_FK FOREIGN KEY (MANAGED_SYS_ID ) REFERENCES MANAGED_SYS (MANAGED_SYS_ID );

/* 4 */


DROP TABLE IDM_AUDIT_LOG_CUSTOM;
DROP TABLE IDM_AUDIT_LOG;

CREATE TABLE OPENIAM_LOG (
	OPENIAM_LOG_ID NVARCHAR(32) NOT NULL,
	USER_ID NVARCHAR(32) NULL,
	PRINCIPAL NVARCHAR(320) NULL,
	MANAGED_SYS_ID NVARCHAR(32) NULL,
	CREATED_DATETIME DATETIME DEFAULT GETDATE() NULL,
	SOURCE NVARCHAR(50) NULL,
	CLIENT_IP NVARCHAR(50) NULL,
	NODE_ID NVARCHAR(50) NULL,
	LOG_ACTION NVARCHAR(50) NULL,
	RESULT NVARCHAR(50) NULL,
	SESSION_ID NVARCHAR(100) NULL,
	HASH NVARCHAR(100) NOT NULL,
	CORRELATION_ID NVARCHAR(32) NULL,
	CONSTRAINT OPENIAM_LOG_PK PRIMARY KEY(OPENIAM_LOG_ID)
);

CREATE TABLE OPENIAM_LOG_TARGET (
	OPENIAM_LOG_TARGET_ID NVARCHAR(32) NOT NULL,
	OPENIAM_LOG_ID NVARCHAR(32) NOT NULL,
	TARGET_ID NVARCHAR(32) NULL,
	TARGET_TYPE NVARCHAR(70) NULL,
	CONSTRAINT OPENIAM_LOG_TARGET_PK PRIMARY KEY(OPENIAM_LOG_TARGET_ID)
);

CREATE TABLE OPENIAM_LOG_ATTRIBUTE (
	OPENIAM_LOG_ATTRIBUTE_ID NVARCHAR(32) NOT NULL,
	OPENIAM_LOG_ID NVARCHAR(32) NOT NULL,
	NAME NVARCHAR(100) NULL,
	VALUE NVARCHAR(MAX) NULL,
	CONSTRAINT OPENIAM_LOG_ATTRIBUTE_PK PRIMARY KEY(OPENIAM_LOG_ATTRIBUTE_ID)
);

CREATE TABLE OPENIAM_LOG_LOG_MEMBERSHIP (
	OPENIAM_LOG_ID NVARCHAR(32) NOT NULL,
	OPENIAM_MEMBER_LOG_ID NVARCHAR(32) NOT NULL
);


/* 5 */

ALTER TABLE ROLE DROP COLUMN INTERNAL_ROLE_ID;
ALTER TABLE ROLE DROP COLUMN TYPE_ID;
ALTER TABLE ROLE DROP COLUMN OWNER_ID;
ALTER TABLE ROLE ADD MANAGED_SYS_ID NVARCHAR(32) NULL;
ALTER TABLE ROLE ADD CONSTRAINT ROLE_MNG_SYS_FK FOREIGN KEY (MANAGED_SYS_ID ) REFERENCES MANAGED_SYS (MANAGED_SYS_ID );


