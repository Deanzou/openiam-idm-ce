DROP DATABASE IF EXISTS openiam;

/* Creates the DB and initial user account and privleges */

CREATE database openiam DEFAULT CHARACTER SET utf8
CHARACTER SET = utf8;
USE openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS dropIdmUser$$

CREATE PROCEDURE dropIdmUser()
	BEGIN
		
		IF ((SELECT count(*) FROM mysql.user WHERE USER='idmuser') > 1) THEN
			DROP USER 'idmuser'@'localhost';
		END IF;
		
	END$$
DELIMITER ;

call dropIdmUser();

DROP PROCEDURE dropIdmUser;

CREATE USER 'idmuser'@'localhost' IDENTIFIED BY 'idmuser';
GRANT ALL ON *.* TO 'idmuser'@'localhost'; 

/* enable remote access to the database */
GRANT ALL ON openiam.* TO idmuser@'*' IDENTIFIED BY 'idmuser';

commit;
USE openiam;

CREATE TABLE SECURITY_DOMAIN (
       DOMAIN_ID            varchar(20) NOT NULL,
       NAME         		varchar(40) NULL,
       STATUS				VARCHAR(20) NULL,
       /* Refers to which managed system to use for authentication */
	   AUTH_SYS_ID			VARCHAR(32) NULL,
	   LOGIN_MODULE			VARCHAR(100) NULL,
       /* Default policies for the domain */
       PASSWORD_POLICY	    	VARCHAR(32) NULL,
       AUTHENTICATION_POLICY	VARCHAR(32) NULL,
       AUDIT_POLICY	    		VARCHAR(32) NULL,
	PRIMARY KEY (DOMAIN_ID)
) ENGINE=InnoDB;

CREATE TABLE LANGUAGE (
       LANGUAGE_CD          varchar(5) NOT NULL,
       LANGUAGE             varchar(20) NULL,
	   LOCALE				INT NULL DEFAULT 0,
       PRIMARY KEY (LANGUAGE_CD)
)ENGINE=InnoDB;

CREATE TABLE BATCH_CONFIG (
	   TASK_ID 						VARCHAR(32) NOT NULL,
	   TASK_NAME 					VARCHAR(50) NULL,
       FREQUENCY					INT NULL,
	   FREQUENCY_UNIT_OF_MEASURE	VARCHAR(10) NULL,
	   LAST_EXEC_TIME				DATETIME NULL,
	   ENABLED					    INT NULL DEFAULT 1,
	   TASK_URL            			VARCHAR(255) NULL,
	   EXECUTION_ORDER				INT DEFAULT 1 NULL,
	   STATUS 						VARCHAR(20) NULL,
	   PARAM1 						VARCHAR(255) NULL,
 	   PARAM2 						VARCHAR(255) NULL,
 	   PARAM3 						VARCHAR(255) NULL,
	   PARAM4 						VARCHAR(255) NULL, 
	   RULE_TYPE					VARCHAR(20) NULL,
       PRIMARY KEY (TASK_ID)
) ENGINE=InnoDB;



CREATE TABLE EXCLUDE_WORD_LIST (
       WORD                 varchar(30) NOT NULL,
       LANGUAGE_CD          varchar(5) NOT NULL,
       PRIMARY KEY (WORD, LANGUAGE_CD), 
	CONSTRAINT FK_EXCLUDE_WORD_LIST_LANGUAGE
       FOREIGN KEY (LANGUAGE_CD)
                             REFERENCES LANGUAGE(LANGUAGE_CD)
) ENGINE=InnoDB;

CREATE TABLE CATEGORY(
       CATEGORY_ID          varchar(20) NOT NULL,
       PARENT_ID            varchar(20) NULL,
       CATEGORY_NAME        varchar(40) NULL,
	   	 CATEGORY_DESC        	varchar(80) NULL,
       CREATE_DATE			DATETIME NULL,
       CREATED_BY			VARCHAR(20) NULL,
       SHOW_LIST            int NULL DEFAULT 0,
       DISPLAY_ORDER        int NULL DEFAULT 0,
       PRIMARY KEY (CATEGORY_ID)
) ENGINE=InnoDB;

CREATE TABLE CATEGORY_LANGUAGE (
       CATEGORY_ID          varchar(20) NOT NULL,
       LANGUAGE_CD          varchar(5) NOT NULL,
       CATEGORY_NAME        varchar(40) NULL,
       PRIMARY KEY (CATEGORY_ID, LANGUAGE_CD), 
	 CONSTRAINT FK_CATEGORY_LANGUAGE_LANGUAGE
       FOREIGN KEY (LANGUAGE_CD)
                             REFERENCES LANGUAGE(LANGUAGE_CD), 
	 CONSTRAINT FK_CATEGORY_LANGUAGE_CATEGORY
       FOREIGN KEY (CATEGORY_ID)
                             REFERENCES CATEGORY(CATEGORY_ID) ON DELETE CASCADE
) ENGINE=InnoDB;



CREATE TABLE METADATA_TYPE (
       TYPE_ID              varchar(20) NOT NULL,
       DESCRIPTION          varchar(40) NULL,
	   ACTIVE				INTEGER NULL DEFAULT 0,
	   SYNC_MANAGED_SYS		INTEGER NULL DEFAULT 0,
       PRIMARY KEY (TYPE_ID)
)  ENGINE=InnoDB;


CREATE TABLE METADATA_ELEMENT (
       METADATA_ID          varchar(20) NOT NULL,
       TYPE_ID              varchar(20) NOT NULL,
       ATTRIBUTE_NAME       varchar(50) NULL,
       DESCRIPTION          varchar(40) NULL,
	   MIN_LEN				INT DEFAULT 0,
	   MAX_LEN				INT NULL,	   
		/* UPPER OR LOWER 		*/
	   TEXT_CASE					VARCHAR(20) NULL,
	   /* STRING, INT, FLOAT 	*/
	   DATA_TYPE			VARCHAR(20) NULL,
	   MIN_VALUE			NUMERIC NULL,
		MAX_VALUE			NUMERIC NULL,
		DEFAULT_VALUE		VARCHAR(100) NULL,
		VALUE_LIST			VARCHAR(1000),
		LABEL				VARCHAR(100),
		MULTI_VALUE			INT NULL,
		AUDITABLE			INT NULL,
		REQUIRED			INT NULL,
		/* DETERMINES IF THE USER WHO OWN A RECORD AND SEE AND EDIT THEIR RECORD */
		SELF_EDITABLE		INT NULL,
		SELF_VIEWABLE		INT NULL,
		/* TEXT, PASSWORD, TEXT_AREA, CHECKBOX, SELECT, LIST */
		UI_TYPE				VARCHAR(20) NULL,
		UI_OBJECT_SIZE		VARCHAR(40) NULL,
		VALUE_SRC			VARCHAR(1000) NULL,
       PRIMARY KEY (METADATA_ID), 
	 CONSTRAINT FK_METADATA_ELEMENT_METADATA_TYPE     
	 FOREIGN KEY (TYPE_ID)
                 REFERENCES METADATA_TYPE(TYPE_ID)
) ENGINE=InnoDB;





CREATE TABLE COMPANY (
       COMPANY_ID           varchar(32) NOT NULL,
       COMPANY_NAME         VARCHAR(200) NULL,
       LST_UPDATE           datetime NULL,
       LST_UPDATED_BY		VARCHAR(40) NULL,
       PARENT_ID            varchar(32) NULL,
       STATUS			    VARCHAR(20) NULL,
       TYPE_ID              varchar(20) NULL,
	   CREATE_DATE			datetime NULL,
	   CREATED_BY			VARCHAR(40) NULL,
	   ALIAS				VARCHAR(200) NULL,
	   DESCRIPTION			VARCHAR(200) NULL,
	   DOMAIN_NAME			VARCHAR(40) NULL,
	   LDAP_STR				VARCHAR(255) NULL,	
	   CLASSIFICATION		VARCHAR(40) NULL,	
	   INTERNAL_COMPANY_ID	VARCHAR(200) NULL,
	   ABBREVIATION 		VARCHAR(20) NULL,
       SYMBOL				VARCHAR(10) NULL,
 	   PRIMARY KEY (COMPANY_ID), 
	CONSTRAINT FK_COMPANY_METADATA_TYPE
       FOREIGN KEY (TYPE_ID)
                             REFERENCES METADATA_TYPE(TYPE_ID)
) ENGINE=InnoDB;



CREATE TABLE COMPANY_ATTRIBUTE (
       COMPANY_ATTR_ID      varchar(32) NOT NULL,
       COMPANY_ID           varchar(32) NULL,
       NAME                 varchar(20) NULL,
       VALUE                varchar(255) NULL,
       METADATA_ID          varchar(20) NULL,
       PRIMARY KEY (COMPANY_ATTR_ID), 
	CONSTRAINT FK_COMPANY_ATTRIBUTE_COMPANY
       FOREIGN KEY (COMPANY_ID)
                             REFERENCES COMPANY(COMPANY_ID),
	CONSTRAINT FK_COMPANY_METADATA_ELEMENT
	 
       FOREIGN KEY (METADATA_ID)
                             REFERENCES METADATA_ELEMENT(METADATA_ID)
)ENGINE=InnoDB;


CREATE TABLE USERS(
       USER_ID              varchar(32) NOT NULL,
       FIRST_NAME           varchar(50) NULL,
       LAST_NAME            varchar(50) NULL,
       MIDDLE_INIT          VARCHAR(50) NULL,
       TYPE_ID              varchar(20) NULL,
	   CLASSIFICATION		VARCHAR(20) NULL,
       TITLE                varchar(100) NULL,
	   DEPT_CD				VARCHAR(50) NULL, /* Dept - can POINT TO AN OU in a directory */
	   DEPT_NAME			VARCHAR(100) NULL,
	   MAIL_CODE			VARCHAR(50) NULL,	   
       DIVISION				VARCHAR(50) NULL,
		COST_CENTER			VARCHAR(20) NULL,
	    STATUS              VARCHAR(40) NULL,
	   SECONDARY_STATUS		VARCHAR(40) NULL,
       BIRTHDATE            datetime NULL,
       SEX                  char(1) NULL,
	   CREATE_DATE			DATEtime NULL,
 	   CREATED_BY			VARCHAR(40) NULL,
	   LAST_UPDATE			DATETIME NULL,
	   LAST_UPDATED_BY		VARCHAR(40) NULL,
       PREFIX               VARCHAR(4) NULL,
       SUFFIX               VARCHAR(20) NULL,
       USER_TYPE_IND		VARCHAR(20) NULL,
       EMPLOYEE_ID			VARCHAR(32) NULL,
       EMPLOYEE_TYPE		VARCHAR(20) NULL,	/* TEMP, FULL-TIME, INTERN, PART-TIME, CONTRACTOR,  */			
       LOCATION_CD			VARCHAR(50) NULL,
	   LOCATION_NAME		VARCHAR(100) NULL,
       COMPANY_ID        	VARCHAR(32) NULL,
       COMPANY_OWNER_ID		VARCHAR(32) NULL,
       JOB_CODE				VARCHAR(50) NULL,
       MANAGER_ID			VARCHAR(32) NULL,
	   ALTERNATE_ID			VARCHAR(32) NULL,  /* ALTERNATE PERSON TO CONTACT WHEN THIS USER IS NOT AVAILABLE. */
	   START_DATE			DATE NULL,
       LAST_DATE			DATE NULL,
 	   MAIDEN_NAME 			VARCHAR(40) NULL,
 	   NICKNAME 			VARCHAR(40) NULL,
	   PASSWORD_THEME		VARCHAR(20) NULL,
	   COUNTRY              varchar(30) NULL,
	   BLDG_NUM				VARCHAR(10) NULL,
	   STREET_DIRECTION		VARCHAR(20) NULL,
	   SUITE				VARCHAR(20) NULL,
       ADDRESS1             varchar(45) NULL,
       ADDRESS2             varchar(45) NULL,
	   ADDRESS3             varchar(45) NULL,
	   ADDRESS4             varchar(45) NULL,
	   ADDRESS5             varchar(45) NULL,
	   ADDRESS6             varchar(45) NULL,
	   ADDRESS7             varchar(45) NULL,
       CITY                 varchar(30) NULL,
       STATE                varchar(15) NULL,
       POSTAL_CD            varchar(10) NULL,
	   EMAIL_ADDRESS        varchar(320) NULL,
	   AREA_CD              varchar(10) NULL,
       COUNTRY_CD           varchar(3) NULL,
       PHONE_NBR            varchar(50) NULL,
       PHONE_EXT			VARCHAR(20) NULL,
	   SHOW_IN_SEARCH		INT NULL,
	   DEL_ADMIN			INT NULL,
	   USER_OWNER_ID				VARCHAR(32) NULL,
	   DATE_PASSWORD_CHANGED		DATETIME NULL,
	   DATE_CHALLENGE_RESP_CHANGED	DATETIME NULL,
       PRIMARY KEY (USER_ID), 
	CONSTRAINT FK_USERS_METADATA_TYPE
         FOREIGN KEY (TYPE_ID)
                             	REFERENCES METADATA_TYPE(TYPE_ID)
) ENGINE=InnoDB;





CREATE TABLE ORG_STRUCTURE (
	ORG_STRUCTURE_ID	VARCHAR(32) NOT NULL,
	SUPERVISOR_ID		VARCHAR(32) NOT NULL,
	STAFF_ID			VARCHAR(32) NOT NULL,
	SUPERVISOR_TYPE		VARCHAR(20) NULL,
    IS_PRIMARY_SUPER	INT NULL DEFAULT 0,
	START_DATE			DATETIME NULL,
	END_DATE			DATETIME NULL,
	STATUS				VARCHAR(20) NULL,
    COMMENTS			VARCHAR(255) NULL,
    PRIMARY KEY (ORG_STRUCTURE_ID),
	CONSTRAINT FK_SUPR_USER
         FOREIGN KEY (SUPERVISOR_ID)
                             	REFERENCES USERS(USER_ID),
	CONSTRAINT FK_STAFF_USER
         FOREIGN KEY (STAFF_ID)
                             	REFERENCES USERS(USER_ID)
) ENGINE=InnoDB;


CREATE TABLE USER_NOTE(
       USER_NOTE_ID   varchar(32) NOT NULL,
       USER_ID              varchar(32) NULL,
       NOTE_TYPE			VARCHAR(20) NULL,
       DESCRIPTION			VARCHAR(2000) NULL,
       CREATE_DATE			DATETIME NULL,
       CREATED_BY			VARCHAR(20) NULL,
       PRIMARY KEY (USER_NOTE_ID), 
	CONSTRAINT FK_USER_NOTE_USERS
       FOREIGN KEY (USER_ID)
                             REFERENCES USERS(USER_ID)
) ENGINE=InnoDB;

CREATE TABLE USER_ATTACHMENT_REF (
       USER_ATTACH_REF_ID   varchar(20) NOT NULL,
       USER_ID              varchar(20) NULL,
       NAME                 varchar(20) NULL,
       VALUE                varchar(50) NULL,
       URL                  varchar(50) NULL,
       PRIMARY KEY (USER_ATTACH_REF_ID), 
	CONSTRAINT FK_USER_ATTACHMENT_REF_USERS
       FOREIGN KEY (USER_ID)
                             REFERENCES USERS(USER_ID)
) ENGINE=InnoDB;


CREATE TABLE USER_ATTRIBUTES (
       ID                   varchar(32) NOT NULL,
       USER_ID              varchar(32) NULL,
       METADATA_ID          varchar(20) NULL,
       NAME                 varchar(50) NULL,
       VALUE                varchar(1000) NULL,
	   ATTR_GROUP			VARCHAR(20) NULL,
       PRIMARY KEY (ID),
	CONSTRAINT FK_USER_ATTRIBUTES_METADATA_ELEMENT
       FOREIGN KEY (METADATA_ID)
                             REFERENCES METADATA_ELEMENT(METADATA_ID), 
       FOREIGN KEY (USER_ID)
                             REFERENCES USERS(USER_ID)
)ENGINE=InnoDB;

CREATE TABLE USER_DELEGATION_ATTRIBUTE (
       ID                   varchar(32) NOT NULL,
       USER_ID              varchar(32) NULL,
       OBJ_TYPE          	varchar(50) NULL,	/*USER, ORG, ETC */
       NAME                 varchar(50) NULL,
       VALUE                varchar(255) NULL,
       PRIMARY KEY (ID),
       FOREIGN KEY (USER_ID)
                             REFERENCES USERS(USER_ID)
)ENGINE=InnoDB;





CREATE TABLE SERVICE (
       SERVICE_ID           varchar(20) NOT NULL,
       SERVICE_NAME         varchar(40) NULL,
       STATUS				VARCHAR(20) NULL,
       LOCATION_IP_ADDRESS	VARCHAR(80) NULL,
       COMPANY_OWNER_ID		VARCHAR(20) NULL,
       START_DATE			DATETIME NULL,
       END_DATE				DATETIME NULL,
       LICENSE_KEY			VARCHAR(255) NULL,	
       SERVICE_TYPE			VARCHAR(20) NULL,
       PARENT_SERVICE_ID	VARCHAR(20) NULL,
       ROOT_RESOURCE_ID     varchar(20) NULL,
       ACCESS_CONTROL_MODEL varchar(20) NULL,
	   	PARAM1		VARCHAR(20) NULL,
	   	PARAM2		VARCHAR(20) NULL,
	   	PARAM3		VARCHAR(20) NULL,
	   	PARAM4		VARCHAR(20) NULL,
	   	PARAM5		VARCHAR(20) NULL,
       PRIMARY KEY (SERVICE_ID)
) ENGINE=InnoDB;

CREATE TABLE SERVICE_CONFIG (
       SERVICE_CONFIG_ID    varchar(20) NOT NULL,
       SERVICE_ID           varchar(20) NULL,
       NAME                 varchar(40) NULL,
       VALUE                varchar(40) NULL,
       PRIMARY KEY (SERVICE_CONFIG_ID),
       CONSTRAINT FK_SRV_SRV_CONF
       FOREIGN KEY (SERVICE_ID)
                             REFERENCES SERVICE(SERVICE_ID)
) ENGINE=InnoDB;


CREATE TABLE STATUS (
       STATUS_CD           	varchar(40) NOT NULL,
	   STATUS_TYPE			VARCHAR(20) NULL,
       DESCRIPTION          varchar(80) NULL,
       CODE_GROUP			VARCHAR(40) NOT NULL,
       LANGUAGE_CD			VARCHAR(2) NOT NULL,
	   COMPANY_OWNER_ID		VARCHAR(32) NOT NULL,
	   SERVICE_ID			VARCHAR(20) NOT NULL,
       WEIGHT				INT	NULL,
       PRIMARY KEY (CODE_GROUP, STATUS_CD, LANGUAGE_CD)
) ENGINE=InnoDB;


CREATE TABLE MENU (
       MENU_ID              varchar(20) NOT NULL,
       LANGUAGE_CD          varchar(5) NOT NULL DEFAULT 'en',
       MENU_GROUP           varchar(20) NULL,
       MENU_NAME            varchar(40) NULL,
       MENU_DESC            varchar(40) NULL,
       URL                  varchar(100) NULL,
       ACTIVE               INT NULL,
       DISPLAY_ORDER        INT NULL,
	   PUBLIC_URL				INT NULL,
       PRIMARY KEY (MENU_ID, LANGUAGE_CD)
) ENGINE=InnoDB;


CREATE TABLE GRP (
       GRP_ID               varchar(32) NOT NULL,
       GRP_NAME             varchar(80) NULL,
       CREATE_DATE			DATETIME NULL,
       CREATED_BY			VARCHAR(20) NULL,
       COMPANY_ID			VARCHAR(32) NULL,
	   OWNER_ID				VARCHAR(32) NULL,
       PARENT_GRP_ID		VARCHAR(32) NULL,
       INHERIT_FROM_PARENT	INT NULL DEFAULT 0,
       PROVISION_METHOD		VARCHAR(20) NULL,
       PROVISION_OBJ_NAME	VARCHAR(80) NULL,
       TYPE_ID              varchar(20) NULL,
	   GROUP_CLASS			VARCHAR(40) NULL,
	   GROUP_DESC			VARCHAR(80) NULL,
   	   STATUS				VARCHAR(20) NULL,
	   LAST_UPDATE			DATETIME NULL,
	   LAST_UPDATED_BY		VARCHAR(32) NULL,
	   POLICY_ID			VARCHAR(20) NULL,
	   INTERNAL_GROUP_ID	VARCHAR(32) NULL,
	   EXTERNAL_GRP_NAME	VARCHAR(200) NULL,
	   GROUP_APPROVER_ID	VARCHAR(32) NULL,
       PRIMARY KEY (GRP_ID),
       CONSTRAINT FK_GRP_METADATA_TYPE
         FOREIGN KEY (TYPE_ID)
                             	REFERENCES METADATA_TYPE(TYPE_ID)
       
) ENGINE=InnoDB;


CREATE TABLE GRP_ATTRIBUTES (
       ID                   varchar(32) NOT NULL,
       GRP_ID               varchar(32) NULL,
       METADATA_ID          varchar(20) NULL,
       NAME                 varchar(20) NULL,
       VALUE                varchar(255) NULL,
       PRIMARY KEY (ID),
	CONSTRAINT FK_GRP_ATTRIBUTES_METADATA_ELEMENT
       FOREIGN KEY (METADATA_ID)
                             REFERENCES METADATA_ELEMENT(METADATA_ID), 
       FOREIGN KEY (GRP_ID)
                             REFERENCES GRP(GRP_ID)
) ENGINE=InnoDB;


CREATE TABLE USER_GRP(
	USER_GRP_ID			VARCHAR(32) NOT NULL,
   	GRP_ID              varchar(32) NOT NULL,
   	USER_ID             varchar(32) NOT NULL,
	STATUS				VARCHAR(20) NULL DEFAULT 'ACTIVE',  
    CREATE_DATE			DATETIME NULL,
    CREATED_BY			VARCHAR(32) NULL,
  	START_DATE			DATETIME NULL,
   	END_DATE			DATETIME NULL,
	PRIMARY KEY (USER_GRP_ID),
       CONSTRAINT FK_USR_GRP_GPR
       FOREIGN KEY (GRP_ID)  REFERENCES GRP(GRP_ID),
       CONSTRAINT FK_USR_GRP_USR
       FOREIGN KEY (USER_ID)  REFERENCES USERS(USER_ID)
) ENGINE=InnoDB;


CREATE TABLE PERMISSIONS (
       MENU_ID              varchar(20) NOT NULL,
	   SERVICE_ID           varchar(20) NOT NULL,
       ROLE_ID              varchar(32) NOT NULL,
       PRIMARY KEY (SERVICE_ID, ROLE_ID, MENU_ID)
) ENGINE=InnoDB ;


CREATE TABLE SEQUENCE_GEN (
       ATTRIBUTE            varchar(32) NOT NULL,
       NEXT_ID              int NULL,
       PRIMARY KEY (ATTRIBUTE)
) ENGINE=InnoDB;

CREATE TABLE RELATION_SET (
       RELATION_SET_ID      varchar(20) NOT NULL,
       DESCRIPTION          varchar(80) NULL,
       PRIMARY KEY (RELATION_SET_ID)
)ENGINE=InnoDB;

CREATE TABLE RELATION_CATEGORY (
       RELATION_SET_ID      varchar(20) NOT NULL,
       CATEGORY_ID          varchar(20) NOT NULL,
       PRIMARY KEY (RELATION_SET_ID, CATEGORY_ID), 
	CONSTRAINT FK_RELATION_CATEGORY_CATEGORY
       FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY(CATEGORY_ID),
	CONSTRAINT FK_RELATION_CATEGORY_RELATION_SET
       FOREIGN KEY (RELATION_SET_ID) REFERENCES RELATION_SET(RELATION_SET_ID)
) ENGINE=InnoDB;


CREATE TABLE RELATIONSHIP (
       RELATIONSHIP_ID      varchar(20) NOT NULL,
       RELATION_SET_ID      varchar(20) NULL,
       ITEM_OBJ             varchar(20) NULL,
       ITEM_ID              varchar(20) NULL,
       RANK                 int NULL,
       ACTIVE               bit NULL,
       PRIMARY KEY (RELATIONSHIP_ID), 
	CONSTRAINT FK_RELATIONSHIP_RELATION_SET
       FOREIGN KEY (RELATION_SET_ID)
                             REFERENCES RELATION_SET(RELATION_SET_ID)
) ENGINE=InnoDB;


CREATE TABLE RELATION_TYPE (
       RELATION_TYPE_ID     varchar(20) NOT NULL,
       DESCRIPTION          varchar(80) NOT NULL,
       PRIMARY KEY (RELATION_TYPE_ID)
) ENGINE=InnoDB;


CREATE TABLE RELATION_SOURCE (
       RELATION_TYPE_ID     varchar(20) NOT NULL,
       SOURCE_OBJ           varchar(20) NOT NULL,
       SOURCE_ID            varchar(20) NOT NULL,
       RELATION_SET_ID      varchar(20) NULL,
       PRIMARY KEY (RELATION_TYPE_ID, SOURCE_OBJ, SOURCE_ID), 
       CONSTRAINT FK_RELATION_SOURCE_RELATION_SET
       FOREIGN KEY (RELATION_SET_ID)
                             REFERENCES RELATION_SET (RELATION_SET_ID), 
	CONSTRAINT FK_RELATION_SOURCE_RELATION_TYPE
       FOREIGN KEY (RELATION_TYPE_ID)
                             REFERENCES RELATION_TYPE(RELATION_TYPE_ID)
) ENGINE=InnoDB;

CREATE TABLE CATEGORY_TYPE (
       CATEGORY_ID          varchar(20) NOT NULL,
       TYPE_ID              varchar(20) NOT NULL,
       PRIMARY KEY (TYPE_ID, CATEGORY_ID), 
	CONSTRAINT FK_CATEGORY_TYPE_CATEGORY
       FOREIGN KEY (CATEGORY_ID)
                             REFERENCES CATEGORY(CATEGORY_ID), 
	CONSTRAINT FK_CATEGORY_METADATA_TYPE
       FOREIGN KEY (TYPE_ID)
                             REFERENCES METADATA_TYPE(TYPE_ID)
) ENGINE=InnoDB;


CREATE TABLE IMAGE (
       IMAGE_ID             varchar(20) NOT NULL,
       IMAGE_FILE           varchar(80) NULL,
       IMAGE_TYPE           varchar(20) NULL,
       DESCRIPTION          varchar(250) NULL,
       MIME_TYPE            varchar(30) NULL,
       URL                  varchar(100) NULL,
       FILE_SIZE            int NULL,
       IMAGE_BLOB           BLOB NULL,
       PRIMARY KEY (IMAGE_ID)
) ENGINE=InnoDB;

CREATE TABLE LOCATION (
       LOCATION_ID           varchar(32) NOT NULL,
	   NAME					VARCHAR(80) NULL,
	   DESCRIPTION			VARCHAR(255) NULL,
       COUNTRY              varchar(30) NULL,
	   BLDG_NUM				VARCHAR(10) NULL,
	   STREET_DIRECTION		VARCHAR(20) NULL,
       ADDRESS1             varchar(45) NULL,
       ADDRESS2             varchar(45) NULL,
	   ADDRESS3             varchar(45) NULL,
       CITY                 varchar(30) NULL,
       STATE                varchar(15) NULL,
       POSTAL_CD            varchar(10) NULL,
	   ORGANIZATION_ID		VARCHAR(32) NULL,
	   INTERNAL_LOCATION_ID	VARCHAR(32) NULL,
       ACTIVE				INT NULL DEFAULT 1,
       SENSITIVE_LOCATION			INT NULL DEFAULT 0,
       PRIMARY KEY (LOCATION_ID)
) ENGINE=InnoDB;

CREATE TABLE ADDRESS (
       ADDRESS_ID           varchar(32) NOT NULL,
	   NAME					VARCHAR(40) NULL,
       COUNTRY              varchar(30) NULL,
	   BLDG_NUM				VARCHAR(10) NULL,
	   STREET_DIRECTION		VARCHAR(20) NULL,
	   SUITE				VARCHAR(20) NULL,
       ADDRESS1             varchar(45) NULL,
       ADDRESS2             varchar(45) NULL,
	   ADDRESS3             varchar(45) NULL,
	   ADDRESS4             varchar(45) NULL,
	   ADDRESS5             varchar(45) NULL,
	   ADDRESS6             varchar(45) NULL,
	   ADDRESS7             varchar(45) NULL,
       CITY                 varchar(30) NULL,
       STATE                varchar(15) NULL,
       POSTAL_CD            varchar(10) NULL,
       IS_DEFAULT           int NULL DEFAULT 0,
       DESCRIPTION          varchar(100) NULL,
       ACTIVE				INT NULL DEFAULT 1,
       PARENT_ID            varchar(32) NULL,
       PARENT_TYPE          varchar(30) NULL,
       PRIMARY KEY (ADDRESS_ID)
) ENGINE=InnoDB;




CREATE TABLE EMAIL_ADDRESS (
       EMAIL_ID             varchar(32) NOT NULL,
	   NAME					VARCHAR(40) NULL,
       DESCRIPTION          varchar(100) NULL,
       EMAIL_ADDRESS        varchar(320) NULL,
       IS_DEFAULT           int NULL,
       ACTIVE				INT NULL DEFAULT 1,
       PARENT_ID            varchar(32) NULL,
       PARENT_TYPE          varchar(30) NULL,
       PRIMARY KEY (EMAIL_ID)
) ENGINE=InnoDB;

CREATE TABLE PHONE (
       PHONE_ID             varchar(32) NOT NULL,
	   NAME					VARCHAR(40) NULL,
       AREA_CD              varchar(10) NULL,
       COUNTRY_CD           varchar(3) NULL,
       DESCRIPTION          varchar(100) NULL,
       PHONE_NBR            varchar(50) NULL,
       PHONE_EXT			VARCHAR(20) NULL,
       IS_DEFAULT           int NULL,
       ACTIVE				INT NULL DEFAULT 1,
       PARENT_ID            varchar(32) NULL,
       PARENT_TYPE          varchar(30) NULL,
	   PHONE_TYPE			VARCHAR(20) NULL,
       PRIMARY KEY (PHONE_ID)
) ENGINE=InnoDB;

CREATE TABLE ROLE(
       ROLE_ID              varchar(32) NOT NULL,
       SERVICE_ID           varchar(20) NOT NULL,
       ROLE_NAME            varchar(80) NULL,
       CREATE_DATE			DATETIME NULL,
       CREATED_BY			VARCHAR(32) NULL,
       DESCRIPTION          varchar(255) NULL,
       PROVISION_OBJ_NAME   varchar(80) NULL,
	   PARENT_ROLE_ID		VARCHAR(32) NULL,
	   TYPE_ID				VARCHAR(20) NULL,
	   INHERIT_FROM_PARENT	INT NULL,
	   OWNER_ID				VARCHAR(32) NULL,
       STATUS				VARCHAR(20) NULL,
	   INTERNAL_ROLE_ID		VARCHAR(32) NULL,
	   ROLE_APPROVER_ID		VARCHAR(32) NULL,
	   ROLE_END_DATE			DATETIME NULL,
      	 PRIMARY KEY (ROLE_ID, SERVICE_ID), 
	CONSTRAINT FK_ROLE_SERVICE
       FOREIGN KEY (SERVICE_ID) REFERENCES SECURITY_DOMAIN(DOMAIN_ID)
) ENGINE=InnoDB;



CREATE TABLE ROLE_ATTRIBUTE (
	   ROLE_ATTR_ID			VARCHAR(32) NOT NULL,
       NAME                 varchar(40) NULL,
       VALUE                varchar(255) NULL,
       METADATA_ID          varchar(20) NULL,
       ROLE_ID        	 	VARCHAR(32) NOT NULL,
	   SERVICE_ID           VARCHAR(20) NOT NULL,
	   ATTR_GROUP			VARCHAR(20) NULL,
       PRIMARY KEY (ROLE_ATTR_ID),
	CONSTRAINT FK_ROLE_ROLE_ATTRIBUTE
       FOREIGN KEY (ROLE_ID,SERVICE_ID)
                             REFERENCES ROLE(ROLE_ID,SERVICE_ID)
) ENGINE=InnoDB;


CREATE TABLE ROLE_POLICY (
   ROLE_POLICY_ID VARCHAR(32) NOT NULL,
   ROLE_ID 				VARCHAR(32),
   SERVICE_ID 		VARCHAR(20),
   ACTION 				VARCHAR(20),
   NAME 					VARCHAR(40),
   VALUE1 				VARCHAR(40),
   VALUE2 				VARCHAR(40),
   ACTION_QUALIFIER		VARCHAR(20),
   EXECUTION_ORDER 		INT,
   POLICY_SCRIPT 		VARCHAR(100),
  FOREIGN KEY (ROLE_ID, SERVICE_ID) 
  	REFERENCES ROLE (ROLE_ID, SERVICE_ID),
  PRIMARY KEY (ROLE_POLICY_ID)
) ENGINE = InnoDB;



CREATE TABLE GRP_ROLE(
	   SERVICE_ID           varchar(20) NOT NULL,
	   ROLE_ID              varchar(32) NOT NULL,
       GRP_ID               varchar(32) NOT NULL,
	PRIMARY KEY (SERVICE_ID, ROLE_ID, GRP_ID),
       CONSTRAINT FK_GRP_ROLE_ROLE
       FOREIGN KEY (ROLE_ID,SERVICE_ID)  REFERENCES ROLE(ROLE_ID,SERVICE_ID),
       CONSTRAINT FK_GRP_ROLE_GRP
       FOREIGN KEY (GRP_ID)  REFERENCES GRP(GRP_ID)
) ENGINE=InnoDB;


CREATE TABLE USER_ROLE (
		USER_ROLE_ID		VARCHAR(32) NOT NULL,
	   	SERVICE_ID			VARCHAR(20) NOT NULL,
	   	ROLE_ID             VARCHAR(32) NOT NULL,
       	USER_ID             varchar(32) NOT NULL,
		STATUS				VARCHAR(20) NULL,	   
    	CREATE_DATE			DATETIME NULL,
    	START_DATE			DATETIME NULL,
    	END_DATE			DATETIME NULL,
    	CREATED_BY			VARCHAR(32) NULL,
	PRIMARY KEY (SERVICE_ID, ROLE_ID, USER_ID),
	   CONSTRAINT FK_USR_ROLE_ROLE
        FOREIGN KEY (ROLE_ID,SERVICE_ID)
                             REFERENCES ROLE(ROLE_ID,SERVICE_ID), 
       CONSTRAINT FK_USR_ROLE_USR
		FOREIGN KEY (USER_ID)
                             REFERENCES USERS(USER_ID)
) ENGINE=InnoDB;


CREATE TABLE USER_AFFILIATION (
		USER_AFFILIATION_ID		VARCHAR(32) NOT NULL,
        COMPANY_ID    VARCHAR(32) NOT NULL,
        USER_ID       VARCHAR(32) NOT NULL,
        STATUS				VARCHAR(20) NULL,
        CREATE_DATE		DATETIME NULL,
        START_DATE		DATETIME NULL,
        END_DATE			DATETIME NULL,
        CREATED_BY		VARCHAR(32) NULL,
	PRIMARY KEY (USER_AFFILIATION_ID),
	   CONSTRAINT FK_USR_ORG_AFFL FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(COMPANY_ID),
     CONSTRAINT FK_USR_USER_AFFIL FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
)ENGINE=InnoDB;

CREATE TABLE RESOURCE_TYPE(
       RESOURCE_TYPE_ID     varchar(20) NOT NULL,
       DESCRIPTION          varchar(100) NULL,
       METADATA_TYPE_ID     varchar(20) NULL,
       PROVISION_RESOURCE   int NULL,
       PROCESS_NAME         varchar(80) NULL,
  PRIMARY KEY (RESOURCE_TYPE_ID)
) ENGINE=InnoDB;

CREATE TABLE RES(
       RESOURCE_ID          varchar(32) NOT NULL,
       RESOURCE_TYPE_ID     varchar(20) NULL,
       DESCRIPTION          varchar(100) NULL,
	   	 NAME      			varchar(40) NULL,
       RESOURCE_PARENT      varchar(32) NULL,
       BRANCH_ID            varchar(32) NULL,
       CATEGORY_ID	    	varchar(20) NULL,
       DISPLAY_ORDER	    int NULL  DEFAULT 1,
       NODE_LEVEL	    	int NULL  DEFAULT 1,
       SENSITIVE_APP		int null  DEFAULT 0,
 	   MANAGED_SYS_ID		VARCHAR(32) NULL,
	   URL					VARCHAR(255) NULL,
	   RES_OWNER_GROUP_ID   VARCHAR(32) NULL,
	   RES_OWNER_USER_ID    VARCHAR(32) NULL,
       PRIMARY KEY (RESOURCE_ID), 
	CONSTRAINT FK_RESOURCE_RESOURCE_TYPE
       FOREIGN KEY (RESOURCE_TYPE_ID)  REFERENCES RESOURCE_TYPE(RESOURCE_TYPE_ID),
	CONSTRAINT FK_RESOURCE_CATEGORY
       FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY(CATEGORY_ID)
) ENGINE=InnoDB;


CREATE TABLE RESOURCE_PROP (
       RESOURCE_PROP_ID     varchar(32) NOT NULL,
       RESOURCE_ID          varchar(32) NULL,
       METADATA_ID          varchar(20) NULL,
	     NAME					VARCHAR(40) NOT NULL,
       PROP_VALUE           varchar(500) NULL,
       PROP_GROUP           VARCHAR(20) NULL,
       PRIMARY KEY (RESOURCE_PROP_ID), 
	CONSTRAINT FK_RESOURCE_PROP_RESOURCE
       FOREIGN KEY (RESOURCE_ID) REFERENCES RES(RESOURCE_ID)
) ENGINE=InnoDB;

CREATE TABLE PRIVILEGE(
       PRIVILEGE_ID         varchar(32) NOT NULL,
	   RESOURCE_ID			VARCHAR(32) NOT NULL,
       ABBRV				VARCHAR(3) NOT NULL,
       DESCRIPTION          varchar(40) NULL,
       PRIMARY KEY (PRIVILEGE_ID)
)ENGINE=InnoDB;

CREATE TABLE RESOURCE_USER(
	   RESOURCE_USER_ID    	VARCHAR(32) NOT NULL,
       RESOURCE_ID          varchar(32) NOT NULL,
       USER_ID              varchar(32) NOT NULL,
       PRIVILEGE_LIST       varchar(100) NULL,
	   OP_AGAINST_ROLE		INT NULL,
       STATUS				VARCHAR(20) NULL,
	   START_DATE			DATETIME NULL,
       END_DATE				DATETIME NULL,
       PRIMARY KEY (RESOURCE_USER_ID), 
	CONSTRAINT FK_RESOURCE_USER_USERS
         FOREIGN KEY (USER_ID)    REFERENCES USERS(USER_ID), 
       FOREIGN KEY (RESOURCE_ID)  REFERENCES RES(RESOURCE_ID)
) ENGINE=InnoDB;

CREATE TABLE RESOURCE_ROLE(
       RESOURCE_ID          varchar(32) NOT NULL,
	   SERVICE_ID           VARCHAR(20) NOT NULL,
       ROLE_ID              varchar(32) NOT NULL,
       PRIVILEGE_ID         varchar(100) NULL,
	   START_DATE			DATETIME NULL,
       END_DATE				DATETIME NULL,
       PERMIT               TINYINT(1)    NULL DEFAULT FALSE,
       PRIMARY KEY (RESOURCE_ID, SERVICE_ID, ROLE_ID, PRIVILEGE_ID), 
	CONSTRAINT FK_RESOURCE_ROLE_ROLE
       FOREIGN KEY (ROLE_ID, SERVICE_ID)
                             REFERENCES ROLE(ROLE_ID, SERVICE_ID), 
	CONSTRAINT FK_RESOURCE_ROLE_RESOURCE
       FOREIGN KEY (RESOURCE_ID)
                             REFERENCES RES(RESOURCE_ID)
) ENGINE=InnoDB;


CREATE TABLE RESOURCE_GROUP(
       RES_GROUP_ID         VARCHAR(32) NOT NULL,
       RESOURCE_ID          varchar(32) NOT NULL,
       GRP_ID               varchar(32) NOT NULL,
	   START_DATE			DATETIME NULL,
       END_DATE				DATETIME NULL,
       PRIMARY KEY (RES_GROUP_ID),
	CONSTRAINT FK_RESOURCE_GRP
       FOREIGN KEY (GRP_ID)
                             REFERENCES GRP(GRP_ID),
	CONSTRAINT FK_RESOURCE_GRP_RESOURCE
       FOREIGN KEY (RESOURCE_ID)
                             REFERENCES RES(RESOURCE_ID)
) ENGINE=InnoDB;


CREATE TABLE RESOURCE_COMPANY(
       RESOURCE_ID          varchar(32) NOT NULL,
       COMPANY_ID           varchar(32) NOT NULL,
	   STATUS				VARCHAR(20) NULL,
	   START_DATE			DATETIME NULL,
	   LAST_DATE 			DATETIME NULL,
       PRIMARY KEY (RESOURCE_ID, COMPANY_ID), 
       CONSTRAINT FK_RESOURCE_COMPANY
       FOREIGN KEY (COMPANY_ID)
				 REFERENCES COMPANY(COMPANY_ID)
) ENGINE=InnoDB;


CREATE TABLE LOGIN(
       SERVICE_ID           varchar(20) NOT NULL,
       LOGIN                varchar(320) CHARACTER SET latin1 NOT NULL, /* Cannot be utf8 because of length, see http://bugs.mysql.com/bug.php?id=4541 */
	   MANAGED_SYS_ID 		VARCHAR(32) NOT NULL,
	   IDENTITY_TYPE		VARCHAR(20) NULL,			/* SSO, PROVISION, BOTH */
	   CANONICAL_NAME		VARCHAR(100) NULL,
       USER_ID              varchar(32) NULL,
       PASSWORD             varchar(80) NULL,
       PWD_EQUIVALENT_TOKEN varchar(80) NULL,
       PWD_CHANGED          datetime NULL,				/* last time the password was changed */
       PWD_EXP              datetime NULL,				/* date when the pswd expires */
       RESET_PWD	    	integer NOT NULL DEFAULT 0,		/* 1 - PASSWORD HAS BEEN RESET. FIRST TIME LOGIN*/
       FIRST_TIME_LOGIN	   	integer NOT NULL DEFAULT 1,		/* 1 - FIRST TIME LOGIN, 0 - USER HAS LOGGED IN AND CHANGED PSWD */
	   IS_LOCKED	        integer NOT NULL DEFAULT 0,		/* IS THIS IDENTITY LOCKED  */
       STATUS		    	varchar(20) NULL,			/* STATUS OF THIS IDENTITY  */
       GRACE_PERIOD			DATETIME NULL, 				/* WHEN THE GRACE_PRD_EXP 	*/	
       CREATE_DATE			DATETIME NULL,
       CREATED_BY			VARCHAR(32) NULL,
       CURRENT_LOGIN_HOST	VARCHAR(40) NULL,		/* HOST FROM WHICH YOU ARE LOGGED IN*/	
       AUTH_FAIL_COUNT		INTEGER NOT NULL DEFAULT 0,				/* NUMBER OF TIMES AUTH. HAS FAILED */
       LAST_AUTH_ATTEMPT	DATETIME NULL,	    	/* WHEN WAS THE LAST AUTH. ATTEMPT  */   
	   LAST_LOGIN			DATETIME NULL,			/* LAST TIME THE PERSON SUCCESSFULLY LOGGED IN */
	   LAST_LOGIN_IP        VARCHAR(60) NULL,
	   PREV_LOGIN           DATETIME NULL,
	   PREV_LOGIN_IP        VARCHAR(60) NULL,
	   IS_DEFAULT			INTEGER NULL DEFAULT 0,
	   PWD_CHANGE_COUNT	    INTEGER DEFAULT 0 NULL,  /* Indicates the number of times that a password has changed in a day */
	   PSWD_RESET_TOKEN     VARCHAR(80) NULL,
       PSWD_RESET_TOKEN_EXP DATETIME NULL,
       PRIMARY KEY (SERVICE_ID, LOGIN,MANAGED_SYS_ID),
	CONSTRAINT FK_LOGIN_USERS
       FOREIGN KEY (USER_ID)
                             REFERENCES USERS(USER_ID), 
       CONSTRAINT FK_LOGIN_SERVICE
       FOREIGN KEY (SERVICE_ID)
                             REFERENCES SECURITY_DOMAIN(DOMAIN_ID)
) ENGINE=InnoDB;

CREATE TABLE LOGIN_ATTRIBUTE (
	   LOGIN_ATTR_ID		VARCHAR(32) NOT NULL,
       LOGIN                varchar(320) CHARACTER SET latin1 NOT NULL, /* Must be latin1. See LOGIN.LOGIN */
       SERVICE_ID	    	varchar(20) NOT NULL,
	   MANAGED_SYS_ID       VARCHAR(32) NOT NULL,
       NAME                 varchar(20) NULL,
       VALUE                varchar(255) NULL,
       METADATA_ID          varchar(20) NULL,
	   ATTR_GROUP			VARCHAR(20) NULL,
       PRIMARY KEY (LOGIN_ATTR_ID), 
	CONSTRAINT FK_LOGIN_LOGIN_ATTRIBUTE
       FOREIGN KEY (SERVICE_ID, LOGIN, MANAGED_SYS_ID)
                             REFERENCES LOGIN(SERVICE_ID, LOGIN, MANAGED_SYS_ID)
) ENGINE=InnoDB;

CREATE TABLE AUTH_STATE (
       USER_ID              varchar(32) NOT NULL,
       AUTH_STATE           numeric(5,1) NULL,
       TOKEN                varchar(2000) NULL,
       AA                   varchar(20) NULL,
       EXPIRATION           numeric(18,0) NULL,
       LAST_LOGIN	    datetime NULL,
       IP_ADDRESS	    varchar(20) NULL,
       PRIMARY KEY (USER_ID), 
	CONSTRAINT FK_AUTH_STATE_USERS FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID)
) ENGINE=InnoDB;



CREATE TABLE PWD_HISTORY (
	   PWD_HISTORY_ID		VARCHAR(32) NOT NULL,
       LOGIN                varchar(320) CHARACTER SET latin1 NOT NULL, /* Must be latin1. See LOGIN.LOGIN */
       SERVICE_ID	    	varchar(20) NOT NULL,
	   MANAGED_SYS_ID		VARCHAR(32) NOT NULL,
       DATE_CREATED         datetime NOT NULL,
       PASSWORD             varchar(80) NULL,
       PRIMARY KEY (PWD_HISTORY_ID)
) ENGINE=InnoDB;


CREATE TABLE CREDENTIALS (
       USER_ID              varchar(32) NOT NULL,
       CREDENTIAL_TYPE      varchar(20) NOT NULL,
       VALUE                varchar(100) NULL,
       IS_PUBLIC            bit,
       PRIMARY KEY (USER_ID, CREDENTIAL_TYPE), 
	CONSTRAINT FK_CREDENTIALS_USERS
       FOREIGN KEY (USER_ID)
                             REFERENCES USERS(USER_ID)
) ENGINE=InnoDB;

CREATE TABLE IDM_AUDIT_LOG (
      LOG_ID        	varchar(32) NOT NULL,
      OBJECT_TYPE_ID    VARCHAR(20) NOT NULL,            /* TYPE OF OBJECT THAT IS BEING AUDITED */
	  OBJECT_ID    		VARCHAR(32) NULL,                /* ID OF THE OBJECT THAT IS BEING AUDITED */ 
	  ACTION_ID         VARCHAR(50) NOT NULL,            /* TYPE OF ACTION                              */
      ACTION_STATUS     VARCHAR(100) NULL,                /* STATUS OF THE ACTION                               */                                 
      REASON            VARCHAR(1000) NULL,                /* REASON WHY THE STATUS IS WHAT IT IS. IF AUTH_FAILS, THEN WHY */
      REASON_DETAIL    	TEXT NULL,                       /* INCASE WE WANT TO CAPTURE SOME OUTPUT LIKE AN EXCEPTION LOG  */
      ACTION_DATETIME 	TIMESTAMP NULL,               /* DATE AND TIME THIS EVENT OCCURED.                                          */
      ACTION_END_DATETIME 	TIMESTAMP NULL,               /* DATE AND TIME THIS EVENT OCCURED.                                          */
      OBJECT_NAME      	VARCHAR(255) NULL,               /* OBJECT THAT WAS ACTED UPON                                                     */
      RESOURCE_NAME 	VARCHAR(255) NULL,               /* RESOURCE INVOLVED IN THIS TASK                                                */
      USER_ID              varchar(32) NULL,
      SERVICE_ID           varchar(20) NULL,
      LOGIN_ID             varchar(320) CHARACTER SET latin1 NULL, /* Must be latin1. See LOGIN.LOGIN */
      HOST                 varchar(100) NULL,              /* HOST WHERE THE EVENT OCCURRED */
      NODE_IP              VARCHAR(60) NULL,              /* NODE THAT SENT THE REQUEST TO THE IDM SERVER */
      CLIENT_ID            VARCHAR(20) NULL,              /* CLIENT, AGENT OR INTERFACE WHERE THIS EVENT OCCURRED      */
      REQ_URL              varchar(255) NULL,
      LINKED_LOG_ID		 	VARCHAR(40) NULL,			  /* INDICATES IF THIS EVENT IS LINKED TO ANOTHER EVENT 		*/
	  LINK_SEQUENCE			INT NULL,
	  ORIG_OBJECT_STATE   	TEXT NULL,                     /* SNAP SHOT OF THE ORIGINAL OBJECT                 */
      NEW_OBJECT_STATE		TEXT NULL,
	  LOG_HASH   			VARCHAR(80) NULL,                     /* VALUES THAT WERE CHANGED DURING THIS OPERATION                 */
	  SRC_SYSTEM_ID 		VARCHAR(40) NULL, 
 	  TARGET_SYSTEM_ID 		VARCHAR(40) NULL,
	  REQUEST_ID			VARCHAR(40) NULL,
      SESSION_ID			VARCHAR(40) NULL,
	  CUSTOM_ATTRNAME1          VARCHAR(255) NULL,        /* additional NAME fileds that can be used to have their own columns instead of in big blob. */
      CUSTOM_ATTRNAME2          VARCHAR(255) NULL,
      CUSTOM_ATTRNAME3          VARCHAR(255) NULL,
      CUSTOM_ATTRNAME4          VARCHAR(255) NULL,
      CUSTOM_ATTRNAME5          VARCHAR(255) NULL,
      CUSTOM_ATTRNAME6          VARCHAR(255) NULL,
      CUSTOM_ATTRNAME7          VARCHAR(255) NULL,
      CUSTOM_ATTRNAME8          VARCHAR(255) NULL,
      CUSTOM_ATTRNAME9          VARCHAR(255) NULL,
      CUSTOM_ATTRNAME10         VARCHAR(255) NULL,
      CUSTOM_ATTRVALUE1         VARCHAR(255) NULL,
      CUSTOM_ATTRVALUE2         VARCHAR(255) NULL,
      CUSTOM_ATTRVALUE3         VARCHAR(255) NULL,
      CUSTOM_ATTRVALUE4         VARCHAR(255) NULL,
      CUSTOM_ATTRVALUE5         VARCHAR(255) NULL,
      CUSTOM_ATTRVALUE6         VARCHAR(255) NULL,
      CUSTOM_ATTRVALUE7         VARCHAR(255) NULL,
      CUSTOM_ATTRVALUE8         VARCHAR(255) NULL,
      CUSTOM_ATTRVALUE9         VARCHAR(255) NULL,
      CUSTOM_ATTRVALUE10      	VARCHAR(255) NULL,
      CUSTOM_PARAMNAME1       	VARCHAR(255) NULL,           /* additional NAME fileds that can be used to have their own columns instead of in big blob. */
      CUSTOM_PARAMNAME2       	VARCHAR(255) NULL,
      CUSTOM_PARAMNAME3       	VARCHAR(255) NULL,
      CUSTOM_PARAMNAME4       	VARCHAR(255) NULL,
      CUSTOM_PARAMNAME5       	VARCHAR(255) NULL,
      CUSTOM_PARAMNAME6       	VARCHAR(255) NULL,
      CUSTOM_PARAMNAME7       	VARCHAR(255) NULL,
      CUSTOM_PARAMNAME8       	VARCHAR(255) NULL,
      CUSTOM_PARAMNAME9       	VARCHAR(255) NULL,
      CUSTOM_PARAMNAME10    	VARCHAR(255) NULL,
      CUSTOM_PARAMVALUE1    	VARCHAR(255) NULL,
      CUSTOM_PARAMVALUE2    	VARCHAR(255) NULL,
      CUSTOM_PARAMVALUE3    	VARCHAR(255) NULL,
      CUSTOM_PARAMVALUE4    	VARCHAR(255) NULL,
      CUSTOM_PARAMVALUE5    	VARCHAR(255) NULL,
      CUSTOM_PARAMVALUE6    	VARCHAR(255) NULL,
      CUSTOM_PARAMVALUE7    	VARCHAR(255) NULL,
      CUSTOM_PARAMVALUE8    	VARCHAR(255) NULL,
      CUSTOM_PARAMVALUE9    	VARCHAR(255) NULL,
      CUSTOM_PARAMVALUE10   	VARCHAR(255) NULL,
      PRIMARY KEY (LOG_ID)
) ENGINE=InnoDB;


CREATE TABLE ORG_POLICY (
   ORG_POLICY_ID 		VARCHAR(32) NOT NULL,
   NAME						VARCHAR(40) NULL,
   TARGET_AUDIENCE_TYPE 	VARCHAR(20) NULL,
   TARGET_AUDIENCE 			VARCHAR(255) NULL,
   START_DATE 				DATE NULL,
   END_DATE 				DATE NULL,
   POLICY_TEXT 				TEXT NULL,
	PRIMARY KEY(ORG_POLICY_ID)
) ENGINE = InnoDB;

CREATE TABLE ORG_POLICY_USER_LOG (
   ORG_POLICY_LOG_ID 		VARCHAR(32) NOT NULL,
   ORG_POLICY_ID 			VARCHAR(32) NOT NULL,
   USER_ID 					VARCHAR(32) NOT NULL,
   TIME_STAMP				DATETIME NOT NULL,
   RESPONSE					VARCHAR(255) NULL,
	PRIMARY KEY(ORG_POLICY_LOG_ID)
) ENGINE = InnoDB;



ALTER TABLE PHONE 
  ADD INDEX (AREA_CD, PHONE_NBR);

ALTER TABLE USERS
  ADD INDEX (LAST_NAME);


DROP TABLE IF EXISTS PRIVILEGE_DEF ;




CREATE  TABLE IF NOT EXISTS RESOURCE_PRIVILEGE (
  RESOURCE_PRIVLEGE_ID VARCHAR(32) NOT NULL,
  RESOURCE_ID     VARCHAR(32)   NULL,
  PRIVILEGE_NAME  VARCHAR(32)   NULL,
  PRIVILEGE_TYPE  VARCHAR(20)   NULL, /* VALUE LIKE ROLE, GROUP, MODULE NAME */
  DESCRIPTION     VARCHAR(40)   NULL,
  PRIMARY KEY (RESOURCE_PRIVLEGE_ID),
  CONSTRAINT FK_RESOURCE_PRIVILEGE_RES
    FOREIGN KEY (RESOURCE_ID )
    REFERENCES RES (RESOURCE_ID )
 )ENGINE = InnoDB;



CREATE  TABLE IF NOT EXISTS USER_PRIVILEGE (
  USER_PRIVILEGE_ID   VARCHAR(32) NOT NULL,
  USER_ID             VARCHAR(32) NULL ,
  RESOURCE_ID         VARCHAR(32) NULL ,
  PRIVILEGE_ID        VARCHAR(32) NULL ,
  PERMIT              TINYINT(1)  NULL DEFAULT FALSE ,
  START_DATE DATETIME NULL ,
  END_DATE DATETIME NULL ,
  PRIMARY KEY (USER_PRIVILEGE_ID) )
ENGINE = InnoDB;


CREATE TABLE NOTIFICATION_CONFIG (
	   NOTIFICATION_CONFIG_ID 	VARCHAR(32) NOT NULL,
	   NAME                     VARCHAR(40) NULL,
	   SELECTION_PARAM_XML        		TEXT,
	   MSG_SUBJECT 				VARCHAR(100) NULL,
       MSG_TEMPLATE_URL 		VARCHAR(100) NULL,
       MSG_FROM					VARCHAR(100) NULL,  /* IF ITS AN EMAIL */
       MSG_BCC					VARCHAR(100) NULL,  /* IF ITS AN EMAIL */
       PRIMARY KEY (NOTIFICATION_CONFIG_ID)
) ENGINE=InnoDB;



commit;

commit;
USE openiam;


CREATE TABLE IDENTITY_QUEST_GRP (
       IDENTITY_QUEST_GRP_ID varchar(32) NOT NULL,
       NAME                 varchar(60) NULL,
       STATUS               varchar(20) NULL,
       COMPANY_OWNER_ID     varchar(32) NULL,
       CREATE_DATE          datetime NULL,
       CREATED_BY           varchar(20) NULL,
       LAST_UPDATE          datetime NULL,
       LAST_UPDATED_BY      varchar(20) NULL,
       PRIMARY KEY (IDENTITY_QUEST_GRP_ID)
) ENGINE=InnoDB;

CREATE TABLE IDENTITY_QUESTION (
       IDENTITY_QUESTION_ID 	varchar(32) NOT NULL,
       IDENTITY_QUEST_GRP_ID 	varchar(32) NULL,
       QUESTION_TEXT        	varchar(255) NULL,
       REQUIRED             	int NULL,
	   ACTIVE					INT NULL,
 		USER_ID			VARCHAR(32),	
       PRIMARY KEY (IDENTITY_QUESTION_ID),
       CONSTRAINT FK_IDENTITY_QUESTION_IDENTITY_QUEST_GRP
              FOREIGN KEY (IDENTITY_QUEST_GRP_ID) REFERENCES IDENTITY_QUEST_GRP(IDENTITY_QUEST_GRP_ID)
) ENGINE=InnoDB;

CREATE TABLE USER_IDENTITY_ANS (
       IDENTITY_ANS_ID      varchar(32) NOT NULL,
       IDENTITY_QUESTION_ID varchar(32) NULL,
	   QUESTION_TEXT		varchar(255) null,
       USER_ID              varchar(32) NULL,
       QUESTION_ANSWER      varchar(255) NULL,
       PRIMARY KEY (IDENTITY_ANS_ID), 
       CONSTRAINT FK_USER_IDENTITY_ANS_IDENTITY_QUESTION
       		FOREIGN KEY (IDENTITY_QUESTION_ID)  REFERENCES IDENTITY_QUESTION(IDENTITY_QUESTION_ID), 
       CONSTRAINT FK_USER_IDENTITY_ANS_USERS
       		FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
) ENGINE=InnoDB;

CREATE TABLE POLICY_DEF (
       POLICY_DEF_ID        varchar(32) NOT NULL,
       NAME                 varchar(60) NULL,
       DESCRIPTION          varchar(255) NULL,
       POLICY_TYPE          varchar(20) NULL,
       LOCATION_TYPE        varchar(20) NULL,
       POLICY_RULE          varchar(500) NULL,
       POLICY_HANDLER       varchar(255) NULL,
	POLICY_ADVISE_HANDLER	VARCHAR(255) NULL,
       PRIMARY KEY (POLICY_DEF_ID)
) ENGINE=InnoDB;

CREATE TABLE POLICY (
       POLICY_ID            varchar(32) NOT NULL,
       POLICY_DEF_ID        varchar(32) NULL,
       NAME                 varchar(60) NULL,
       DESCRIPTION          varchar(255) NULL,
       STATUS           	int NULL,
       CREATE_DATE          datetime NULL,
       CREATED_BY           varchar(20) NULL,
       LAST_UPDATE          datetime NULL,
       LAST_UPDATED_BY      varchar(20) NULL,
       RULE_SRC_URL         varchar(80) NULL,
	   RULE_TEXT			TEXT NULL,
       PRIMARY KEY (POLICY_ID), 
       CONSTRAINT FK_POLICY_POLICY_DEF
       	FOREIGN KEY (POLICY_DEF_ID) REFERENCES POLICY_DEF(POLICY_DEF_ID)
) ENGINE=InnoDB;



CREATE TABLE POLICY_DEF_PARAM (
       DEF_PARAM_ID         varchar(32) NOT NULL,
       POLICY_DEF_ID        varchar(32) NULL,
       NAME                 varchar(60) NULL,
       DESCRIPTION          varchar(255) NULL,
       OPERATION            varchar(20) NULL,
       VALUE1               varchar(255) NULL,
       VALUE2               varchar(255) NULL,
       REPEATS               int NULL,
	   PARAM_GROUP			varchar(20) NULL,
 	   HANDLER_LANGUAGE		VARCHAR(20)  NULL,
	POLICY_PARAM_HANDLER VARCHAR(255) NULL,
       PRIMARY KEY (DEF_PARAM_ID), 
       CONSTRAINT FK_POLICY_DEF_PARAM_POLICY_DEF
       		FOREIGN KEY (POLICY_DEF_ID) REFERENCES POLICY_DEF(POLICY_DEF_ID)
) ENGINE=InnoDB;

CREATE TABLE POLICY_ATTRIBUTE (
       POLICY_ATTR_ID       varchar(32) NOT NULL,
       DEF_PARAM_ID         varchar(32) NULL,
       POLICY_ID            varchar(32) NULL,
       NAME                 varchar(60) NULL,
       OPERATION            varchar(20) NULL,
       VALUE1               varchar(255) NULL,
       VALUE2               varchar(255) NULL,
	   RULE_TEXT  		    TEXT NULL,
       PRIMARY KEY (POLICY_ATTR_ID),
       CONSTRAINT FK_POLICY_ATTRIBUTE_POLICY_DEF_PARAM
       		FOREIGN KEY (DEF_PARAM_ID) REFERENCES POLICY_DEF_PARAM(DEF_PARAM_ID), 
       CONSTRAINT FK_POLICY_ATTRIBUTE_POLICY
       		FOREIGN KEY (POLICY_ID) REFERENCES POLICY(POLICY_ID)
);

CREATE TABLE POLICY_OBJECT_ASSOC (
   POLICY_OBJECT_ID VARCHAR(32) NOT NULL,
   POLICY_ID VARCHAR(32) NULL,
   ASSOCIATION_LEVEL VARCHAR(20) NULL,
   ASSOCIATION_VALUE VARCHAR(255) NULL,
   OBJECT_TYPE VARCHAR(100) NULL,
   OBJECT_ID VARCHAR(32) NULL,
	PARENT_ASSOC_ID VARCHAR(32) NULL,
   PRIMARY KEY (POLICY_OBJECT_ID)
) ENGINE = InnoDB;



CREATE TABLE ENTITLEMENT (
       ENTITLEMENT_ID       varchar(32) NOT NULL,
       ENTITLEMENT_NAME     varchar(40) NULL,
       ENTITLEMENT_VALUE    varchar(80) NULL,
       DESCRIPTION          varchar(255) NULL,
       CREATE_DATE          datetime NULL,
       CREATED_BY           varchar(20) NULL,
       PRIMARY KEY (ENTITLEMENT_ID)
) ENGINE=InnoDB;

CREATE TABLE ROLE_ENTITLEMENT (
       ENTITLEMENT_ID       varchar(32) NOT NULL,
       ROLE_ID              varchar(32) NOT NULL,
       SERVICE_ID           VARCHAR(20) NOT NULL,
       PRIMARY KEY (ENTITLEMENT_ID, ROLE_ID),
       CONSTRAINT RL_EN_RL
       	FOREIGN KEY (ROLE_ID) REFERENCES ROLE (ROLE_ID),
	   CONSTRAINT RL_EN_EN
       	FOREIGN KEY (ENTITLEMENT_ID) REFERENCES ENTITLEMENT(ENTITLEMENT_ID)
) ENGINE=InnoDB;



CREATE TABLE RESOURCE_POLICY (
       RESOURCE_POLICY_ID   varchar(32) NOT NULL,
	   SERVICE_ID           varchar(20) NOT NULL,
       ROLE_ID              varchar(32) NULL,
       RESOURCE_ID          varchar(32) NULL,
       POLICY_START         datetime NULL,
       POLICY_END           datetime NULL,
       APPLY_TO_CHILDREN    int NULL,
       PRIMARY KEY (RESOURCE_POLICY_ID), 
       CONSTRAINT RS_PL_RL_RLID 
       		FOREIGN KEY (ROLE_ID,SERVICE_ID)
                             REFERENCES ROLE (ROLE_ID, SERVICE_ID), 
       CONSTRAINT RS_PL_RS_RSID 
       		FOREIGN KEY (RESOURCE_ID)
                             REFERENCES RES(RESOURCE_ID)
) ENGINE=InnoDB;








CREATE TABLE PROVISION_CONNECTOR (
	CONNECTOR_ID 			varchar(32) NOT NULL,
	NAME		 			VARCHAR(40) NULL,
	METADATA_TYPE_ID		VARCHAR(20) NULL,
	STD_COMPLIANCE_LEVEL	VARCHAR(20) NULL,
	CLIENT_COMM_PROTOCOL	VARCHAR(20) NULL,
	SERVICE_URL				VARCHAR(100) NULL,
	SERVICE_NAMESPACE		VARCHAR(100) NULL,
	SERVICE_PORT			VARCHAR(100) NULL,
	SERVICE_WSDL			VARCHAR(100) NULL,
	CLASS_NAME				VARCHAR(60) NULL,
	HOST					VARCHAR(60) NULL,
    PORT					VARCHAR(10) NULL,
    CONNECTOR_INTERFACE 	VARCHAR(20) NULL,
	PRIMARY KEY(CONNECTOR_ID)
) ENGINE=InnoDB;



CREATE TABLE MANAGED_SYS (
       MANAGED_SYS_ID           			VARCHAR(32) NOT NULL,
       NAME         						VARCHAR(40) NULL,
 	   DESCRIPTION							VARCHAR(80) NULL,
       STATUS								VARCHAR(20) NULL,
	   CONNECTOR_ID							VARCHAR(32) NULL,
	   DOMAIN_ID							VARCHAR(20) NULL,
	   HOST_URL								VARCHAR(80) NULL,
	   APPL_URL								VARCHAR(80) NULL,
	   PORT									INTEGER NULL,
	   COMM_PROTOCOL						VARCHAR(20) NULL,
	   /* Need to accomodate fully qualified ldap names */
	   USER_ID								VARCHAR(150) NULL,
	   PSWD									VARCHAR(100) NULL,
	   START_DATE							DATE NULL,
	   END_DATE								DATE NULL,
	   RESOURCE_ID							VARCHAR(32) NULL,
	   PRIMARY_REPOSITORY 					INT NULL,
	   SECONDARY_REPOSITORY_ID 				VARCHAR(32) NULL,
	   ALWAYS_UPDATE_SECONDARY 				INT NULL,
	   RES_DEPENDENCY						VARCHAR(32) NULL,
	   ADD_HNDLR							VARCHAR(100) NULL,
	   MODIFY_HNDLR							VARCHAR(100) NULL,
	   DELETE_HNDLR							VARCHAR(100) NULL,
	   SETPASS_HNDLR						VARCHAR(100) NULL,
	   SUSPEND_HNDLR						VARCHAR(100) NULL,	   
	   HNDLR_1									VARCHAR(100) NULL,
	   HNDLR_2									VARCHAR(100) NULL,
 	   HNDLR_3									VARCHAR(100) NULL,
 	   HNDLR_4									VARCHAR(100) NULL,
	   HNDLR_5									VARCHAR(100) NULL,
       DRIVER_URL                           VARCHAR(100) NULL,
       CONNECTION_STRING                    VARCHAR(100) NULL,
       PRIMARY KEY (MANAGED_SYS_ID),
			 CONSTRAINT FK_MNG_SYS_PROV_CON
			 	FOREIGN KEY (CONNECTOR_ID) REFERENCES PROVISION_CONNECTOR(CONNECTOR_ID)
) ENGINE=InnoDB;

CREATE TABLE MNG_SYS_OBJECT_MATCH (
		OBJECT_SEARCH_ID	VARCHAR(32) NOT NULL,
		MANAGED_SYS_ID      VARCHAR(32) NOT NULL,
		/* USER, GROUP, ROLE, COMPUTER, RESOURCE, ETC */
		OBJECT_TYPE			VARCHAR(20) NULL DEFAULT 'USER',
		/* BASE_DN, SEARCH */ 
		MATCH_METHOD		VARCHAR(20) NULL DEFAULT 'BASE_DN',
		BASE_DN				VARCHAR(200) NULL,
		SEARCH_BASE_DN		VARCHAR(200) NULL,
		SEARCH_FILTER		VARCHAR(1000) NULL,
		KEY_FIELD			VARCHAR(40) NULL,
       PRIMARY KEY (OBJECT_SEARCH_ID),
			 CONSTRAINT FK_MNG_SYS_OBJ_MATC
			 	FOREIGN KEY (MANAGED_SYS_ID) REFERENCES MANAGED_SYS(MANAGED_SYS_ID)
) ENGINE=InnoDB;

CREATE TABLE MANAGED_SYS_ATTRIBUTE (
       MNG_SYS_ATTR_ID       varchar(32) NOT NULL,
       NAME                 varchar(60) NULL,
       VALUE1               varchar(255) NULL,
       VALUE2               varchar(255) NULL,
       MANAGED_SYS_ID  VARCHAR(32) NULL,
       PRIMARY KEY (MNG_SYS_ATTR_ID),
       CONSTRAINT FK_MNG_MNG_ATTR
       		FOREIGN KEY (MANAGED_SYS_ID) REFERENCES MANAGED_SYS(MANAGED_SYS_ID)
)ENGINE=InnoDB;


CREATE TABLE APPROVER_ASSOC(
    APPROVER_ASSOC_ID     VARCHAR(32)    NOT NULL,
	REQUEST_TYPE		VARCHAR(32) NULL,			/* Each type of request can have a different approval process. */
	APPROVER_LEVEL      INTEGER	   NULL DEFAULT 1,   /* approval level */
	ASSOCIATION_TYPE	VARCHAR(20)	   NULL,	/* GROUP, ROLE, SUPERVISOR, INDIVIDUAL, RESOURCE  */
	ASSOCIATION_OBJ_ID	VARCHAR(32)	   NULL,	/* ID OF GROUP, ROLE, SUPERVISOR,  OR RESOURCE   */
	APPROVER_USER_ID	VARCHAR(32)	   NULL,    /* ID OF THE APPROVER - WE CAN HAVE MANY APPROVERS  */
	ON_APPROVE_NOTIFY_USER_ID VARCHAR(32)   NULL,
	ON_REJECT_NOTIFY_USER_ID  VARCHAR(32)   NULL,
	APPROVE_NOTIFY_USER_TYPE VARCHAR(20)   NULL,  /* USER, SUPERVISOR, TARGET_USER*/
	REJECT_NOTIFY_USER_TYPE  VARCHAR(20)   NULL,
	ACTN    			VARCHAR(32)	   NULL DEFAULT 'START',   /* START, ACCEPT, REJECT - FUTURE USE  */
	APPROVER_ROLE_ID VARCHAR(32)  NULL,
	APPROVER_ROLE_DOMAIN VARCHAR(20)  NULL,
	APPLY_DELEGATION_FILTER INTEGER  NULL,
PRIMARY KEY (APPROVER_ASSOC_ID) 
) ENGINE=InnoDB;




CREATE TABLE MNG_SYS_GROUP(
    MNG_SYS_GROUP_ID    VARCHAR(32)    NOT NULL,
    MANAGED_SYS_ID      VARCHAR(32)    NOT NULL,
    PRIMARY KEY (MANAGED_SYS_ID, MNG_SYS_GROUP_ID), 
    CONSTRAINT Refmanaged_sys831 FOREIGN KEY (MANAGED_SYS_ID)
    REFERENCES MANAGED_SYS(MANAGED_SYS_ID)
) ENGINE=InnoDB;




CREATE TABLE PROV_REQUEST(
    REQUEST_ID        VARCHAR(32)     NOT NULL,
    REQUESTOR_ID      VARCHAR(100),
    REQUEST_DATE      DATETIME,
    STATUS            VARCHAR(20),
    STATUS_DATE       DATETIME,
    REQUEST_REASON    VARCHAR(500),
	REQUEST_TYPE 		VARCHAR(20),
	CHANGE_ACCESS_BY	VARCHAR(32),
	REQUEST_XML 		TEXT,
    NEW_ROLE_ID              varchar(32) NULL,
    NEW_SERVICE_ID           varchar(20) NULL,
	MANAGED_RESOURCE_ID	VARCHAR(32) NULL,
    REQUEST_FOR_ORG_ID  VARCHAR(32) NULL,
    PRIMARY KEY (REQUEST_ID)
) ENGINE=InnoDB;

CREATE TABLE REQ_APPROVER(
    REQ_APPROVER_ID     VARCHAR(32)    NOT NULL,
    APPROVER_ID         VARCHAR(32)	   NULL,
    APPROVER_TYPE		VARCHAR(20)    NULL,   /* MANAGER, APP_APPROVER, FORM_APPROVER */
    APPROVER_LEVEL      INTEGER	   NULL,
    REQUEST_ID          VARCHAR(32)    NULL,
    ACTION_DATE         DATETIME       NULL,
    STATUS              VARCHAR(20)    NULL,  /* PENDING, COMPLETE */
    ACTION              VARCHAR(20)    NULL,  /* APPROVE, REJECT, DELEGATE */
    CMT             VARCHAR(1000)   NULL,
    MANAGED_SYS_ID      VARCHAR(32)    NULL,
    MNG_SYS_GROUP_ID	VARCHAR(32)	NULL,
    ROLE_DOMAIN	        VARCHAR(20)	NULL,
    PRIMARY KEY (REQ_APPROVER_ID)
) ENGINE=InnoDB;


CREATE TABLE MNG_SYS_LIST(
    MANAGED_SYS_ID    VARCHAR(32)    NOT NULL,
    REQUEST_ID        VARCHAR(32)    NOT NULL,
    PRIMARY KEY (MANAGED_SYS_ID, REQUEST_ID), 
    CONSTRAINT Refmanaged_sys941 FOREIGN KEY (MANAGED_SYS_ID)
    REFERENCES MANAGED_SYS(MANAGED_SYS_ID),
    CONSTRAINT RefPROV_REQUEST951 FOREIGN KEY (REQUEST_ID)
    REFERENCES PROV_REQUEST(REQUEST_ID)
) ENGINE=InnoDB;

CREATE TABLE REQUEST_ATTACHMENT(
    REQUEST_ATTACHMENT_ID    VARCHAR(32)    NOT NULL,
    NAME                     VARCHAR(20),
    ATTACHMENT               VARCHAR(20),
    USER_ID                  VARCHAR(32),
    ATTACHMENT_DATE          DATETIME,
    REQUEST_ID               VARCHAR(32)    NOT NULL,
    PRIMARY KEY (REQUEST_ATTACHMENT_ID), 
    CONSTRAINT RefPROV_REQUEST1001 FOREIGN KEY (REQUEST_ID)
    REFERENCES PROV_REQUEST(REQUEST_ID)
) ENGINE=InnoDB;

CREATE TABLE REQUEST_ATTRIBUTE(
    REQUEST_ATTR_ID    VARCHAR(32)    NOT NULL,
    NAME               VARCHAR(40),
    VALUE              VARCHAR(255),
    METADATA_ID        VARCHAR(32),
    ATTR_GROUP         VARCHAR(20),
    REQUEST_ID         VARCHAR(32)    NULL,
    PRIMARY KEY (REQUEST_ATTR_ID), 
    CONSTRAINT RefPROV_REQUEST1011 FOREIGN KEY (REQUEST_ID)
    REFERENCES PROV_REQUEST(REQUEST_ID)
) ENGINE=InnoDB;

CREATE TABLE REQUEST_USER(
    REQ_USER_ID    VARCHAR(32)    NOT NULL,
    USER_ID             VARCHAR(32),
    FIRST_NAME          VARCHAR(20),
    LAST_NAME           VARCHAR(20),
    MIDDLE_INIT         VARCHAR(20),
    DEPT_CD             VARCHAR(20),
    DIVISION            VARCHAR(20),
    LOCATION_CD         VARCHAR(20),
    AFFILIATION         VARCHAR(20),
    REQUEST_ID          VARCHAR(32)   NULL,
    PRIMARY KEY (REQ_USER_ID), 
    CONSTRAINT RefPROV_REQUEST931 FOREIGN KEY (REQUEST_ID)
    REFERENCES PROV_REQUEST(REQUEST_ID)
) ENGINE=InnoDB;





CREATE TABLE ATTRIBUTE_MAP (
  ATTRIBUTE_MAP_ID varchar(32) NOT NULL,
  MANAGED_SYS_ID varchar(32) NOT NULL,
  RESOURCE_ID VARCHAR(32) NULL,
/* User, Group, OTHER */
  MAP_FOR_OBJECT_TYPE VARCHAR(20) DEFAULT 'USER',
  ATTRIBUTE_NAME	VARCHAR(50) NULL,
/* CN, DN, UID, ETC   */
  TARGET_ATTRIBUTE_NAME varchar(50) NULL,
/* IS AUTHORITATIVE SRC. 0-FALSE, 1-TRUE */
  AUTHORITATIVE_SRC int default 0,
  ATTRIBUTE_POLICY_ID  VARCHAR(32) NULL,
  RULE_TEXT text,
  STATUS varchar(20) default 'ACTIVE',
  START_DATE 		date default NULL,
  END_DATE 			date default NULL,
  STORE_IN_IAMDB INT DEFAULT 0,
  DATA_TYPE       VARCHAR(20) NULL,
  PRIMARY KEY  (ATTRIBUTE_MAP_ID)
) ENGINE=InnoDB;


CREATE TABLE RECONCILIATION_CONFIG (
  RECON_CONFIG_ID	 varchar(32) NOT NULL,
  RESOURCE_ID 		VARCHAR(32) NULL,
  FREQUENCY         VARCHAR(20) NULL,
  STATUS            VARCHAR(20) NULL DEFAULT 'ACTIVE',
  PRIMARY KEY  (RECON_CONFIG_ID)
) ENGINE=InnoDB;

CREATE TABLE RECONCILIATION_SITUATION (
  RECON_SITUATION_ID	 	varchar(32) NOT NULL,
  RECON_CONFIG_ID 			VARCHAR(32) NULL,
  SITUATION					VARCHAR(40) NULL,
  SITUATION_RESP		    VARCHAR(40) NULL,
  SCRIPT				    VARCHAR(80) NULL,
  PRIMARY KEY  (RECON_SITUATION_ID),
CONSTRAINT RECON_SITUATION FOREIGN KEY (RECON_CONFIG_ID)
    REFERENCES RECONCILIATION_CONFIG(RECON_CONFIG_ID)
) ENGINE=InnoDB;




CREATE TABLE SYNCH_CONFIG (
       SYNCH_CONFIG_ID        	varchar(32) NOT NULL,
       NAME       				varchar(60) 	NULL,
	   STATUS       			VARCHAR(20) 	NULL,
	   SYNCH_SRC				VARCHAR(20) 	NULL, /* CSV FILE, MANAGED_RESOURCE */ 
	   FILE_NAME				VARCHAR(80) 	NULL,
	   SRC_LOGIN_ID				VARCHAR(100) 	NULL,
	   SRC_PASSWORD				VARCHAR(100) 	NULL,
	   SRC_HOST					VARCHAR(100) 	NULL,
       DRIVER					VARCHAR(100) 	NULL,
	   CONNECTION_URL			VARCHAR(100) 	NULL,
	   QUERY					VARCHAR(1000) 	NULL,
	   QUERY_TIME_FIELD			VARCHAR(50) 	NULL,   /* FIELD IN THE TABLE THAT SHOULD BE USED WHEN DOING INCREMENTAL SEARCH */
	   BASE_DN                  VARCHAR(50)     NULL,
	   LAST_EXEC_TIME			DATETIME		NULL,
	   LAST_REC_PROCESSED       VARCHAR(32)     NULL,
	   MANAGED_SYS_ID			VARCHAR(32) 	NULL, 
	   LOAD_MATCH_ONLY			INT 			NULL DEFAULT 0,
	   UPDATE_ATTRIBUTE     	INT 			NULL DEFAULT 1,
	   SYNCH_FREQUENCY			VARCHAR(20) 	NULL,
	   SYNCH_TYPE				VARCHAR(20) 	NULL,
	   DELETE_RULE				VARCHAR(80) 	NULL,
	   PROCESS_RULE				VARCHAR(80)	 	NULL,
	   VALIDATION_RULE			VARCHAR(80) 	NULL,
	   TRANSFORMATION_RULE		VARCHAR(80) 	NULL,
	   MATCH_FIELD_NAME			VARCHAR(40) 	NULL,
	   MATCH_MANAGED_SYS_ID 	VARCHAR(32) 	NULL,
	   MATCH_SRC_FIELD_NAME 	VARCHAR(40) 	NULL,
	   CUSTOM_MATCH_RULE		VARCHAR(100) 	NULL,
	   CUSTOM_ADAPTER_SCRIPT	VARCHAR(100) 	NULL,	
	   CUSTOM_MATCH_ATTR		VARCHAR(40) 	NULL,
	   WS_URL	                VARCHAR(100) 	NULL,
	   WS_SCRIPT		        VARCHAR(100) 	NULL,
PRIMARY KEY (SYNCH_CONFIG_ID) 
) ENGINE=InnoDB;


CREATE TABLE SYNCH_CONFIG_DATA_MAPPING(
    MAPPING_ID    		VARCHAR(32)    NOT NULL,
    SYNCH_CONFIG_ID     VARCHAR(32) NULL,
    IDM_FIELD_NAME      VARCHAR(40),
	SRC_FIELD_NAME		VARCHAR(40),
	MULTIVALUED         INT NULL,
    PRIMARY KEY (MAPPING_ID), 
    CONSTRAINT SYNCH_DATA_MAP FOREIGN KEY (SYNCH_CONFIG_ID)
    REFERENCES SYNCH_CONFIG(SYNCH_CONFIG_ID)
) ENGINE=InnoDB;



/* views */

CREATE VIEW USER_ROLE_VW AS 
SELECT ug.USER_ID, gr.ROLE_ID, gr.SERVICE_ID
FROM USER_GRP ug LEFT JOIN GRP_ROLE gr on (ug.GRP_ID = gr.GRP_ID)
		 WHERE gr.ROLE_ID is not null
 UNION
SELECT ur.USER_ID,  ur.ROLE_ID, ur.SERVICE_ID
FROM USER_ROLE ur 
	WHERE ur.ROLE_ID is not null
	ORDER BY USER_ID;	
	
CREATE VIEW USER_EMAIL_VW AS 
	SELECT *
	FROM EMAIL_ADDRESS
	WHERE NAME = 'EMAIL1' AND PARENT_TYPE='USER';

CREATE VIEW USER_PHONE_VW AS 
SELECT *
FROM PHONE
WHERE NAME = 'DESK PHONE' AND PARENT_TYPE='USER';

CREATE VIEW USER_IDENTITY_VW AS
  SELECT u.*, l.auth_fail_count, l.canonical_name,
  l.current_login_host, l.first_time_login, l.grace_period,
  l.identity_type, l.is_default, l.is_locked, l.last_auth_attempt, l.last_login,
  l.last_login_ip, l.login, l.managed_sys_id, l.prev_login, l.prev_login_ip,
  l.pwd_change_count, l.pwd_exp, l.reset_pwd, l.service_id
  FROM LOGIN l, USERS u
  WHERE l.USER_ID = u.USER_ID;



CREATE VIEW USER_PSWD_EXPIRED_YESTERDAY_VW AS
select LOGIN,l.SERVICE_ID, l.MANAGED_SYS_ID, l.USER_ID, GRACE_PERIOD AS EXPIRATION_DATE,  u.FIRST_NAME, u.LAST_NAME, u.STATUS
FROM LOGIN l,  USERS u
WHERE l.USER_ID = u.USER_ID AND
    MANAGED_SYS_ID = 0 AND
(    (
    GRACE_PERIOD IS NOT NULL AND
    DATE(GRACE_PERIOD) = (CURDATE()-1)
    )
   OR
   (
    PWD_EXP IS NOT NULL AND GRACE_PERIOD IS NULL AND
    DATE(PWD_EXP) = (CURDATE()-1)
    )
);



ALTER TABLE POLICY
 DROP FOREIGN KEY FK_POLICY_POLICY_DEF,
 ADD ENABLEMENT INT DEFAULT '1' AFTER RULE_TEXT;

ALTER TABLE LOGIN
ADD INDEX login_user_indx (USER_ID);

ALTER TABLE USERS
  ADD INDEX USER_EMPLOYEE_INDX (EMPLOYEE_ID);
commit;

commit;
USE openiam;

insert into SECURITY_DOMAIN (DOMAIN_ID, NAME, STATUS, LOGIN_MODULE, AUTH_SYS_ID) values('IDM','IDM','ON-LINE', null,'0');
insert into SECURITY_DOMAIN (DOMAIN_ID, NAME, STATUS, LOGIN_MODULE, AUTH_SYS_ID) values('USR_SEC_DOMAIN','DEFAULT DOMAIN','ON-LINE', null,'0');

SET SQL_SAFE_UPDATES = 0 ;
update SECURITY_DOMAIN
 SET AUTHENTICATION_POLICY='4001',
     PASSWORD_POLICY='4000',
	 AUDIT_POLICY='4002';

insert into SERVICE (SERVICE_ID, SERVICE_NAME, STATUS) values('USR_SEC_DOMAIN','USER SECURITY DOMAIN','ON-LINE');

insert into LANGUAGE (LANGUAGE_CD, LANGUAGE) VALUES ('en','English');
insert into LANGUAGE (LANGUAGE_CD, LANGUAGE) VALUES ('fr','French');
insert into LANGUAGE (LANGUAGE_CD, LANGUAGE) VALUES ('es','Spanish');
insert into LANGUAGE (LANGUAGE_CD, LANGUAGE) VALUES ('de','German');
insert into LANGUAGE (LANGUAGE_CD, LANGUAGE) VALUES ('it','Italian');
insert into LANGUAGE (LANGUAGE_CD, LANGUAGE) VALUES ('nl','Dutch');
insert into LANGUAGE (LANGUAGE_CD, LANGUAGE) VALUES ('pt','Portugese');

insert into METADATA_TYPE(TYPE_ID, DESCRIPTION) values('OrgOpenIAM','OpenIAM');
insert into METADATA_TYPE(TYPE_ID, DESCRIPTION, SYNC_MANAGED_SYS) values('divisionType','Division', 0);
insert into METADATA_TYPE(TYPE_ID, DESCRIPTION, SYNC_MANAGED_SYS) values('departmentType','Department', 0);
insert into METADATA_TYPE(TYPE_ID, DESCRIPTION, SYNC_MANAGED_SYS) values('MANAGED_SYS','Managed System', 0);
insert into METADATA_TYPE(TYPE_ID, DESCRIPTION, SYNC_MANAGED_SYS) values('SYS_ACTION','System Actions', 0);
insert into METADATA_TYPE(TYPE_ID, DESCRIPTION, SYNC_MANAGED_SYS) values('AUTH_REPO','Authentication Repository', 0);
insert into METADATA_TYPE(TYPE_ID, DESCRIPTION, SYNC_MANAGED_SYS) values('WEBSERVICE','Web Service', 0);
insert into METADATA_TYPE(TYPE_ID, DESCRIPTION, SYNC_MANAGED_SYS) values('WEBSERVICE_OP','Web Service Operation', 0);
insert into METADATA_TYPE(TYPE_ID, DESCRIPTION, SYNC_MANAGED_SYS) values('NO-PROVISION-APP','Un-Provisionable Apps', 0);


insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name) values ('401','MANAGED_SYS','SUBMIT_USER_TO_CONNECTOR');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name) values ('402','MANAGED_SYS','INCLUDE_IN_PASSWORD_SYNC');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name) values ('406','MANAGED_SYS','TABLE_NAME');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name) values ('405','MANAGED_SYS','INCLUDE_IN_SYNC');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name) values ('408','MANAGED_SYS','ON_DELETE');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name) values ('407','MANAGED_SYS','GROUP_MEMBERSHIP_ENABLED');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name) values ('409','MANAGED_SYS','PRE_PROCESS');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name) values ('410','MANAGED_SYS','POST_PROCESS');

insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name) values ('411','AUTH_REPO','HOST_URL');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name) values ('412','AUTH_REPO','BASE_DN');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name) values ('413','AUTH_REPO','HOST_LOGIN ID');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name) values ('421','AUTH_REPO','PASSWORD');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name) values ('415','AUTH_REPO','COMMUNICATION_PROTOCOL');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name) values ('416','AUTH_REPO','OBJECT_CLASS');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name) values ('418','AUTH_REPO','SEARCH_ATTRIBUTE');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name) values ('419','AUTH_REPO','MANAGED_SYS_ID');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name) values ('420','AUTH_REPO','DN_ATTRIBUTE');

insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name) values ('430','WEBSERVICE','END_POINT');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name) values ('440','WEBSERVICE_OP','OPERATION_NAME');

insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name) values ('450','NO-PROVISION-APP','URL');


insert into CATEGORY (category_id, parent_id, category_name, show_list) values ('ORG_TYPE', 'ROOT', 'ORGANIZATION Types',0);
insert into CATEGORY_TYPE (category_id, type_id) values('ORG_TYPE','divisionType');
insert into CATEGORY_TYPE (category_id, type_id) values('ORG_TYPE','departmentType');

insert into METADATA_TYPE(TYPE_ID, DESCRIPTION,SYNC_MANAGED_SYS) values('SystemAccount','System Account type',1);
insert into METADATA_TYPE(TYPE_ID, DESCRIPTION,SYNC_MANAGED_SYS) values('InetOrgPerson','InetOrgPerson user type',1);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,SELF_EDITABLE, SELF_VIEWABLE, UI_TYPE,UI_OBJECT_SIZE) values ('101','InetOrgPerson', 'Display Name',1,1,'TEXT','size=20');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,SELF_EDITABLE, SELF_VIEWABLE, UI_TYPE,UI_OBJECT_SIZE) values ('104','InetOrgPerson', 'Preferred Language',1,1,'TEXT','size=20');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,SELF_EDITABLE, SELF_VIEWABLE, UI_TYPE,UI_OBJECT_SIZE) values ('105','InetOrgPerson', 'VehicleLicense',1,1,'TEXT','size=20');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,SELF_EDITABLE, SELF_VIEWABLE, UI_TYPE,UI_OBJECT_SIZE) values ('106','InetOrgPerson', 'Given Name',1,1,'TEXT','size=20');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,SELF_EDITABLE, SELF_VIEWABLE, UI_TYPE,UI_OBJECT_SIZE) values ('107','InetOrgPerson', 'LabeledURI',1,1,'TEXT','size=20');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,SELF_EDITABLE, SELF_VIEWABLE, UI_TYPE,UI_OBJECT_SIZE) values ('108','InetOrgPerson', 'Initials',1,1,'TEXT','size=20');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,SELF_EDITABLE, SELF_VIEWABLE, UI_TYPE,UI_OBJECT_SIZE) values ('110','InetOrgPerson', 'BusinessCategory',1,1,'TEXT','size=20');

insert into METADATA_TYPE(TYPE_ID, DESCRIPTION,SYNC_MANAGED_SYS) values('Contractor','Contractor user type',1);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,SELF_EDITABLE, SELF_VIEWABLE, UI_TYPE,UI_OBJECT_SIZE) values ('131','Contractor', 'Display Name',1,1,'TEXT','size=20');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,SELF_EDITABLE, SELF_VIEWABLE, UI_TYPE,UI_OBJECT_SIZE) values ('134','Contractor', 'Preferred Language',1,1,'TEXT','size=20');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,SELF_EDITABLE, SELF_VIEWABLE, UI_TYPE,UI_OBJECT_SIZE) values ('135','Contractor', 'VehicleLicense',1,1,'TEXT','size=20');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,SELF_EDITABLE, SELF_VIEWABLE, UI_TYPE,UI_OBJECT_SIZE) values ('136','Contractor', 'Given Name',1,1,'TEXT','size=20');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,SELF_EDITABLE, SELF_VIEWABLE, UI_TYPE,UI_OBJECT_SIZE) values ('137','Contractor', 'LabeledURI',1,1,'TEXT','size=20');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,SELF_EDITABLE, SELF_VIEWABLE, UI_TYPE,UI_OBJECT_SIZE) values ('138','Contractor', 'Initials',1,1,'TEXT','size=20');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,SELF_EDITABLE, SELF_VIEWABLE, UI_TYPE,UI_OBJECT_SIZE) values ('260','Contractor', 'BusinessCategory',1,1,'TEXT','size=20');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,SELF_EDITABLE, SELF_VIEWABLE, UI_TYPE,UI_OBJECT_SIZE) values ('261','Contractor', 'StartDate',1,1,'TEXT','size=20');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,SELF_EDITABLE, SELF_VIEWABLE, UI_TYPE,UI_OBJECT_SIZE) values ('262','Contractor', 'EndDate',1,1,'TEXT','size=20');


insert into METADATA_TYPE(TYPE_ID, DESCRIPTION) values('DIRECTORY','Directory');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name) values ('140','DIRECTORY', 'Display Name');


insert into METADATA_TYPE(TYPE_ID, DESCRIPTION) values('FILE','File');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name) values ('150','FILE', 'Display Name');


insert into METADATA_TYPE(TYPE_ID, DESCRIPTION) values('URL','URL');
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name) values ('160','URL', 'Display Name');

insert into METADATA_TYPE(TYPE_ID, DESCRIPTION,SYNC_MANAGED_SYS) values('LdapOrgPerson','LdapOrgPerson User type',1);
insert into METADATA_TYPE(TYPE_ID, DESCRIPTION,SYNC_MANAGED_SYS) values('ADUser','AD User type',1);
insert into METADATA_TYPE(TYPE_ID, DESCRIPTION,SYNC_MANAGED_SYS) values('ADGroup','AD User type',1);

insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('300','LdapOrgPerson', 'name','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('301','LdapOrgPerson', 'distinguishedName','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('302','LdapOrgPerson', 'objectclass','',1,1);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('303','LdapOrgPerson', 'aliasedObjectName','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('304','LdapOrgPerson', 'cn','',0,1);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('305','LdapOrgPerson', 'sn','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('306','LdapOrgPerson', 'serialNumber','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('307','LdapOrgPerson', 'c','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('308','LdapOrgPerson', 'l','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('309','LdapOrgPerson', 'st','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('310','LdapOrgPerson', 'street','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('311','LdapOrgPerson', 'o','',0,1);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('312','LdapOrgPerson', 'ou','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('313','LdapOrgPerson', 'title','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('314','LdapOrgPerson', 'description','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('341','LdapOrgPerson', 'givenName','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('342','LdapOrgPerson', 'initials','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('348','LdapOrgPerson', 'uid','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('349','LdapOrgPerson', 'mail','',0,0);

insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('315','LdapOrgPerson', 'businessCategory','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('316','LdapOrgPerson', 'postalAddress','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('317','LdapOrgPerson', 'postalCode','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('318','LdapOrgPerson', 'postOfficeBox','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('319','LdapOrgPerson', 'physicalDeliveryOfficeName','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('320','LdapOrgPerson', 'telephoneNumber','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('321','LdapOrgPerson', 'telexNumber','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('322','LdapOrgPerson', 'teletexTerminalIdentifier','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('323','LdapOrgPerson', 'facsimileTelephoneNumber','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('324','LdapOrgPerson', 'x121Address','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('325','LdapOrgPerson', 'internationaliSDNNumber','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('326','LdapOrgPerson', 'registeredAddress','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('327','LdapOrgPerson', 'destinationIndicator','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('328','LdapOrgPerson', 'preferredDeliveryMethod','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('329','LdapOrgPerson', 'presentationAddress','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('330','LdapOrgPerson', 'supportedApplicationContext','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('331','LdapOrgPerson', 'member','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('332','LdapOrgPerson', 'owner','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('333','LdapOrgPerson', 'roleOccupant','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('334','LdapOrgPerson', 'seeAlso','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('335','LdapOrgPerson', 'userPassword','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('336','LdapOrgPerson', 'userCertificate','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('337','LdapOrgPerson', 'cACertificate','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('338','LdapOrgPerson', 'authorityRevocationList','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('339','LdapOrgPerson', 'certificateRevocationList','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('340','LdapOrgPerson', 'crossCertificatePair','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('343','LdapOrgPerson', 'generationQualifier','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('344','LdapOrgPerson', 'x500UniqueIdentifier','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('346','LdapOrgPerson', 'uniqueMember','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('347','LdapOrgPerson', 'houseIdentifier','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('350','LdapOrgPerson', 'ref','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('351','LdapOrgPerson', 'referral','',0,0);
insert into METADATA_ELEMENT(metadata_id, type_id, attribute_name,DESCRIPTION,MULTI_VALUE,REQUIRED) values ('352','LdapOrgPerson', 'krbName','',0,0);




insert into METADATA_TYPE(TYPE_ID, DESCRIPTION) values('AD_Connector','Active Directory Connector');
insert into METADATA_TYPE(TYPE_ID, DESCRIPTION) values('LDAP_Connector','LDAP Connector');
insert into METADATA_TYPE(TYPE_ID, DESCRIPTION) values('RDBMS_Connector','RDBMS Connector');

insert into METADATA_TYPE(TYPE_ID, DESCRIPTION) values('SOAP_Connector','SOAP Connector');
insert into METADATA_TYPE(TYPE_ID, DESCRIPTION) values('SCRIPT_Connector','Script Connector');
insert into METADATA_TYPE(TYPE_ID, DESCRIPTION) values('GOOGLE_Connector','GOOGLE APPS Connector');
insert into METADATA_TYPE(TYPE_ID, DESCRIPTION) values('LINUX_Connector','Linux Connector');

SET SQL_SAFE_UPDATES = 0 ;
UPDATE METADATA_TYPE
SET ACTIVE = 1, SYNC_MANAGED_SYS = 1;

insert into COMPANY(company_id, company_name, status, type_ID, DOMAIN_NAME, CLASSIFICATION) values('100','OpenIAM', 'ACTIVE', 'OrgOpenIAM','openiam.com', 'ORGANIZATION');
insert into COMPANY(company_id, company_name, status, type_ID, CLASSIFICATION, PARENT_ID ) values('101','Sales', 'ACTIVE', 'departmentType', 'DEPARTMENT', '100');
insert into COMPANY(company_id, company_name, status, type_ID, CLASSIFICATION, PARENT_ID) values('102','Finance', 'ACTIVE', 'departmentType', 'DEPARTMENT', '100');
insert into COMPANY(company_id, company_name, status, type_ID, CLASSIFICATION, PARENT_ID) values('103','Customer Service', 'ACTIVE', 'departmentType', 'DEPARTMENT', '100');
insert into COMPANY(company_id, company_name, status, type_ID, CLASSIFICATION, PARENT_ID) values('104','IT', 'ACTIVE', 'departmentType', 'DEPARTMENT', '100');



insert into CATEGORY(CATEGORY_ID, PARENT_ID, CATEGORY_NAME, SHOW_LIST) VALUES('ROOT','', 'ROOT',0);
insert into CATEGORY(CATEGORY_ID, PARENT_ID, CATEGORY_NAME, SHOW_LIST) VALUES('ACL','', 'ACL Root',0);
insert into CATEGORY(CATEGORY_ID, PARENT_ID, CATEGORY_NAME, SHOW_LIST) VALUES('WebSite','', 'ACL',0);
insert into CATEGORY(CATEGORY_ID, PARENT_ID, CATEGORY_NAME, SHOW_LIST) VALUES('Application','', 'ACL',0);
insert into CATEGORY (category_id, parent_id, category_name, show_list) values ('USER_TYPE', 'ROOT', 'User Types',0);
insert into CATEGORY (category_id, parent_id, category_name, show_list,  DISPLAY_ORDER) values ('MANAGED_SYS_TYPE', 'ROOT', 'Managed System Types',0,0);

insert into CATEGORY (category_id, parent_id, category_name, show_list, DISPLAY_ORDER) values ('CONNECTOR_TYPE', 'ROOT', 'Provisioning Connectors',0,0);


insert into CATEGORY_TYPE (category_id, type_ID) values('USER_TYPE','InetOrgPerson');
insert into CATEGORY_TYPE (category_id, type_ID) values('USER_TYPE','Contractor');
insert into CATEGORY_TYPE (category_id, type_ID) values('USER_TYPE','SystemAccount');

insert into CATEGORY_TYPE (category_id, type_ID) values('CONNECTOR_TYPE','AD_Connector');
insert into CATEGORY_TYPE (category_id, type_ID) values('CONNECTOR_TYPE','LDAP_Connector');
insert into CATEGORY_TYPE (category_id, type_ID) values('CONNECTOR_TYPE','RDBMS_Connector');
insert into CATEGORY_TYPE (category_id, type_ID) values('CONNECTOR_TYPE','SOAP_Connector');
insert into CATEGORY_TYPE (category_id, type_ID) values('CONNECTOR_TYPE','SCRIPT_Connector');
insert into CATEGORY_TYPE (category_id, type_ID) values('CONNECTOR_TYPE','LINUX_Connector');

insert into CATEGORY_TYPE (category_id, type_ID) values('ACL','DIRECTORY');
insert into CATEGORY_TYPE (category_id, type_id) values('ACL','FILE');
insert into CATEGORY_TYPE (category_id, type_id) values('ACL','URL');

insert into CATEGORY_TYPE (category_id, type_ID) values('MANAGED_SYS_TYPE','LdapOrgPerson');
insert into CATEGORY_TYPE (category_id, type_ID) values('MANAGED_SYS_TYPE','ADUser');
insert into CATEGORY_TYPE (category_id, type_ID) values('MANAGED_SYS_TYPE','ADGroup');

SET SQL_SAFE_UPDATES = 0 ;
update CATEGORY
SET DISPLAY_ORDER = 0, SHOW_LIST = 0
WHERE DISPLAY_ORDER IS NULL OR SHOW_LIST IS NULL;


INSERT INTO ROLE (ROLE_ID,SERVICE_ID,ROLE_NAME) VALUES ('SUPER_SEC_ADMIN','IDM','Super Security Admin');
INSERT INTO ROLE (ROLE_ID,SERVICE_ID,ROLE_NAME) VALUES ('SEC_ADMIN','IDM','Security Admin');
INSERT INTO ROLE (ROLE_ID,SERVICE_ID,ROLE_NAME) VALUES ('END_USER','USR_SEC_DOMAIN','End User');
INSERT INTO ROLE (ROLE_ID,SERVICE_ID,ROLE_NAME) VALUES ('HELPDESK','USR_SEC_DOMAIN','Help Desk');


INSERT INTO ROLE (ROLE_ID,SERVICE_ID,ROLE_NAME) VALUES ('HR','USR_SEC_DOMAIN','Human Resource');
INSERT INTO ROLE (ROLE_ID,SERVICE_ID,ROLE_NAME) VALUES ('MANAGER','USR_SEC_DOMAIN','Manager');
INSERT INTO ROLE (ROLE_ID,SERVICE_ID,ROLE_NAME) VALUES ('SECURITY_MANAGER','USR_SEC_DOMAIN','Security Manager');
INSERT INTO ROLE (ROLE_ID,SERVICE_ID,ROLE_NAME) VALUES ('SEC_ADMIN','USR_SEC_DOMAIN','Security Admin');

insert into GRP (GRP_id, grp_name)   values('SUPER_SEC_ADMIN_GRP','Super Admin Group');
insert into GRP (grp_id, grp_name)   values('SEC_ADMIN_GRP','Sec Admin Group');
insert into GRP (grp_id, grp_name)   values('END_USER_GRP','End User Group');

insert into GRP (grp_id, grp_name)   values('HR_GRP','HR Group');
insert into GRP (grp_id, grp_name)   values('MNGR_GRP','Manager Group');
insert into GRP (grp_id, grp_name)   values('SECURITY_GRP','Security Group');

insert into USERS (user_id,first_name, last_name, STATUS, COMPANY_ID ) values('3000','sys','','ACTIVE','100');
insert into USERS (user_id,first_name, last_name, STATUS, COMPANY_ID ) values('3001','sys2','','ACTIVE','100');
insert into USERS (user_id,first_name, last_name, STATUS, COMPANY_ID  ) values('3006','Scott','Nelson','ACTIVE','100');

insert into USERS (user_id,first_name, last_name, STATUS, COMPANY_ID  ) values('3007','HR','User','ACTIVE','100');
insert into USERS (user_id,first_name, last_name, STATUS, COMPANY_ID  ) values('3008','Hiring','Manager','ACTIVE','100');
insert into USERS (user_id,first_name, last_name, STATUS, COMPANY_ID  ) values('3009','Security','Manager','ACTIVE','100');



insert into USER_GRP (USER_GRP_ID, grp_id, user_id) 	values('1000','SUPER_SEC_ADMIN_GRP','3000');
insert into USER_GRP (USER_GRP_ID,grp_id, user_id) 	values('1001','SUPER_SEC_ADMIN_GRP','3001');
insert into USER_GRP (USER_GRP_ID,grp_id, user_id) 	values('1002','END_USER_GRP','3006');

insert into USER_GRP (USER_GRP_ID,grp_id, user_id) 	values('1003','HR_GRP','3007');
insert into USER_GRP (USER_GRP_ID,grp_id, user_id) 	values('1004','MNGR_GRP','3008');
insert into USER_GRP (USER_GRP_ID,grp_id, user_id) 	values('1005','SECURITY_GRP','3009');

INSERT INTO GRP_ROLE(ROLE_ID,GRP_ID, SERVICE_ID) VALUES ('SUPER_SEC_ADMIN','SUPER_SEC_ADMIN_GRP', 'IDM');
INSERT INTO GRP_ROLE(ROLE_ID,GRP_ID, SERVICE_ID) VALUES ('END_USER','END_USER_GRP', 'USR_SEC_DOMAIN');

INSERT INTO GRP_ROLE(ROLE_ID,GRP_ID, SERVICE_ID) VALUES ('HR','HR_GRP', 'USR_SEC_DOMAIN');
INSERT INTO GRP_ROLE(ROLE_ID,GRP_ID, SERVICE_ID) VALUES ('MANAGER','MNGR_GRP', 'USR_SEC_DOMAIN');
INSERT INTO GRP_ROLE(ROLE_ID,GRP_ID, SERVICE_ID) VALUES ('SECURITY_MANAGER','SECURITY_GRP', 'USR_SEC_DOMAIN');


insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('ROOT', NULL ,'Root','Root', null, 'en',0);

insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('IDM','ROOT','Identity','IDENTITY MANAGER','security/index.jsp', 'en',1);

insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('IDMAN','IDM','User Admin','User Admin','idman/index.jsp', 'en',1);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('ACC_CONTROL','IDM','Access Control','Access Control','access/accessIndex.do', 'en',2);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, active, display_order) values('PROVISIONING','IDM','Provisioning','Provisioning','prov/provIndex.do', 'en',1,3);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, active, display_order) values('SECURITY_POLICY','IDM','Policy','Policy','security/policy.do?method=init&nav=reset', 'en',1,4);

insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('ADMIN','IDM','Administration','Administration','admin/index.jsp', 'en',6);

insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('USER','IDMAN','User','User','menunav.do', 'en',1);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('ORG','IDMAN','Organization','Organization','orglist.cnt', 'en',2);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('USER_BULK','IDMAN','User Bulk Ops','User Bulk Ops','userBulk.cnt', 'en',3);



insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('QUERYUSER','USER','Query','Query User','idman/userSearch.do?action=view', 'en',1);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('ADDUSER','USER','Add','Add User','newUser.cnt', 'en',2);

insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('USERSUMMARY','QUERYUSER','User Details','User Details','editUser.cnt', 'en',1);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('USERATTR','QUERYUSER','Ext Attributes','Ext Attributes','userAttr.cnt', 'en',2);

insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('USERIDENTITY','QUERYUSER','Identities','User Identities','userIdentity.cnt', 'en',3);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('USERGROUP','QUERYUSER','Group','User Groups','userGroup.cnt', 'en',4);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('USERROLE','QUERYUSER','Role','User Role','userRole.cnt', 'en',5);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('USERORG','QUERYUSER','Affiliations','Affiliations','userOrg.cnt', 'en',6);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('USERHISTORY','QUERYUSER','History','User History','userHistory.cnt', 'en',7);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('USERPSWDRESET','QUERYUSER','Password Reset','Password Reset','resetPassword.cnt', 'en',8);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('DELG_FILTER','QUERYUSER','Delegation Filter','Delegation Filter','userDelegationFilter.cnt', 'en',8);



insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, active, display_order) values('SECURITY_GROUP','ACC_CONTROL','Group','Group','grouplist.cnt', 'en',1,1);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, active, display_order) values('SECURITY_ROLE','ACC_CONTROL','Role','Role','rolelist.cnt', 'en',1,2);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, active, display_order) values('SECURITY_RES','ACC_CONTROL','Resource','Resource','resourcelist.cnt', 'en',1,3);


insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('RESSUMMARY','SECURITY_RES','Resource Details','Resource Details','resourceDetail.cnt', 'en',1);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('RESPOLICYMAP','SECURITY_RES','Policy Map','Policy Map','resourceMap.cnt', 'en',2);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('RESAPPROVER','SECURITY_RES','Approval Flow','Approval Flow','resApprovalFlow.cnt', 'en',3);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('RESRECONCILE','SECURITY_RES','Reconciliation','Reconciliation','reconcilConfig.cnt', 'en',4);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('RESENTITLEMENT','SECURITY_RES','Entitlement','Entitlement','resourceEntitlement.cnt', 'en',5);

/* ROLE MENU */

insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('ROLE_SUMMARY','SECURITY_ROLE','Detail','Role Details','roleDetail.cnt', 'en',1);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('ROLE_RESMAP','SECURITY_ROLE','Resource Map','Resource Map','roleResource.cnt', 'en',2);

	
/* Provisioning MENU options */

insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('PROVCONNECT','PROVISIONING','Connectors','Provisioning Connectors','connectorList.cnt', 'en',3);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('MNGSYS','PROVISIONING','Managed Resource','Managed Connections','managedSysList.cnt', 'en',4);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('SYNCUSER','PROVISIONING','Synchronization','Synchronization','syncUser.cnt', 'en',3);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('SYNCLOG','PROVISIONING','LOG Viewer','LOG Viewer','syncExecLog.cnt', 'en',4);


insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('SYNCDETAIL','SYNCUSER','Configuration','Configuration','syncConfiguration.cnt', 'en',1);


/* Admin MENU options */
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('SECDOMAIN','ADMIN','Security Domain','Security Domain','secDomainList.cnt', 'en',1);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('LOCATION','ADMIN','Location','Location','locationList.cnt', 'en',2);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('CHALLENGE','ADMIN','Challenge Quest','Challenge Quest','challengeQuestList.cnt', 'en',3);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('BATCH_PROC','ADMIN','Batch Processes','Batch Processes','batchList.cnt', 'en',4);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('METADATA','ADMIN','Metadata','Metadata','metadataTypeList.cnt', 'en',5);



insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('REPORT','IDM','Report','Report','security/reportIndex.do', 'en',5);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('AUDITREPORT','REPORT','Audit Reports','Audit Information Reports','', 'en',2);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('AUDIT_RPT','AUDITREPORT','Audit Report','Audit Report','auditReport.cnt', 'en',1);

/* Self Service MENU options */
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, display_order) values('SELFSERVICE', 'ROOT' ,'SELF SERVICE','SELF SERVICE','', 'en',0);

insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, display_order, PUBLIC_URL) values('ACCESSCENTER','SELFSERVICE', 'Access Management Center', 'Access Management Center', null, 'en', '1',0);

insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, display_order, PUBLIC_URL) values('REQINBOX', 'ACCESSCENTER' , 'In-Box','In-Box','myPendingRequest.selfserve', 'en','3',0);
INSERT INTO MENU (MENU_ID,LANGUAGE_CD,MENU_GROUP,MENU_NAME,MENU_DESC,URL,ACTIVE,DISPLAY_ORDER,PUBLIC_URL) VALUES ('CREATEREQ','en','ACCESSCENTER','Change Access','Change Access','createRequest.selfserve',null,'4',0);

insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, display_order, PUBLIC_URL) values('MANAGEREQ', 'ACCESSCENTER' , 'Request History','Request History','requestList.selfserve', 'en','5',0);

insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, display_order, PUBLIC_URL) values('NEWUSER','ACCESSCENTER','New User', 'New User', 'newHire.selfserve', 'en', '6',0);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, display_order, PUBLIC_URL) values('NEWUSER-NOAPPRV','ACCESSCENTER','New User-NO Approver', 'New User-No Approver', 'newUserNoApp.selfserve', 'en', '7',0);

insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, display_order, PUBLIC_URL) values('SELFCENTER','SELFSERVICE','Self Service Center', 'Self Service Center', null, 'en', '2',0);

insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, display_order, PUBLIC_URL) values('DIRECTORY','SELFCENTER','Directory Lookup', 'Directory Lookup', 'pub/directory.do?method=view', 'en', '1',1);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, display_order, PUBLIC_URL) values('CHNGPSWD','SELFCENTER', 'Change Password', 'Change Password', 'passwordChange.selfserve', 'en', '3',0);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, display_order, PUBLIC_URL) values('IDQUEST','SELFCENTER', 'Challenge Response', 'Challenge Response', 'identityQuestion.selfserve', 'en', '4',0);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, display_order, PUBLIC_URL) values('PROFILE','SELFCENTER', 'Edit Your Profile', 'Edit Your Profile', 'profile.selfserve', 'en', '6',0);


insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER, PUBLIC_URL) values('SELF_QUERYUSER','ACCESSCENTER','Manage User','Manage User','idman/userSearch.do?action=view', 'en',1,0);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('SELF_USERSUMMARY','SELF_QUERYUSER','User Details','User Details','editUser.selfserve', 'en',1);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('SELF_USERIDENTITY','SELF_QUERYUSER','Identities','User Identities','userIdentity.selfserve', 'en',2);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('SELF_USERGROUP','SELF_QUERYUSER','Group','User Groups','userGroup.selfserve', 'en',3);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('SELF_USERROLE','SELF_QUERYUSER','Role','User Role','userRole.selfserve', 'en',4);
insert into MENU (menu_id, menu_group, menu_name,menu_desc,url,LANGUAGE_CD, DISPLAY_ORDER) values('SELF_USERPSWDRESET','SELF_QUERYUSER','Password Reset','Password Reset','resetPassword.selfserve', 'en',7);


INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('BATCH_PROC','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('REPORT','SUPER_SEC_ADMIN','IDM');



/* service admin role */

INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('IDMAN','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('SECURITY_POLICY','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('ACC_CONTROL','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('PROVISIONING','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('ADMIN','SUPER_SEC_ADMIN','IDM');



INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('SECDOMAIN','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('METADATA','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('LOCATION','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('ORGPOLICY','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('SYSNOTIFICATION','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('CHALLENGE','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('REFDATA','SUPER_SEC_ADMIN','IDM');


INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('ORG','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('USER','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('USER_BULK','SUPER_SEC_ADMIN','IDM');

INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('SYNCUSER','SUPER_SEC_ADMIN','IDM');

INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('SYNCDETAIL','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('SYNCLOG','SUPER_SEC_ADMIN','IDM');


INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('QUERYUSER','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('ADDUSER','SUPER_SEC_ADMIN','IDM');


INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('USERSUMMARY','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('USERIDENTITY','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('USERGROUP','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('USERROLE','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('USERHISTORY','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('USERPSWDRESET','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('DELG_FILTER','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('USERATTR','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('USERORG','SUPER_SEC_ADMIN','IDM');

INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('RESSUMMARY','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('RESPOLICYMAP','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('RESAPPROVER','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('RESRECONCILE','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('RESENTITLEMENT','SUPER_SEC_ADMIN','IDM');


INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('ROLE_SUMMARY','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('ROLE_RESMAP','SUPER_SEC_ADMIN','IDM');


INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('SECURITY_GROUP','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('SECURITY_ROLE','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('SECURITY_RES','SUPER_SEC_ADMIN','IDM');

INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('PROVCONNECT','SUPER_SEC_ADMIN','IDM');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('MNGSYS','SUPER_SEC_ADMIN','IDM');


INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID,SERVICE_ID) VALUES('IDSYNC','SUPER_SEC_ADMIN','IDM');

INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('SELFSERVICE','END_USER','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('ACCESSCENTER','END_USER','USR_SEC_DOMAIN');


INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('SELF_REGISTER','END_USER','USR_SEC_DOMAIN');

INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('REQINBOX','END_USER','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('MANAGEREQ','END_USER','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('SELFCENTER','END_USER','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('DIRECTORY','END_USER','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('CHNGPSWD','END_USER','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('IDQUEST','END_USER','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('PROFILE','END_USER','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('REPORTINC','END_USER','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('CONTADMIN','END_USER','USR_SEC_DOMAIN');

INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('NEWUSER','END_USER','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('NEWUSER-NOAPPRV','END_USER','USR_SEC_DOMAIN');



INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('REQINBOX','SUPER_SEC_ADMIN','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('MANAGEREQ','SUPER_SEC_ADMIN','USR_SEC_DOMAIN');

INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('SELF_USERSUMMARY','HELPDESK','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('SELF_USERIDENTITY','HELPDESK','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('SELF_USERGROUP','HELPDESK','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('SELF_USERROLE','HELPDESK','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('SELF_USERPSWDRESET','HELPDESK','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('SELF_QUERYUSER','HELPDESK','USR_SEC_DOMAIN');

INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('SELFSERVICE','HELPDESK','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('ACCESSCENTER','HELPDESK','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('MANAGEREQ','HELPDESK','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('SELFCENTER','HELPDESK','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('DIRECTORY','HELPDESK','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('CHNGPSWD','HELPDESK','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('IDQUEST','HELPDESK','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('PROFILE','HELPDESK','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('CREATEREQ','HELPDESK','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('NEWUSER','HELPDESK','USR_SEC_DOMAIN');
INSERT INTO PERMISSIONS(MENU_ID,ROLE_ID, SERVICE_ID) VALUES('NEWUSER-NOAPPRV','HELPDESK','USR_SEC_DOMAIN');


insert into USERS (user_id,first_name, last_name, STATUS, COMPANY_ID  ) values('3010','Help','Desk','ACTIVE','100');



INSERT INTO USER_ROLE (USER_ROLE_ID, SERVICE_ID, ROLE_ID, USER_ID, STATUS) VALUES('101','USR_SEC_DOMAIN','HELPDESK','3010','ACTIVE');

insert into LOGIN(SERVICE_ID, LOGIN, MANAGED_SYS_ID, USER_ID, PASSWORD,RESET_PWD, IS_LOCKED, AUTH_FAIL_COUNT) VALUES('IDM','sysadmin','0','3000','b83a81d1b3f5f209a70ec02c3d7f7fc5',0,0,0);
insert into LOGIN(SERVICE_ID, LOGIN, MANAGED_SYS_ID, USER_ID, PASSWORD,RESET_PWD, IS_LOCKED, AUTH_FAIL_COUNT) VALUES('USR_SEC_DOMAIN','sysadmin','0','3000','b83a81d1b3f5f209a70ec02c3d7f7fc5',0,0,0);

insert into LOGIN(SERVICE_ID, LOGIN, MANAGED_SYS_ID, USER_ID, PASSWORD,RESET_PWD, IS_LOCKED, AUTH_FAIL_COUNT) VALUES('IDM','sysadmin2','0','3001','b83a81d1b3f5f209a70ec02c3d7f7fc5',0,0,0);
insert into LOGIN(SERVICE_ID, LOGIN, MANAGED_SYS_ID, USER_ID, PASSWORD,RESET_PWD, IS_LOCKED, AUTH_FAIL_COUNT) VALUES('USR_SEC_DOMAIN','snelson','0','3006','b83a81d1b3f5f209a70ec02c3d7f7fc5',0,0,0);

insert into LOGIN(SERVICE_ID, LOGIN, MANAGED_SYS_ID, USER_ID, PASSWORD,RESET_PWD, IS_LOCKED, AUTH_FAIL_COUNT) VALUES('USR_SEC_DOMAIN','hrmanager','0','3007','b83a81d1b3f5f209a70ec02c3d7f7fc5',0,0,0);
insert into LOGIN(SERVICE_ID, LOGIN, MANAGED_SYS_ID, USER_ID, PASSWORD,RESET_PWD, IS_LOCKED, AUTH_FAIL_COUNT) VALUES('USR_SEC_DOMAIN','manager','0','3008','b83a81d1b3f5f209a70ec02c3d7f7fc5',0,0,0);
insert into LOGIN(SERVICE_ID, LOGIN, MANAGED_SYS_ID, USER_ID, PASSWORD,RESET_PWD, IS_LOCKED, AUTH_FAIL_COUNT) VALUES('USR_SEC_DOMAIN','secmanager','0','3009','b83a81d1b3f5f209a70ec02c3d7f7fc5',0,0,0);
insert into LOGIN(SERVICE_ID, LOGIN, MANAGED_SYS_ID, USER_ID, PASSWORD,RESET_PWD, IS_LOCKED, AUTH_FAIL_COUNT) VALUES('USR_SEC_DOMAIN','helpdesk','0','3010','b83a81d1b3f5f209a70ec02c3d7f7fc5',0,0,0);

SET SQL_SAFE_UPDATES = 0 ;
update LOGIN set reset_pwd = 0, is_locked = 0;


INSERT INTO AUTH_STATE(USER_ID, TOKEN, AUTH_STATE, AA, EXPIRATION) values('3000', NULL,0,'OPENIAM',0);
INSERT INTO AUTH_STATE(USER_ID, TOKEN, AUTH_STATE, AA, EXPIRATION) values('3001', NULL,0,'OPENIAM',0);
INSERT INTO AUTH_STATE(USER_ID, TOKEN, AUTH_STATE, AA, EXPIRATION) values('3006', NULL,0,'OPENIAM',0);

INSERT INTO AUTH_STATE(USER_ID, TOKEN, AUTH_STATE, AA, EXPIRATION) values('3007', NULL,0,'OPENIAM',0);
INSERT INTO AUTH_STATE(USER_ID, TOKEN, AUTH_STATE, AA, EXPIRATION) values('3008', NULL,0,'OPENIAM',0);
INSERT INTO AUTH_STATE(USER_ID, TOKEN, AUTH_STATE, AA, EXPIRATION) values('3009', NULL,0,'OPENIAM',0);

/* Sequence Gen*/
insert into SEQUENCE_GEN (attribute, next_id)	values('METADATA_ID','3000');
insert into SEQUENCE_GEN (attribute, next_id)	values('METADATA_VALUE_ID','2000');
insert into SEQUENCE_GEN (attribute, next_id)	values('METADATA_ELEMENT_ID','2000');
insert into SEQUENCE_GEN (attribute, next_id)	values('CATEGORY_ID','3000');
INSERT INTO SEQUENCE_GEN (ATTRIBUTE,NEXT_ID) 	VALUES('TYPE_ID','1013');
insert into SEQUENCE_GEN (attribute, next_id) values ('PRIVILEGE_ID', '1001');
insert into SEQUENCE_GEN (attribute, next_id) values('SERVICE_ID','1000');
insert into SEQUENCE_GEN (attribute, next_id) values('DOMAIN_ID','1000');
insert into SEQUENCE_GEN (attribute, next_id) values ('ORG_STRUCTURE_ID','200');
insert into SEQUENCE_GEN (attribute, next_id) values ('MANAGED_SYS_ID','100');



insert into STATUS ( CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values( 'USER', 'PENDING_START_DATE','en','String','PENDING_START_DATE','100', 'IDM');
insert into STATUS ( CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values( 'USER', 'PENDING_APPROVAL','en','String','PENDING_APPROVAL','100', 'IDM');
insert into STATUS ( CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values( 'USER', 'ACTIVE','en','String','ACTIVE','100', 'IDM');
insert into STATUS ( CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values( 'USER', 'INACTIVE','en','String','INACTIVE','100', 'IDM');
insert into STATUS ( CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values( 'USER', 'DELETED','en','String','DELETED','100', 'IDM');
insert into STATUS ( CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values( 'USER', 'APPROVAL_DECLINED','en','String','APPROVAL_DECLINED','100', 'IDM');
insert into STATUS ( CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values( 'USER', 'PENDING_USER_VALIDATION','en','String','PENDING_USER_VALIDATION','100', 'IDM');
insert into STATUS ( CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values( 'USER', 'PENDING_INITIAL_LOGIN','en','String','PENDING_INITIAL_LOGIN','100', 'IDM');
insert into STATUS ( CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values( 'USER', 'LEAVE','en','String','LEAVE','100', 'IDM');
insert into STATUS ( CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values( 'USER', 'TERMINATE','en','String','TERMINATE','100', 'IDM');
insert into STATUS ( CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values( 'USER', 'RETIRED','en','String','RETIRED','100', 'IDM');


insert into STATUS ( CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values( 'USER_2ND_STATUS', 'LOCKED','en','String','LOCKED','100', 'IDM');
insert into STATUS ( CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values( 'USER_2ND_STATUS', 'LOCKED_ADMIN','en','String','LOCKED_ADMIN','100', 'IDM');
insert into STATUS ( CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values( 'USER_2ND_STATUS', 'DISABLED','en','String','DISABLED','100', 'IDM');

insert into STATUS ( CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values( 'OPERATION', 'DL','en','String','DELETE','100', 'IDM');
insert into STATUS ( CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values( 'OPERATION', 'RJ','en','String','REJECT','100', 'IDM');
insert into STATUS ( CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values( 'OPERATION', 'BL','en','String','DISABLE','100', 'IDM');
insert into STATUS ( CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values( 'OPERATION', 'UB','en','String','UN-DISABLE','100', 'IDM');

insert into STATUS ( CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values( 'SERVICE_STATUS', 'READY','en','String','READY','100', 'IDM');
insert into STATUS ( CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values( 'SERVICE_STATUS', 'OFF-LINE','en','String','OFF-LINE','100', 'IDM');


/* JOB CODES*/
insert into STATUS ( CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values( 'JOB_CODE', 'MANAGER','en','String','MANAGER','100', 'USR_SEC_DOMAIN');
insert into STATUS ( CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values( 'JOB_CODE', 'SECURITY MANAGER','en','String','SECURITY MANAGER','100', 'USR_SEC_DOMAIN');
insert into STATUS ( CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values( 'JOB_CODE', 'SERVICE REP','en','String','SERVICE REP','100', 'USR_SEC_DOMAIN');
insert into STATUS ( CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values( 'JOB_CODE', 'SALES REP','en','String','SALES REP','100', 'USR_SEC_DOMAIN');

/* USER EMPLOYMENT TYPE*/
insert into STATUS ( CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values( 'USER_TYPE', 'SYS ACCOUNT','en','String','SYSTEM ACCOUNT','100', 'USR_SEC_DOMAIN');

insert into STATUS (CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values('OBJECT_TYPE', 'ACCNT','en','String','Account','100', 'IDM');
insert into STATUS (CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values('OBJECT_TYPE', 'ADMIN','en','String','Administrator','100', 'IDM');
insert into STATUS (CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values('OBJECT_TYPE', 'ADMGP','en','String','Admin Group','100', 'IDM');
insert into STATUS (CODE_GROUP, status_cd, LANGUAGE_CD, status_type, description, COMPANY_OWNER_ID, SERVICE_ID) values('OBJECT_TYPE', 'ATTR','en','String','Attribute','100', 'IDM');


/* locations */
insert into LOCATION(LOCATION_ID, NAME, COUNTRY, BLDG_NUM, ADDRESS1, CITY, STATE, POSTAL_CD) VALUES ('100', 'HQ', 'US', '111' ,'MAIN ST', 'MY TOWN', 'NY', '12345');
insert into LOCATION(LOCATION_ID, NAME, COUNTRY, BLDG_NUM, ADDRESS1, CITY, STATE, POSTAL_CD) VALUES ('101', 'BRANCH', 'US', '112' ,'Next ST', 'MY TOWN', 'CT', '67890');


/* POLICY ENTRIES */

insert into POLICY_DEF(POLICY_DEF_ID, NAME, DESCRIPTION, POLICY_TYPE, LOCATION_TYPE) VALUES ('100','PASSWORD POLICY','Out of the box Password Policy', '2','DB' );

INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('110','100','PWD_HIST_VER','Password history versions', null,'org.openiam.idm.srvc.pswd.rule.PasswordHistoryRule', 'PSWD_COMPOSITION');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('111','100','PWD_EXPIRATION','Password expiration', null, '', '');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('141','100','PWD_EXPIRATION_ON_RESET','Password expiration time on reset', null, '', '');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('133','100','PWD_EXP_GRACE','Password expiration grace period', null, '',null);
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('134','100','CHNG_PSWD_ON_RESET','Change Password after reset', null, '', null);
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION,OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP)  VALUES('112','100','PWD_LEN','Password length','RANGE', 'org.openiam.idm.srvc.pswd.rule.PasswordLengthRule', 'PSWD_COMPOSITION');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('113','100','NUMERIC_CHARS','Numeric characters(Min-Max)','RANGE','org.openiam.idm.srvc.pswd.rule.NumericCharRule', 'PSWD_COMPOSITION');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('114','100','UPPERCASE_CHARS','Uppercase characters(Min-Max)','RANGE','org.openiam.idm.srvc.pswd.rule.UpperCaseRule', 'PSWD_COMPOSITION');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('115','100','LOWERCASE_CHARS','Lowercase characters(Min-Max)','RANGE','org.openiam.idm.srvc.pswd.rule.LowerCaseRule', 'PSWD_COMPOSITION');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('116','100','NON_ALPHA_CHARS','Non-alpha numeric symbols(Min-Max)','RANGE','org.openiam.idm.srvc.pswd.rule.NonAlphaNumericRule', 'PSWD_COMPOSITION');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('117','100','ALPHA_CHARS','Alpha character(Min-Max)','RANGE','org.openiam.idm.srvc.pswd.rule.AlphaCharRule', 'PSWD_COMPOSITION');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('120','100','DICTIONARY_CHECK','Dictionary Check','boolean','', '');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('121','100','PWD_LOGIN','Reject password = Login Id','boolean','org.openiam.idm.srvc.pswd.rule.PasswordNotPrincipalRule', 'PSWD_COMPOSITION');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('122','100','PWD_NAME','Reject password = First / Last name','boolean','org.openiam.idm.srvc.pswd.rule.PasswordNotNameRule', 'PSWD_COMPOSITION');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('123','100','VOWELS_IN_PWD','Reject Password containing vowels ','boolean','', 'PSWD_COMPOSITION');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('124','100','REJECT_NUM_START','Reject passwords that begin or end with a numeric character','boolean', '', 'PSWD_COMPOSITION');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('125','100','HAS_NUMERIC_AT','Password to contain numeric chars at following positions', null,'', 'PSWD_COMPOSITION');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('126','100','HAS_ALPHA_NUM_AT','Password to contain alpha numeric chars at following positions', null,'', 'PSWD_COMPOSITION');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('128','100','FORCE_NON_ALPHA_NUM_AT','Force password to contain non-alpha numeric chars at following positions', null,'', 'PSWD_COMPOSITION');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('129','100','PWD_EXP_WARN','Days to password expiration warning', null,null, 'MISC');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('130','100','QUEST_COUNT','Number of questions to display', null, null, null);
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('131','100','QUEST_SRC','Source of questions', null,null, 'SELFSERVE');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('132','100','QUEST_LIST','Question list', null,null, 'SELFSERVE');

INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('138','100','PWD_EQ_PWD','RejectPassword Equals password', null,'org.openiam.idm.srvc.pswd.rule.PasswordNotPasswordRule', 'PSWD_COMPOSITION');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('139','100','RESET_BY_USER','Reject reset by user', null,'org.openiam.idm.srvc.pswd.rule.ChangePasswordByUserRule', 'PSWD_COMPOSITION');
/*INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('140','100','RESET_PER_TIME','Reset allowed per time unit', null,'org.openiam.idm.srvc.pswd.rule.PasswordChangesFrequencyRule', 'PSWD_COMPOSITION'); */
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('142','100','PASSWORD_CHANGE_ALLOWED','Determines how many times you are allowed to change your password', null,'org.openiam.idm.srvc.pswd.rule.PasswordChangeAllowedRule', 'PSWD_COMPOSITION');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('170','100','REJECT_CHARS_IN_PSWD','Characters not allowed in a password', null,'org.openiam.idm.srvc.pswd.rule.RejectCharactersRule', 'PSWD_COMPOSITION');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, POLICY_PARAM_HANDLER,PARAM_GROUP) VALUES('171','100','QUEST_ANSWER_CORRECT','Number of answers that are required to be correct', null, null, null);


/* Authentication Policy */
insert into POLICY_DEF(POLICY_DEF_ID, NAME, DESCRIPTION, POLICY_TYPE, LOCATION_TYPE) VALUES ('103','AUTHENTICATION POLICY','Out of the box Authentication Policy', '4','DB' );
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION) VALUES('157','103','FAILED_AUTH_COUNT','Failed Authentication Attempts');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION) VALUES('151','103','AUTO_UNLOCK_TIME','UnLock account in n minutes');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION) VALUES('152','103','TOKEN_TYPE','SSO Token Type');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION) VALUES('159','103','TOKEN_LIFE','SSO Token Type Life');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION) VALUES('153','103','LOGIN_MODULE_SEL_POLCY','Policy to select the login module');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION) VALUES('154','103','SUCCESS_URL','URL to forward on authn success');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION) VALUES('155','103','FAIL_URL','URL to forward on authn fail');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION) VALUES('158','103','DEFAULT_LOGIN_MOD','Default Login Module');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION) VALUES('162','103','TOKEN_ISSUER','Issuer of the SSO Token');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION) VALUES('163','103','LOGIN_MOD_TYPE','Type of authentication module');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION) VALUES('164','103','AUTH_REPOSITORY','Authentication Repository');

INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION) VALUES('179','103','HOST_URL','URL of the host system');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION) VALUES('172','103','HOST_LOGIN','Login to the host');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION) VALUES('173','103','HOST_PASSWORD','Password to the host');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION) VALUES('174','103','BASEDN','Type of authentication module');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION) VALUES('175','103','PROTOCOL','Protocol');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION) VALUES('176','103','KEY_ATTRIBUTE','Name of the Primary Key Attribute');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION) VALUES('178','103','MANAGED_SYS_ID','Managed system Id');


insert into POLICY_DEF(POLICY_DEF_ID, NAME, DESCRIPTION, POLICY_TYPE, LOCATION_TYPE) VALUES ('104','ATTRIBUTE POLICY','Attribute value policies.', '5','DB' );

SET SQL_SAFE_UPDATES = 0 ;
update POLICY_DEF_PARAM
	set repeats = 0
where repeats is null;

insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY) VALUES ('4000','100', 'Default Pswd Policy', 'Default Password Policy', 1,curdate(), '3000');

insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY) VALUES ('4001','103', 'Default Authn Policy', 'Default Authentication Policy', 1,curdate(), '3000');


/* Default Authn policy param */
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION,VALUE1)VALUES ('4101','151', '4001', 'AUTO_UNLOCK_TIME', '','30');
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION,VALUE1)VALUES ('4102','152', '4001', 'TOKEN_TYPE', '','OPENIAM_TOKEN');
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION,VALUE1)VALUES ('4103','153', '4001', 'LOGIN_MODULE_SEL_POLCY', '','');
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION,VALUE1)VALUES ('4104','154', '4001', 'SUCCESS_URL', '','');
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION,VALUE1)VALUES ('4105','155', '4001', 'FAIL_URL', '','');
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION,VALUE1)VALUES ('4107','157', '4001', 'FAILED_AUTH_COUNT', '','3');
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION,VALUE1)VALUES ('4108','158', '4001', 'DEFAULT_LOGIN_MOD', '','org.openiam.idm.srvc.auth.spi.DefaultLoginModule');
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION,VALUE1)VALUES ('4109','159', '4001', 'TOKEN_LIFE', '','30');
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION,VALUE1)VALUES ('4110','162', '4001', 'TOKEN_ISSUER', '','openiam');
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION,VALUE1)VALUES ('4111','163', '4001', 'LOGIN_MOD_TYPE', '','1');
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION,VALUE1)VALUES ('4112','164', '4001', 'AUTH_REPOSITORY', '',null);

/* Default Password policy param */
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION,VALUE1)VALUES ('4000','116', '4000', 'NON_ALPHA_CHARS', 'RANGE',null);
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION,VALUE1)VALUES ('4001','131', '4000', 'QUEST_SRC', '','USER');
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION,VALUE1)VALUES ('4004','117', '4000', 'ALPHA_CHARS', 'RANGE','');
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION, VALUE1) VALUES ('4007', '114', '4000', 'UPPERCASE_CHARS', 'RANGE', null);
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION, VALUE1) VALUES ('4008', '113', '4000', 'NUMERIC_CHARS', 'RANGE', 1);
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION, VALUE1) VALUES ('4010', '122', '4000', 'PWD_NAME', 'boolean', null);
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION, VALUE1,VALUE2) VALUES ('4011', '112', '4000', 'PWD_LEN', 'RANGE', 8,12);
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION, VALUE1) VALUES ('4012', '120', '4000', 'DICTIONARY_CHECK', 'boolean', null);
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION, VALUE1) VALUES ('4013', '110', '4000', 'PWD_HIST_VER', null, 6);
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION, VALUE1) VALUES ('4015', '132', '4000', 'QUEST_LIST', null, null);
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION, VALUE1) VALUES ('4016', '130', '4000', 'QUEST_COUNT', null, 3);
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION, VALUE1) VALUES ('4017', '121', '4000', 'PWD_LOGIN', 'boolean', null);
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION, VALUE1) VALUES ('4019', '115', '4000', 'LOWERCASE_CHARS', 'RANGE', null);
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION, VALUE1) VALUES ('4020', '129', '4000', 'PWD_EXP_WARN', null, 2);
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION, VALUE1) VALUES ('4023', '111', '4000', 'PWD_EXPIRATION', null, 90);
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION, VALUE1) VALUES ('4054', '141', '4000', 'PWD_EXPIRATION_ON_RESET', null, 2);
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION, VALUE1) VALUES ('4050', '133', '4000', 'PWD_EXP_GRACE', null, 1);
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION, VALUE1) VALUES ('4051', '134', '4000', 'CHNG_PSWD_ON_RESET', null, 1);

insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION, VALUE1) VALUES ('4055', '142', '4000', 'PASSWORD_CHANGE_ALLOWED', null, 1);
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION, VALUE1) VALUES ('4056', '170', '4000', 'REJECT_CHARS_IN_PSWD', null, '<>');
insert into POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, OPERATION, VALUE1) VALUES ('4057', '171', '4000', 'QUEST_ANSWER_CORRECT', null, 3);

INSERT INTO POLICY_OBJECT_ASSOC (POLICY_OBJECT_ID, POLICY_ID, ASSOCIATION_LEVEL, ASSOCIATION_VALUE) VALUES ('1100', '4000', 'GLOBAL', 'GLOBAL');


insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT, RULE_SRC_URL) VALUES ('4501','104', 'cn', 'commonName', 1,curdate(), '3000', '','provision/cn.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT, RULE_SRC_URL) VALUES ('4502','104', 'mail', 'email address', 1,curdate(), '3000', '','provision/mail.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT, RULE_SRC_URL) VALUES ('4540','104', 'userDefineEmail', 'email address', 1,curdate(), '3000', '','provision/emailUserDefined.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4503','104', 'o', 'organization name', 1,curdate(), '3000', '','provision/o.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4504','104', 'ou', 'organizationalUnitName', 1,curdate(), '3000', '','provision/ou.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4505','104', 'postalCode', 'commonName', 1,curdate(), '3000', '','provision/postalCode.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4506','104', 'sn', 'surname', 1,curdate(), '3000', '','provision/sn.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4507','104', 'st', 'stateOrProvinceName', 1,curdate(), '3000', '','provision/st.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4508','104', 'street', 'streetAddress', 1,curdate(), '3000', '','provision/street.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4509','104', 'userPassword', 'password', 1,curdate(), '3000', '','provision/userPassword.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4510','104', 'postalAddress', 'postalAddress', 1,curdate(), '3000', '','provision/postalAddress.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4511','104', 'telephoneNumber', 'Primary Telephone', 1,curdate(), '3000', '','provision/telephone.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4512','104', 'facsimileTelephoneNumber', 'Fax', 1,curdate(), '3000', '','provision/fax.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4513','104', 'mobile', 'mobileTelephoneNumber', 1,curdate(), '3000', '','provision/mobile.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4514','104', 'gn', 'givenName', 1,curdate(), '3000', '','provision/gn.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4515','104', 'uid', 'User Id', 1,curdate(), '3000', '','provision/uid.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4516','104', 'departmentCD', 'Department Code', 1,curdate(), '3000', '','provision/deptcd.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4517','104', 'displayName', 'Display Name', 1,curdate(), '3000', '','provision/displayName.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4518','104', 'employeeType', 'Employee Type', 1,curdate(), '3000', '','provision/employeeType.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4519','104', 'initials', 'Intials', 1,curdate(), '3000', '','provision/initials.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4521','104', 'objectclass', 'Department Number', 1,curdate(), '3000', '','provision/objectclass.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4522','104', 'title', 'Title', 1,curdate(), '3000', '','provision/title.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4541','104', 'dob', 'Date of Birth', 1,curdate(), '3000', '','provision/dob.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4542','104', 'middleInit', 'Middle Initial', 1,curdate(), '3000', '','provision/middleInit.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4543','104', 'employeeId', 'Employee ID', 1,curdate(), '3000', '','provision/employeeId.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4544','104', 'userDefinedPassword', 'Password By User', 1,curdate(), '3000', '','provision/userDefPassword.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4545','104', 'userRole', 'Role Membership', 1,curdate(), '3000', '','provision/userRole.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4546','104', 'userGroup', 'Group Membership', 1,curdate(), '3000', '','provision/userGroup.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4547','104', 'isEnabled', 'Is the User Enabled', 1,curdate(), '3000', '','provision/isEnabled.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4548','104', 'GUID', 'GUID', 1,curdate(), '3000', '','provision/guid.groovy');



INSERT INTO POLICY(POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS,RULE_SRC_URL) VALUES('4562', '104', 'principal', 'PRIMARY_PRINICPAL', '1','provision/primary_principal.groovy');
INSERT INTO POLICY(POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS,RULE_SRC_URL) VALUES('4563', '104', 'password', 'PRIMARY_PASSWORD', '1','provision/primary_pswd.groovy');
INSERT INTO POLICY(POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS,RULE_SRC_URL) VALUES('4564', '104', 'emailAddress', 'PRIMARY_EMAIL', '1','provision/primary_email.groovy');
INSERT INTO POLICY(POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS,RULE_SRC_URL) VALUES('4565', '104', 'domain', 'PRIMARY_DOMAIN', '1','provision/primaryDomain.groovy');

/* Google Apps */
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4600','104', 'userName', 'Google User Name', 1,curdate(), '3000', '','provision/gapps/gappsUid.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4601','104', 'firstName', 'Google Fist Name', 1,curdate(), '3000', '','provision/gapps/gappsFirstName.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4602','104', 'lastName', 'Google Last Name', 1,curdate(), '3000', '','provision/gapps/gappsLastName.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4603','104', 'password', 'Google Password', 1,curdate(), '3000', '','provision/gapps/gappsPassword.groovy');

/* ACTIVE DIR Attributes*/
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS,   CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4632','104', 'ad-CN', 'CN', 1,  '3000', '','provision/ad/adCN.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS,   CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4630','104', 'ad-sAMAccountName', 'sAMAccountName', 1,  '3000', '','provision/ad/sAMAccountName.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS,   CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4631','104', 'ad-givenName', 'givenName', 1,  '3000', '','provision/gn.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS,   CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4633','104', 'ad-ou', 'ou', 1,  '3000', '','provision/ad/ou.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS,   CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4634','104', 'ad-objectclass', 'objectclass', 1,  '3000', '','provision/ad/objectclass.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS,   CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4635','104', 'ad-profilePath', 'profilePath', 1,  '3000', '','provision/ad/profilePath.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS,   CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4636','104', 'ad-homeDirectory', 'homeDirectory', 1,  '3000', '','provision/ad/homeDirectory.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS,   CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4637','104', 'ad-homeDrive', 'homeDrive', 1,  '3000', '','provision/ad/homeDrive.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS,   CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4639','104', 'ad-scriptPath', 'scriptPath', 1,  '3000', '','provision/ad/scriptPath.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS,   CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4640','104', 'ad-company', 'company', 1,  '3000', '','provision/ad/company.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS,   CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4642','104', 'ad-initials', 'initials', 1,  '3000', '','provision/ad/initials.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS,   CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4643','104', 'ad-department', 'department', 1,  '3000', '','provision/ad/department.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS,   CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4644','104', 'ad-telephoneNumber', 'telephoneNumber', 1,  '3000', '','provision/ad/telephoneNumber.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS,   CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4645','104', 'ad-title', 'title', 1,  '3000', '','provision/ad/title.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS,   CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4646','104', 'ad-unicodePwd', 'unicodePwd', 1,  '3000', '','provision/ad/unicodePwd.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS,   CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4650','104', 'ad-userAccountControl', 'userAccountControl', 1,  '3000', '','provision/ad/userAccountControl.groovy');

insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS,   CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4651','104', 'ad-userPrincipalName', 'userPrincipalName', 1,  '3000', '','provision/ad/userPrincipalName.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4652','104', 'ad-userGroup', 'Group Membership', 1,curdate(), '3000', '','provision/ad/userGroup.groovy');

insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4653','104', 'ad-streetAddress', 'Street Address', 1,curdate(), '3000', '','provision/ad/street.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4654','104', 'ad-city', 'City', 1,curdate(), '3000', '','provision/ad/city.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4655','104', 'ad-state', 'State', 1,curdate(), '3000', '','provision/ad/state.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4656','104', 'ad-zip', 'Zip', 1,curdate(), '3000', '','provision/ad/zip.groovy');

/* SalesForce Attributes */
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT,  RULE_SRC_URL) VALUES ('4657','104', 'sf-profile-grp', 'Sales Force Profile Group', 1,curdate(), '3000', '','salesforce/salesforce-profile-group.groovy');

/* USED AS LOGICAL GROUPING FOR RESOURCES */
INSERT INTO CATEGORY(CATEGORY_ID,CATEGORY_NAME) VALUES('SECURITY','SECURITY');

insert into IDENTITY_QUEST_GRP(IDENTITY_QUEST_GRP_ID, NAME, STATUS, COMPANY_OWNER_ID, CREATE_DATE) VALUES ('GLOBAL','GLOBAL IDENTITY QUESTIONS', 'ACTIVE', 'GLOBAL', curdate());
INSERT INTO IDENTITY_QUESTION(IDENTITY_QUESTION_ID, IDENTITY_QUEST_GRP_ID, QUESTION_TEXT, REQUIRED) VALUES('200','GLOBAL','What are the last four digits of your social security number?',1);
INSERT INTO IDENTITY_QUESTION(IDENTITY_QUESTION_ID, IDENTITY_QUEST_GRP_ID, QUESTION_TEXT, REQUIRED) VALUES('209','GLOBAL','What are the last four digits of your drivers license?',1);
INSERT INTO IDENTITY_QUESTION(IDENTITY_QUESTION_ID, IDENTITY_QUEST_GRP_ID, QUESTION_TEXT, REQUIRED) VALUES('201','GLOBAL','What is your mothers maiden name?',1);
INSERT INTO IDENTITY_QUESTION(IDENTITY_QUESTION_ID, IDENTITY_QUEST_GRP_ID, QUESTION_TEXT, REQUIRED) VALUES('202','GLOBAL','Where did you go to school?',1);
INSERT INTO IDENTITY_QUESTION(IDENTITY_QUESTION_ID, IDENTITY_QUEST_GRP_ID, QUESTION_TEXT, REQUIRED) VALUES('203','GLOBAL','What is your pets name?',0);
INSERT INTO IDENTITY_QUESTION(IDENTITY_QUESTION_ID, IDENTITY_QUEST_GRP_ID, QUESTION_TEXT, REQUIRED) VALUES('204','GLOBAL','What is your favorite food?',0);
INSERT INTO IDENTITY_QUESTION(IDENTITY_QUESTION_ID, IDENTITY_QUEST_GRP_ID, QUESTION_TEXT, REQUIRED) VALUES('205','GLOBAL','What is your favorite color?',0);
INSERT INTO IDENTITY_QUESTION(IDENTITY_QUESTION_ID, IDENTITY_QUEST_GRP_ID, QUESTION_TEXT, REQUIRED) VALUES('206','GLOBAL','Which city were you born in?',0);
INSERT INTO IDENTITY_QUESTION(IDENTITY_QUESTION_ID, IDENTITY_QUEST_GRP_ID, QUESTION_TEXT, REQUIRED) VALUES('207','GLOBAL','What is your favorite sport?',0);
INSERT INTO IDENTITY_QUESTION(IDENTITY_QUESTION_ID, IDENTITY_QUEST_GRP_ID, QUESTION_TEXT, REQUIRED) VALUES('210','GLOBAL','What is the name of your favorite school?',0);
INSERT INTO IDENTITY_QUESTION(IDENTITY_QUESTION_ID, IDENTITY_QUEST_GRP_ID, QUESTION_TEXT, REQUIRED) VALUES('211','GLOBAL','What is the name of your first pet',0);
INSERT INTO IDENTITY_QUESTION(IDENTITY_QUESTION_ID, IDENTITY_QUEST_GRP_ID, QUESTION_TEXT, REQUIRED) VALUES('212','GLOBAL','What is the name of your favorite movie, play or song?',0);
INSERT INTO IDENTITY_QUESTION(IDENTITY_QUESTION_ID, IDENTITY_QUEST_GRP_ID, QUESTION_TEXT, REQUIRED) VALUES('213','GLOBAL','What is the title of your favorite book?',0);
INSERT INTO IDENTITY_QUESTION(IDENTITY_QUESTION_ID, IDENTITY_QUEST_GRP_ID, QUESTION_TEXT, REQUIRED) VALUES('214','GLOBAL','What is the name of your first boy or girl friend?',0);
INSERT INTO IDENTITY_QUESTION(IDENTITY_QUESTION_ID, IDENTITY_QUEST_GRP_ID, QUESTION_TEXT, REQUIRED) VALUES('215','GLOBAL','What is the name of your favorite school teacher?',0);
INSERT INTO IDENTITY_QUESTION(IDENTITY_QUESTION_ID, IDENTITY_QUEST_GRP_ID, QUESTION_TEXT, REQUIRED) VALUES('216','GLOBAL','What is the year and nick name of your first car (Year-Name)?',0);
INSERT INTO IDENTITY_QUESTION(IDENTITY_QUESTION_ID, IDENTITY_QUEST_GRP_ID, QUESTION_TEXT, REQUIRED) VALUES('217','GLOBAL','Where did you meet you significant other?',0);
INSERT INTO IDENTITY_QUESTION(IDENTITY_QUESTION_ID, IDENTITY_QUEST_GRP_ID, QUESTION_TEXT, REQUIRED) VALUES('218','GLOBAL','What is the type and name of your first pet (Type-Name)?',0);

insert into PROVISION_CONNECTOR(CONNECTOR_ID, NAME, METADATA_TYPE_ID, SERVICE_URL,SERVICE_NAMESPACE, SERVICE_PORT) VALUES ('51','LDAP CONNECTOR', 'LDAP_Connector','localhost:9080/openiam-esb/idmsrvc/LDAPConnectorService','http://www.openiam.org/service/connector', 'LDAPConnectorServicePort' );
insert into PROVISION_CONNECTOR(CONNECTOR_ID, NAME, METADATA_TYPE_ID, SERVICE_URL,SERVICE_NAMESPACE, SERVICE_PORT) VALUES ('54','Google Apps CONNECTOR', 'GOOGLE_Connector','localhost:9080/openiam-esb/idmsrvc/GoogleAppsConnectorService','http://www.openiam.org/service/connector', 'GoogleAppsConnectorServicePort' );
insert into PROVISION_CONNECTOR(CONNECTOR_ID, NAME, METADATA_TYPE_ID, SERVICE_URL,SERVICE_NAMESPACE, SERVICE_PORT) VALUES ('61','Application Tables CONNECTOR', 'DB_Connector','localhost:9080/openiam-esb/idmsrvc/ApplicationTablesConnector','http://www.openiam.org/service/connector', 'NA' );
insert into PROVISION_CONNECTOR(CONNECTOR_ID, NAME, METADATA_TYPE_ID, SERVICE_URL,SERVICE_NAMESPACE, SERVICE_PORT) VALUES ('62','Groovy Script CONNECTOR', 'SCRIPT_Connector','localhost:9080/openiam-esb/idmsrvc/ScriptConnectorService','http://www.openiam.org/service/connector', 'NA' );
insert into PROVISION_CONNECTOR(CONNECTOR_ID, NAME, METADATA_TYPE_ID, SERVICE_URL,SERVICE_NAMESPACE, SERVICE_PORT) VALUES ('63','Linux CONNECTOR', 'LINUX_Connector','localhost:9080/openiam-esb/idmsrvc/LinuxConnectorService','http://www.openiam.org/service/connector', 'NA' );
insert into PROVISION_CONNECTOR(CONNECTOR_ID, NAME, METADATA_TYPE_ID, SERVICE_URL,SERVICE_NAMESPACE, SERVICE_PORT) VALUES ('64','MySQL CONNECTOR', 'MySQL Connector','localhost:9080/openiam-esb/idmsrvc/MySQLConnector','http://www.openiam.org/service/connector', 'NA' );
insert into PROVISION_CONNECTOR(CONNECTOR_ID, NAME, METADATA_TYPE_ID, SERVICE_URL,SERVICE_NAMESPACE, SERVICE_PORT) VALUES ('65','Oracle CONNECTOR', 'DB_Connector','localhost:9080/openiam-esb/idmsrvc/OracleConnector','http://www.openiam.org/service/connector', 'NA' );


INSERT INTO MANAGED_SYS (MANAGED_SYS_ID, NAME, DESCRIPTION, STATUS, CONNECTOR_ID, DOMAIN_ID, HOST_URL, PORT, COMM_PROTOCOL, RESOURCE_ID) VALUES('0','OPENIAM', 'Primary IDENTITY', 'ACTIVE', null, 'USR_SEC_DOMAIN', null, null, null, '0'   );
INSERT INTO MANAGED_SYS (MANAGED_SYS_ID, NAME, DESCRIPTION, STATUS, CONNECTOR_ID, DOMAIN_ID, HOST_URL, PORT, COMM_PROTOCOL, RESOURCE_ID) VALUES('101','LDAP', 'Primary Directory', 'ACTIVE', '51', 'USR_SEC_DOMAIN', 'ldap://','389', 'CLEAR', '101'   );
INSERT INTO MANAGED_SYS (MANAGED_SYS_ID, NAME, DESCRIPTION, STATUS, CONNECTOR_ID, DOMAIN_ID, HOST_URL, PORT, COMM_PROTOCOL, RESOURCE_ID) VALUES('103','Google Apps Connector', 'Google Apps Connector', 'ACTIVE', '54', 'USR_SEC_DOMAIN', '', null,'CLEAR', '103'   );
INSERT INTO MANAGED_SYS (MANAGED_SYS_ID, NAME, DESCRIPTION, STATUS, CONNECTOR_ID, DOMAIN_ID, HOST_URL, PORT, COMM_PROTOCOL, RESOURCE_ID) VALUES('104','Test_Script_CONNECTOR', 'Test Script CONNECTOR', 'ACTIVE', '62', 'USR_SEC_DOMAIN', '', null,'CLEAR', '104'   );
INSERT INTO MANAGED_SYS (MANAGED_SYS_ID, NAME, DESCRIPTION, STATUS, CONNECTOR_ID, DOMAIN_ID, HOST_URL, PORT, COMM_PROTOCOL, RESOURCE_ID) VALUES('105','Linux CONNECTOR', 'Linux CONNECTOR', 'ACTIVE', '63', 'USR_SEC_DOMAIN', '', null,'CLEAR', '105'   );
INSERT INTO MANAGED_SYS (MANAGED_SYS_ID, NAME, DESCRIPTION, STATUS, CONNECTOR_ID, DOMAIN_ID, HOST_URL, PORT, COMM_PROTOCOL, RESOURCE_ID) VALUES('106','MySQL CONNECTOR', 'MySQL CONNECTOR', 'ACTIVE', '64', 'USR_SEC_DOMAIN', '', null,'CLEAR', '106'   );
INSERT INTO MANAGED_SYS (MANAGED_SYS_ID, NAME, DESCRIPTION, STATUS, CONNECTOR_ID, DOMAIN_ID, HOST_URL, PORT, COMM_PROTOCOL, RESOURCE_ID) VALUES('110','ACTIVE DIRECTORY', 'ACTIVE DIRECTORY', 'ACTIVE', '51', 'USR_SEC_DOMAIN', 'ldaps://','636', 'CLEAR', '110'   );
INSERT INTO MANAGED_SYS (MANAGED_SYS_ID, NAME, DESCRIPTION, STATUS, CONNECTOR_ID, DOMAIN_ID, HOST_URL, PORT, COMM_PROTOCOL, RESOURCE_ID) VALUES('111','Oracle Connector', 'Oracle Connector', 'ACTIVE', '65', 'USR_SEC_DOMAIN', '', null,'CLEAR', '111'   );

insert into MNG_SYS_OBJECT_MATCH(OBJECT_SEARCH_ID, MANAGED_SYS_ID, OBJECT_TYPE, MATCH_METHOD, SEARCH_FILTER, BASE_DN, SEARCH_BASE_DN ,KEY_FIELD) VALUES('101', '101', 'USER', 'BASE_DN', '(&(objectclass=inetOrgPerson)(?))',null,null,'uid');
insert into MNG_SYS_OBJECT_MATCH(OBJECT_SEARCH_ID, MANAGED_SYS_ID, OBJECT_TYPE, MATCH_METHOD, SEARCH_FILTER, BASE_DN, SEARCH_BASE_DN ,KEY_FIELD) VALUES('110', '110', 'USER', 'BASE_DN', '(&(objectclass=user)(?))',null,null,'CN');





INSERT INTO MANAGED_SYS (MANAGED_SYS_ID, NAME, DESCRIPTION, STATUS, CONNECTOR_ID, DOMAIN_ID,   RESOURCE_ID) VALUES('200','SELFSERVICE_NEWHIRE', 'New Hire Form', 'ACTIVE', null, null,  '200'   );
INSERT INTO MANAGED_SYS (MANAGED_SYS_ID, NAME, DESCRIPTION, STATUS, CONNECTOR_ID, DOMAIN_ID,   RESOURCE_ID) VALUES('201','SELFSERVICE_CREATEREQUEST', 'Create Request Form', 'ACTIVE', null, null,  '201'   );
INSERT INTO MANAGED_SYS (MANAGED_SYS_ID, NAME, DESCRIPTION, STATUS, CONNECTOR_ID, DOMAIN_ID,   RESOURCE_ID) VALUES('202','SELFSERVICE_PROFILE', 'Profile Form', 'ACTIVE', null, null,  '202'   );


INSERT INTO RESOURCE_TYPE (RESOURCE_TYPE_ID, DESCRIPTION, METADATA_TYPE_ID, PROVISION_RESOURCE) VALUES('AUTH_REPO', 'Authentication Repository', 'AUTH_REPO', null);
INSERT INTO RESOURCE_TYPE (RESOURCE_TYPE_ID, DESCRIPTION, METADATA_TYPE_ID, PROVISION_RESOURCE) VALUES('MANAGED_SYS', 'Managed Systems', 'MANAGED_SYSTEM', 1);
INSERT INTO RESOURCE_TYPE (RESOURCE_TYPE_ID, DESCRIPTION, METADATA_TYPE_ID, PROVISION_RESOURCE) VALUES('SYS_ACTION', 'System Action', 'SYS_ACTION', 0);


insert into RES (RESOURCE_ID, RESOURCE_TYPE_ID,NAME, DISPLAY_ORDER) VALUES ('0', 'MANAGED_SYS', 'OPENIAM', 1);
insert into RES (RESOURCE_ID, RESOURCE_TYPE_ID,NAME, DISPLAY_ORDER, MANAGED_SYS_ID ) VALUES ('101', 'MANAGED_SYS', 'LDAP', 2, '101');
insert into RES (RESOURCE_ID, RESOURCE_TYPE_ID,NAME, DISPLAY_ORDER, MANAGED_SYS_ID ) VALUES ('103', 'MANAGED_SYS', 'Google App Con', 3, '103');
insert into RES (RESOURCE_ID, RESOURCE_TYPE_ID,NAME, DISPLAY_ORDER, MANAGED_SYS_ID ) VALUES ('104', 'MANAGED_SYS', 'Groovy Script Con', 4, '104');
insert into RES (RESOURCE_ID, RESOURCE_TYPE_ID,NAME, DISPLAY_ORDER, MANAGED_SYS_ID ) VALUES ('105', 'MANAGED_SYS', 'Linux Con', 5, '105');
insert into RES (RESOURCE_ID, RESOURCE_TYPE_ID,NAME, DISPLAY_ORDER, MANAGED_SYS_ID ) VALUES ('106', 'MANAGED_SYS', 'MySQL Con', 6, '106');
insert into RES (RESOURCE_ID, RESOURCE_TYPE_ID,NAME, DISPLAY_ORDER, MANAGED_SYS_ID ) VALUES ('110', 'MANAGED_SYS', 'ACTIVE DIRECTORY', 3, '110');
insert into RES (RESOURCE_ID, RESOURCE_TYPE_ID,NAME, DISPLAY_ORDER, MANAGED_SYS_ID ) VALUES ('111', 'MANAGED_SYS', 'Oracle Connector', 4, '111');


insert into RES (RESOURCE_ID, RESOURCE_TYPE_ID,NAME, DISPLAY_ORDER, DESCRIPTION) VALUES ('254', 'SYS_ACTION', 'SELFSERVICE_NEWUSER', 6, 'NEW USER');
insert into RES (RESOURCE_ID, RESOURCE_TYPE_ID,NAME, DISPLAY_ORDER, DESCRIPTION) VALUES ('255', 'SYS_ACTION', 'SELFSERVICE_SELFREGISTER', 6, 'SELF REGISTRATION');


/* Indicates that the user object should not be sent to the AD and LDAP connectors */
insert into RESOURCE_PROP(RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('200', '101','INCLUDE_USER_OBJECT', 'N');
insert into RESOURCE_PROP(RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('202', '101','PRINCIPAL_NAME', 'uid');
insert into RESOURCE_PROP(RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('203', '101','PRINCIPAL_PASSWORD', 'userPassword');
insert into RESOURCE_PROP(RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('204', '101','INCLUDE_IN_PASSWORD_SYNC', 'Y');
insert into RESOURCE_PROP(RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('205', '101','ON_DELETE', 'DELETE');
insert into RESOURCE_PROP(RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('206', '101','GROUP_MEMBERSHIP_ENABLED', 'Y');

insert into RESOURCE_PROP(RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('207', '101','PRE_PROCESS', '/prov-helper/LDAPPreProcessor.groovy');
insert into RESOURCE_PROP(RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('208', '101','POST_PROCESS', '/prov-helper/LDAPPostProcessor.groovy');

/* RESOURCE_PROP for Active Directory */
insert into RESOURCE_PROP(RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('220', '110','ON_DELETE', 'DELETE');
insert into RESOURCE_PROP(RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('221', '110','INCLUDE_IN_PASSWORD_SYNC', 'Y');
insert into RESOURCE_PROP(RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('222', '110','GROUP_MEMBERSHIP_ENABLED', 'Y');
insert into RESOURCE_PROP(RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('223', '101','PRE_PROCESS', null);
insert into RESOURCE_PROP(RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('224', '101','POST_PROCESS', null);


/* Send user object to Linux connectors */
insert into RESOURCE_PROP(RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('210', '105','INCLUDE_USER_OBJECT', 'Y');
insert into RESOURCE_PROP(RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('211', '105','PRINCIPAL_NAME', 'login');
insert into RESOURCE_PROP(RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('212', '105','PRINCIPAL_PASSWORD', 'userPassword');
insert into RESOURCE_PROP(RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('213', '105','INCLUDE_IN_PASSWORD_SYNC', 'Y');

insert into RESOURCE_PROP(RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('214', '105','ON_DELETE', 'DELETE');
insert into RESOURCE_PROP(RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('215', '105','GROUP_MEMBERSHIP_ENABLED', 'Y');
insert into RESOURCE_PROP(RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('216', '105','PRE_PROCESS', null);
insert into RESOURCE_PROP(RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('217', '105','POST_PROCESS', null);



INSERT INTO APPROVER_ASSOC(APPROVER_ASSOC_ID, REQUEST_TYPE, APPROVER_LEVEL, ASSOCIATION_TYPE)  VALUES ('100', 'NEW_HIRE', 1, 'SUPERVISOR');
INSERT INTO APPROVER_ASSOC(APPROVER_ASSOC_ID, REQUEST_TYPE, APPROVER_LEVEL, ASSOCIATION_TYPE, APPROVER_USER_ID)  VALUES ('101', '254', 1, 'USER','3000');


insert into MNG_SYS_OBJECT_MATCH(OBJECT_SEARCH_ID, MANAGED_SYS_ID, OBJECT_TYPE, MATCH_METHOD, SEARCH_FILTER, BASE_DN, SEARCH_BASE_DN ,KEY_FIELD) VALUES('100', '101', 'USER', 'BASE_DN', '(&(objectclass=inetOrgPerson)(?))','ou=people,dc=openiam,dc=org','dc=openiam,dc=org','uid');

/* MAP FOR openiam repository */
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('230', '0', '0','PRINCIPAL', 'PRINCIPAL', '4562');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('231', '0', '0','PRINCIPAL', 'PASSWORD', '4563');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('232', '0', '0','EMAIL', 'EMAIL', '4564');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('233', '0', '0','PRINCIPAL', 'DOMAIN', '4565');

/* MAP FOR LDAP */

INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('201', '101', '101','USER', 'cn', '4501');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('202', '101', '101','USER', 'mail', '4502');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('203', '101', '101','USER', 'o', '4503');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('204', '101', '101','USER', 'ou', '4504');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('205', '101', '101','USER', 'postalCode', '4505');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('206', '101', '101','USER', 'sn', '4506');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('207', '101', '101','USER', 'st', '4507');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('208', '101', '101','USER', 'street', '4508');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('209', '101', '101','USER', 'userPassword', '4509');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('210', '101', '101','USER', 'postalAddress', '4510');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('211', '101', '101','USER', 'telephoneNumber', '4511');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('212', '101', '101','USER', 'facsimileTelephoneNumber', '4512');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('213', '101', '101','USER', 'mobileTelephoneNumber', '4513');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('215', '101', '101','PRINCIPAL', 'uid', '4515');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('216', '101', '101','USER', 'departmentNumber', '4516');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('217', '101', '101','USER', 'displayName', '4517');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('218', '101', '101','USER', 'employeeType', '4518');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('221', '101', '101','USER', 'objectclass', '4521');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('222', '101', '101','USER', 'title', '4522');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('223', '101', '101','USER', 'givenName', '4514');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID, STATUS,DATA_TYPE) VALUES ('224', '101', '101','USER', 'uniqueMember', '4546', 'IN-ACTIVE', 'memberOf');

SET SQL_SAFE_UPDATES = 0 ;
UPDATE ATTRIBUTE_MAP
SET DATA_TYPE = 'string'
where DATA_TYPE IS NULL AND MANAGED_SYS_ID = '101';


/* MAP FOR GOOGLE APPS*/
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('400', '103', '103','PRINCIPAL', 'userName', '4600');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('401', '103', '103','USER', 'firstName', '4601');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('402', '103', '103','USER', 'lastName', '4602');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('403', '103', '103','USER', 'password', '4603');

/* MAP FOR LINUX CONNECTOR */
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('600', '105', '105','PRINCIPAL', 'login', '4562');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('601', '105', '105','USER', 'name', '4514');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('602', '105', '105','USER', 'surname', '4506');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('603', '105', '105','USER', 'password', '4509');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('604', '105', '105','USER', 'homePhone', '4511');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('605', '105', '105','USER', 'workPhone', '4513');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('606', '105', '105','USER', 'roomNumber', '4516');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('607', '105', '105','USER', 'groups', '4546');

/* MAP FOR AD 2008 */
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('501', '110', '110','PRINCIPAL', 'CN', '4632');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('502', '110', '110','USER', 'sAMAccountName', '4630');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('503', '110', '110','USER', 'sn', '4506');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('504', '110', '110','USER', 'givenName', '4631');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('505', '110', '110','USER', 'displayName', '4517');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('506', '110', '110','USER', 'ou', '4633');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('507', '110', '110','USER', 'objectclass', '4634');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('508', '110', '110','USER', 'profilePath', '4635');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('509', '110', '110','USER', 'homeDirectory', '4636');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('510', '110', '110','USER', 'homeDrive', '4637');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('511', '110', '110','USER', 'scriptPath', '4639');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('512', '110', '110','USER', 'company', '4640');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('513', '110', '110','USER', 'initials', '4642');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('514', '110', '110','USER', 'department', '4643');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('515', '110', '110','USER', 'telephoneNumber', '4644');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('516', '110', '110','USER', 'title', '4645');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('517', '110', '110','USER', 'unicodePwd', '4646');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('518', '110', '110','USER', 'userAccountControl', '4650');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('519', '110', '110','USER', 'userPrincipalName', '4651');

INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID, STATUS,DATA_TYPE) VALUES ('521', '110', '110','USER', 'streetAddress', '4653', 'ACTIVE', 'String');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID, STATUS,DATA_TYPE) VALUES ('522', '110', '110','USER', 'l', '4654', 'ACTIVE', 'String');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID, STATUS,DATA_TYPE) VALUES ('523', '110', '110','USER', 'st', '4655', 'ACTIVE', 'String');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID, STATUS,DATA_TYPE) VALUES ('524', '110', '110','USER', 'postalCode', '4656', 'ACTIVE', 'String');

SET SQL_SAFE_UPDATES = 0 ;
UPDATE ATTRIBUTE_MAP
SET DATA_TYPE = 'string'
where DATA_TYPE IS NULL AND MANAGED_SYS_ID = '110';


/* MAP FOR MYSQL CONNECTOR */
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('550', '106', '106','PRINCIPAL', 'userName', '4600');
INSERT INTO ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID) VALUES ('553', '106', '106','USER', 'password', '4603');

/* Reconciliation config */
insert into RECONCILIATION_CONFIG(RECON_CONFIG_ID, RESOURCE_ID, FREQUENCY, STATUS) VALUES('4028b881373b90e501373b92ec180001', '101', 'NIGHTLY', 'ACTIVE');

insert into RECONCILIATION_SITUATION(RECON_SITUATION_ID, RECON_CONFIG_ID, SITUATION, SITUATION_RESP, SCRIPT) VALUES('4028b881373b90e501373b92ec1f0002', '4028b881373b90e501373b92ec180001', 'IDM[exists] and Resource[not exists]', 'NOTHING', 'recon/LDAPPopulationScript.groovy');
insert into RECONCILIATION_SITUATION(RECON_SITUATION_ID, RECON_CONFIG_ID, SITUATION, SITUATION_RESP, SCRIPT) VALUES('4028b881373b90e501373b92ec1f0003', '4028b881373b90e501373b92ec180001', 'IDM[exists] and Resource[exists]', 'UPDATE_IDM_FROM_RES', 'recon/LDAPPopulationScript.groovy');
insert into RECONCILIATION_SITUATION(RECON_SITUATION_ID, RECON_CONFIG_ID, SITUATION, SITUATION_RESP, SCRIPT) VALUES('4028b881373b90e501373b92ec1f0004', '4028b881373b90e501373b92ec180001', 'IDM[not exists] and Resource[exists]', 'ADD_TO_IDM', 'recon/LDAPPopulationScript.groovy');
insert into RECONCILIATION_SITUATION(RECON_SITUATION_ID, RECON_CONFIG_ID, SITUATION, SITUATION_RESP, SCRIPT) VALUES('4028b881373b90e501373b92ec1f0005', '4028b881373b90e501373b92ec180001', 'IDM[deleted] and Resource[exists]', 'CREATE_RES_ACCOUNT', 'recon/LDAPPopulationScript.groovy');


/* Batch Tasks */
insert into BATCH_CONFIG(TASK_ID, TASK_NAME, FREQUENCY_UNIT_OF_MEASURE, ENABLED, TASK_URL, EXECUTION_ORDER) VALUES('100','ACCOUNT_LOCKED_NOTIFICATION', 'MINUTE','0','batch/accountLockedNotification.groovy','2');
insert into BATCH_CONFIG(TASK_ID, TASK_NAME, FREQUENCY_UNIT_OF_MEASURE, ENABLED, TASK_URL, EXECUTION_ORDER) VALUES('101','INACTIVE_USER', 'NIGHTLY','0','batch/inactiveUser.groovy','1');
insert into BATCH_CONFIG(TASK_ID, TASK_NAME, FREQUENCY_UNIT_OF_MEASURE, ENABLED, TASK_URL, EXECUTION_ORDER) VALUES('102','PASSWORD_NEAR_EXP', 'NIGHTLY','0','batch/passwordNearExpNotification.groovy','2');
insert into BATCH_CONFIG(TASK_ID, TASK_NAME, FREQUENCY_UNIT_OF_MEASURE, ENABLED, TASK_URL, EXECUTION_ORDER) VALUES('107','PASSWORD_EXPIRED', 'NIGHTLY','0','batch/passwordExpiredNotification.groovy','4');
insert into BATCH_CONFIG(TASK_ID, TASK_NAME, FREQUENCY_UNIT_OF_MEASURE, ENABLED, TASK_URL, EXECUTION_ORDER) VALUES('103','TERMINATE_EXP_ACCT', 'NIGHTLY','0','batch/terminateOnExpiration.groovy','3');
insert into BATCH_CONFIG(TASK_ID, TASK_NAME, FREQUENCY_UNIT_OF_MEASURE, ENABLED, TASK_URL, EXECUTION_ORDER) VALUES('104','AUTO_UNLOCK', 'MINUTE','0','batch/autoUnlock.groovy','1');

insert into BATCH_CONFIG(TASK_ID, TASK_NAME, FREQUENCY_UNIT_OF_MEASURE, ENABLED, TASK_URL, EXECUTION_ORDER) VALUES('105','RESET_PSWD_CHNG_COUNT', 'MINUTE','0','batch/resetPasswordChangeCount.groovy','2');
insert into BATCH_CONFIG(TASK_ID, TASK_NAME, FREQUENCY_UNIT_OF_MEASURE, ENABLED, TASK_URL, EXECUTION_ORDER) VALUES('106','PUBLISH_AUDIT_EVENT', 'NIGHTLY','0','batch/publishAuditEvent.groovy','3');
insert into BATCH_CONFIG(TASK_ID, TASK_NAME, FREQUENCY_UNIT_OF_MEASURE, ENABLED, TASK_URL, EXECUTION_ORDER) VALUES('108','PROV_ON_STARTDATE', 'NIGHTLY','0','batch/provisionOnStartDate.groovy','4');


commit;

commit;
use openiam;

ALTER TABLE ATTRIBUTE_MAP ADD COLUMN DEFAULT_VALUE varchar(32) NULL;

commit;
use openiam;

DROP DATABASE IF EXISTS activiti;

CREATE database activiti DEFAULT CHARACTER SET utf8 CHARACTER SET = utf8;
commit;
use activiti;

create table ACT_GE_PROPERTY (
    NAME_ varchar(64),
    VALUE_ varchar(300),
    REV_ integer,
    primary key (NAME_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

insert into ACT_GE_PROPERTY
values ('historyLevel', '2', 1);

insert into ACT_GE_PROPERTY
values ('schema.version', '5.10', 1);

insert into ACT_GE_PROPERTY
values ('schema.history', 'create(5.10)', 1);

insert into ACT_GE_PROPERTY
values ('next.dbid', '1', 1);

create table ACT_GE_BYTEARRAY (
    ID_ varchar(64),
    REV_ integer,
    NAME_ varchar(255),
    DEPLOYMENT_ID_ varchar(64),
    BYTES_ LONGBLOB,
    GENERATED_ TINYINT,
    primary key (ID_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

create table ACT_RE_DEPLOYMENT (
    ID_ varchar(64),
    NAME_ varchar(255),
    DEPLOY_TIME_ timestamp,
    primary key (ID_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

create table ACT_RU_EXECUTION (
    ID_ varchar(64),
    REV_ integer,
    PROC_INST_ID_ varchar(64),
    BUSINESS_KEY_ varchar(255),
    PARENT_ID_ varchar(64),
    PROC_DEF_ID_ varchar(64),
    SUPER_EXEC_ varchar(64),
    ACT_ID_ varchar(255),
    IS_ACTIVE_ TINYINT,
    IS_CONCURRENT_ TINYINT,
    IS_SCOPE_ TINYINT,
    IS_EVENT_SCOPE_ TINYINT,
    SUSPENSION_STATE_ integer,
    CACHED_ENT_STATE_ integer,
    primary key (ID_),
    unique ACT_UNIQ_RU_BUS_KEY (PROC_DEF_ID_, BUSINESS_KEY_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

create table ACT_RU_JOB (
    ID_ varchar(64) NOT NULL,
	  REV_ integer,
    TYPE_ varchar(255) NOT NULL,
    LOCK_EXP_TIME_ timestamp,
    LOCK_OWNER_ varchar(255),
    EXCLUSIVE_ boolean,
    EXECUTION_ID_ varchar(64),
    PROCESS_INSTANCE_ID_ varchar(64),
    RETRIES_ integer,
    EXCEPTION_STACK_ID_ varchar(64),
    EXCEPTION_MSG_ varchar(4000),
    DUEDATE_ timestamp NULL,
    REPEAT_ varchar(255),
    HANDLER_TYPE_ varchar(255),
    HANDLER_CFG_ varchar(4000),
    primary key (ID_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

create table ACT_RE_PROCDEF (
    ID_ varchar(64),
    REV_ integer,
    CATEGORY_ varchar(255),
    NAME_ varchar(255),
    KEY_ varchar(255),
    VERSION_ integer,
    DEPLOYMENT_ID_ varchar(64),
    RESOURCE_NAME_ varchar(4000),
    DGRM_RESOURCE_NAME_ varchar(4000),
    HAS_START_FORM_KEY_ TINYINT,
    SUSPENSION_STATE_ integer,
    primary key (ID_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

create table ACT_RU_TASK (
    ID_ varchar(64),
    REV_ integer,
    EXECUTION_ID_ varchar(64),
    PROC_INST_ID_ varchar(64),
    PROC_DEF_ID_ varchar(64),
    NAME_ varchar(255),
    PARENT_TASK_ID_ varchar(64),
    DESCRIPTION_ varchar(4000),
    TASK_DEF_KEY_ varchar(255),
    OWNER_ varchar(64),
    ASSIGNEE_ varchar(64),
    DELEGATION_ varchar(64),
    PRIORITY_ integer,
    CREATE_TIME_ timestamp,
    DUE_DATE_ datetime,
    primary key (ID_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

create table ACT_RU_IDENTITYLINK (
    ID_ varchar(64),
    REV_ integer,
    GROUP_ID_ varchar(64),
    TYPE_ varchar(255),
    USER_ID_ varchar(64),
    TASK_ID_ varchar(64),
    PROC_DEF_ID_ varchar(64),    
    primary key (ID_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

create table ACT_RU_VARIABLE (
    ID_ varchar(64) not null,
    REV_ integer,
    TYPE_ varchar(255) not null,
    NAME_ varchar(255) not null,
    EXECUTION_ID_ varchar(64),
	  PROC_INST_ID_ varchar(64),
    TASK_ID_ varchar(64),
    BYTEARRAY_ID_ varchar(64),
    DOUBLE_ double,
    LONG_ bigint,
    TEXT_ varchar(4000),
    TEXT2_ varchar(4000),
    primary key (ID_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

create table ACT_RU_EVENT_SUBSCR (
    ID_ varchar(64) not null,
    REV_ integer,
    EVENT_TYPE_ varchar(255) not null,
    EVENT_NAME_ varchar(255),
    EXECUTION_ID_ varchar(64),
    PROC_INST_ID_ varchar(64),
    ACTIVITY_ID_ varchar(64),
    CONFIGURATION_ varchar(255),
    CREATED_ timestamp not null,
    primary key (ID_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

create index ACT_IDX_EXEC_BUSKEY on ACT_RU_EXECUTION(BUSINESS_KEY_);
create index ACT_IDX_TASK_CREATE on ACT_RU_TASK(CREATE_TIME_);
create index ACT_IDX_IDENT_LNK_USER on ACT_RU_IDENTITYLINK(USER_ID_);
create index ACT_IDX_IDENT_LNK_GROUP on ACT_RU_IDENTITYLINK(GROUP_ID_);
create index ACT_IDX_EVENT_SUBSCR_CONFIG_ on ACT_RU_EVENT_SUBSCR(CONFIGURATION_);
create index ACT_IDX_VARIABLE_TASK_ID on ACT_RU_VARIABLE(TASK_ID_);
create index ACT_IDX_ATHRZ_PROCEDEF on ACT_RU_IDENTITYLINK(PROC_DEF_ID_);

alter table ACT_GE_BYTEARRAY
    add constraint ACT_FK_BYTEARR_DEPL 
    foreign key (DEPLOYMENT_ID_) 
    references ACT_RE_DEPLOYMENT (ID_);

alter table ACT_RE_PROCDEF
    add constraint ACT_UNIQ_PROCDEF
    unique (KEY_,VERSION_);
    
alter table ACT_RU_EXECUTION
    add constraint ACT_FK_EXE_PROCINST 
    foreign key (PROC_INST_ID_) 
    references ACT_RU_EXECUTION (ID_) on delete cascade on update cascade;

alter table ACT_RU_EXECUTION
    add constraint ACT_FK_EXE_PARENT 
    foreign key (PARENT_ID_) 
    references ACT_RU_EXECUTION (ID_);
    
alter table ACT_RU_EXECUTION
    add constraint ACT_FK_EXE_SUPER 
    foreign key (SUPER_EXEC_) 
    references ACT_RU_EXECUTION (ID_);
    
alter table ACT_RU_IDENTITYLINK
    add constraint ACT_FK_TSKASS_TASK 
    foreign key (TASK_ID_) 
    references ACT_RU_TASK (ID_);
    
alter table ACT_RU_IDENTITYLINK
    add constraint ACT_FK_ATHRZ_PROCEDEF 
    foreign key (PROC_DEF_ID_) 
    references ACT_RE_PROCDEF(ID_);
    
alter table ACT_RU_TASK
    add constraint ACT_FK_TASK_EXE
    foreign key (EXECUTION_ID_)
    references ACT_RU_EXECUTION (ID_);
    
alter table ACT_RU_TASK
    add constraint ACT_FK_TASK_PROCINST
    foreign key (PROC_INST_ID_)
    references ACT_RU_EXECUTION (ID_);
    
alter table ACT_RU_TASK
  add constraint ACT_FK_TASK_PROCDEF
  foreign key (PROC_DEF_ID_)
  references ACT_RE_PROCDEF (ID_);
  
alter table ACT_RU_VARIABLE 
    add constraint ACT_FK_VAR_EXE 
    foreign key (EXECUTION_ID_) 
    references ACT_RU_EXECUTION (ID_);

alter table ACT_RU_VARIABLE
    add constraint ACT_FK_VAR_PROCINST
    foreign key (PROC_INST_ID_)
    references ACT_RU_EXECUTION(ID_);

alter table ACT_RU_VARIABLE 
    add constraint ACT_FK_VAR_BYTEARRAY 
    foreign key (BYTEARRAY_ID_) 
    references ACT_GE_BYTEARRAY (ID_);

alter table ACT_RU_JOB 
    add constraint ACT_FK_JOB_EXCEPTION 
    foreign key (EXCEPTION_STACK_ID_) 
    references ACT_GE_BYTEARRAY (ID_);

alter table ACT_RU_EVENT_SUBSCR
    add constraint ACT_FK_EVENT_EXEC
    foreign key (EXECUTION_ID_)
    references ACT_RU_EXECUTION(ID_);
commit;
use activiti;

create table ACT_HI_PROCINST (
    ID_ varchar(64) not null,
    PROC_INST_ID_ varchar(64) not null,
    BUSINESS_KEY_ varchar(255),
    PROC_DEF_ID_ varchar(64) not null,
    START_TIME_ datetime not null,
    END_TIME_ datetime,
    DURATION_ bigint,
    START_USER_ID_ varchar(255),
    START_ACT_ID_ varchar(255),
    END_ACT_ID_ varchar(255),
    SUPER_PROCESS_INSTANCE_ID_ varchar(64),
    DELETE_REASON_ varchar(4000),
    primary key (ID_),
    unique (PROC_INST_ID_),
    unique ACT_UNIQ_HI_BUS_KEY (PROC_DEF_ID_, BUSINESS_KEY_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

create table ACT_HI_ACTINST (
    ID_ varchar(64) not null,
    PROC_DEF_ID_ varchar(64) not null,
    PROC_INST_ID_ varchar(64) not null,
    EXECUTION_ID_ varchar(64) not null,
    ACT_ID_ varchar(255) not null,
    ACT_NAME_ varchar(255),
    ACT_TYPE_ varchar(255) not null,
    ASSIGNEE_ varchar(64),
    START_TIME_ datetime not null,
    END_TIME_ datetime,
    DURATION_ bigint,
    primary key (ID_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

create table ACT_HI_TASKINST (
    ID_ varchar(64) not null,
    PROC_DEF_ID_ varchar(64),
    TASK_DEF_KEY_ varchar(255),
    PROC_INST_ID_ varchar(64),
    EXECUTION_ID_ varchar(64),
    NAME_ varchar(255),
    PARENT_TASK_ID_ varchar(64),
    DESCRIPTION_ varchar(4000),
    OWNER_ varchar(64),
    ASSIGNEE_ varchar(64),
    START_TIME_ datetime not null,
    END_TIME_ datetime,
    DURATION_ bigint,
    DELETE_REASON_ varchar(4000),
    PRIORITY_ integer,
    DUE_DATE_ datetime,
    primary key (ID_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

create table ACT_HI_DETAIL (
    ID_ varchar(64) not null,
    TYPE_ varchar(255) not null,
    PROC_INST_ID_ varchar(64) not null,
    EXECUTION_ID_ varchar(64) not null,
    TASK_ID_ varchar(64),
    ACT_INST_ID_ varchar(64),
    NAME_ varchar(255) not null,
    VAR_TYPE_ varchar(255),
    REV_ integer,
    TIME_ datetime not null,
    BYTEARRAY_ID_ varchar(64),
    DOUBLE_ double,
    LONG_ bigint,
    TEXT_ varchar(4000),
    TEXT2_ varchar(4000),
    primary key (ID_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

create table ACT_HI_COMMENT (
    ID_ varchar(64) not null,
    TYPE_ varchar(255),
    TIME_ datetime not null,
    USER_ID_ varchar(255),
    TASK_ID_ varchar(64),
    PROC_INST_ID_ varchar(64),
    ACTION_ varchar(255),
    MESSAGE_ varchar(4000),
    FULL_MSG_ LONGBLOB,
    primary key (ID_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

create table ACT_HI_ATTACHMENT (
    ID_ varchar(64) not null,
    REV_ integer,
    USER_ID_ varchar(255),
    NAME_ varchar(255),
    DESCRIPTION_ varchar(4000),
    TYPE_ varchar(255),
    TASK_ID_ varchar(64),
    PROC_INST_ID_ varchar(64),
    URL_ varchar(4000),
    CONTENT_ID_ varchar(64),
    primary key (ID_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

create index ACT_IDX_HI_PRO_INST_END on ACT_HI_PROCINST(END_TIME_);
create index ACT_IDX_HI_PRO_I_BUSKEY on ACT_HI_PROCINST(BUSINESS_KEY_);
create index ACT_IDX_HI_ACT_INST_START on ACT_HI_ACTINST(START_TIME_);
create index ACT_IDX_HI_ACT_INST_END on ACT_HI_ACTINST(END_TIME_);
create index ACT_IDX_HI_DETAIL_PROC_INST on ACT_HI_DETAIL(PROC_INST_ID_);
create index ACT_IDX_HI_DETAIL_ACT_INST on ACT_HI_DETAIL(ACT_INST_ID_);
create index ACT_IDX_HI_DETAIL_TIME on ACT_HI_DETAIL(TIME_);
create index ACT_IDX_HI_DETAIL_NAME on ACT_HI_DETAIL(NAME_);
create index ACT_IDX_HI_DETAIL_TASK_ID on ACT_HI_DETAIL(TASK_ID_);
commit;
use activiti;

create table ACT_ID_GROUP (
    ID_ varchar(64),
    REV_ integer,
    NAME_ varchar(255),
    TYPE_ varchar(255),
    primary key (ID_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

create table ACT_ID_MEMBERSHIP (
    USER_ID_ varchar(64),
    GROUP_ID_ varchar(64),
    primary key (USER_ID_, GROUP_ID_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

create table ACT_ID_USER (
    ID_ varchar(64),
    REV_ integer,
    FIRST_ varchar(255),
    LAST_ varchar(255),
    EMAIL_ varchar(255),
    PWD_ varchar(255),
    PICTURE_ID_ varchar(64),
    primary key (ID_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

create table ACT_ID_INFO (
    ID_ varchar(64),
    REV_ integer,
    USER_ID_ varchar(64),
    TYPE_ varchar(64),
    KEY_ varchar(255),
    VALUE_ varchar(255),
    PASSWORD_ LONGBLOB,
    PARENT_ID_ varchar(255),
    primary key (ID_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

alter table ACT_ID_MEMBERSHIP 
    add constraint ACT_FK_MEMB_GROUP 
    foreign key (GROUP_ID_) 
    references ACT_ID_GROUP (ID_);

alter table ACT_ID_MEMBERSHIP 
    add constraint ACT_FK_MEMB_USER 
    foreign key (USER_ID_) 
    references ACT_ID_USER (ID_);

commit;
use openiam;

START TRANSACTION;

CREATE TABLE res_to_res_membership (
	RESOURCE_ID varchar(32) NOT NULL,
	MEMBER_RESOURCE_ID varchar(32) NOT NULL,
	CREATE_DATE TIMESTAMP NULL,
	UPDATE_DATE TIMESTAMP NULL,
	CREATED_BY varchar(32) NULL,
	UPDATED_BY varchar(32) NULL,
	UNIQUE(RESOURCE_ID, MEMBER_RESOURCE_ID),
	FOREIGN KEY (RESOURCE_ID) REFERENCES RES (RESOURCE_ID ),
	FOREIGN KEY (MEMBER_RESOURCE_ID) REFERENCES RES (RESOURCE_ID )
)  Engine=InnoDB;

DELIMITER $$

CREATE TRIGGER res_res_mem_insert
BEFORE
INSERT ON res_to_res_membership
	FOR EACH ROW
	BEGIN
		SET NEW.CREATE_DATE = NOW();
		SET NEW.UPDATE_DATE = NOW();
	END$$

DROP PROCEDURE IF EXISTS migrateResources$$

CREATE PROCEDURE migrateResources()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE res_id, parent VARCHAR(32);		
		DECLARE cur1 CURSOR FOR (SELECT RESOURCE_ID, RESOURCE_PARENT FROM RES WHERE RESOURCE_PARENT IS NOT null);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
		
		REPEAT 
			FETCH cur1 INTO res_id, parent;
			IF (res_id IS NOT NULL AND parent IS NOT NULL) THEN
				IF ((SELECT RESOURCE_ID FROM res_to_res_membership WHERE RESOURCE_ID=parent AND MEMBER_RESOURCE_ID=res_id) IS NULL) THEN
					INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES(parent, res_id);
				END IF;
			END IF;
		UNTIL done END REPEAT; 
				
		
		CLOSE cur1;
	END$$
DELIMITER ;

call migrateResources();

DROP PROCEDURE migrateResources;

COMMIT;
commit;
use openiam;

START TRANSACTION;

CREATE TABLE grp_to_grp_membership (
	GROUP_ID varchar(32) NOT NULL,
	MEMBER_GROUP_ID varchar(32) NOT NULL,
	CREATE_DATE TIMESTAMP NULL,
	UPDATE_DATE TIMESTAMP NULL,
	CREATED_BY varchar(32) NULL,
	UPDATED_BY varchar(32) NULL,
	UNIQUE(GROUP_ID, MEMBER_GROUP_ID),
	FOREIGN KEY (GROUP_ID) REFERENCES GRP (GRP_ID ),
	FOREIGN KEY (MEMBER_GROUP_ID) REFERENCES GRP (GRP_ID )
)  Engine=InnoDB;

DELIMITER $$

CREATE TRIGGER grp_grp_mem_insert 
BEFORE 
INSERT ON grp_to_grp_membership 
	FOR EACH ROW
	BEGIN
		SET NEW.CREATE_DATE = NOW();
		SET NEW.UPDATE_DATE = NOW();
	END$$

DROP PROCEDURE IF EXISTS migrateGroups$$

CREATE PROCEDURE migrateGroups()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE id, parent VARCHAR(32);		
		DECLARE cur1 CURSOR FOR (SELECT GRP_ID, PARENT_GRP_ID FROM GRP WHERE PARENT_GRP_ID IS NOT null AND INHERIT_FROM_PARENT=1);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
		
		REPEAT 
			FETCH cur1 INTO id, parent;
			IF (id IS NOT NULL AND parent IS NOT NULL) THEN
				IF ((SELECT GROUP_ID FROM grp_to_grp_membership WHERE GROUP_ID=parent AND MEMBER_GROUP_ID=id) IS NULL) THEN
					INSERT INTO grp_to_grp_membership (GROUP_ID, MEMBER_GROUP_ID) VALUES(parent, id);
				END IF;
			END IF;
		UNTIL done END REPEAT; 
				
		
		CLOSE cur1;
	END$$

DELIMITER ;

call migrateGroups();

DROP PROCEDURE migrateGroups;

COMMIT;
commit;
use openiam;

START TRANSACTION;

/*DROP all references to the Role Table*/

ALTER TABLE GRP_ROLE DROP FOREIGN KEY FK_GRP_ROLE_ROLE;

ALTER TABLE GRP_ROLE DROP INDEX FK_GRP_ROLE_ROLE;

ALTER TABLE GRP_ROLE DROP PRIMARY KEY;

ALTER TABLE RESOURCE_ROLE DROP FOREIGN KEY FK_RESOURCE_ROLE_ROLE;

ALTER TABLE RESOURCE_ROLE DROP INDEX FK_RESOURCE_ROLE_ROLE;

ALTER TABLE RESOURCE_ROLE DROP FOREIGN KEY FK_RESOURCE_ROLE_RESOURCE;

ALTER TABLE RESOURCE_ROLE DROP PRIMARY KEY;

ALTER TABLE RESOURCE_ROLE ADD CONSTRAINT FK_RESOURCE_ROLE_RESOURCE FOREIGN KEY (RESOURCE_ID) REFERENCES RES(RESOURCE_ID);

ALTER TABLE ROLE_ATTRIBUTE DROP FOREIGN KEY FK_ROLE_ROLE_ATTRIBUTE;

ALTER TABLE ROLE_ATTRIBUTE DROP INDEX FK_ROLE_ROLE_ATTRIBUTE;

ALTER TABLE USER_ROLE DROP FOREIGN KEY FK_USR_ROLE_ROLE;

ALTER TABLE USER_ROLE DROP INDEX FK_USR_ROLE_ROLE;

ALTER TABLE USER_ROLE DROP PRIMARY KEY;

ALTER TABLE ROLE_POLICY DROP FOREIGN KEY ROLE_POLICY_ibfk_1; # this might break

ALTER TABLE ROLE_POLICY DROP INDEX ROLE_ID;

DROP TABLE ROLE_ENTITLEMENT;

DROP VIEW USER_ROLE_VW;

ALTER TABLE RESOURCE_POLICY DROP FOREIGN KEY RS_PL_RL_RLID;

ALTER TABLE RESOURCE_POLICY DROP KEY RS_PL_RL_RLID;

ALTER TABLE PERMISSIONS DROP PRIMARY KEY;

ALTER TABLE ROLE DROP FOREIGN KEY FK_ROLE_SERVICE;

ALTER TABLE ROLE DROP INDEX FK_ROLE_SERVICE;

ALTER TABLE ROLE DROP PRIMARY KEY;

ALTER TABLE ROLE ADD CONSTRAINT FK_ROLE_SERVICE FOREIGN KEY (SERVICE_ID) REFERENCES SECURITY_DOMAIN(DOMAIN_ID);

/*Add the new ID, and populate it via stored procedure (no better way to do this)*/
ALTER TABLE ROLE ADD TEMP_ROLE_ID varchar(32) NULL;

DELIMITER $$

DROP PROCEDURE IF EXISTS generateSimpleRoleId$$

CREATE PROCEDURE generateSimpleRoleId()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE role, service, roleId VARCHAR(32);		
		DECLARE newId INT DEFAULT 1;
		DECLARE cur1 CURSOR FOR (SELECT ROLE_ID, SERVICE_ID, TEMP_ROLE_ID FROM ROLE);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
		
		REPEAT 
			FETCH cur1 INTO role, service, roleId;
			IF (roleId IS NULL) THEN
				UPDATE ROLE SET TEMP_ROLE_ID=newId WHERE SERVICE_ID=service AND ROLE_ID=role;
				SET newId = newId + 1;
			END IF;
		UNTIL done END REPEAT; 
				
		
		CLOSE cur1;
	END$$
DELIMITER ;

call generateSimpleRoleId();

DROP PROCEDURE generateSimpleRoleId;

/*create the reference column on all tables referencing ROLE, and populate it*/
ALTER TABLE GRP_ROLE ADD TEMP_ROLE_ID varchar(32) NULL;

UPDATE GRP_ROLE r SET TEMP_ROLE_ID= (
	SELECT TEMP_ROLE_ID FROM ROLE WHERE ROLE_ID=r.ROLE_ID AND SERVICE_ID=r.SERVICE_ID
);

ALTER TABLE RESOURCE_ROLE ADD TEMP_ROLE_ID varchar(32) NULL;

UPDATE RESOURCE_ROLE r SET TEMP_ROLE_ID= (
	SELECT TEMP_ROLE_ID FROM ROLE WHERE ROLE_ID=r.ROLE_ID AND SERVICE_ID=r.SERVICE_ID
);

ALTER TABLE ROLE_ATTRIBUTE ADD TEMP_ROLE_ID varchar(32) NULL;

UPDATE ROLE_ATTRIBUTE r SET TEMP_ROLE_ID= (
	SELECT TEMP_ROLE_ID FROM ROLE WHERE ROLE_ID=r.ROLE_ID AND SERVICE_ID=r.SERVICE_ID
);

ALTER TABLE USER_ROLE ADD TEMP_ROLE_ID varchar(32) NULL;

UPDATE USER_ROLE r SET TEMP_ROLE_ID= (
	SELECT TEMP_ROLE_ID FROM ROLE WHERE ROLE_ID=r.ROLE_ID AND SERVICE_ID=r.SERVICE_ID
);

ALTER TABLE ROLE_POLICY ADD TEMP_ROLE_ID varchar(32) NULL;

UPDATE ROLE_POLICY r SET TEMP_ROLE_ID= (
	SELECT TEMP_ROLE_ID FROM ROLE WHERE ROLE_ID=r.ROLE_ID AND SERVICE_ID=r.SERVICE_ID
);

ALTER TABLE RESOURCE_POLICY ADD TEMP_ROLE_ID varchar(32) NULL;

UPDATE RESOURCE_POLICY r SET TEMP_ROLE_ID= (
	SELECT TEMP_ROLE_ID FROM ROLE WHERE ROLE_ID=r.ROLE_ID AND SERVICE_ID=r.SERVICE_ID
);

ALTER TABLE PERMISSIONS ADD COLUMN TEMP_ROLE_ID varchar(32);

UPDATE PERMISSIONS r SET TEMP_ROLE_ID=(
	SELECT TEMP_ROLE_ID FROM ROLE WHERE ROLE_ID=r.ROLE_ID AND SERVICE_ID=r.SERVICE_ID
);

/*drop the old column that referenced the composite key*/
ALTER TABLE GRP_ROLE DROP COLUMN SERVICE_ID;

ALTER TABLE GRP_ROLE DROP COLUMN ROLE_ID;

ALTER TABLE RESOURCE_ROLE DROP COLUMN SERVICE_ID;

ALTER TABLE RESOURCE_ROLE DROP COLUMN ROLE_ID;

ALTER TABLE ROLE_ATTRIBUTE DROP COLUMN SERVICE_ID;

ALTER TABLE ROLE_ATTRIBUTE DROP COLUMN ROLE_ID;

ALTER TABLE USER_ROLE DROP COLUMN SERVICE_ID;

ALTER TABLE USER_ROLE DROP COLUMN ROLE_ID;

ALTER TABLE ROLE_POLICY DROP COLUMN SERVICE_ID;

ALTER TABLE ROLE_POLICY DROP COLUMN ROLE_ID;

ALTER TABLE RESOURCE_POLICY DROP COLUMN SERVICE_ID;

ALTER TABLE RESOURCE_POLICY DROP COLUMN ROLE_ID;

ALTER TABLE PERMISSIONS DROP COLUMN SERVICE_ID;

ALTER TABLE PERMISSIONS DROP COLUMN ROLE_ID;

ALTER TABLE ROLE DROP COLUMN ROLE_ID;

/*rename the TEMP_ROLE_ID columns to be ROLE_ID NOT NULL*/
alter table GRP_ROLE CHANGE TEMP_ROLE_ID ROLE_ID varchar(32) NOT NULL;

alter table RESOURCE_ROLE CHANGE TEMP_ROLE_ID ROLE_ID varchar(32) NOT NULL;

alter table ROLE_ATTRIBUTE CHANGE TEMP_ROLE_ID ROLE_ID varchar(32) NOT NULL;

alter table USER_ROLE CHANGE TEMP_ROLE_ID ROLE_ID varchar(32) NOT NULL;

alter table ROLE_POLICY CHANGE TEMP_ROLE_ID ROLE_ID varchar(32) NOT NULL;

alter table RESOURCE_POLICY CHANGE TEMP_ROLE_ID ROLE_ID varchar(32) NOT NULL;

alter table ROLE CHANGE TEMP_ROLE_ID ROLE_ID varchar(32) NOT NULL;

/* it is possible that PERMISSIONS records did not map to an existing Role or Menu - delete those */
DELETE FROM PERMISSIONS WHERE TEMP_ROLE_ID IS NULL OR TEMP_ROLE_ID='';
DELETE FROM PERMISSIONS WHERE MENU_ID NOT IN (
	SELECT MENU_ID FROM MENU
);

alter table PERMISSIONS CHANGE TEMP_ROLE_ID ROLE_ID varchar(32) NOT NULL;

/*make ROLE_ID primary on ROLE*/
ALTER TABLE ROLE ADD PRIMARY KEY (ROLE_ID);

/*add foreign keys to the new column*/
ALTER TABLE GRP_ROLE ADD CONSTRAINT FK_GRP_ROLE_ROLE FOREIGN KEY(ROLE_ID) REFERENCES ROLE(ROLE_ID);

ALTER TABLE RESOURCE_ROLE ADD CONSTRAINT FK_RESOURCE_ROLE_ROLE FOREIGN KEY(ROLE_ID) REFERENCES ROLE(ROLE_ID);

ALTER TABLE ROLE_ATTRIBUTE ADD CONSTRAINT FK_ROLE_ROLE_ATTRIBUTE FOREIGN KEY(ROLE_ID) REFERENCES ROLE(ROLE_ID);

ALTER TABLE USER_ROLE ADD CONSTRAINT FK_USR_ROLE_ROLE FOREIGN KEY(ROLE_ID) REFERENCES ROLE(ROLE_ID);

ALTER TABLE ROLE_POLICY ADD CONSTRAINT FK_ROLE_POLICY_ROLE FOREIGN KEY(ROLE_ID) REFERENCES ROLE(ROLE_ID);

ALTER TABLE RESOURCE_POLICY ADD CONSTRAINT FK_RESOURCE_POLICY_ROLE FOREIGN KEY(ROLE_ID) REFERENCES ROLE(ROLE_ID);

ALTER TABLE PERMISSIONS ADD CONSTRAINT FK_PERMISSIONS_ROLE FOREIGN KEY(ROLE_ID) REFERENCES ROLE(ROLE_ID);

ALTER TABLE PERMISSIONS ADD CONSTRAINT FK_PERMISSIONS_MENU FOREIGN KEY(MENU_ID) REFERENCES MENU(MENU_ID);

/*recreate primary keys*/
ALTER TABLE GRP_ROLE ADD PRIMARY KEY (GRP_ID, ROLE_ID);

ALTER TABLE RESOURCE_ROLE ADD PRIMARY KEY (RESOURCE_ID, ROLE_ID, PRIVILEGE_ID);

ALTER TABLE USER_ROLE add PRIMARY KEY (ROLE_ID, USER_ID);

ALTER TABLE PERMISSIONS ADD PRIMARY KEY (MENU_ID, ROLE_ID);

/*make the ROLE names unique, if not already*/
DELIMITER $$

DROP PROCEDURE IF EXISTS makeRoleNamesUnique$$

CREATE PROCEDURE makeRoleNamesUnique()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE id VARCHAR(32);
		DECLARE name VARCHAR(80);
		DECLARE service VARCHAR(20);
		DECLARE newId INT DEFAULT 1;
		DECLARE cur1 CURSOR FOR (SELECT ROLE_ID, SERVICE_ID, ROLE_NAME FROM ROLE);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
		
		REPEAT 
			FETCH cur1 INTO id, service, name;
			IF ((SELECT count(*) FROM ROLE WHERE ROLE_NAME=name) > 1) THEN
				UPDATE ROLE SET ROLE_NAME= CONCAT(name, '_',service) WHERE ROLE_ID=id;
			END IF;
		UNTIL done END REPEAT; 
				
		
		CLOSE cur1;
	END$$
DELIMITER ;

call makeRoleNamesUnique();

DROP PROCEDURE makeRoleNamesUnique;

/*add the unique constraint*/
ALTER TABLE ROLE ADD UNIQUE(ROLE_NAME);

COMMIT;
commit;
use openiam;

ALTER TABLE RESOURCE_ROLE DROP FOREIGN KEY FK_RESOURCE_ROLE_RESOURCE;
ALTER TABLE RESOURCE_ROLE DROP FOREIGN KEY FK_RESOURCE_ROLE_ROLE;
ALTER TABLE RESOURCE_ROLE DROP INDEX FK_RESOURCE_ROLE_ROLE;
ALTER TABLE RESOURCE_ROLE DROP PRIMARY KEY;
ALTER TABLE RESOURCE_ROLE DROP COLUMN PRIVILEGE_ID;
ALTER TABLE RESOURCE_ROLE DROP COLUMN PERMIT;
ALTER TABLE RESOURCE_ROLE ADD CONSTRAINT FK_RESOURCE_ROLE_RESOURCE FOREIGN KEY (RESOURCE_ID) REFERENCES RES(RESOURCE_ID);
ALTER TABLE RESOURCE_ROLE ADD CONSTRAINT FK_RESOURCE_ROLE_ROLE FOREIGN KEY(ROLE_ID) REFERENCES ROLE(ROLE_ID);
ALTER TABLE RESOURCE_ROLE ADD PRIMARY KEY (RESOURCE_ID, ROLE_ID);
commit;
use openiam;

START TRANSACTION;

CREATE TABLE role_to_role_membership (
	ROLE_ID varchar(32) NOT NULL,
	MEMBER_ROLE_ID varchar(32) NOT NULL,
	CREATE_DATE TIMESTAMP NULL,
	UPDATE_DATE TIMESTAMP NULL,
	CREATED_BY varchar(32) NULL,
	UPDATED_BY varchar(32) NULL,
	UNIQUE(ROLE_ID, MEMBER_ROLE_ID),
	FOREIGN KEY ROLE_ROLE_MMSP_ROLE_ID (ROLE_ID) REFERENCES ROLE (ROLE_ID ),
	FOREIGN KEY ROLE_ROLE_MMSP_MEMBER_ROLE_ID (MEMBER_ROLE_ID) REFERENCES ROLE (ROLE_ID )
)  Engine=InnoDB;

DELIMITER $$

CREATE TRIGGER role_role_mem_insert 
BEFORE 
INSERT ON role_to_role_membership 
	FOR EACH ROW
	BEGIN
		SET NEW.CREATE_DATE = NOW();
		SET NEW.UPDATE_DATE = NOW();
	END$$

DROP PROCEDURE IF EXISTS migrateRoles$$

CREATE PROCEDURE migrateRoles()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE id, parent VARCHAR(32);		
		DECLARE cur1 CURSOR FOR (SELECT ROLE_ID, PARENT_ROLE_ID FROM ROLE WHERE PARENT_ROLE_ID IS NOT null AND INHERIT_FROM_PARENT=1);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
		
		REPEAT 
			FETCH cur1 INTO id, parent;
			IF (id IS NOT NULL AND parent IS NOT NULL) THEN
				IF ((SELECT ROLE_ID FROM role_to_role_membership WHERE ROLE_ID=parent AND MEMBER_ROLE_ID=id) IS NULL) THEN
					INSERT INTO role_to_role_membership (ROLE_ID, MEMBER_ROLE_ID) VALUES(parent, id);
				END IF;
			END IF;
		UNTIL done END REPEAT; 
				
		
		CLOSE cur1;
	END$$

DELIMITER ;

call migrateRoles();

DROP PROCEDURE migrateRoles;

COMMIT;
commit;
use openiam;

START TRANSACTION;

DELIMITER $$

/*make group names unique*/
DROP PROCEDURE IF EXISTS makeGroupNamesUnique$$

CREATE PROCEDURE makeGroupNamesUnique()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE groupName, groupId VARCHAR(32);		
		DECLARE group_idx INT DEFAULT 1;
		DECLARE cur1 CURSOR FOR SELECT GRP_NAME, GRP_ID FROM GRP WHERE GRP_NAME IN ( SELECT GRP_NAME FROM GRP GROUP BY GRP_NAME HAVING count(GRP_NAME) > 1 );
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
		
		REPEAT 
			FETCH cur1 INTO groupName, groupId;
			IF ((groupName IS NOT NULL) AND (groupId IS NOT NULL)) THEN
				UPDATE GRP SET GRP_NAME=CONCAT(groupName, "_", group_idx) WHERE GRP_ID=groupId;
				SET group_idx = group_idx + 1;
			END IF;
		UNTIL done END REPEAT; 
				
		CLOSE cur1;
	END$$
DELIMITER ;

call makeGroupNamesUnique();

DROP PROCEDURE makeGroupNamesUnique;

DELIMITER $$

/*make role names unique*/
DROP PROCEDURE IF EXISTS makeResourceNamesUnique;

CREATE PROCEDURE makeResourceNamesUnique()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE resourceName, resourceId VARCHAR(32);		
		DECLARE res_idx INT DEFAULT 1;
		DECLARE cur1 CURSOR FOR SELECT NAME, RESOURCE_ID FROM RES WHERE NAME IN ( SELECT NAME FROM RES GROUP BY NAME HAVING count(NAME) > 1 );
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
		
		REPEAT 
			FETCH cur1 INTO resourceName, resourceId;
			IF ((resourceName IS NOT NULL) AND (resourceId IS NOT NULL)) THEN
				UPDATE RES SET NAME=CONCAT(resourceName, "_", res_idx) WHERE RESOURCE_ID=resourceId;
				SET res_idx = res_idx + 1;
			END IF;
		UNTIL done END REPEAT; 
				
		CLOSE cur1;
	END$$
DELIMITER ;

call makeResourceNamesUnique();

DROP PROCEDURE makeResourceNamesUnique;


ALTER TABLE GRP ADD UNIQUE(GRP_NAME);

ALTER TABLE RES ADD UNIQUE(NAME);

COMMIT;
commit;
use openiam;

ALTER TABLE RES ADD COLUMN MIN_AUTH_LEVEL VARCHAR(32);

ALTER TABLE RES ADD COLUMN DOMAIN VARCHAR(64);

ALTER TABLE RES ADD COLUMN IS_PUBLIC CHAR(1) DEFAULT 'Y';

ALTER TABLE RES ADD COLUMN IS_SSL CHAR(1) DEFAULT 'N';
commit;
use openiam;

INSERT INTO RESOURCE_TYPE (RESOURCE_TYPE_ID, DESCRIPTION, METADATA_TYPE_ID) VALUES('MENU_ITEM', 'Menus', 'MENU_ITEM');

START TRANSACTION;

DELIMITER $$

DROP PROCEDURE IF EXISTS copyMenuDataIntoResources$$

CREATE PROCEDURE copyMenuDataIntoResources()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE resourceId, parentResourceId VARCHAR(32);
		DECLARE menuId, menuGroup, menuName, menuDescription VARCHAR(32);
                DECLARE menuUrl VARCHAR(255);		
		DECLARE displayOrder INT DEFAULT null;
		DECLARE cur2 CURSOR FOR (SELECT MENU_ID, MENU_GROUP, MENU_NAME, MENU_DESC, URL, DISPLAY_ORDER FROM MENU WHERE MENU_ID IN(
			SELECT MENU_GROUP FROM MENU WHERE MENU_GROUP IS NOT NULL
		));
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur2;
		
		REPEAT
			FETCH cur2 INTO menuId, menuGroup, menuName, menuDescription, menuUrl, displayOrder;
			SET resourceId = CONCAT(menuId, '');
			IF ((SELECT RESOURCE_ID FROM RES WHERE RESOURCE_ID=resourceId) IS NULL) THEN
				INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, URL, IS_PUBLIC, DISPLAY_ORDER) VALUES(resourceId, 'MENU_ITEM', menuDescription, resourceId, menuUrl, 'N', displayOrder);
				INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES (CONCAT(resourceId, '_MENU_DISPLAY'), resourceId, 'MENU_DISPLAY_NAME', menuName);
			END IF;
		UNTIL done END REPEAT;
		
		CLOSE cur2;
	END$$
DELIMITER ;

call copyMenuDataIntoResources();

DROP PROCEDURE copyMenuDataIntoResources;

DELIMITER $$

DROP PROCEDURE IF EXISTS copyMenuDataIntoResources2$$

CREATE PROCEDURE copyMenuDataIntoResources2()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE resourceId, parentResourceId VARCHAR(32);
		DECLARE menuId, menuGroup, menuName, menuDescription VARCHAR(32);
                DECLARE menuUrl VARCHAR(255);
		DECLARE newResourceName VARCHAR(32);
		DECLARE displayOrder INT DEFAULT null;
		DECLARE name_idx INT DEFAULT 0;
		DECLARE cur1 CURSOR FOR (SELECT MENU_ID, MENU_GROUP, MENU_NAME, MENU_DESC, URL, DISPLAY_ORDER FROM MENU);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
		
		REPEAT
			FETCH cur1 INTO menuId, menuGroup, menuName, menuDescription, menuUrl, displayOrder;
			SET resourceId = CONCAT(menuId, '');
			SET parentResourceId = CONCAT(menuGroup, '');
			SET newResourceName = menuName;
			
			IF((SELECT NAME FROM RES WHERE NAME=menuName) IS NOT NULL) THEN
				SET newResourceName = concat(menuName, '_', name_idx);
				SET name_idx = name_idx + 1;
			END IF;
			
			IF ((SELECT RESOURCE_ID FROM RES WHERE RESOURCE_ID=resourceId) IS NULL) THEN
				INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, URL, IS_PUBLIC, DISPLAY_ORDER) VALUES(resourceId, 'MENU_ITEM', menuDescription, resourceId, menuUrl, 'N', displayOrder);
				INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES (CONCAT(resourceId, '_MENU_DISPLAY'), resourceId, 'MENU_DISPLAY_NAME', menuName);
			END IF;
			
			IF(parentResourceId IS NOT NULL AND resourceId IS NOT NULL) THEN
				IF((SELECT RESOURCE_ID FROM res_to_res_membership WHERE RESOURCE_ID=parentResourceId AND MEMBER_RESOURCE_ID=resourceId) IS NULL) THEN
					INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES(parentResourceId, resourceId);
				END IF;
			END IF;
		UNTIL done END REPEAT; 
		
		CLOSE cur1;
	END$$
DELIMITER ;

call copyMenuDataIntoResources2();

DROP PROCEDURE copyMenuDataIntoResources2;

DELIMITER $$

DROP PROCEDURE IF EXISTS migratePermissions$$

CREATE PROCEDURE migratePermissions()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE menuId, roleId, resourceId VARCHAR(32);
		DECLARE cur1 CURSOR FOR (SELECT MENU_ID, ROLE_ID FROM PERMISSIONS);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
		
		REPEAT
			FETCH cur1 INTO menuId, roleId;
			SET resourceId = CONCAT(menuId, '');
			IF ( (SELECT RESOURCE_ID FROM RESOURCE_ROLE WHERE RESOURCE_ID=resourceId AND ROLE_ID=roleId) IS NULL) THEN
				INSERT INTO RESOURCE_ROLE (RESOURCE_ID, ROLE_ID) VALUES(resourceId, roleId);
			END IF;
		UNTIL done END REPEAT; 
		
		CLOSE cur1;
	END$$
DELIMITER ;

call migratePermissions();

DROP PROCEDURE migratePermissions;

DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN('ROOT');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('ROOT');
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN('ROOT');
DELETE FROM RES WHERE RESOURCE_ID IN('ROOT');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES (CONCAT('IDM', '_MENU_PUBLIC'), 'IDM', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES (CONCAT('SELFSERVICE', '_MENU_PUBLIC'), 'SELFSERVICE', 'MENU_IS_PUBLIC', 'true');

commit;

use openiam;

DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN(
	SELECT RESOURCE_ID FROM RES WHERE NAME IS NULL
);

DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN(
	SELECT RESOURCE_ID FROM RES WHERE NAME IS NULL
);

DELETE FROM RESOURCE_GROUP WHERE RESOURCE_ID IN(
	SELECT RESOURCE_ID FROM RES WHERE NAME IS NULL
);

DELETE FROM RESOURCE_PRIVILEGE WHERE RESOURCE_ID IN(
	SELECT RESOURCE_ID FROM RES WHERE NAME IS NULL
);

DELETE FROM RESOURCE_POLICY WHERE RESOURCE_ID IN(
	SELECT RESOURCE_ID FROM RES WHERE NAME IS NULL
);

DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN(
	SELECT RESOURCE_ID FROM RES WHERE NAME IS NULL
);

DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN(
	SELECT RESOURCE_ID FROM RES WHERE NAME IS NULL
);

DELETE FROM RESOURCE_USER WHERE RESOURCE_ID IN(
	SELECT RESOURCE_ID FROM RES WHERE NAME IS NULL
);

DELETE FROM RES WHERE NAME IS NULL;

ALTER TABLE RES MODIFY COLUMN NAME VARCHAR(40) NOT NULL;

ALTER TABLE RES MODIFY COLUMN RESOURCE_TYPE_ID VARCHAR(20) NOT NULL;
commit;
use openiam;

ALTER TABLE RES ADD IS_URL_PROTECTOR CHAR(1) DEFAULT 'N';

UPDATE RES SET IS_URL_PROTECTOR = 'N';

ALTER TABLE RES MODIFY COLUMN IS_URL_PROTECTOR CHAR(1) NOT NULL DEFAULT 'N';
commit;
use openiam;

DELETE FROM GRP_ATTRIBUTES WHERE GRP_ID IS NULL;
DELETE FROM GRP_ROLE WHERE GRP_ID IS NULL;
DELETE FROM grp_to_grp_membership WHERE GROUP_ID IS NULL OR MEMBER_GROUP_ID IS NULL;
DELETE FROM RESOURCE_GROUP WHERE GRP_ID IS NULL;
DELETE FROM USER_GRP WHERE GRP_ID IS NULL;
DELETE FROM GRP WHERE GRP_ID IS NULL;

ALTER TABLE GRP_ATTRIBUTES MODIFY COLUMN GRP_ID VARCHAR(32) NOT NULL;
ALTER TABLE GRP_ROLE MODIFY COLUMN GRP_ID VARCHAR(32) NOT NULL;
ALTER TABLE RESOURCE_GROUP MODIFY COLUMN GRP_ID VARCHAR(32) NOT NULL;
ALTER TABLE USER_GRP MODIFY COLUMN GRP_ID VARCHAR(32) NOT NULL;
ALTER TABLE GRP MODIFY COLUMN GRP_ID VARCHAR(32) NOT NULL;


DELETE FROM RESOURCE_GROUP;

ALTER TABLE RESOURCE_GROUP ADD CONSTRAINT UNIQUE_RESOURCE_GROUP UNIQUE (GRP_ID, RESOURCE_ID);
commit;
use openiam;

UPDATE USERS SET COMPANY_ID=null WHERE COMPANY_ID='';

ALTER TABLE USERS
  ADD CONSTRAINT FK_USERS_COMPANY FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (COMPANY_ID),
  ADD INDEX FK_USERS_COMPANY (COMPANY_ID ASC);

commit;
use openiam;

ALTER TABLE RES DROP COLUMN NODE_LEVEL;
ALTER TABLE RES DROP COLUMN SENSITIVE_APP;
ALTER TABLE RES DROP COLUMN RESOURCE_PARENT;


ALTER TABLE ROLE DROP COLUMN PROVISION_OBJ_NAME;
ALTER TABLE ROLE DROP COLUMN PARENT_ROLE_ID;
ALTER TABLE ROLE DROP COLUMN INHERIT_FROM_PARENT;
ALTER TABLE ROLE DROP COLUMN ROLE_APPROVER_ID;
ALTER TABLE ROLE DROP COLUMN ROLE_END_DATE;
commit;
use openiam;

DELETE FROM GRP_ROLE WHERE ROLE_ID IN(SELECT ROLE_ID FROM ROLE WHERE ROLE_NAME IS NULL);
DELETE FROM PERMISSIONS WHERE ROLE_ID IN(SELECT ROLE_ID FROM ROLE WHERE ROLE_NAME IS NULL);
DELETE FROM RESOURCE_POLICY WHERE ROLE_ID IN(SELECT ROLE_ID FROM ROLE WHERE ROLE_NAME IS NULL);
DELETE FROM RESOURCE_ROLE WHERE ROLE_ID IN(SELECT ROLE_ID FROM ROLE WHERE ROLE_NAME IS NULL);
DELETE FROM ROLE_ATTRIBUTE WHERE ROLE_ID IN(SELECT ROLE_ID FROM ROLE WHERE ROLE_NAME IS NULL);
DELETE FROM ROLE_POLICY WHERE ROLE_ID IN(SELECT ROLE_ID FROM ROLE WHERE ROLE_NAME IS NULL);
DELETE FROM USER_ROLE WHERE ROLE_ID IN(SELECT ROLE_ID FROM ROLE WHERE ROLE_NAME IS NULL);
DELETE FROM role_to_role_membership WHERE ROLE_ID IN(SELECT ROLE_ID FROM ROLE WHERE ROLE_NAME IS NULL);
DELETE FROM role_to_role_membership WHERE MEMBER_ROLE_ID IN(SELECT ROLE_ID FROM ROLE WHERE ROLE_NAME IS NULL);
ALTER TABLE ROLE MODIFY COLUMN ROLE_NAME VARCHAR(80) NOT NULL;
commit;
use openiam;

UPDATE RES SET URL='/webconsole/resources.html' WHERE RESOURCE_ID='SECURITY_RES';

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('RESOURCE_MENU_ROOT', 'MENU_ITEM', 'RESOURCE_MENU_ROOT', 'Root for Resource Context Menu');

UPDATE res_to_res_membership SET RESOURCE_ID='RESOURCE_MENU_ROOT' WHERE RESOURCE_ID='SECURITY_RES';

UPDATE RES SET URL='/webconsole/resources.html' WHERE RESOURCE_ID='RESSUMMARY';

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('CREATE_RESOURCE_MENU', 'MENU_ITEM', 'CREATE_RESOURCE_MENU', 'Resource for Menu Creation', '/webconsole/newResource.html');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('RESOURCE_MENU_ROOT', 'CREATE_RESOURCE_MENU');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CR_RES_DISP_NAME', 'CREATE_RESOURCE_MENU', 'MENU_DISPLAY_NAME', 'Create New Resource');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CR_RES_MENU_PUB', 'CREATE_RESOURCE_MENU', 'MENU_IS_PUBLIC', 'true'); 
/* update menus to have 'resouce page' */
UPDATE RES SET URL='/webconsole/editResource.html' WHERE RESOURCE_ID='CREATE_RESOURCE_MENU';



INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME) VALUES('RESOURCE_EDIT_PAGE_ROOT', 'MENU_ITEM', 'RESOURCE_EDIT_PAGE_ROOT');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('RESOURCE_EDIT_PAGE_ROOT_PUB', 'RESOURCE_EDIT_PAGE_ROOT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('RESOURCE_EDIT_PAGE_ROOT_DIS', 'RESOURCE_EDIT_PAGE_ROOT', 'MENU_DISPLAY_NAME', 'Resource Edit Page Root');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('EDIT_RESOURCE', 'MENU_ITEM', 'EDIT_RESOURCE', 'Edit Resource','/webconsole/editResource.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('EDIT_RESOURCE_PUB', 'EDIT_RESOURCE', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('EDIT_RESOURCE_DIS', 'EDIT_RESOURCE', 'MENU_DISPLAY_NAME', 'Edit Resource');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('RES_ATTR_PAGE', 'MENU_ITEM', 'RES_ATTR_PAGE', 'Resource Attributes','/webconsole/resourceAttributes.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('RES_ATTR_PAGE_PUB', 'RES_ATTR_PAGE', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('RES_ATTR_PAGE_DIS', 'RES_ATTR_PAGE', 'MENU_DISPLAY_NAME', 'Attributes & Patterns');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('RES_ENT_SUB', 'MENU_ITEM', 'RES_ENT_SUB', 'Resouce Entitlements','/webconsole/resourceEntitlements.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('RES_ENT_SUB_PUB', 'RES_ENT_SUB', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('RES_ENT_SUB_DIS', 'RES_ENT_SUB', 'MENU_DISPLAY_NAME', 'Entitlements');


INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('RESOURCE_EDIT_PAGE_ROOT', 'RES_ENT_SUB');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('RESOURCE_EDIT_PAGE_ROOT', 'RES_ATTR_PAGE');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('RESOURCE_EDIT_PAGE_ROOT', 'EDIT_RESOURCE');

commit;
use openiam;

UPDATE RES SET URL='/webconsole/roles.html' WHERE RESOURCE_ID='SECURITY_ROLE';
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SECURITY_ROLE_MENU_PUBLIC', 'SECURITY_ROLE', 'MENU_IS_PUBLIC', 'true');

DELETE FROM RESOURCE_COMPANY WHERE RESOURCE_ID IN(SELECT MEMBER_RESOURCE_ID FROM res_to_res_membership WHERE RESOURCE_ID='SECURITY_ROLE');
DELETE FROM RESOURCE_GROUP  WHERE RESOURCE_ID IN(SELECT MEMBER_RESOURCE_ID FROM res_to_res_membership WHERE RESOURCE_ID='SECURITY_ROLE');
DELETE FROM RESOURCE_POLICY WHERE RESOURCE_ID IN(SELECT MEMBER_RESOURCE_ID FROM res_to_res_membership WHERE RESOURCE_ID='SECURITY_ROLE');
DELETE FROM RESOURCE_PRIVILEGE WHERE RESOURCE_ID IN(SELECT MEMBER_RESOURCE_ID FROM res_to_res_membership WHERE RESOURCE_ID='SECURITY_ROLE');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN(SELECT MEMBER_RESOURCE_ID FROM res_to_res_membership WHERE RESOURCE_ID='SECURITY_ROLE');
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN(SELECT MEMBER_RESOURCE_ID FROM res_to_res_membership WHERE RESOURCE_ID='SECURITY_ROLE');
DELETE FROM RESOURCE_USER WHERE RESOURCE_ID IN(SELECT MEMBER_RESOURCE_ID FROM res_to_res_membership WHERE RESOURCE_ID='SECURITY_ROLE');
DELETE FROM res_to_res_membership WHERE RESOURCE_ID='SECURITY_ROLE';

/* role root menus */
INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('ROLE_ROOT_MENU', 'MENU_ITEM', 'ROLE_ROOT_MENU', 'Role Root Menus','/webconsole/roles.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ROLE_ROOT_MENU_PUB', 'ROLE_ROOT_MENU', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ROLE_ROOT_MENU_DESC', 'ROLE_ROOT_MENU', 'MENU_DISPLAY_NAME', 'Role Root Menu');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('ROLE_SEARCH', 'MENU_ITEM', 'ROLE_SEARCH', 'Role Search','/webconsole/roles.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ROLE_SEARCH_PUB', 'ROLE_SEARCH', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ROLE_SEARCH_DESC', 'ROLE_SEARCH', 'MENU_DISPLAY_NAME', 'Role Search');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('NEW_ROLE', 'MENU_ITEM', 'NEW_ROLE', 'New Role','/webconsole/editRole.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('NEW_ROLE_PUB', 'NEW_ROLE', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('NEW_ROLE_DESC', 'NEW_ROLE', 'MENU_DISPLAY_NAME', 'Create New Role');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ROLE_ROOT_MENU', 'ROLE_SEARCH');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ROLE_ROOT_MENU', 'NEW_ROLE');


/* role edit menus */
INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('ROLE_EDIT_MENU', 'MENU_ITEM', 'ROLE_EDIT_MENU', 'Role Edit Menus');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ROLE_EDIT_MENU_PUB', 'ROLE_EDIT_MENU', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ROLE_EDIT_MENU_DESC', 'ROLE_EDIT_MENU', 'MENU_DISPLAY_NAME', 'Role Root Edit Menu');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('EDIT_ROLE', 'MENU_ITEM', 'EDIT_ROLE', 'Role Menus','/webconsole/editRole.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('EDIT_ROLE_PUB', 'EDIT_ROLE', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('EDIT_ROLE_DESC', 'EDIT_ROLE', 'MENU_DISPLAY_NAME', 'Edit Role');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('ROLE_ATTRIBUTES', 'MENU_ITEM', 'ROLE_ATTRIBUTES', 'Role Attributes','/webconsole/roleAttributes.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ROLE_ATTRIBUTES_PUB', 'ROLE_ATTRIBUTES', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ROLE_ATTRIBUTES_DESC', 'ROLE_ATTRIBUTES', 'MENU_DISPLAY_NAME', 'Role Attributes');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('ROLE_ENTITLEMENTS', 'MENU_ITEM', 'ROLE_ENTITLEMENTS', 'Role Entitlements','/webconsole/roleEntitlements.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ROLE_ENTITLEMENTS_PUB', 'ROLE_ENTITLEMENTS', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ROLE_ENTITLEMENTS_DESC', 'ROLE_ENTITLEMENTS', 'MENU_DISPLAY_NAME', 'Role Entitlements');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ROLE_EDIT_MENU', 'EDIT_ROLE');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ROLE_EDIT_MENU', 'ROLE_ATTRIBUTES');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ROLE_EDIT_MENU', 'ROLE_ENTITLEMENTS');
commit;
use openiam;

DELETE FROM GRP_ATTRIBUTES WHERE GRP_ID IN( SELECT GRP_ID FROM GRP WHERE GRP_NAME IS NULL);
DELETE FROM GRP_ROLE WHERE GRP_ID IN( SELECT GRP_ID FROM GRP WHERE GRP_NAME IS NULL);
DELETE FROM grp_to_grp_membership WHERE GROUP_ID IN( SELECT GRP_ID FROM GRP WHERE GRP_NAME IS NULL);
DELETE FROM grp_to_grp_membership WHERE MEMBER_GROUP_ID IN( SELECT GRP_ID FROM GRP WHERE GRP_NAME IS NULL);
DELETE FROM RESOURCE_GROUP WHERE GRP_ID IN( SELECT GRP_ID FROM GRP WHERE GRP_NAME IS NULL);
DELETE FROM USER_GRP WHERE GRP_ID IN( SELECT GRP_ID FROM GRP WHERE GRP_NAME IS NULL);
ALTER TABLE GRP MODIFY COLUMN GRP_NAME VARCHAR(80) NOT NULL;

ALTER TABLE USER_GRP ADD CONSTRAINT USER_GRP_UNIQUE_RECORD UNIQUE (USER_ID, GRP_ID);
commit;
use openiam;

ALTER TABLE GRP DROP COLUMN POLICY_ID;
ALTER TABLE GRP DROP COLUMN GROUP_APPROVER_ID;
ALTER TABLE GRP DROP COLUMN PARENT_GRP_ID;
ALTER TABLE GRP DROP COLUMN INHERIT_FROM_PARENT;
ALTER TABLE GRP DROP COLUMN GROUP_CLASS;
commit;
use openiam;

UPDATE RES SET URL='/webconsole/groups.html' WHERE RESOURCE_ID='SECURITY_GROUP';
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SECURITY_GROUP_PUB', 'SECURITY_GROUP', 'MENU_IS_PUBLIC', 'true');

/* group root menus */
INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('GROUP_ROOT_MENU', 'MENU_ITEM', 'GROUP_ROOT_MENU', 'Group Menus','/webconsole/groups.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('GROUP_ROOT_MENU_PUB', 'GROUP_ROOT_MENU', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('GROUP_ROOT_MENU_DESC', 'GROUP_ROOT_MENU', 'MENU_DISPLAY_NAME', 'Group Root Menu');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('GROUP_SEARCH', 'MENU_ITEM', 'GROUP_SEARCH', 'Group Search','/webconsole/groups.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('GROUP_SEARCH_PUB', 'GROUP_SEARCH', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('GROUP_SEARCH_DESC', 'GROUP_SEARCH', 'MENU_DISPLAY_NAME', 'Group Search');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('NEW_GROUP', 'MENU_ITEM', 'NEW_GROUP', 'Create New Group','/webconsole/editGroup.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('NEW_GROUP_PUB', 'NEW_GROUP', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('NEW_GROUP_DESC', 'NEW_GROUP', 'MENU_DISPLAY_NAME', 'Create New Group');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('GROUP_ROOT_MENU', 'GROUP_SEARCH');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('GROUP_ROOT_MENU', 'NEW_GROUP');


/* group edit menus */
INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('GROUP_EDIT_MENU', 'MENU_ITEM', 'GROUP_EDIT_MENU', 'Group Edit Menus');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('GROUP_EDIT_MENU_PUB', 'GROUP_EDIT_MENU', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('GROUP_EDIT_MENU_DESC', 'GROUP_EDIT_MENU', 'MENU_DISPLAY_NAME', 'Group Root Edit Menu');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('EDIT_GROUP', 'MENU_ITEM', 'EDIT_GROUP', 'Edit Group','/webconsole/editGroup.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('EDIT_GROUP_PUB', 'EDIT_GROUP', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('EDIT_GROUP_DESC', 'EDIT_GROUP', 'MENU_DISPLAY_NAME', 'Edit Group');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('GROUP_ATTRIBUTES', 'MENU_ITEM', 'GROUP_ATTRIBUTES', 'Group Attributes','/webconsole/groupAttributes.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('GROUP_ATTRIBUTES_PUB', 'GROUP_ATTRIBUTES', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('GROUP_ATTRIBUTES_DESC', 'GROUP_ATTRIBUTES', 'MENU_DISPLAY_NAME', 'Group Attributes');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('GROUP_ENTITLEMENTS', 'MENU_ITEM', 'GROUP_ENTITLEMENTS', 'Group Entitlements','/webconsole/groupEntitlements.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('GROUP_ENTITLEMENTS_PUB', 'GROUP_ENTITLEMENTS', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('GROUP_ENTITLEMENTS_DESC', 'GROUP_ENTITLEMENTS', 'MENU_DISPLAY_NAME', 'Group Entitlements');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('GROUP_EDIT_MENU', 'EDIT_GROUP');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('GROUP_EDIT_MENU', 'GROUP_ATTRIBUTES');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('GROUP_EDIT_MENU', 'GROUP_ENTITLEMENTS');
commit;
use openiam;

INSERT INTO METADATA_TYPE(TYPE_ID, DESCRIPTION, SYNC_MANAGED_SYS) VALUES('AD_GROUP_TYPE','AD GROUP TYPE', 0);
INSERT INTO METADATA_TYPE(TYPE_ID, DESCRIPTION, SYNC_MANAGED_SYS) VALUES('LDAP_GROUP_TYPE','LDAP GROUP TYPE', 0);
INSERT INTO METADATA_TYPE(TYPE_ID, DESCRIPTION, SYNC_MANAGED_SYS) VALUES('DEFAULT_GROUP','DEFAULT GROUP TYPE', 0);

INSERT INTO CATEGORY (category_id, parent_id, category_name, show_list) VALUES('GROUP_TYPE', 'ROOT', 'Group Type',0);

INSERT INTO CATEGORY_TYPE (category_id, type_id) VALUES('GROUP_TYPE','AD_GROUP_TYPE');
INSERT INTO CATEGORY_TYPE (category_id, type_id) VALUES('GROUP_TYPE','LDAP_GROUP_TYPE');
INSERT INTO CATEGORY_TYPE (category_id, type_id) VALUES('GROUP_TYPE','DEFAULT_GROUP');
commit;
use openiam;

ALTER TABLE METADATA_TYPE MODIFY TYPE_ID varchar(32) not null;

ALTER TABLE CATEGORY_LANGUAGE MODIFY CATEGORY_ID varchar(32) not null;

ALTER TABLE CATEGORY_TYPE 
	MODIFY 
		CATEGORY_ID varchar(32) not null, 
	MODIFY	
		TYPE_ID varchar(32) not null;
ALTER TABLE CATEGORY 
	MODIFY 
		CATEGORY_ID varchar(32) not null, 
	MODIFY	
		PARENT_ID varchar(32) null;
ALTER TABLE METADATA_ELEMENT 
	MODIFY 
		METADATA_ID varchar(32) not null, 
	MODIFY	
		TYPE_ID varchar(32) not null;

commit;
use openiam;

DELIMITER $$

CREATE TRIGGER ON_USER_INSERT 
BEFORE 
INSERT ON USERS 
	FOR EACH ROW
	BEGIN
		SET NEW.CREATE_DATE = NOW();
		SET NEW.LAST_UPDATE = NOW();
	END$$
	
CREATE TRIGGER ON_USER_UPDATE
BEFORE 
UPDATE ON USERS 
	FOR EACH ROW
	BEGIN
		SET NEW.LAST_UPDATE = NOW();
	END$$
	
DELIMITER ;
commit;
use openiam;
CREATE TABLE `IDM_AUDIT_LOG_CUSTOM` (
  `CUSTOM_LOG_ID` bigint NOT NULL AUTO_INCREMENT,
  `LOG_ID` varchar(32) NOT NULL,
  `NAME` varchar(255) DEFAULT NULL,
  `VALUE` varchar(255) DEFAULT NULL,
  `TYPE` INTEGER NOT NULL,
  `DISPLAY_ORDER` INTEGER NOT NULL,
  PRIMARY KEY (`CUSTOM_LOG_ID`),
  KEY `FK_LOG_ID` (`LOG_ID`),
 CONSTRAINT `FK_LOG_ID` FOREIGN KEY (`LOG_ID`) 
 REFERENCES `IDM_AUDIT_LOG` (`LOG_ID`)
) ENGINE=InnoDB;


INSERT INTO IDM_AUDIT_LOG_CUSTOM ( LOG_ID,NAME,VALUE,TYPE,DISPLAY_ORDER) 
SELECT  ial.LOG_ID, ial.CUSTOM_ATTRNAME1, ial.CUSTOM_ATTRVALUE1, 0, 1 
FROM IDM_AUDIT_LOG as ial WHERE ial.CUSTOM_ATTRNAME1 IS NOT NULL AND ial.CUSTOM_ATTRVALUE1 IS NOT NULL;

INSERT INTO IDM_AUDIT_LOG_CUSTOM ( LOG_ID,NAME,VALUE,TYPE,DISPLAY_ORDER) 
SELECT  ial.LOG_ID, ial.CUSTOM_ATTRNAME2, ial.CUSTOM_ATTRVALUE2, 0, 2 
FROM IDM_AUDIT_LOG as ial WHERE ial.CUSTOM_ATTRNAME2 IS NOT NULL AND ial.CUSTOM_ATTRVALUE2 IS NOT NULL;

INSERT INTO IDM_AUDIT_LOG_CUSTOM ( LOG_ID,NAME,VALUE,TYPE,DISPLAY_ORDER) 
SELECT  ial.LOG_ID, ial.CUSTOM_ATTRNAME3, ial.CUSTOM_ATTRVALUE3, 0, 3 
FROM IDM_AUDIT_LOG as ial WHERE ial.CUSTOM_ATTRNAME3 IS NOT NULL AND ial.CUSTOM_ATTRVALUE3 IS NOT NULL;

INSERT INTO IDM_AUDIT_LOG_CUSTOM ( LOG_ID,NAME,VALUE,TYPE,DISPLAY_ORDER) 
SELECT  ial.LOG_ID, ial.CUSTOM_ATTRNAME4, ial.CUSTOM_ATTRVALUE4, 0, 4 
FROM IDM_AUDIT_LOG as ial WHERE ial.CUSTOM_ATTRNAME4 IS NOT NULL AND ial.CUSTOM_ATTRVALUE4 IS NOT NULL;

INSERT INTO IDM_AUDIT_LOG_CUSTOM ( LOG_ID,NAME,VALUE,TYPE,DISPLAY_ORDER) 
SELECT  ial.LOG_ID, ial.CUSTOM_ATTRNAME5, ial.CUSTOM_ATTRVALUE5, 0, 5 
FROM IDM_AUDIT_LOG as ial WHERE ial.CUSTOM_ATTRNAME5 IS NOT NULL AND ial.CUSTOM_ATTRVALUE5 IS NOT NULL;

INSERT INTO IDM_AUDIT_LOG_CUSTOM ( LOG_ID,NAME,VALUE,TYPE,DISPLAY_ORDER) 
SELECT  ial.LOG_ID, ial.CUSTOM_ATTRNAME6, ial.CUSTOM_ATTRVALUE6, 0, 6 
FROM IDM_AUDIT_LOG as ial WHERE ial.CUSTOM_ATTRNAME6 IS NOT NULL AND ial.CUSTOM_ATTRVALUE6 IS NOT NULL;

INSERT INTO IDM_AUDIT_LOG_CUSTOM ( LOG_ID,NAME,VALUE,TYPE,DISPLAY_ORDER) 
SELECT  ial.LOG_ID, ial.CUSTOM_ATTRNAME7, ial.CUSTOM_ATTRVALUE7, 0, 7 
FROM IDM_AUDIT_LOG as ial WHERE ial.CUSTOM_ATTRNAME7 IS NOT NULL AND ial.CUSTOM_ATTRVALUE7 IS NOT NULL;

INSERT INTO IDM_AUDIT_LOG_CUSTOM ( LOG_ID,NAME,VALUE,TYPE,DISPLAY_ORDER) 
SELECT  ial.LOG_ID, ial.CUSTOM_ATTRNAME8, ial.CUSTOM_ATTRVALUE8, 0, 8 
FROM IDM_AUDIT_LOG as ial WHERE ial.CUSTOM_ATTRNAME8 IS NOT NULL AND ial.CUSTOM_ATTRVALUE8 IS NOT NULL;

INSERT INTO IDM_AUDIT_LOG_CUSTOM ( LOG_ID,NAME,VALUE,TYPE,DISPLAY_ORDER) 
SELECT  ial.LOG_ID, ial.CUSTOM_ATTRNAME9, ial.CUSTOM_ATTRVALUE9, 0, 9 
FROM IDM_AUDIT_LOG as ial WHERE ial.CUSTOM_ATTRNAME9 IS NOT NULL AND ial.CUSTOM_ATTRVALUE9 IS NOT NULL;

INSERT INTO IDM_AUDIT_LOG_CUSTOM ( LOG_ID,NAME,VALUE,TYPE,DISPLAY_ORDER) 
SELECT  ial.LOG_ID, ial.CUSTOM_ATTRNAME10, ial.CUSTOM_ATTRVALUE10, 0, 10
FROM IDM_AUDIT_LOG as ial WHERE ial.CUSTOM_ATTRNAME10 IS NOT NULL AND ial.CUSTOM_ATTRVALUE10 IS NOT NULL;

INSERT INTO IDM_AUDIT_LOG_CUSTOM ( LOG_ID,NAME,VALUE,TYPE,DISPLAY_ORDER) 
SELECT  ial.LOG_ID, ial.CUSTOM_PARAMNAME1, ial.CUSTOM_PARAMVALUE1, 1, 1 
FROM IDM_AUDIT_LOG as ial WHERE ial.CUSTOM_PARAMNAME1 IS NOT NULL AND ial.CUSTOM_PARAMVALUE1 IS NOT NULL;

INSERT INTO IDM_AUDIT_LOG_CUSTOM ( LOG_ID,NAME,VALUE,TYPE,DISPLAY_ORDER) 
SELECT  ial.LOG_ID, ial.CUSTOM_PARAMNAME2, ial.CUSTOM_PARAMVALUE2, 1, 2 
FROM IDM_AUDIT_LOG as ial WHERE ial.CUSTOM_PARAMNAME2 IS NOT NULL AND ial.CUSTOM_PARAMVALUE2 IS NOT NULL;

INSERT INTO IDM_AUDIT_LOG_CUSTOM ( LOG_ID,NAME,VALUE,TYPE,DISPLAY_ORDER) 
SELECT  ial.LOG_ID, ial.CUSTOM_PARAMNAME3, ial.CUSTOM_PARAMVALUE3, 1, 3 
FROM IDM_AUDIT_LOG as ial WHERE ial.CUSTOM_PARAMNAME3 IS NOT NULL AND ial.CUSTOM_PARAMVALUE3 IS NOT NULL;

INSERT INTO IDM_AUDIT_LOG_CUSTOM ( LOG_ID,NAME,VALUE,TYPE,DISPLAY_ORDER) 
SELECT  ial.LOG_ID, ial.CUSTOM_PARAMNAME4, ial.CUSTOM_PARAMVALUE4, 1, 4 
FROM IDM_AUDIT_LOG as ial WHERE ial.CUSTOM_PARAMNAME4 IS NOT NULL AND ial.CUSTOM_PARAMVALUE4 IS NOT NULL;

INSERT INTO IDM_AUDIT_LOG_CUSTOM ( LOG_ID,NAME,VALUE,TYPE,DISPLAY_ORDER) 
SELECT  ial.LOG_ID, ial.CUSTOM_PARAMNAME5, ial.CUSTOM_PARAMVALUE5, 1, 5 
FROM IDM_AUDIT_LOG as ial WHERE ial.CUSTOM_PARAMNAME5 IS NOT NULL AND ial.CUSTOM_PARAMVALUE5 IS NOT NULL;

INSERT INTO IDM_AUDIT_LOG_CUSTOM ( LOG_ID,NAME,VALUE,TYPE,DISPLAY_ORDER) 
SELECT  ial.LOG_ID, ial.CUSTOM_PARAMNAME6, ial.CUSTOM_PARAMVALUE6, 1, 6 
FROM IDM_AUDIT_LOG as ial WHERE ial.CUSTOM_PARAMNAME6 IS NOT NULL AND ial.CUSTOM_PARAMVALUE6 IS NOT NULL;

INSERT INTO IDM_AUDIT_LOG_CUSTOM ( LOG_ID,NAME,VALUE,TYPE,DISPLAY_ORDER) 
SELECT  ial.LOG_ID, ial.CUSTOM_PARAMNAME7, ial.CUSTOM_PARAMVALUE7, 1, 7 
FROM IDM_AUDIT_LOG as ial WHERE ial.CUSTOM_PARAMNAME7 IS NOT NULL AND ial.CUSTOM_PARAMVALUE7 IS NOT NULL;

INSERT INTO IDM_AUDIT_LOG_CUSTOM ( LOG_ID,NAME,VALUE,TYPE,DISPLAY_ORDER) 
SELECT  ial.LOG_ID, ial.CUSTOM_PARAMNAME8, ial.CUSTOM_PARAMVALUE8, 1, 8 
FROM IDM_AUDIT_LOG as ial WHERE ial.CUSTOM_PARAMNAME8 IS NOT NULL AND ial.CUSTOM_PARAMVALUE8 IS NOT NULL;

INSERT INTO IDM_AUDIT_LOG_CUSTOM ( LOG_ID,NAME,VALUE,TYPE,DISPLAY_ORDER) 
SELECT  ial.LOG_ID, ial.CUSTOM_PARAMNAME9, ial.CUSTOM_PARAMVALUE9, 1, 9 
FROM IDM_AUDIT_LOG as ial WHERE ial.CUSTOM_PARAMNAME9 IS NOT NULL AND ial.CUSTOM_PARAMVALUE9 IS NOT NULL;

INSERT INTO IDM_AUDIT_LOG_CUSTOM ( LOG_ID,NAME,VALUE,TYPE,DISPLAY_ORDER) 
SELECT  ial.LOG_ID, ial.CUSTOM_PARAMNAME10, ial.CUSTOM_PARAMVALUE10, 1, 10
FROM IDM_AUDIT_LOG as ial WHERE ial.CUSTOM_PARAMNAME10 IS NOT NULL AND ial.CUSTOM_PARAMVALUE10 IS NOT NULL; 




ALTER TABLE IDM_AUDIT_LOG
DROP COLUMN `CUSTOM_PARAMVALUE10` , DROP COLUMN `CUSTOM_PARAMVALUE9` , 
DROP COLUMN `CUSTOM_PARAMVALUE8` , DROP COLUMN `CUSTOM_PARAMVALUE7` , 
DROP COLUMN `CUSTOM_PARAMVALUE6` , DROP COLUMN `CUSTOM_PARAMVALUE5` , 
DROP COLUMN `CUSTOM_PARAMVALUE4` , DROP COLUMN `CUSTOM_PARAMVALUE3` , 
DROP COLUMN `CUSTOM_PARAMVALUE2` , DROP COLUMN `CUSTOM_PARAMVALUE1` , 
DROP COLUMN `CUSTOM_PARAMNAME10` , DROP COLUMN `CUSTOM_PARAMNAME9` , 
DROP COLUMN `CUSTOM_PARAMNAME8` , DROP COLUMN `CUSTOM_PARAMNAME7` , 
DROP COLUMN `CUSTOM_PARAMNAME6` , DROP COLUMN `CUSTOM_PARAMNAME5` , 
DROP COLUMN `CUSTOM_PARAMNAME4` , DROP COLUMN `CUSTOM_PARAMNAME3` , 
DROP COLUMN `CUSTOM_PARAMNAME2` , DROP COLUMN `CUSTOM_PARAMNAME1` ,
DROP COLUMN `CUSTOM_ATTRVALUE10` , DROP COLUMN `CUSTOM_ATTRVALUE9` , 
DROP COLUMN `CUSTOM_ATTRVALUE8` , DROP COLUMN `CUSTOM_ATTRVALUE7` , 
DROP COLUMN `CUSTOM_ATTRVALUE6` , DROP COLUMN `CUSTOM_ATTRVALUE5` , 
DROP COLUMN `CUSTOM_ATTRVALUE4` , DROP COLUMN `CUSTOM_ATTRVALUE3` , 
DROP COLUMN `CUSTOM_ATTRVALUE2` , DROP COLUMN `CUSTOM_ATTRVALUE1` , 
DROP COLUMN `CUSTOM_ATTRNAME10` , DROP COLUMN `CUSTOM_ATTRNAME9` , 
DROP COLUMN `CUSTOM_ATTRNAME8` , DROP COLUMN `CUSTOM_ATTRNAME7` , 
DROP COLUMN `CUSTOM_ATTRNAME6` , DROP COLUMN `CUSTOM_ATTRNAME5` , 
DROP COLUMN `CUSTOM_ATTRNAME4` , DROP COLUMN `CUSTOM_ATTRNAME3` , 
DROP COLUMN `CUSTOM_ATTRNAME2` , DROP COLUMN `CUSTOM_ATTRNAME1` , 
DROP COLUMN `ACTION_END_DATETIME`, 
DROP COLUMN `ORIG_OBJECT_STATE`,
DROP COLUMN `NEW_OBJECT_STATE`;

ALTER TABLE IDM_AUDIT_LOG_CUSTOM
MODIFY CUSTOM_LOG_ID varchar(32) NOT NULL;

commit;
use openiam;

DELETE FROM COMPANY_ATTRIBUTE WHERE COMPANY_ID IS NULL;

ALTER TABLE COMPANY_ATTRIBUTE MODIFY COMPANY_ID VARCHAR(32) NOT NULL;


commit;
use openiam;


CREATE TABLE COMPANY_TO_COMPANY_MEMBERSHIP (
	COMPANY_ID varchar(32) NOT NULL,
	MEMBER_COMPANY_ID varchar(32) NOT NULL,
	CREATE_DATE TIMESTAMP NULL,
	UPDATE_DATE TIMESTAMP NULL,
	CREATED_BY varchar(32) NULL,
	UPDATED_BY varchar(32) NULL,
	UNIQUE(COMPANY_ID, MEMBER_COMPANY_ID),
	FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (COMPANY_ID ),
	FOREIGN KEY (MEMBER_COMPANY_ID) REFERENCES COMPANY (COMPANY_ID )
)  Engine=InnoDB;

DELIMITER $$

CREATE TRIGGER ON_COMPANY_XREF_INSERT
BEFORE
INSERT ON COMPANY_TO_COMPANY_MEMBERSHIP
	FOR EACH ROW
	BEGIN
		SET NEW.CREATE_DATE = NOW();
		SET NEW.UPDATE_DATE = NOW();
	END$$

COMMIT;



DROP PROCEDURE IF EXISTS MIGRATE_COMPANY_MEMBERSHIP$$

CREATE PROCEDURE MIGRATE_COMPANY_MEMBERSHIP()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE c_id, p_id VARCHAR(32);		
		DECLARE cur1 CURSOR FOR (SELECT COMPANY_ID, PARENT_ID FROM COMPANY WHERE PARENT_ID IS NOT NULL);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
		
		REPEAT 
			FETCH cur1 INTO c_id, p_id;
			IF (c_id IS NOT NULL AND p_id IS NOT NULL) THEN
				IF ((SELECT COMPANY_ID FROM COMPANY_TO_COMPANY_MEMBERSHIP WHERE COMPANY_ID=p_id AND MEMBER_COMPANY_ID=c_id) IS NULL) THEN
					IF((SELECT COMPANY_ID FROM COMPANY WHERE COMPANY_ID=c_id) IS NOT NULL) THEN
						IF((SELECT COMPANY_ID FROM COMPANY WHERE COMPANY_ID=p_id) IS NOT NULL) THEN
							INSERT INTO COMPANY_TO_COMPANY_MEMBERSHIP (COMPANY_ID, MEMBER_COMPANY_ID) VALUES(p_id, c_id);
						END IF;
					END IF;
				END IF;
			END IF;
		UNTIL done END REPEAT; 
				
		CLOSE cur1;
	END$$
DELIMITER ;

call MIGRATE_COMPANY_MEMBERSHIP();

DROP PROCEDURE MIGRATE_COMPANY_MEMBERSHIP;

COMMIT;
commit;
use openiam;

DROP TABLE RESOURCE_COMPANY;
commit;
use openiam;

ALTER TABLE LOGIN_ATTRIBUTE DROP FOREIGN KEY FK_LOGIN_LOGIN_ATTRIBUTE;

ALTER TABLE LOGIN_ATTRIBUTE DROP INDEX FK_LOGIN_LOGIN_ATTRIBUTE;

ALTER TABLE LOGIN DROP FOREIGN KEY FK_LOGIN_USERS;

ALTER TABLE LOGIN DROP FOREIGN KEY FK_LOGIN_SERVICE;

ALTER TABLE LOGIN DROP PRIMARY KEY;

ALTER TABLE LOGIN ADD COLUMN LOGIN_ID VARCHAR(32);

ALTER TABLE LOGIN_ATTRIBUTE ADD COLUMN LOGIN_ID VARCHAR(32);

ALTER TABLE PWD_HISTORY ADD COLUMN LOGIN_ID VARCHAR(32);

DELIMITER $$

DROP PROCEDURE IF EXISTS GENERATE_SIMPLE_LOGIN_ID$$

CREATE PROCEDURE GENERATE_SIMPLE_LOGIN_ID()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE srvId VARCHAR(20);
		DECLARE lgn VARCHAR(320);
		DECLARE mgSysId VARCHAR(32);
		DECLARE lgnId VARCHAR(32);
		DECLARE newId INT DEFAULT 1;
		DECLARE cur1 CURSOR FOR (SELECT LOGIN, MANAGED_SYS_ID, SERVICE_ID, LOGIN_ID FROM LOGIN);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
		
		REPEAT 
			FETCH cur1 INTO lgn, mgSysId, srvId, lgnId;
			IF (lgnId IS NULL) THEN
				UPDATE LOGIN SET LOGIN_ID=newId WHERE SERVICE_ID=srvId AND MANAGED_SYS_ID=mgSysId AND LOGIN=lgn;
				UPDATE LOGIN_ATTRIBUTE SET LOGIN_ID=newId WHERE SERVICE_ID=srvId AND MANAGED_SYS_ID=mgSysId AND LOGIN=lgn;
				UPDATE PWD_HISTORY SET LOGIN_ID=newId WHERE SERVICE_ID=srvId AND MANAGED_SYS_ID=mgSysId AND LOGIN=lgn;
				SET newId = newId + 1;
			END IF;
		UNTIL done END REPEAT; 
				
		
		CLOSE cur1;
	END$$
DELIMITER ;

call GENERATE_SIMPLE_LOGIN_ID();

DROP PROCEDURE GENERATE_SIMPLE_LOGIN_ID;

ALTER TABLE PWD_HISTORY DROP COLUMN LOGIN;

ALTER TABLE PWD_HISTORY DROP COLUMN SERVICE_ID;

ALTER TABLE PWD_HISTORY DROP COLUMN MANAGED_SYS_ID;

ALTER TABLE LOGIN_ATTRIBUTE DROP COLUMN LOGIN;

ALTER TABLE LOGIN_ATTRIBUTE DROP COLUMN SERVICE_ID;

ALTER TABLE LOGIN_ATTRIBUTE DROP COLUMN MANAGED_SYS_ID;

ALTER TABLE LOGIN ADD PRIMARY KEY (LOGIN_ID);

ALTER TABLE PWD_HISTORY ADD CONSTRAINT LOGIN_ID_PWD_HIST_FK FOREIGN KEY (LOGIN_ID) REFERENCES LOGIN (LOGIN_ID);

ALTER TABLE LOGIN_ATTRIBUTE ADD CONSTRAINT LOGIN_ID_LOGIN_ATTR_FK FOREIGN KEY (LOGIN_ID) REFERENCES LOGIN (LOGIN_ID);

ALTER TABLE LOGIN ADD CONSTRAINT FK_LOGIN_USERS FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID);

ALTER TABLE LOGIN ADD CONSTRAINT FK_LOGIN_SERVICE FOREIGN KEY (SERVICE_ID) REFERENCES SECURITY_DOMAIN(DOMAIN_ID);

ALTER TABLE LOGIN_ATTRIBUTE MODIFY COLUMN LOGIN_ID VARCHAR(32) NOT NULL;

ALTER TABLE PWD_HISTORY MODIFY COLUMN LOGIN_ID VARCHAR(32) NOT NULL;

ALTER TABLE LOGIN ADD CONSTRAINT UNIQUE_LOGIN UNIQUE (LOGIN, MANAGED_SYS_ID, SERVICE_ID);
commit;
use openiam;

ALTER TABLE LOGIN ADD COLUMN LAST_UPDATE TIMESTAMP NULL;

DELIMITER $$

CREATE TRIGGER ON_LOGIN_INSERT 
BEFORE 
INSERT ON LOGIN 
	FOR EACH ROW
	BEGIN
		SET NEW.CREATE_DATE = NOW();
		SET NEW.LAST_UPDATE = NOW();
	END$$
	
CREATE TRIGGER ON_LOGIN_UPDATE
BEFORE 
UPDATE ON LOGIN 
	FOR EACH ROW
	BEGIN
		SET NEW.LAST_UPDATE = NOW();
	END$$
	
DELIMITER ;
commit;
use openiam;

DROP TABLE PERMISSIONS;

DROP TABLE MENU;
commit;
use openiam;

/*remove old user menus*/

DELETE FROM  RESOURCE_PROP WHERE RESOURCE_ID in ('USER_MENU_ROOT', 'USER_EDIT_MENU_ROOT','ADDUSER','NEW_USER','USERSUMMARY','USERROLE',
                                                 'USERPSWDRESET','USERORG','USERORG','USERIDENTITY','USERHISTORY','USERGROUP','USERATTR','QUERYUSER',
                                                 'USER','USER_ROOT_MENU', 'NEW_USER','USER_EDIT_MENU','USER_SEARCH','USER_EDIT_INFO',
                                                 'USER_EDIT_CONTACT_INFO','USER_ATTRIBUTES','USER_IDENTITY','USER_ENTITLEMENTS','USER_HISTORY','USER_DELEGATION','USER_RESET_PASSWORD');

DELETE FROM RESOURCE_ROLE where RESOURCE_ID in ('USER_MENU_ROOT', 'USER_EDIT_MENU_ROOT','ADDUSER','NEW_USER','USERSUMMARY','USERROLE',
                                                'USERPSWDRESET','USERORG','USERORG','USERIDENTITY','USERHISTORY','USERGROUP','USERATTR','QUERYUSER',
                                                'NEW_USER','USER_SEARCH','USER_EDIT_INFO',
                                                'USER_EDIT_CONTACT_INFO','USER_ATTRIBUTES','USER_IDENTITY','USER_ENTITLEMENTS','USER_HISTORY','USER_DELEGATION','USER_RESET_PASSWORD');

DELETE FROM  res_to_res_membership WHERE RESOURCE_ID in ('USER_MENU_ROOT', 'USER_EDIT_MENU_ROOT', 'USER_ROOT_MENU','USER_EDIT_MENU');

DELETE FROM  res_to_res_membership WHERE MEMBER_RESOURCE_ID in ('USER_MENU_ROOT', 'USER_EDIT_MENU_ROOT', 'USER_ROOT_MENU','USER_EDIT_MENU');

DELETE FROM  res_to_res_membership WHERE RESOURCE_ID in ('USER_MENU_ROOT', 'USER_EDIT_MENU_ROOT','ADDUSER','NEW_USER','USERSUMMARY','USERROLE',
	'USERPSWDRESET','USERORG','USERORG','USERIDENTITY','USERHISTORY','USERGROUP','USERATTR','QUERYUSER',
	'NEW_USER','USER_SEARCH','USER_EDIT_INFO', 'USER_ROOT_MENU','USER_EDIT_MENU',
	'USER_EDIT_CONTACT_INFO','USER_ATTRIBUTES','USER_IDENTITY','USER_ENTITLEMENTS','USER_HISTORY','USER_DELEGATION','USER_RESET_PASSWORD');

DELETE FROM  res_to_res_membership WHERE MEMBER_RESOURCE_ID in ('USER_MENU_ROOT', 'USER_EDIT_MENU_ROOT','ADDUSER','NEW_USER','USERSUMMARY','USERROLE',
	'USERPSWDRESET','USERORG','USERORG','USERIDENTITY','USERHISTORY','USERGROUP','USERATTR','QUERYUSER',
	'NEW_USER','USER_SEARCH','USER_EDIT_INFO', 'USER_ROOT_MENU','USER_EDIT_MENU',
	'USER_EDIT_CONTACT_INFO','USER_ATTRIBUTES','USER_IDENTITY','USER_ENTITLEMENTS','USER_HISTORY','USER_DELEGATION','USER_RESET_PASSWORD');

DELETE FROM  RES WHERE RESOURCE_ID in ('USER_MENU_ROOT', 'USER_EDIT_MENU_ROOT','ADDUSER','NEW_USER','USERSUMMARY','USERROLE',
                                       'USERPSWDRESET','USERORG','USERORG','USERIDENTITY','USERHISTORY','USERGROUP','USERATTR','QUERYUSER',
                                       'NEW_USER','USER_SEARCH','USER_EDIT_INFO', 'USER_ROOT_MENU','USER_EDIT_MENU',
                                       'USER_EDIT_CONTACT_INFO','USER_ATTRIBUTES','USER_IDENTITY','USER_ENTITLEMENTS','USER_HISTORY','USER_DELEGATION','USER_RESET_PASSWORD');


/*user root menus*/
UPDATE RES SET URL='/webconsole/users.html' WHERE RESOURCE_ID='USER';

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_MENU_PUB', 'USER', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_MENU_DESC', 'USER', 'MENU_DISPLAY_NAME', 'User');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('USER_ROOT_MENU', 'MENU_ITEM', 'USER_ROOT_MENU', 'Root for User Context Menu');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_ROOT_MENU_PUB', 'USER_ROOT_MENU', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_ROOT_MENU_DESC', 'USER_ROOT_MENU', 'MENU_DISPLAY_NAME', 'User Root Menu');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('NEW_USER', 'MENU_ITEM', 'NEW_USER', 'Create New User','/webconsole/editUser.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('NEW_USER_PUB', 'NEW_USER', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('NEW_USER_DESC', 'NEW_USER', 'MENU_DISPLAY_NAME', 'Create New User');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('USER_ROOT_MENU', 'NEW_USER');

/*user edit menu*/
INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('USER_EDIT_MENU', 'MENU_ITEM', 'USER_EDIT_MENU', 'User Edit Menus');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_EDIT_MENU_PUB', 'USER_EDIT_MENU', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_EDIT_MENU_DESC', 'USER_EDIT_MENU', 'MENU_DISPLAY_NAME', 'User Root Edit Menu');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL, DISPLAY_ORDER) VALUES('USER_SEARCH', 'MENU_ITEM', 'USER_SEARCH', 'User Search','/webconsole/users.html',1);
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_SEARCH_PUB', 'USER_SEARCH', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_SEARCH_DESC', 'USER_SEARCH', 'MENU_DISPLAY_NAME', 'User Search');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL, DISPLAY_ORDER) VALUES('USER_EDIT_INFO', 'MENU_ITEM', 'USER_EDIT_INFO', 'Edit User Primary Info','/webconsole/editUser.html',2);
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_EDIT_INFO_PUB', 'USER_EDIT_INFO', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_EDIT_INFO_DESC', 'USER_EDIT_INFO', 'MENU_DISPLAY_NAME', 'User Info');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL, DISPLAY_ORDER) VALUES('USER_EDIT_CONTACT_INFO', 'MENU_ITEM', 'USER_EDIT_CONTACT_INFO', 'Edit User Contact Info','/webconsole/editUserContact.html',3);
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_EDIT_CONTACT_INFO_PUB', 'USER_EDIT_CONTACT_INFO', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_EDIT_CONTACT_INFO_DESC', 'USER_EDIT_CONTACT_INFO', 'MENU_DISPLAY_NAME', 'Contact Info');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL, DISPLAY_ORDER) VALUES('USER_ATTRIBUTES', 'MENU_ITEM', 'USER_ATTRIBUTES', 'Edit User Attributes','/webconsole/userAttributes.html',4);
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_ATTRIBUTES_PUB', 'USER_ATTRIBUTES', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_ATTRIBUTES_DESC', 'USER_ATTRIBUTES', 'MENU_DISPLAY_NAME', 'User Attributes');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL, DISPLAY_ORDER) VALUES('USER_IDENTITY', 'MENU_ITEM', 'USER_IDENTITY', 'Edit User Identity Info','/webconsole/editUserIdentity.html',6);
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_IDENTITY_PUB', 'USER_IDENTITY', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_IDENTITY_DESC', 'USER_IDENTITY', 'MENU_DISPLAY_NAME', 'User Identities');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL, DISPLAY_ORDER) VALUES('USER_ENTITLEMENTS', 'MENU_ITEM', 'USER_ENTITLEMENTS', 'User Entitlements','/webconsole/userEntitlements.html',7);
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_ENTITLEMENTS_PUB', 'USER_ENTITLEMENTS', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_ENTITLEMENTS_DESC', 'USER_ENTITLEMENTS', 'MENU_DISPLAY_NAME', 'User Entitlements');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL, DISPLAY_ORDER) VALUES('USER_HISTORY', 'MENU_ITEM', 'USER_HISTORY', 'User History','/webconsole/userHistory.html',8);
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_HISTORY_PUB', 'USER_HISTORY', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_HISTORY_DESC', 'USER_HISTORY', 'MENU_DISPLAY_NAME', 'User History');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL, DISPLAY_ORDER) VALUES('USER_DELEGATION', 'MENU_ITEM', 'USER_DELEGATION', 'User Delegation Filter','/webconsole/userDelegation.html',9);
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_DELEGATION_PUB', 'USER_DELEGATION', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_DELEGATION_DESC', 'USER_DELEGATION', 'MENU_DISPLAY_NAME', 'User Delegation Filter');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL, DISPLAY_ORDER) VALUES('USER_RESET_PASSWORD', 'MENU_ITEM', 'USER_RESET_PASSWORD', 'Reset Password','/webconsole/resetPassword.html',10);
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_RESET_PASSWORD_PUB', 'USER_RESET_PASSWORD', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_RESET_PASSWORD_DESC', 'USER_RESET_PASSWORD', 'MENU_DISPLAY_NAME', 'Reset Password');


INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('USER_EDIT_MENU', 'USER_SEARCH');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('USER_EDIT_MENU', 'USER_EDIT_INFO');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('USER_EDIT_MENU', 'USER_EDIT_CONTACT_INFO');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('USER_EDIT_MENU', 'USER_IDENTITY');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('USER_EDIT_MENU', 'USER_ATTRIBUTES');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('USER_EDIT_MENU', 'USER_ENTITLEMENTS');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('USER_EDIT_MENU', 'USER_HISTORY');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('USER_EDIT_MENU', 'USER_DELEGATION');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('USER_EDIT_MENU', 'USER_RESET_PASSWORD');


INSERT INTO RESOURCE_ROLE (RESOURCE_ID, ROLE_ID)
  VALUES ('USER_SEARCH',9),
         ('USER_EDIT_INFO',9),
         ('USER_EDIT_CONTACT_INFO',9),
         ('USER_ATTRIBUTES',9),
         ('USER_ENTITLEMENTS',9),
         ('USER_HISTORY',9),
         ('USER_DELEGATION',9),
         ('USER_RESET_PASSWORD',9),
         ('NEW_USER',9);

commit;
use openiam;

UPDATE RES SET URL='/webconsole/organizations.html' WHERE RESOURCE_ID='ORG';
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ORG_MENU_PUBLIC', 'ORG', 'MENU_IS_PUBLIC', 'true');

/* org root menus */
INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('ORGANIZATION_ROOT_ID', 'MENU_ITEM', 'ORGANIZATION_ROOT_ID', 'Organization Root Menus','/webconsole/organizations.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ORGANIZATION_ROOT_ID_PUB', 'ORGANIZATION_ROOT_ID', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ORGANIZATION_ROOT_ID_DESC', 'ORGANIZATION_ROOT_ID', 'MENU_DISPLAY_NAME', 'Organization Root Menus');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('ORG_SEARCH', 'MENU_ITEM', 'ORG_SEARCH', 'Organization Search','/webconsole/organizations.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ORG_SEARCH_PUB', 'ORG_SEARCH', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ORG_SEARCH_DESC', 'ORG_SEARCH', 'MENU_DISPLAY_NAME', 'Organization Search');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('NEW_ORG', 'MENU_ITEM', 'NEW_ORG', 'New Organization','/webconsole/editOrganization.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('NEW_ORG_PUB', 'NEW_ORG', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('NEW_ORG_DESC', 'NEW_ORG', 'MENU_DISPLAY_NAME', 'Create New Organization');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ORGANIZATION_ROOT_ID', 'ORG_SEARCH');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ORGANIZATION_ROOT_ID', 'NEW_ORG');


/* org edit menus */
INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('ORGANIZATION_EDIT_ID', 'MENU_ITEM', 'ORGANIZATION_EDIT_ID', 'Organization Edit Menus');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ORGANIZATION_EDIT_ID_PUB', 'ORGANIZATION_EDIT_ID', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ORGANIZATION_EDIT_ID_DESC', 'ORGANIZATION_EDIT_ID', 'MENU_DISPLAY_NAME', 'Organization Edit Menus');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('EDIT_ORG', 'MENU_ITEM', 'EDIT_ORG', 'Edit Organization', '/webconsole/editOrganization.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('EDIT_ORG_PUB', 'EDIT_ORG', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('EDIT_ORG_DESC', 'EDIT_ORG', 'MENU_DISPLAY_NAME', 'Edit Organization');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('ORG_ATTRIBUTES', 'MENU_ITEM', 'ORG_ATTRIBUTES', 'Organization Attributes','/webconsole/organizationAttributes.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ORG_ATTRIBUTES_PUB', 'ORG_ATTRIBUTES', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ORG_ATTRIBUTES_DESC', 'ORG_ATTRIBUTES', 'MENU_DISPLAY_NAME', 'Organization Attributes');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('ORG_MEMBERSHIP', 'MENU_ITEM', 'ORG_MEMBERSHIP', 'Organization Membership','/webconsole/organizationMembership.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ORG_MEMBERSHIP_PUB', 'ORG_MEMBERSHIP', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ORG_MEMBERSHIP_DESC', 'ORG_MEMBERSHIP', 'MENU_DISPLAY_NAME', 'Organization Membership');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ORGANIZATION_EDIT_ID', 'EDIT_ORG');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ORGANIZATION_EDIT_ID', 'ORG_ATTRIBUTES');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ORGANIZATION_EDIT_ID', 'ORG_MEMBERSHIP');
commit;
use openiam;

DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('USER_MENUS', 'GROUP_MENUS', 'ROLE_MENUS');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('USER_MENUS', 'GROUP_MENUS', 'ROLE_MENUS');
DELETE FROM RES WHERE RESOURCE_ID IN('USER_MENUS', 'GROUP_MENUS', 'ROLE_MENUS');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('USER_MENUS', 'MENU_ITEM', 'USER_MENUS', 'User Menus', '/webconsole/userMenuTree.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_MENUS_PUB', 'USER_MENUS', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('USER_MENUS_DESC', 'USER_MENUS', 'MENU_DISPLAY_NAME', 'Menus');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('GROUP_MENUS', 'MENU_ITEM', 'GROUP_MENUS', 'Group Menus', '/webconsole/groupMenuTree.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('GROUP_MENUS_PUB', 'GROUP_MENUS', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('GROUP_MENUS_DESC', 'GROUP_MENUS', 'MENU_DISPLAY_NAME', 'Menus');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('ROLE_MENUS', 'MENU_ITEM', 'ROLE_MENUS', 'Role Menus', '/webconsole/roleMenuTree.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ROLE_MENUS_PUB', 'ROLE_MENUS', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ROLE_MENUS_DESC', 'ROLE_MENUS', 'MENU_DISPLAY_NAME', 'Menus');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('USER_EDIT_MENU', 'USER_MENUS');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('GROUP_EDIT_MENU', 'GROUP_MENUS');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ROLE_EDIT_MENU', 'ROLE_MENUS');
commit;
use openiam;

DROP TABLE USER_PRIVILEGE;
commit;
use openiam;

ALTER TABLE EMAIL_ADDRESS 
	CHANGE COLUMN IS_DEFAULT IS_DEFAULT CHAR(1) NULL DEFAULT 'N', 
	CHANGE COLUMN ACTIVE ACTIVE CHAR(1) NULL DEFAULT 'Y';

ALTER TABLE ADDRESS
	CHANGE COLUMN IS_DEFAULT IS_DEFAULT CHAR(1) NULL DEFAULT 'N',
	CHANGE COLUMN ACTIVE ACTIVE CHAR(1) NULL DEFAULT 'Y';

ALTER TABLE PHONE
	CHANGE COLUMN IS_DEFAULT IS_DEFAULT CHAR(1) NULL DEFAULT 'N',
	CHANGE COLUMN ACTIVE ACTIVE CHAR(1) NULL DEFAULT 'Y';

update EMAIL_ADDRESS
	set IS_DEFAULT = case when IS_DEFAULT is null or IS_DEFAULT='0' THEN 'N' ELSE 'Y' END,
	    ACTIVE = case when ACTIVE is null or ACTIVE='0' THEN 'N' ELSE 'Y' END;

update ADDRESS
	set IS_DEFAULT = case when IS_DEFAULT is null or IS_DEFAULT='0' THEN 'N' ELSE 'Y' END,
	    ACTIVE = case when ACTIVE is null or ACTIVE='0' THEN 'N' ELSE 'Y' END;

update PHONE
	set IS_DEFAULT = case when IS_DEFAULT is null or IS_DEFAULT='0' THEN 'N' ELSE 'Y' END,
	    ACTIVE = case when ACTIVE is null or ACTIVE='0' THEN 'N' ELSE 'Y' END;

commit;
use openiam;

ALTER TABLE RESOURCE_TYPE MODIFY METADATA_TYPE_ID VARCHAR(32);
commit;
use openiam;

INSERT INTO METADATA_TYPE (TYPE_ID, DESCRIPTION, ACTIVE, SYNC_MANAGED_SYS) VALUES('MENU_ITEM', 'Menu Item Type', 1, 1);
INSERT INTO METADATA_TYPE (TYPE_ID, DESCRIPTION, ACTIVE, SYNC_MANAGED_SYS) VALUES('AUTHENTICATION_PROVIDER', 'Authentication Provider', 1, 1);
INSERT INTO RESOURCE_TYPE (RESOURCE_TYPE_ID, DESCRIPTION, METADATA_TYPE_ID) VALUES ('AUTH_PROVIDER', 'Authentication Provider', 'AUTHENTICATION_PROVIDER');
commit;
use openiam;

UPDATE RES SET IS_PUBLIC='Y' WHERE NAME='SELFSERVICE';

DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('SELFSERVICE_MYINFO', 'SELFSERVICE_MYAPPS');
DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN('SELFSERVICE_MYINFO', 'SELFSERVICE_MYAPPS');
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('SELFSERVICE_MYINFO', 'SELFSERVICE_MYAPPS');
DELETE FROM RES WHERE RESOURCE_ID IN('SELFSERVICE_MYINFO', 'SELFSERVICE_MYAPPS');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('SELFSERVICE_MYINFO', 'MENU_ITEM', 'SELFSERVICE_MYINFO', 'My Info', '/selfservice/myInfo.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERVICE_MYINFO_PUB', 'SELFSERVICE_MYINFO', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERVICE_MYINFO_DESC', 'SELFSERVICE_MYINFO', 'MENU_DISPLAY_NAME', 'My Info');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('SELFSERVICE', 'SELFSERVICE_MYINFO');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('SELFSERVICE_MYAPPS', 'MENU_ITEM', 'SELFSERVICE_MYAPPS', 'My Applications', '/selfservice/myApplications.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERVICE_MYAPPS_PUB', 'SELFSERVICE_MYAPPS', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERVICE_MYAPPS_DESC', 'SELFSERVICE_MYAPPS', 'MENU_DISPLAY_NAME', 'My Applications');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('SELFSERVICE', 'SELFSERVICE_MYAPPS');
commit;
use openiam;

INSERT INTO METADATA_TYPE (TYPE_ID, DESCRIPTION, ACTIVE, SYNC_MANAGED_SYS) VALUES('CONTENT_PROVIDER', 'Content Provider', 1, 1);
INSERT INTO METADATA_TYPE (TYPE_ID, DESCRIPTION, ACTIVE, SYNC_MANAGED_SYS) VALUES('URL_PATTERN', 'Url Pattern', 1, 1);
INSERT INTO RESOURCE_TYPE (RESOURCE_TYPE_ID, DESCRIPTION, METADATA_TYPE_ID) VALUES ('CONTENT_PROVIDER', 'Content Provider', 'CONTENT_PROVIDER');
INSERT INTO RESOURCE_TYPE (RESOURCE_TYPE_ID, DESCRIPTION, METADATA_TYPE_ID) VALUES ('URL_PATTERN', 'Url Pattern', 'URL_PATTERN');
commit;
use openiam;

ALTER TABLE RES DROP COLUMN IS_URL_PROTECTOR;
commit;
use openiam;

ALTER TABLE RES CHANGE COLUMN NAME NAME VARCHAR(150) NOT NULL;

commit;
use openiam;

UPDATE POLICY_ATTRIBUTE SET VALUE1='defaultLoginModule' WHERE POLICY_ATTR_ID=4108;
commit;
use openiam;

update IDM_AUDIT_LOG set ACTION_DATETIME = now() where ACTION_DATETIME is null;
commit;
use openiam;

UPDATE RES SET URL='/webconsole-idm/provisioning/connectorlist.html' where RESOURCE_ID='PROVCONNECT';

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('PROVCONNECT_MENU_ITEM', 'MENU_ITEM', 'PROVCONNECT_MENU_ITEM', 'Provisioning Connectors', '/webconsole-idm/provisioning/connectorlist.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('PROVCONNECT_PUB', 'PROVCONNECT_MENU_ITEM', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('PROVCONNECT_DESC', 'PROVCONNECT_MENU_ITEM', 'MENU_DISPLAY_NAME', 'Provisioning Connectors');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('PROV_CONNECTOR_NEW', 'MENU_ITEM', 'PROV_CONNECTOR_NEW', 'Create Provisioning Connector', '/webconsole-idm/provisioning/connector.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('PROV_CONNECTOR_NEW_PUB', 'PROV_CONNECTOR_NEW', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('PROV_CONNECTOR_DSC', 'PROV_CONNECTOR_NEW', 'MENU_DISPLAY_NAME', 'Create New Connector');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('PROVCONNECT_MENU_ITEM', 'PROV_CONNECTOR_NEW');

commit;
use openiam;

ALTER TABLE IDENTITY_QUESTION ADD COLUMN TEMP_REQUIRED CHAR(1) DEFAULT 'N';
ALTER TABLE IDENTITY_QUESTION ADD COLUMN TEMP_ACTIVE CHAR(1) DEFAULT 'Y';
UPDATE IDENTITY_QUESTION SET TEMP_REQUIRED='Y' WHERE REQUIRED=1;
UPDATE IDENTITY_QUESTION SET TEMP_REQUIRED='N' WHERE REQUIRED=0;
UPDATE IDENTITY_QUESTION SET TEMP_ACTIVE='Y' WHERE ACTIVE=1;
UPDATE IDENTITY_QUESTION SET TEMP_ACTIVE='N' WHERE ACTIVE=0;
ALTER TABLE IDENTITY_QUESTION DROP COLUMN ACTIVE;
ALTER TABLE IDENTITY_QUESTION DROP COLUMN REQUIRED;
ALTER TABLE IDENTITY_QUESTION CHANGE TEMP_REQUIRED REQUIRED CHAR(1) DEFAULT 'N';
ALTER TABLE IDENTITY_QUESTION CHANGE TEMP_ACTIVE ACTIVE CHAR(1) DEFAULT 'Y';
commit;
use openiam;

UPDATE RES SET URL='/selfservice/changePasswordInternal.html' WHERE RESOURCE_ID='CHNGPSWD';

UPDATE RES SET URL='/selfservice/editProfile.html' WHERE RESOURCE_ID IN('SELF_QUERYUSER', 'SELF_USERSUMMARY');

UPDATE RES SET URL='/selfservice/myIdentities.html' WHERE RESOURCE_ID='SELF_USERIDENTITY';

UPDATE RES SET URL='/selfservice/challengeResponse.html' WHERE RESOURCE_ID='IDQUEST';

UPDATE RES SET URL='/selfservice/resetPasswordInternal.html' WHERE RESOURCE_ID='SELF_USERPSWDRESET';

DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('SELF_LOGIN_ROOT', 'SELF_LOGIN_LIST', 'SELF_LOGIN_NEW');
DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN('SELF_LOGIN_ROOT', 'SELF_LOGIN_LIST', 'SELF_LOGIN_NEW');
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('SELF_LOGIN_ROOT', 'SELF_LOGIN_LIST', 'SELF_LOGIN_NEW');
DELETE FROM RES WHERE RESOURCE_ID IN('SELF_LOGIN_ROOT', 'SELF_LOGIN_LIST', 'SELF_LOGIN_NEW');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('SELF_LOGIN_ROOT', 'MENU_ITEM', 'SELF_LOGIN_ROOT', 'SelfService Login Root Context Menu');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELF_LOGIN_ROOT_PUB', 'SELF_LOGIN_ROOT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELF_LOGIN_ROOT_DESC', 'SELF_LOGIN_ROOT', 'MENU_DISPLAY_NAME', 'SelfService Login Root');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('SELF_LOGIN_LIST', 'MENU_ITEM', 'SELF_LOGIN_LIST', 'My Identities','/selfservice/myIdentities.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELF_LOGIN_LIST_PUB', 'SELF_LOGIN_LIST', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELF_LOGIN_LIST_DESC', 'SELF_LOGIN_LIST', 'MENU_DISPLAY_NAME', 'My Identities');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('SELF_LOGIN_NEW', 'MENU_ITEM', 'SELF_LOGIN_NEW', 'New Login','/selfservice/identity.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELF_LOGIN_NEW_PUB', 'SELF_LOGIN_NEW', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELF_LOGIN_NEW_DESC', 'SELF_LOGIN_NEW', 'MENU_DISPLAY_NAME', 'New Login');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('SELF_LOGIN_ROOT', 'SELF_LOGIN_LIST');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('SELF_LOGIN_ROOT', 'SELF_LOGIN_NEW');

commit;
use openiam;

UPDATE RES SET URL='/webconsole-idm/provisioning/mngsystemlist.html' where RESOURCE_ID='MNGSYS';

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('MNGSYS_MENU_ITEM', 'MENU_ITEM', 'MNGSYS_MENU_ITEM', 'Managed Systems', '/webconsole-idm/provisioning/mngsystemlist.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('MNGSYS_PUB', 'MNGSYS_MENU_ITEM', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('MNGSYS_DESC', 'MNGSYS_MENU_ITEM', 'MENU_DISPLAY_NAME', 'Managed Systems');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('MNGSYS_NEW', 'MENU_ITEM', 'MNGSYS_NEW', 'Create Managed System', '/webconsole-idm/provisioning/mngsystem.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('MNGSYS_NEW_PUB', 'MNGSYS_NEW', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('MNGSYS_DSC', 'MNGSYS_NEW', 'MENU_DISPLAY_NAME', 'Create New Managed System');


INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('MNGSYS_MENU_ITEM', 'MNGSYS_NEW');


commit;
use openiam;

ALTER TABLE MANAGED_SYS change HNDLR_1 SEARCH_HNDLR VARCHAR(100);
ALTER TABLE MANAGED_SYS change HNDLR_2 LOOKUP_HNDLR VARCHAR(100);
ALTER TABLE MANAGED_SYS change HNDLR_3 TEST_CONNECTION_HNDLR VARCHAR(100);
ALTER TABLE MANAGED_SYS change HNDLR_4 RECONCILE_RESOURCE_HNDLR VARCHAR(100);
commit;
use openiam;

ALTER TABLE USER_IDENTITY_ANS MODIFY COLUMN IDENTITY_QUESTION_ID VARCHAR(32) NOT NULL;
ALTER TABLE USER_IDENTITY_ANS DROP COLUMN QUESTION_TEXT;
commit;
use openiam;

ALTER TABLE IDENTITY_QUESTION DROP COLUMN USER_ID;
ALTER TABLE IDENTITY_QUESTION DROP COLUMN REQUIRED;
commit;
use openiam;

ALTER TABLE EMAIL_ADDRESS ADD COLUMN LAST_UPDATE TIMESTAMP NULL;
ALTER TABLE EMAIL_ADDRESS ADD COLUMN CREATE_DATE TIMESTAMP NULL DEFAULT NOW();

DELIMITER $$

CREATE TRIGGER ON_EMAIL_INSERT 
BEFORE 
INSERT ON EMAIL_ADDRESS 
	FOR EACH ROW
	BEGIN
		SET NEW.CREATE_DATE = NOW();
		SET NEW.LAST_UPDATE = NOW();
	END$$
	
CREATE TRIGGER ON_EMAIL_UPDATE
BEFORE 
UPDATE ON EMAIL_ADDRESS 
	FOR EACH ROW
	BEGIN
		SET NEW.LAST_UPDATE = NOW();
	END$$
	
DELIMITER ;


ALTER TABLE PHONE ADD COLUMN LAST_UPDATE TIMESTAMP NULL;
ALTER TABLE PHONE ADD COLUMN CREATE_DATE TIMESTAMP NULL DEFAULT NOW();

DELIMITER $$

CREATE TRIGGER ON_PHONE_INSERT 
BEFORE 
INSERT ON PHONE 
	FOR EACH ROW
	BEGIN
		SET NEW.CREATE_DATE = NOW();
		SET NEW.LAST_UPDATE = NOW();
	END$$
	
CREATE TRIGGER ON_PHONE_UPDATE
BEFORE 
UPDATE ON PHONE 
	FOR EACH ROW
	BEGIN
		SET NEW.LAST_UPDATE = NOW();
	END$$
	
DELIMITER ;

ALTER TABLE ADDRESS ADD COLUMN LAST_UPDATE TIMESTAMP NULL;
ALTER TABLE ADDRESS ADD COLUMN CREATE_DATE TIMESTAMP NULL DEFAULT NOW();

DELIMITER $$

CREATE TRIGGER ON_ADDRESS_INSERT 
BEFORE 
INSERT ON ADDRESS 
	FOR EACH ROW
	BEGIN
		SET NEW.CREATE_DATE = NOW();
		SET NEW.LAST_UPDATE = NOW();
	END$$
	
CREATE TRIGGER ON_ADDRESS_UPDATE
BEFORE 
UPDATE ON ADDRESS 
	FOR EACH ROW
	BEGIN
		SET NEW.LAST_UPDATE = NOW();
	END$$
	
DELIMITER ;
commit;
use openiam;

ALTER TABLE EMAIL_ADDRESS DROP COLUMN PARENT_TYPE;
ALTER TABLE PHONE DROP COLUMN PARENT_TYPE;
ALTER TABLE ADDRESS DROP COLUMN PARENT_TYPE;
commit;
use openiam;

DELETE FROM EMAIL_ADDRESS WHERE PARENT_ID NOT IN (SELECT USER_ID FROM USERS);
DELETE FROM PHONE WHERE PARENT_ID NOT IN (SELECT USER_ID FROM USERS);
DELETE FROM ADDRESS WHERE PARENT_ID NOT IN (SELECT USER_ID FROM USERS);

ALTER TABLE EMAIL_ADDRESS ADD CONSTRAINT EMAIL_ADDRESS_USER_FK FOREIGN KEY (PARENT_ID) REFERENCES USERS(USER_ID);
ALTER TABLE PHONE ADD CONSTRAINT PHONE_USER_FK FOREIGN KEY (PARENT_ID) REFERENCES USERS(USER_ID);
ALTER TABLE ADDRESS ADD CONSTRAINT ADDRESS_USER_FK FOREIGN KEY (PARENT_ID) REFERENCES USERS(USER_ID);
commit;
use openiam;

ALTER TABLE USERS DROP COLUMN PHONE_EXT,
                  DROP COLUMN PHONE_NBR,
                  DROP COLUMN COUNTRY_CD,
                  DROP COLUMN AREA_CD,
                  DROP COLUMN EMAIL_ADDRESS,
                  DROP COLUMN POSTAL_CD,
                  DROP COLUMN STATE,
                  DROP COLUMN CITY,
                  DROP COLUMN ADDRESS7,
                  DROP COLUMN ADDRESS6,
                  DROP COLUMN ADDRESS5,
                  DROP COLUMN ADDRESS4,
                  DROP COLUMN ADDRESS3,
                  DROP COLUMN ADDRESS2,
                  DROP COLUMN ADDRESS1,
                  DROP COLUMN SUITE,
                  DROP COLUMN STREET_DIRECTION,
                  DROP COLUMN BLDG_NUM,
                  DROP COLUMN COUNTRY;
commit;
use openiam;

DROP VIEW IF EXISTS USER_EMAIL_VW;
DROP VIEW IF EXISTS USER_IDENTITY_VW;
DROP VIEW IF EXISTS USER_PHONE_VW;
commit;
use openiam;
ALTER TABLE CATEGORY_LANGUAGE DROP FOREIGN KEY FK_CATEGORY_LANGUAGE_LANGUAGE;
ALTER TABLE CATEGORY_LANGUAGE CHANGE COLUMN LANGUAGE_CD LANGUAGE_ID VARCHAR(32) NOT NULL;
ALTER TABLE EXCLUDE_WORD_LIST DROP FOREIGN KEY FK_EXCLUDE_WORD_LIST_LANGUAGE;
ALTER TABLE EXCLUDE_WORD_LIST CHANGE COLUMN LANGUAGE_CD LANGUAGE_ID VARCHAR(32) NOT NULL;


truncate table LANGUAGE;
ALTER TABLE LANGUAGE
    DROP PRIMARY KEY,
    DROP COLUMN LANGUAGE_CD,
    ADD COLUMN ID VARCHAR(32) NOT NULL FIRST,
    ADD COLUMN IS_USED VARCHAR(1) NOT NULL DEFAULT 'N',
    CHANGE COLUMN LOCALE LOCALE VARCHAR(10) NULL DEFAULT NULL,
    ADD PRIMARY KEY(ID);


ALTER TABLE EXCLUDE_WORD_LIST
  ADD CONSTRAINT FK_EXCLUDE_WORD_LIST_LANGUAGE FOREIGN KEY (LANGUAGE_ID) REFERENCES LANGUAGE(ID);
ALTER TABLE CATEGORY_LANGUAGE
  ADD CONSTRAINT FK_CATEGORY_LANGUAGE_LANGUAGE FOREIGN KEY (LANGUAGE_ID) REFERENCES LANGUAGE(ID);
commit;
use openiam;

insert into LANGUAGE(ID, LANGUAGE, LOCALE, IS_USED)
       values ('1', 'English', 'en_EN', 'Y'),
              ('2', 'German', 'de_DE', 'N'),
              ('3', 'French', 'fr_FR', 'N'),
              ('4', 'Spanish', 'es_ES', 'N'),
              ('5', 'Italian', 'it_IT', 'N'),
              ('6', 'Dutch', 'nl_NL', 'N'),
              ('7', 'Portugese', 'pt_PT', 'N');
commit;
use openiam;

ALTER TABLE METADATA_ELEMENT DROP COLUMN MIN_LEN;
ALTER TABLE METADATA_ELEMENT DROP COLUMN MAX_LEN;
ALTER TABLE METADATA_ELEMENT DROP COLUMN TEXT_CASE;
ALTER TABLE METADATA_ELEMENT DROP COLUMN MIN_VALUE;
ALTER TABLE METADATA_ELEMENT DROP COLUMN MAX_VALUE;
ALTER TABLE METADATA_ELEMENT DROP COLUMN DEFAULT_VALUE;
ALTER TABLE METADATA_ELEMENT DROP COLUMN VALUE_LIST;
ALTER TABLE METADATA_ELEMENT DROP COLUMN LABEL;
ALTER TABLE METADATA_ELEMENT DROP COLUMN MULTI_VALUE;
ALTER TABLE METADATA_ELEMENT DROP COLUMN UI_TYPE;
ALTER TABLE METADATA_ELEMENT DROP COLUMN UI_OBJECT_SIZE;
ALTER TABLE METADATA_ELEMENT DROP COLUMN VALUE_SRC;

ALTER TABLE METADATA_ELEMENT ADD TEMP_AUDITABLE CHAR(1) NULL DEFAULT 'Y';
UPDATE METADATA_ELEMENT SET TEMP_AUDITABLE='Y' WHERE AUDITABLE=1;
UPDATE METADATA_ELEMENT SET TEMP_AUDITABLE='N' WHERE AUDITABLE=0;
ALTER TABLE METADATA_ELEMENT DROP COLUMN AUDITABLE;
ALTER TABLE METADATA_ELEMENT CHANGE TEMP_AUDITABLE AUDITABLE CHAR(1) NOT NULL DEFAULT 'Y';

ALTER TABLE METADATA_ELEMENT ADD TEMP_REQUIRED CHAR(1) NULL DEFAULT 'N';
UPDATE METADATA_ELEMENT SET TEMP_REQUIRED='Y' WHERE REQUIRED=1;
UPDATE METADATA_ELEMENT SET TEMP_REQUIRED='N' WHERE REQUIRED=0;
ALTER TABLE METADATA_ELEMENT DROP COLUMN REQUIRED;
ALTER TABLE METADATA_ELEMENT CHANGE TEMP_REQUIRED REQUIRED CHAR(1) NOT NULL DEFAULT 'N';

ALTER TABLE METADATA_ELEMENT ADD TEMP_SELF_EDITABLE CHAR(1) NULL DEFAULT 'N';
UPDATE METADATA_ELEMENT SET TEMP_SELF_EDITABLE='Y' WHERE SELF_EDITABLE=1;
UPDATE METADATA_ELEMENT SET TEMP_SELF_EDITABLE='N' WHERE SELF_EDITABLE=0;
ALTER TABLE METADATA_ELEMENT DROP COLUMN SELF_EDITABLE;
ALTER TABLE METADATA_ELEMENT CHANGE TEMP_SELF_EDITABLE SELF_EDITABLE CHAR(1) NOT NULL DEFAULT 'N';

ALTER TABLE METADATA_ELEMENT DROP COLUMN SELF_VIEWABLE;
commit;
use openiam;	

DELIMITER $$

DROP PROCEDURE IF EXISTS METADATA_SCHEMA_CHANGE$$

CREATE PROCEDURE METADATA_SCHEMA_CHANGE()
	BEGIN
		IF EXISTS (SELECT * FROM information_schema.columns WHERE table_name = 'METADATA_ELEMENT' AND column_name = 'DEFAULT_VALUE_ID') THEN
			ALTER TABLE METADATA_ELEMENT DROP FOREIGN KEY METADATA_ELEMENT_DEFAULT_VALUE_FK;
			ALTER TABLE METADATA_ELEMENT DROP COLUMN DEFAULT_VALUE_ID;
 		END IF;
 		
		IF EXISTS (SELECT * FROM information_schema.columns WHERE table_name = 'METADATA_ELEMENT' AND column_name = 'TEMPLATE_ID') THEN
			ALTER TABLE METADATA_ELEMENT DROP FOREIGN KEY METADATA_ELEMENT_TEMPLATE_FK;
			ALTER TABLE METADATA_ELEMENT DROP COLUMN TEMPLATE_ID;
 		END IF;
 		
 		IF EXISTS (SELECT * FROM information_schema.columns WHERE table_name = 'METADATA_ELEMENT' AND column_name = 'RESOURCE_ID') THEN
 			ALTER TABLE METADATA_ELEMENT DROP FOREIGN KEY METADATA_ELEMENT_RES_FK;
			ALTER TABLE METADATA_ELEMENT DROP COLUMN RESOURCE_ID;
 		END IF;
 		
 		IF EXISTS (SELECT * FROM information_schema.columns WHERE table_name = 'METADATA_ELEMENT' AND column_name = 'DISPLAY_NAME') THEN
 			ALTER TABLE METADATA_ELEMENT DROP FOREIGN KEY METADATA_ELEMENT_DISPLAY_NAME_FK;
			ALTER TABLE METADATA_ELEMENT DROP COLUMN DISPLAY_NAME;
 		END IF;
 		
 		 IF EXISTS (SELECT * FROM information_schema.columns WHERE table_name = 'METADATA_ELEMENT' AND column_name = 'DISPLAY_ORDER') THEN
			ALTER TABLE METADATA_ELEMENT DROP COLUMN DISPLAY_ORDER;
 		END IF;
 		
 		IF EXISTS (SELECT * FROM information_schema.columns WHERE table_name = 'METADATA_ELEMENT' AND column_name = 'VALIDATOR') THEN
			ALTER TABLE METADATA_ELEMENT DROP COLUMN VALIDATOR;
 		END IF;
 		
 		IF EXISTS (SELECT * FROM information_schema.columns WHERE table_name = 'METADATA_ELEMENT' AND column_name = 'STATIC_DEFAULT_VALUE') THEN
 			ALTER TABLE METADATA_ELEMENT DROP COLUMN STATIC_DEFAULT_VALUE;
 		END IF;

 		IF EXISTS (SELECT * FROM information_schema.columns WHERE table_name = 'METADATA_ELEMENT' AND column_name = 'DISPLAY_ORDER') THEN
 			ALTER TABLE METADATA_ELEMENT DROP COLUMN DISPLAY_ORDER;
 		END IF;

 		IF EXISTS (SELECT * FROM information_schema.columns WHERE table_name = 'METADATA_ELEMENT' AND column_name = 'IS_PUBLIC') THEN
 			ALTER TABLE METADATA_ELEMENT DROP COLUMN IS_PUBLIC;
 		END IF;
 		
 		IF EXISTS (SELECT * FROM information_schema.columns WHERE table_name = 'METADATA_TYPE' AND column_name = 'IS_PUBLIC') THEN
 			ALTER TABLE METADATA_TYPE DROP COLUMN IS_PUBLIC;
 		END IF;
 		
 		IF EXISTS (SELECT * FROM information_schema.columns WHERE table_name = 'USER_ATTRIBUTES' AND column_name = 'METADATA_ELEMENT_ID') THEN
 			DELETE FROM USER_ATTRIBUTES WHERE METADATA_ELEMENT_ID IS NOT NULL;
 			ALTER TABLE USER_ATTRIBUTES DROP FOREIGN KEY USER_ATTR_METADATA_ELEMENT_FK;
 			ALTER TABLE USER_ATTRIBUTES DROP COLUMN METADATA_ELEMENT_ID;
 		END IF;
	END$$
DELIMITER ;

call METADATA_SCHEMA_CHANGE();

DROP PROCEDURE METADATA_SCHEMA_CHANGE;

DROP TABLE IF EXISTS METADATA_ELEMENT_PAGE_TEMPLATE_XREF;
DROP TABLE IF EXISTS METADATA_ELEMENT_DEFAULT_VALUES;
DROP TABLE IF EXISTS METADATA_ELEMENT_VALID_VALUES;
DROP TABLE IF EXISTS METADATA_ELEMENT_PAGE_TEMPLATE;
DROP TABLE IF EXISTS LANGUAGE_MAPPING;

CREATE TABLE LANGUAGE_MAPPING (
  ID varchar(32) NOT NULL,
  LANGUAGE_ID varchar(32) NOT NULL,
  REFERENCE_ID varchar(32) NOT NULL,
  REFERENCE_TYPE varchar(100) NOT NULL,
  TEXT_VALUE varchar(400) NOT NULL,
  PRIMARY KEY(ID),
  CONSTRAINT LANGUAGE_MAPPING_LANGUAGE_FK FOREIGN KEY (LANGUAGE_ID) REFERENCES LANGUAGE(ID),
  CONSTRAINT LANGUAGE_MAPPING_UNIQUE UNIQUE(LANGUAGE_ID, REFERENCE_ID, REFERENCE_TYPE)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE METADATA_ELEMENT_PAGE_TEMPLATE (
  ID varchar(32) NOT NULL,
  NAME varchar(40) NOT NULL,
  RESOURCE_ID varchar(32) NOT NULL,
  IS_PUBLIC CHAR(1) NOT NULL DEFAULT 'Y',
  PRIMARY KEY(ID),
  CONSTRAINT METADATA_ELEMENT_PAGE_TEMPLATE_UNIQUE UNIQUE(NAME),
  CONSTRAINT METADATA_PAGE_TEMPLATE_RES_FK FOREIGN KEY (RESOURCE_ID) REFERENCES RES(RESOURCE_ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE METADATA_ELEMENT_VALID_VALUES (
  ID varchar(32) NOT NULL,
  METADATA_ELEMENT_ID varchar(32) NOT NULL,
  UI_VALUE varchar(200) NULL NOT NULL,
  PRIMARY KEY(ID),
  CONSTRAINT METADATA_FIELD_VALID_VALUES_ELEMENT_FK FOREIGN KEY (METADATA_ELEMENT_ID) REFERENCES METADATA_ELEMENT(METADATA_ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE  TABLE METADATA_ELEMENT_PAGE_TEMPLATE_XREF(
  TEMPLATE_ID VARCHAR(32) NOT NULL,
  METADATA_ELEMENT_ID VARCHAR(32) NOT NULL,
  DISPLAY_ORDER INT(11) NOT NULL,
  PRIMARY KEY (TEMPLATE_ID, METADATA_ELEMENT_ID),
  CONSTRAINT METADATA_ELEMENT_PAGE_TEMPLATE_ELEMENT_FK
    FOREIGN KEY (METADATA_ELEMENT_ID) REFERENCES METADATA_ELEMENT(METADATA_ID),
  CONSTRAINT METADATA_ELEMENT_PAGE_TEMPLATE_FK
    FOREIGN KEY (TEMPLATE_ID) REFERENCES METADATA_ELEMENT_PAGE_TEMPLATE(ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;


ALTER TABLE METADATA_ELEMENT ADD TEMPLATE_ID VARCHAR(32) NULL;
ALTER TABLE METADATA_ELEMENT ADD CONSTRAINT METADATA_ELEMENT_TEMPLATE_FK FOREIGN KEY (TEMPLATE_ID) REFERENCES METADATA_ELEMENT_PAGE_TEMPLATE(ID);

ALTER TABLE METADATA_ELEMENT ADD RESOURCE_ID VARCHAR(32) NULL;
ALTER TABLE METADATA_ELEMENT ADD CONSTRAINT METADATA_ELEMENT_RES_FK FOREIGN KEY (RESOURCE_ID) REFERENCES RES(RESOURCE_ID);

ALTER TABLE METADATA_ELEMENT ADD VALIDATOR VARCHAR(150) NULL;

ALTER TABLE METADATA_ELEMENT ADD STATIC_DEFAULT_VALUE VARCHAR(400) NULL;

ALTER TABLE USER_ATTRIBUTES MODIFY METADATA_ID VARCHAR(32) NULL;

ALTER TABLE METADATA_ELEMENT ADD IS_PUBLIC CHAR(1) NOT NULL DEFAULT 'Y';
commit;
use openiam;

ALTER TABLE METADATA_TYPE ADD TEMP_ACTIVE CHAR(1) NULL DEFAULT 'N';
UPDATE METADATA_TYPE SET TEMP_ACTIVE='Y' WHERE ACTIVE=1;
UPDATE METADATA_TYPE SET TEMP_ACTIVE='N' WHERE ACTIVE=0;
ALTER TABLE METADATA_TYPE DROP COLUMN ACTIVE;
ALTER TABLE METADATA_TYPE CHANGE TEMP_ACTIVE ACTIVE CHAR(1) NOT NULL DEFAULT 'N';

ALTER TABLE METADATA_TYPE ADD TEMP_SYNC_MANAGED_SYS CHAR(1) NULL DEFAULT 'N';
UPDATE METADATA_TYPE SET TEMP_SYNC_MANAGED_SYS='Y' WHERE SYNC_MANAGED_SYS=1;
UPDATE METADATA_TYPE SET TEMP_SYNC_MANAGED_SYS='N' WHERE SYNC_MANAGED_SYS=0;
ALTER TABLE METADATA_TYPE DROP COLUMN SYNC_MANAGED_SYS;
ALTER TABLE METADATA_TYPE CHANGE TEMP_SYNC_MANAGED_SYS SYNC_MANAGED_SYS CHAR(1) NOT NULL DEFAULT 'N';
commit;
use openiam;

ALTER TABLE METADATA_TYPE ADD COLUMN GROUPING VARCHAR(100) NULL;
commit;
use openiam;

DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('TEMPLATE_SEARCH_CHILD', 'PAGE_TEMPLATE_ROOT', 'PAGE_TEMPLATE_SEARCH',
                                                              'PAGE_TEMPLATE_NEW', 'PAGE_TEMPLATE_EDIT','PAGE_TEMPLATE_EDIT_SEARCH',
                                                              'PAGE_TEMPLATE_EDIT_NEW', 'CUSTOM_FIELD_SEARCH_CHILD',
                                                              'CUSTOM_FIELD_ROOT','CUSTOM_FIELD_SEARCH','CUSTOM_FIELD_NEW',
                                                              'CUSTOM_FIELD_EDIT','CUSTOM_FIELD_EDIT_SEARCH','CUSTOM_FIELD_EDIT_NEW');

DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN('TEMPLATE_SEARCH_CHILD', 'PAGE_TEMPLATE_ROOT', 'PAGE_TEMPLATE_SEARCH',
                                                       'PAGE_TEMPLATE_NEW', 'PAGE_TEMPLATE_EDIT','PAGE_TEMPLATE_EDIT_SEARCH',
                                                       'PAGE_TEMPLATE_EDIT_NEW', 'CUSTOM_FIELD_SEARCH_CHILD',
                                                       'CUSTOM_FIELD_ROOT','CUSTOM_FIELD_SEARCH','CUSTOM_FIELD_NEW',
                                                       'CUSTOM_FIELD_EDIT','CUSTOM_FIELD_EDIT_SEARCH','CUSTOM_FIELD_EDIT_NEW');

DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('TEMPLATE_SEARCH_CHILD', 'PAGE_TEMPLATE_ROOT', 'PAGE_TEMPLATE_SEARCH',
                                               'PAGE_TEMPLATE_NEW', 'PAGE_TEMPLATE_EDIT','PAGE_TEMPLATE_EDIT_SEARCH',
                                               'PAGE_TEMPLATE_EDIT_NEW', 'CUSTOM_FIELD_SEARCH_CHILD',
                                               'CUSTOM_FIELD_ROOT','CUSTOM_FIELD_SEARCH','CUSTOM_FIELD_NEW',
                                               'CUSTOM_FIELD_EDIT','CUSTOM_FIELD_EDIT_SEARCH','CUSTOM_FIELD_EDIT_NEW');

DELETE FROM RES WHERE RESOURCE_ID IN('TEMPLATE_SEARCH_CHILD', 'PAGE_TEMPLATE_ROOT', 'PAGE_TEMPLATE_SEARCH',
                                     'PAGE_TEMPLATE_NEW', 'PAGE_TEMPLATE_EDIT','PAGE_TEMPLATE_EDIT_SEARCH',
                                     'PAGE_TEMPLATE_EDIT_NEW', 'CUSTOM_FIELD_SEARCH_CHILD',
                                     'CUSTOM_FIELD_ROOT','CUSTOM_FIELD_SEARCH','CUSTOM_FIELD_NEW',
                                     'CUSTOM_FIELD_EDIT','CUSTOM_FIELD_EDIT_SEARCH','CUSTOM_FIELD_EDIT_NEW');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('TEMPLATE_SEARCH_CHILD', 'MENU_ITEM', 'TEMPLATE_SEARCH_CHILD', 'Page Template Search', '/webconsole/pageTemplates.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('TEMPLATE_SEARCH_CHILD_PUB', 'TEMPLATE_SEARCH_CHILD', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('TEMPLATE_SEARCH_CHILD_DESC', 'TEMPLATE_SEARCH_CHILD', 'MENU_DISPLAY_NAME', 'Page Template');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ADMIN', 'TEMPLATE_SEARCH_CHILD');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('PAGE_TEMPLATE_ROOT', 'MENU_ITEM', 'PAGE_TEMPLATE_ROOT', 'Page Template Root Menu');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('PAGE_TEMPLATE_ROOT_PUB', 'PAGE_TEMPLATE_ROOT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('PAGE_TEMPLATE_ROOT_DESC', 'PAGE_TEMPLATE_ROOT', 'MENU_DISPLAY_NAME', 'Page Template Root Menu');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('PAGE_TEMPLATE_SEARCH', 'MENU_ITEM', 'PAGE_TEMPLATE_SEARCH', 'Search Page Templates', '/webconsole/pageTemplates.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('PAGE_TEMPLATE_SEARCH_PUB', 'PAGE_TEMPLATE_SEARCH', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('PAGE_TEMPLATE_SEARCH_DESC', 'PAGE_TEMPLATE_SEARCH', 'MENU_DISPLAY_NAME', 'Search Page Templates');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('PAGE_TEMPLATE_NEW', 'MENU_ITEM', 'PAGE_TEMPLATE_NEW', 'Create Content Provider', '/webconsole/newPageTemplate.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('PAGE_TEMPLATE_NEW_PUB', 'PAGE_TEMPLATE_NEW', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('PAGE_TEMPLATE_NEW_DSC', 'PAGE_TEMPLATE_NEW', 'MENU_DISPLAY_NAME', 'Create New Template');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('PAGE_TEMPLATE_ROOT', 'PAGE_TEMPLATE_SEARCH');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('PAGE_TEMPLATE_ROOT', 'PAGE_TEMPLATE_NEW');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('PAGE_TEMPLATE_EDIT', 'MENU_ITEM', 'PAGE_TEMPLATE_EDIT', 'Page Template Edit Menu');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('PAGE_TEMPLATE_EDIT_PUB', 'PAGE_TEMPLATE_EDIT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('PAGE_TEMPLATE_EDIT_DESC', 'PAGE_TEMPLATE_EDIT', 'MENU_DISPLAY_NAME', 'Page Template Edit Menu');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('PAGE_TEMPLATE_EDIT_SEARCH', 'MENU_ITEM', 'PAGE_TEMPLATE_EDIT_SEARCH', 'Back to Search', '/webconsole/pageTemplates.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('PAGE_TEMPLATE_EDIT_SEARCH_PUB', 'PAGE_TEMPLATE_EDIT_SEARCH', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('PAGE_TEMPLATE_EDIT_SEARCH_DESC', 'PAGE_TEMPLATE_EDIT_SEARCH', 'MENU_DISPLAY_NAME', 'Back to Search');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('PAGE_TEMPLATE_EDIT_NEW', 'MENU_ITEM', 'PAGE_TEMPLATE_EDIT_NEW', 'Create New Template', '/webconsole/newPageTemplate.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('PAGE_TEMPLATE_EDIT_NEW_PUB', 'PAGE_TEMPLATE_EDIT_NEW', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('PAGE_TEMPLATE_EDIT_NEW_DESC', 'PAGE_TEMPLATE_EDIT_NEW', 'MENU_DISPLAY_NAME', 'Create New Template');


INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('PAGE_TEMPLATE_EDIT', 'PAGE_TEMPLATE_EDIT_SEARCH');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('PAGE_TEMPLATE_EDIT', 'PAGE_TEMPLATE_EDIT_NEW');




INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('CUSTOM_FIELD_SEARCH_CHILD', 'MENU_ITEM', 'CUSTOM_FIELD_SEARCH_CHILD', 'Custom Field Search', '/webconsole/customFields.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CUSTOM_FIELD_SEARCH_CHILD_PUB', 'CUSTOM_FIELD_SEARCH_CHILD', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CUSTOM_FIELD_SEARCH_CHILD_DESC', 'CUSTOM_FIELD_SEARCH_CHILD', 'MENU_DISPLAY_NAME', 'Custom Fields');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ADMIN', 'CUSTOM_FIELD_SEARCH_CHILD');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('CUSTOM_FIELD_ROOT', 'MENU_ITEM', 'CUSTOM_FIELD_ROOT', 'Custom Field Root Menu');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CUSTOM_FIELD_ROOT_PUB', 'CUSTOM_FIELD_ROOT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CUSTOM_FIELD_ROOT_DESC', 'CUSTOM_FIELD_ROOT', 'MENU_DISPLAY_NAME', 'Custom Field Root Menu');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('CUSTOM_FIELD_SEARCH', 'MENU_ITEM', 'CUSTOM_FIELD_SEARCH', 'Search Custom Fields', '/webconsole/customFields.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CUSTOM_FIELD_SEARCH_PUB', 'CUSTOM_FIELD_SEARCH', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CUSTOM_FIELD_SEARCH_DESC', 'CUSTOM_FIELD_SEARCH', 'MENU_DISPLAY_NAME', 'Search Custom Fields');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('CUSTOM_FIELD_NEW', 'MENU_ITEM', 'CUSTOM_FIELD_NEW', 'Create New Custom Field', '/webconsole/newCustomField.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CUSTOM_FIELD_NEW_PUB', 'CUSTOM_FIELD_NEW', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CUSTOM_FIELD_NEW_DSC', 'CUSTOM_FIELD_NEW', 'MENU_DISPLAY_NAME', 'Create New Custom Field');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('CUSTOM_FIELD_ROOT', 'CUSTOM_FIELD_SEARCH');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('CUSTOM_FIELD_ROOT', 'CUSTOM_FIELD_NEW');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('CUSTOM_FIELD_EDIT', 'MENU_ITEM', 'CUSTOM_FIELD_EDIT', 'Custom Field Edit Menu');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CUSTOM_FIELD_EDIT_PUB', 'CUSTOM_FIELD_EDIT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CUSTOM_FIELD_EDIT_DESC', 'CUSTOM_FIELD_EDIT', 'MENU_DISPLAY_NAME', 'Custom Field Edit Menu');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('CUSTOM_FIELD_EDIT_SEARCH', 'MENU_ITEM', 'CUSTOM_FIELD_EDIT_SEARCH', 'Back to Search', '/webconsole/customFields.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CUSTOM_FIELD_EDIT_SEARCH_PUB', 'CUSTOM_FIELD_EDIT_SEARCH', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CUSTOM_FIELD_EDIT_SEARCH_DESC', 'CUSTOM_FIELD_EDIT_SEARCH', 'MENU_DISPLAY_NAME', 'Back to Search');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('CUSTOM_FIELD_EDIT_NEW', 'MENU_ITEM', 'CUSTOM_FIELD_EDIT_NEW', 'Create New Custom Field', '/webconsole/newCustomField.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CUSTOM_FIELD_EDIT_NEW_PUB', 'CUSTOM_FIELD_EDIT_NEW', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CUSTOM_FIELD_EDIT_NEW_DESC', 'CUSTOM_FIELD_EDIT_NEW', 'MENU_DISPLAY_NAME', 'Create New Custom Field');


INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('CUSTOM_FIELD_EDIT', 'CUSTOM_FIELD_EDIT_SEARCH');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('CUSTOM_FIELD_EDIT', 'CUSTOM_FIELD_EDIT_NEW');






commit;
use openiam;

INSERT INTO METADATA_TYPE (TYPE_ID, DESCRIPTION, ACTIVE, SYNC_MANAGED_SYS) VALUES('UI_WIDGET', 'UI_WIDGET', 'Y', 'Y');
INSERT INTO METADATA_TYPE (TYPE_ID, DESCRIPTION, ACTIVE, SYNC_MANAGED_SYS) VALUES('UI_TEMPLATE', 'UI_TEMPLATE', 'Y', 'Y');
INSERT INTO RESOURCE_TYPE (RESOURCE_TYPE_ID, DESCRIPTION, METADATA_TYPE_ID) VALUES('UI_WIDGET', 'UI Widget', 'UI_WIDGET');
INSERT INTO RESOURCE_TYPE (RESOURCE_TYPE_ID, DESCRIPTION, METADATA_TYPE_ID) VALUES('UI_TEMPLATE', 'UI Template', 'UI_TEMPLATE');
commit;
use openiam;

INSERT INTO METADATA_TYPE(TYPE_ID,DESCRIPTION, ACTIVE, SYNC_MANAGED_SYS, GROUPING)
            VALUES('TEXT', 'Text field','Y','N','UI_WIDGET'),
                  ('DATE', 'Date field','Y','N','UI_WIDGET'),
                  ('SELECT', 'Combo box','Y','N','UI_WIDGET'),
                  ('MULTI_SELECT', 'MultiSelect list','Y','N','UI_WIDGET'),
                  ('RADIO', 'Radio button','Y','N','UI_WIDGET'),
                  ('CHECKBOX', 'Checkbox','Y','N','UI_WIDGET'),
                  ('TEXTAREA', 'Multiline text field','Y','N','UI_WIDGET'),
                  ('PASSWORD', 'Password field','Y','N','UI_WIDGET');
commit;
use openiam;


DELIMITER $$

DROP PROCEDURE IF EXISTS LANGUAGE_SCHEMA_CHANGE$$

CREATE PROCEDURE LANGUAGE_SCHEMA_CHANGE()
	BEGIN
		IF EXISTS (SELECT * FROM information_schema.columns WHERE table_schema='openiam' and table_name = 'LANGUAGE' AND column_name = 'LOCALE') THEN
			ALTER TABLE LANGUAGE DROP COLUMN LOCALE;
    END IF;

		IF NOT EXISTS (SELECT * FROM information_schema.columns WHERE table_schema='openiam' and table_name = 'LANGUAGE' AND column_name = 'LANGUAGE_CODE') THEN
			ALTER TABLE LANGUAGE ADD COLUMN LANGUAGE_CODE varchar(2) NOT NULL;

			UPDATE LANGUAGE SET LANGUAGE_CODE='en' WHERE ID='1';
			UPDATE LANGUAGE SET LANGUAGE_CODE='de' WHERE ID='2';
			UPDATE LANGUAGE SET LANGUAGE_CODE='fr' WHERE ID='3';
			UPDATE LANGUAGE SET LANGUAGE_CODE='es' WHERE ID='4';
			UPDATE LANGUAGE SET LANGUAGE_CODE='it' WHERE ID='5';
			UPDATE LANGUAGE SET LANGUAGE_CODE='nl' WHERE ID='6';
			UPDATE LANGUAGE SET LANGUAGE_CODE='pt' WHERE ID='7';

 		END IF;
	END$$
DELIMITER ;

call LANGUAGE_SCHEMA_CHANGE();

DROP PROCEDURE LANGUAGE_SCHEMA_CHANGE;

DROP TABLE IF EXISTS LANGUAGE_LOCALE;

CREATE TABLE LANGUAGE_LOCALE (
  ID varchar(32) NOT NULL,
  LANGUAGE_ID varchar(32) NOT NULL,
  LOCALE varchar(32) NOT NULL,
  CONSTRAINT LANGUAGE_LOCALE_LANGUAGE_FK FOREIGN KEY (LANGUAGE_ID) REFERENCES LANGUAGE(ID),
  CONSTRAINT LANGUAGE_LOCALE_UNIQUE UNIQUE(LOCALE)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

INSERT INTO LANGUAGE_LOCALE (ID, LANGUAGE_ID, LOCALE) VALUES 
	('1', '1', 'en_EN'),
	('2', '1', 'en_US'),
	('3', '1', 'en_GB'),
	('4', '2', 'de_DE'),
	('5', '3', 'fr_FR'),
	('6', '4', 'es_ES'),
	('7', '5', 'it_IT'),
	('8', '6', 'nl_NL'),
	('9', '7', 'pt_PT');
commit;
use openiam;

ALTER TABLE EMAIL_ADDRESS MODIFY NAME VARCHAR(100) NULL;

ALTER TABLE ADDRESS MODIFY NAME VARCHAR(100) NULL;
ALTER TABLE ADDRESS MODIFY COUNTRY VARCHAR(100) NULL;
ALTER TABLE ADDRESS MODIFY CITY VARCHAR(100) NULL;
ALTER TABLE ADDRESS MODIFY STATE VARCHAR(100) NULL;
ALTER TABLE ADDRESS MODIFY POSTAL_CD VARCHAR(100) NULL;
ALTER TABLE ADDRESS MODIFY BLDG_NUM VARCHAR(100) NULL;
commit;
use openiam;

UPDATE RES SET URL='/selfservice/newUser.html' WHERE RESOURCE_ID='NEWUSER-NOAPPRV';
commit;
use openiam;

ALTER TABLE METADATA_ELEMENT_VALID_VALUES ADD COLUMN DISPLAY_ORDER INT(11) NOT NULL;

commit;
use openiam;

UPDATE RES SET URL='/webconsole/policyMap.html' WHERE RESOURCE_ID='RESPOLICYMAP';

UPDATE RES SET URL='/webconsole/reconConfig.html' WHERE RESOURCE_ID='RESRECONCILE';

DELETE FROM res_to_res_membership WHERE RESOURCE_ID='RESOURCE_MENU_ROOT' AND MEMBER_RESOURCE_ID='RESPOLICYMAP';
DELETE FROM res_to_res_membership WHERE RESOURCE_ID='RESOURCE_EDIT_PAGE_ROOT' AND MEMBER_RESOURCE_ID='RESPOLICYMAP';

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('RESOURCE_EDIT_PAGE_ROOT', 'RESPOLICYMAP');


commit;
use openiam;

UPDATE RES SET URL='javascript:void(0);' WHERE RESOURCE_ID IN('IDM', 'SELFSERVICE', 'ACC_CONTROL', 'ADMIN');
UPDATE RES SET IS_PUBLIC='Y' WHERE RESOURCE_ID IN('SELFCENTER', 'CHNGPSWD', 'IDQUEST', 'PROFILE', 'SELF_USERIDENTITY', 'IDM');
UPDATE RES SET URL='/webconsole/users.html' WHERE RESOURCE_ID='IDMAN';
UPDATE RES SET URL='/selfservice/editProfile.html' WHERE RESOURCE_ID='PROFILE';
UPDATE RES SET URL='/webconsole/users.html' WHERE RESOURCE_ID='SELF_QUERYUSER';

DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID='SELF_USERIDENTITY';
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('SELFCENTER', 'SELF_USERIDENTITY');

DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN('SELF_USERSUMMARY', 'SELF_USERGROUP', 'SELF_USERROLE', 'SELF_USERPSWDRESET');
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('SELF_USERSUMMARY', 'SELF_USERGROUP', 'SELF_USERROLE', 'SELF_USERPSWDRESET');
DELETE FROM RESOURCE_USER WHERE RESOURCE_ID IN('SELF_USERSUMMARY', 'SELF_USERGROUP', 'SELF_USERROLE', 'SELF_USERPSWDRESET');
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN('SELF_USERSUMMARY', 'SELF_USERGROUP', 'SELF_USERROLE', 'SELF_USERPSWDRESET');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('SELF_USERSUMMARY', 'SELF_USERGROUP', 'SELF_USERROLE', 'SELF_USERPSWDRESET');
DELETE FROM RESOURCE_GROUP WHERE RESOURCE_ID IN('SELF_USERSUMMARY', 'SELF_USERGROUP', 'SELF_USERROLE', 'SELF_USERPSWDRESET');
DELETE FROM RES WHERE RESOURCE_ID IN('SELF_USERSUMMARY', 'SELF_USERGROUP', 'SELF_USERROLE', 'SELF_USERPSWDRESET');

DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID='ACCESSCENTER' AND ROLE_ID='1';
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID='REQINBOX' AND ROLE_ID='1';
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID='MANAGEREQ' AND ROLE_ID='1';
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID='NEWUSER' AND ROLE_ID='1';
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID='NEWUSER-NOAPPRV' AND ROLE_ID='1';

DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID='CREATEREQ' AND ROLE_ID='2';
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID='MANAGEREQ' AND ROLE_ID='2';
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID='NEWUSER' AND ROLE_ID='2';
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID='NEWUSER-NOAPPRV' AND ROLE_ID='2';

DELIMITER $$

DROP PROCEDURE IF EXISTS hideBetaMenus$$
DROP PROCEDURE IF EXISTS updateIcons$$
DROP PROCEDURE IF EXISTS updateMenuMembership$$

CREATE PROCEDURE hideBetaMenus()
	BEGIN
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='DIRECTORY' AND NAME='IS_VISIBLE') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='false' WHERE  RESOURCE_ID='DIRECTORY' AND NAME='IS_VISIBLE';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('DIRECTORY_VISIBLE', 'DIRECTORY', 'IS_VISIBLE', 'false');
		END IF;
		
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='REQINBOX' AND NAME='IS_VISIBLE') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='false' WHERE  RESOURCE_ID='REQINBOX' AND NAME='IS_VISIBLE';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('REQINBOX_VISIBLE', 'REQINBOX', 'IS_VISIBLE', 'false');
		END IF;
		
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='CREATEREQ' AND NAME='IS_VISIBLE') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='false' WHERE  RESOURCE_ID='CREATEREQ' AND NAME='IS_VISIBLE';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('CREATEREQ_VISIBLE', 'CREATEREQ', 'IS_VISIBLE', 'false');
		END IF;
		
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='NEWUSER' AND NAME='IS_VISIBLE') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='false' WHERE  RESOURCE_ID='NEWUSER' AND NAME='IS_VISIBLE';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('NEWUSER_VISIBLE', 'NEWUSER', 'IS_VISIBLE', 'false');
		END IF;
		
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='MANAGEREQ' AND NAME='IS_VISIBLE') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='false' WHERE  RESOURCE_ID='MANAGEREQ' AND NAME='IS_VISIBLE';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('MANAGEREQ_VISIBLE', 'MANAGEREQ', 'IS_VISIBLE', 'false');
		END IF;
		
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='CREATEREQ' AND NAME='MENU_DISPLAY_NAME') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='Create Request' WHERE  RESOURCE_ID='CREATEREQ' AND NAME='MENU_DISPLAY_NAME';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('MANAGEREQ_DISPLAY_NAME', 'CREATEREQ', 'MENU_DISPLAY_NAME', 'Create Request');
		END IF;
		
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='REPORT' AND NAME='MENU_DISPLAY_NAME') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='Manage Reports' WHERE  RESOURCE_ID='REPORT' AND NAME='MENU_DISPLAY_NAME';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('REPORT_DISPLAY_NAME', 'REPORT', 'MENU_DISPLAY_NAME', 'Manage Reports');
		END IF;
		
		
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='REPORT' AND NAME='IS_VISIBLE') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='false' WHERE  RESOURCE_ID='REPORT' AND NAME='IS_VISIBLE';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('REPORT_VISIBLE', 'REPORT', 'IS_VISIBLE', 'false');
		END IF;
		
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='USER_BULK' AND NAME='IS_VISIBLE') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='false' WHERE  RESOURCE_ID='USER_BULK' AND NAME='IS_VISIBLE';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('USER_BULK_VISIBLE', 'USER_BULK', 'IS_VISIBLE', 'false');
		END IF;
		
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='PROFILE' AND NAME='IS_VISIBLE') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='true' WHERE  RESOURCE_ID='PROFILE' AND NAME='IS_VISIBLE';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('PROFILE_VISIBLE', 'PROFILE', 'IS_VISIBLE', 'true');
		END IF;
		
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='SELF_USERIDENTITY' AND NAME='IS_VISIBLE') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='true' WHERE  RESOURCE_ID='SELF_USERIDENTITY' AND NAME='IS_VISIBLE';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('SELF_USERIDENTITY_VISIBLE', 'SELF_USERIDENTITY', 'IS_VISIBLE', 'true');
		END IF;
		
		
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='SECDOMAIN' AND NAME='IS_VISIBLE') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='false' WHERE  RESOURCE_ID='SECDOMAIN' AND NAME='IS_VISIBLE';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('SECDOMAIN_VISIBLE', 'SECDOMAIN', 'IS_VISIBLE', 'false');
		END IF;
		
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='LOCATION' AND NAME='IS_VISIBLE') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='false' WHERE  RESOURCE_ID='LOCATION' AND NAME='IS_VISIBLE';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('LOCATION_VISIBLE', 'LOCATION', 'IS_VISIBLE', 'false');
		END IF;
		
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='CHALLENGE' AND NAME='IS_VISIBLE') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='false' WHERE  RESOURCE_ID='CHALLENGE' AND NAME='IS_VISIBLE';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('CHALLENGE_VISIBLE', 'CHALLENGE', 'IS_VISIBLE', 'false');
		END IF;
		
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='BATCH_PROC' AND NAME='IS_VISIBLE') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='false' WHERE  RESOURCE_ID='BATCH_PROC' AND NAME='IS_VISIBLE';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('BATCH_PROC_VISIBLE', 'BATCH_PROC', 'IS_VISIBLE', 'false');
		END IF;
		
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='METADATA' AND NAME='IS_VISIBLE') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='false' WHERE  RESOURCE_ID='METADATA' AND NAME='IS_VISIBLE';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('METADATA_VISIBLE', 'METADATA', 'IS_VISIBLE', 'false');
		END IF;
	END$$

CREATE PROCEDURE updateIcons()
	BEGIN
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='SELFSERVICE_MYINFO' AND NAME='MENU_ICON') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='/openiam-ui-static/images/common/icons/menu7.png' WHERE  RESOURCE_ID='SELFSERVICE_MYINFO' AND NAME='MENU_ICON';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('SELFSERVICE_MYINFO_MENU_ICON', 'SELFSERVICE_MYINFO', 'MENU_ICON', '/openiam-ui-static/images/common/icons/menu7.png');
		END IF;
		
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='ACCESSCENTER' AND NAME='MENU_ICON') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='/openiam-ui-static/images/common/icons/access_control.png' WHERE  RESOURCE_ID='ACCESSCENTER' AND NAME='MENU_ICON';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('ACCESSCENTER_MENU_ICON', 'ACCESSCENTER', 'MENU_ICON', '/openiam-ui-static/images/common/icons/access_control.png');
		END IF;
		
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='SELFSERVICE_MYAPPS' AND NAME='MENU_ICON') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='/openiam-ui-static/images/common/icons/sso.png' WHERE  RESOURCE_ID='SELFSERVICE_MYAPPS' AND NAME='MENU_ICON';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('SELFSERVICE_MYAPPS_MENU_ICON', 'SELFSERVICE_MYAPPS', 'MENU_ICON', '/openiam-ui-static/images/common/icons/sso.png');
		END IF;
		
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='SELFCENTER' AND NAME='MENU_ICON') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='/openiam-ui-static/images/common/icons/user_manager.png' WHERE  RESOURCE_ID='SELFCENTER' AND NAME='MENU_ICON';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('SELFCENTER_MENU_ICON', 'SELFCENTER', 'MENU_ICON', '/openiam-ui-static/images/common/icons/user_manager.png');
		END IF;
		
		
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='IDMAN' AND NAME='MENU_ICON') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='/openiam-ui-static/images/common/icons/user_manager.png' WHERE  RESOURCE_ID='IDMAN' AND NAME='MENU_ICON';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('IDMAN_MENU_ICON', 'IDMAN', 'MENU_ICON', '/openiam-ui-static/images/common/icons/user_manager.png');
		END IF;
		
		
		
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='ACC_CONTROL' AND NAME='MENU_ICON') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='/openiam-ui-static/images/common/icons/access_control.png' WHERE  RESOURCE_ID='ACC_CONTROL' AND NAME='MENU_ICON';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('ACC_CONTROL_MENU_ICON', 'ACC_CONTROL', 'MENU_ICON', '/openiam-ui-static/images/common/icons/access_control.png');
		END IF;
		
		
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='PROVISIONING' AND NAME='MENU_ICON') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='/openiam-ui-static/images/common/icons/menu7.png' WHERE  RESOURCE_ID='PROVISIONING' AND NAME='MENU_ICON';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('PROVISIONING_MENU_ICON', 'PROVISIONING', 'MENU_ICON', '/openiam-ui-static/images/common/icons/menu7.png');
		END IF;
		
		
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='ADMIN' AND NAME='MENU_ICON') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='/openiam-ui-static/images/common/icons/admin.png' WHERE  RESOURCE_ID='ADMIN' AND NAME='MENU_ICON';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('ADMIN_MENU_ICON', 'ADMIN', 'MENU_ICON', '/openiam-ui-static/images/common/icons/admin.png');
		END IF;
		
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='SECURITY_POLICY' AND NAME='MENU_ICON') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='/openiam-ui-static/images/common/icons/sso.png' WHERE  RESOURCE_ID='SECURITY_POLICY' AND NAME='MENU_ICON';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('SECURITY_POLICY_MENU_ICON', 'SECURITY_POLICY', 'MENU_ICON', '/openiam-ui-static/images/common/icons/sso.png');
		END IF;
	END$$

	
CREATE PROCEDURE updateMenuMembership()
	BEGIN
		IF ((SELECT count(*) FROM RESOURCE_ROLE WHERE RESOURCE_ID='SELF_USERIDENTITY' AND ROLE_ID='1') = 0) THEN
			IF((SELECT count(*) FROM ROLE WHERE ROLE_ID='1') >= 1) THEN
				INSERT INTO RESOURCE_ROLE (ROLE_ID, RESOURCE_ID) VALUES('1', 'SELF_USERIDENTITY');
			END IF;
		END IF;
		
		IF ((SELECT count(*) FROM RESOURCE_ROLE WHERE RESOURCE_ID='ACCESSCENTER' AND ROLE_ID='4') = 0) THEN
			IF((SELECT count(*) FROM ROLE WHERE ROLE_ID='4') >= 1) THEN
				INSERT INTO RESOURCE_ROLE (ROLE_ID, RESOURCE_ID) VALUES('4', 'ACCESSCENTER');
			END IF;
		END IF;
		
		IF ((SELECT count(*) FROM RESOURCE_ROLE WHERE RESOURCE_ID='REQINBOX' AND ROLE_ID='4') = 0) THEN
			IF((SELECT count(*) FROM ROLE WHERE ROLE_ID='4') >= 1) THEN
				INSERT INTO RESOURCE_ROLE (ROLE_ID, RESOURCE_ID) VALUES('4', 'REQINBOX');
			END IF;
		END IF;
		
		IF ((SELECT count(*) FROM RESOURCE_ROLE WHERE RESOURCE_ID='MANAGEREQ' AND ROLE_ID='4') = 0) THEN
			IF((SELECT count(*) FROM ROLE WHERE ROLE_ID='4') >= 1) THEN
				INSERT INTO RESOURCE_ROLE (ROLE_ID, RESOURCE_ID) VALUES('4', 'MANAGEREQ');
			END IF;
		END IF;
		
		IF ((SELECT count(*) FROM RESOURCE_ROLE WHERE RESOURCE_ID='NEWUSER' AND ROLE_ID='4') = 0) THEN
			IF((SELECT count(*) FROM ROLE WHERE ROLE_ID='4') >= 1) THEN
				INSERT INTO RESOURCE_ROLE (ROLE_ID, RESOURCE_ID) VALUES('4', 'NEWUSER');
			END IF;
		END IF;
		
		IF ((SELECT count(*) FROM RESOURCE_ROLE WHERE RESOURCE_ID='NEWUSER-NOAPPRV' AND ROLE_ID='4') = 0) THEN
			IF((SELECT count(*) FROM ROLE WHERE ROLE_ID='4') >= 1) THEN
				INSERT INTO RESOURCE_ROLE (ROLE_ID, RESOURCE_ID) VALUES('4', 'NEWUSER-NOAPPRV');
			END IF;
		END IF;
		
		IF ((SELECT count(*) FROM RESOURCE_ROLE WHERE RESOURCE_ID='CREATEREQ' AND ROLE_ID='4') = 0) THEN
			IF((SELECT count(*) FROM ROLE WHERE ROLE_ID='4') >= 1) THEN
				INSERT INTO RESOURCE_ROLE (ROLE_ID, RESOURCE_ID) VALUES('4', 'CREATEREQ');
			END IF;
		END IF;
	END$$

DELIMITER ;

call hideBetaMenus();
call updateIcons();
call updateMenuMembership();

DROP PROCEDURE updateIcons;
DROP PROCEDURE hideBetaMenus;
DROP PROCEDURE updateMenuMembership;
commit;
use openiam;

ALTER TABLE LOGIN ADD LOWERCASE_LOGIN VARCHAR(320) NULL;

UPDATE LOGIN SET LOWERCASE_LOGIN=LOWER(LOGIN);

ALTER TABLE LOGIN MODIFY LOWERCASE_LOGIN VARCHAR(320) NOT NULL;
commit;
use openiam;

DROP TABLE IF EXISTS AUTH_PROVIDER_ATTRIBUTE;
DROP TABLE IF EXISTS AUTH_PROVIDER;
DROP TABLE IF EXISTS AUTH_ATTRIBUTE;
DROP TABLE IF EXISTS AUTH_PROVIDER_TYPE;

CREATE TABLE AUTH_PROVIDER_TYPE(
  PROVIDER_TYPE varchar(32) NOT NULL,
  DESCRIPTION varchar(40) DEFAULT NULL,
  ACTIVE char(1) DEFAULT 'Y',
  primary key(PROVIDER_TYPE)
)ENGINE=InnoDB;


CREATE TABLE AUTH_ATTRIBUTE(
  AUTH_ATTRIBUTE_ID varchar(32) NOT NULL,
  ATTRIBUTE_NAME varchar(100) NOT NULL,
  PROVIDER_TYPE varchar(32) NOT NULL,
  DESCRIPTION varchar(255) NULL,
  REQUIRED char(1) DEFAULT 'N',
  DATA_TYPE varchar(20) NOT NULL DEFAULT 'singleValue',
  primary key(AUTH_ATTRIBUTE_ID),
  unique key IDX_ATTRIBUTE_PT(ATTRIBUTE_NAME, PROVIDER_TYPE),
  KEY FK_PROVIDER_TYPE_ATTRIBUTE (PROVIDER_TYPE),
  CONSTRAINT FK_PROVIDER_TYPE_ATTRIBUTE FOREIGN KEY (PROVIDER_TYPE) REFERENCES AUTH_PROVIDER_TYPE (PROVIDER_TYPE)
)ENGINE=InnoDB;


CREATE TABLE AUTH_PROVIDER(
  PROVIDER_ID varchar(32) NOT NULL,
  PROVIDER_TYPE varchar(32) NOT NULL,
  MANAGED_SYS_ID varchar(32) NOT NULL,
  RESOURCE_ID varchar(32) NOT NULL,
  NAME varchar(50) NOT NULL,
  DESCRIPTION varchar(255) NULL,
  SIGN_REQUEST char(1) NOT NULL DEFAULT 'N',
  PUBLIC_KEY text NULL,
  PRIVATE_KEY text NULL,
  primary key(PROVIDER_ID),
  KEY FK_PROVIDER_TYPE_PROVIDER (PROVIDER_TYPE),
  KEY FK_MNG_AUTH_PROVIDER (MANAGED_SYS_ID),
  KEY FK_RES_AUTH_PROVIDER (RESOURCE_ID),
  CONSTRAINT FK_PROVIDER_TYPE_PROVIDER FOREIGN KEY (PROVIDER_TYPE) REFERENCES AUTH_PROVIDER_TYPE (PROVIDER_TYPE),
  CONSTRAINT FK_MNG_AUTH_PROVIDER FOREIGN KEY (MANAGED_SYS_ID) REFERENCES MANAGED_SYS (MANAGED_SYS_ID),
  CONSTRAINT FK_RES_AUTH_PROVIDER FOREIGN KEY (RESOURCE_ID) REFERENCES RES (RESOURCE_ID)
)ENGINE=InnoDB;


CREATE TABLE AUTH_PROVIDER_ATTRIBUTE(
  PROVIDER_ATTRIBUTE_ID varchar(32) NOT NULL,
  PROVIDER_ID varchar(32) NOT NULL,
  AUTH_ATTRIBUTE_ID varchar(32) NOT NULL,
  VALUE varchar(255) NOT NULL,
  DATA_TYPE varchar(20) NOT NULL DEFAULT 'singleValue',
  primary key(PROVIDER_ATTRIBUTE_ID),
  unique key IDX_PROVIDER_ATTRIBUTE(PROVIDER_ID, AUTH_ATTRIBUTE_ID),
  KEY FK_PROVIDER_PROVIDER_ATTRIBUTE (PROVIDER_ID),
  KEY FK_PROVIDER_ATTRIBUTE (AUTH_ATTRIBUTE_ID),
  CONSTRAINT FK_PROVIDER_PROVIDER_ATTRIBUTE FOREIGN KEY (PROVIDER_ID) REFERENCES AUTH_PROVIDER (PROVIDER_ID),
  CONSTRAINT FK_PROVIDER_ATTRIBUTE FOREIGN KEY (AUTH_ATTRIBUTE_ID) REFERENCES AUTH_ATTRIBUTE (AUTH_ATTRIBUTE_ID)
)ENGINE=InnoDB;


commit;
use openiam;

ALTER TABLE AUTH_PROVIDER
  CHANGE COLUMN PUBLIC_KEY PUBLIC_KEY blob NULL DEFAULT NULL,
  CHANGE COLUMN PRIVATE_KEY PRIVATE_KEY blob NULL DEFAULT NULL;

commit;
use openiam;
DROP TABLE IF EXISTS WEB_RESOURCE_ATTRIBUTE;
create table WEB_RESOURCE_ATTRIBUTE(
	ATTRIBUTE_MAP_ID varchar(32) NOT NULL,
	RESOURCE_ID varchar(32) NOT NULL,
	TARGET_ATTRIBUTE_NAME varchar(100) NOT NULL,
	AM_ATTRIBUTE_NAME varchar(100) NULL,
	AM_POLICY_URL varchar(100) NULL,
	primary key(ATTRIBUTE_MAP_ID),
	UNIQUE (RESOURCE_ID, TARGET_ATTRIBUTE_NAME)
)Engine=InnoDB;

commit;
use openiam;

INSERT INTO AUTH_PROVIDER_TYPE (PROVIDER_TYPE, DESCRIPTION) VALUES('SAML_PROVIDER', 'SAML Provider');

INSERT INTO AUTH_ATTRIBUTE (AUTH_ATTRIBUTE_ID, ATTRIBUTE_NAME, PROVIDER_TYPE, DESCRIPTION, REQUIRED, DATA_TYPE)
	VALUES('1', 'Request Issuer', 'SAML_PROVIDER', 'The Issuer element to look for in the SAMLRequest', 'Y', 'singleValue');
	
INSERT INTO AUTH_ATTRIBUTE (AUTH_ATTRIBUTE_ID, ATTRIBUTE_NAME, PROVIDER_TYPE, DESCRIPTION, REQUIRED, DATA_TYPE)
	VALUES('2', 'Response Issuer', 'SAML_PROVIDER', 'The Issuer element to send in the SAMLResponse.  Default is the SAML Login Page URL', 'N', 'singleValue');
	
INSERT INTO AUTH_ATTRIBUTE (AUTH_ATTRIBUTE_ID, ATTRIBUTE_NAME, PROVIDER_TYPE, DESCRIPTION, REQUIRED, DATA_TYPE)
	VALUES('3', 'Assertion Consumer URL', 'SAML_PROVIDER', 'Where the SAMLResponse will be POSTed to', 'Y', 'singleValue');
	
INSERT INTO AUTH_ATTRIBUTE (AUTH_ATTRIBUTE_ID, ATTRIBUTE_NAME, PROVIDER_TYPE, DESCRIPTION, REQUIRED, DATA_TYPE)
	VALUES('4', 'Audiences', 'SAML_PROVIDER', 'The Audience value(s) to send in the SAMLResponse', 'N', 'listValue');
commit;
use openiam;

DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN(
	'AM_PROV_SEARCH_CHILD',
	'AM_PROV_ROOT',
	'AM_PROV_SEARCH',
	'AM_PROV_NEW',
	'AM_PROV_EDIT',
	'AM_PROV_EDIT_SEARCH',
	'AM_PROV_NEW_EDIT',
	'AM_PROV_EDIT_CURRENT'
);

DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN(
	'AM_PROV_SEARCH_CHILD',
	'AM_PROV_ROOT',
	'AM_PROV_SEARCH',
	'AM_PROV_NEW',
	'AM_PROV_EDIT',
	'AM_PROV_EDIT_SEARCH',
	'AM_PROV_NEW_EDIT',
	'AM_PROV_EDIT_CURRENT'
);

DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN(
	'AM_PROV_SEARCH_CHILD',
	'AM_PROV_ROOT',
	'AM_PROV_SEARCH',
	'AM_PROV_NEW',
	'AM_PROV_EDIT',
	'AM_PROV_EDIT_SEARCH',
	'AM_PROV_NEW_EDIT',
	'AM_PROV_EDIT_CURRENT'
);

DELETE FROM RES WHERE RESOURCE_ID IN(
	'AM_PROV_SEARCH_CHILD',
	'AM_PROV_ROOT',
	'AM_PROV_SEARCH',
	'AM_PROV_NEW',
	'AM_PROV_EDIT',
	'AM_PROV_EDIT_SEARCH',
	'AM_PROV_NEW_EDIT',
	'AM_PROV_EDIT_CURRENT'
);

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('AM_PROV_SEARCH_CHILD', 'MENU_ITEM', 'AM_PROV_SEARCH_CHILD', 'Authentication Provider Search', '/webconsole-am/authenticationProviders.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AM_PROV_SEARCH_CHILD_PUB', 'AM_PROV_SEARCH_CHILD', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AM_PROV_SEARCH_CHILD_PUB_DESC', 'AM_PROV_SEARCH_CHILD', 'MENU_DISPLAY_NAME', 'Authentication Providers');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ACC_CONTROL', 'AM_PROV_SEARCH_CHILD');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('AM_PROV_ROOT', 'MENU_ITEM', 'AM_PROV_ROOT', 'Authentication Provider Root Menu');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AM_PROV_ROOT_PUB', 'AM_PROV_ROOT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AM_PROV_ROOT_DESC', 'AM_PROV_ROOT', 'MENU_DISPLAY_NAME', 'Authentication Provider Root Menu');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('AM_PROV_SEARCH', 'MENU_ITEM', 'AM_PROV_SEARCH', 'Search Authentication Providers', '/webconsole-am/authenticationProviders.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AM_PROV_SEARCH_PUB', 'AM_PROV_SEARCH', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AM_PROV_SEARCH_DESC', 'AM_PROV_SEARCH', 'MENU_DISPLAY_NAME', 'Search Providers');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('AM_PROV_NEW', 'MENU_ITEM', 'AM_PROV_NEW', 'Create Authentication Provider', '/webconsole-am/newAuthProvider.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AM_PROV_NEW_PUB', 'AM_PROV_NEW', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AM_PROV_NEW_DSC', 'AM_PROV_NEW', 'MENU_DISPLAY_NAME', 'Create New Provider');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('AM_PROV_ROOT', 'AM_PROV_SEARCH');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('AM_PROV_ROOT', 'AM_PROV_NEW');




INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('AM_PROV_EDIT', 'MENU_ITEM', 'AM_PROV_EDIT', 'Authentication Provider Edit Menu');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AM_PROV_EDIT_PUB', 'AM_PROV_EDIT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AM_PROV_EDIT_DESC', 'AM_PROV_EDIT', 'MENU_DISPLAY_NAME', 'Authentication Provider Edit Menu');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('AM_PROV_EDIT_SEARCH', 'MENU_ITEM', 'AM_PROV_EDIT_SEARCH', 'Back to Search', '/webconsole-am/authenticationProviders.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AM_PROV_EDIT_SEARCH_PUB', 'AM_PROV_EDIT_SEARCH', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AM_PROV_EDIT_SEARCH_DESC', 'AM_PROV_EDIT_SEARCH', 'MENU_DISPLAY_NAME', 'Back to Search');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('AM_PROV_NEW_EDIT', 'MENU_ITEM', 'AM_PROV_NEW_EDIT', 'Create Authentication Provider', '/webconsole-am/newAuthProvider.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AM_PROV_NEW_EDIT_PUB', 'AM_PROV_NEW_EDIT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AM_PROV_NEW_EDIT_PUB_DESC', 'AM_PROV_NEW_EDIT', 'MENU_DISPLAY_NAME', 'Create New Provider');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('AM_PROV_EDIT_CURRENT', 'MENU_ITEM', 'AM_PROV_EDIT_CURRENT', 'Back to Search', '/webconsole-am/editAuthProvider.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AM_PROV_EDIT_CURRENT_PUB', 'AM_PROV_EDIT_CURRENT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AM_PROV_EDIT_CURRENT_DESC', 'AM_PROV_EDIT_CURRENT', 'MENU_DISPLAY_NAME', 'Edit Provider');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('AM_PROV_EDIT', 'AM_PROV_EDIT_SEARCH');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('AM_PROV_EDIT', 'AM_PROV_NEW_EDIT');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('AM_PROV_EDIT', 'AM_PROV_EDIT_CURRENT');
commit;
use openiam;

DROP TABLE IF EXISTS AUTH_RESOURCE_ATTRIBUTE_MAP;
DROP TABLE IF EXISTS AUTH_RESOURCE_AM_ATTRIBUTE;

CREATE TABLE AUTH_RESOURCE_AM_ATTRIBUTE (
  AM_ATTRIBUTE_ID varchar(32) NOT NULL,
  ATTRIBUTE_NAME varchar(100) NOT NULL,
  PRIMARY KEY (AM_ATTRIBUTE_ID)
) ENGINE=InnoDB;


CREATE TABLE AUTH_RESOURCE_ATTRIBUTE_MAP (
  ATTRIBUTE_MAP_ID varchar(32) NOT NULL,
  PROVIDER_ID varchar(32) NOT NULL,
  TARGET_ATTRIBUTE_NAME varchar(100) NOT NULL,
  AM_ATTRIBUTE_ID varchar(100) NOT NULL,
  AM_POLICY_URL varchar(100) DEFAULT NULL,
  PRIMARY KEY (ATTRIBUTE_MAP_ID),
  UNIQUE KEY IDX_PROVIDER_ATTRIBUTE (PROVIDER_ID,TARGET_ATTRIBUTE_NAME),
  KEY FK_AUTH_AM_ATTR (AM_ATTRIBUTE_ID),
  KEY FK_PROVIDER_AUTH_RES_ATTR_MAP (PROVIDER_ID),
  CONSTRAINT FK_AUTH_AM_ATTR FOREIGN KEY (AM_ATTRIBUTE_ID) REFERENCES AUTH_RESOURCE_AM_ATTRIBUTE (AM_ATTRIBUTE_ID),
  CONSTRAINT FK_PROVIDER_AUTH_RES_ATTR_MAP FOREIGN KEY (PROVIDER_ID) REFERENCES AUTH_PROVIDER (PROVIDER_ID)
) ENGINE=InnoDB;
commit;
use openiam;

DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN(
	'AM_PROV_AM_ATTR'
);

DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN(
	'AM_PROV_AM_ATTR'
);

DELETE FROM RES WHERE RESOURCE_ID IN(
	'AM_PROV_AM_ATTR'
);

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('AM_PROV_AM_ATTR', 'MENU_ITEM', 'AM_PROV_AM_ATTR', 'Create Authentication Provider', '/webconsole-am/authProviderAMAttributes.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AM_PROV_AM_ATTR_PUB', 'AM_PROV_AM_ATTR', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AM_PROV_AM_ATTR_DESC', 'AM_PROV_AM_ATTR', 'MENU_DISPLAY_NAME', 'Request Attributes');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('AM_PROV_EDIT', 'AM_PROV_AM_ATTR');
commit;
use openiam;

ALTER TABLE AUTH_RESOURCE_ATTRIBUTE_MAP DROP FOREIGN KEY FK_AUTH_AM_ATTR;
ALTER TABLE AUTH_RESOURCE_ATTRIBUTE_MAP
  ADD COLUMN ATTRIBUTE_VALUE VARCHAR(100) NULL DEFAULT NULL,
  ADD COLUMN ATTRIBUTE_TYPE VARCHAR(32) NOT NULL,
  CHANGE COLUMN AM_ATTRIBUTE_ID AM_ATTRIBUTE_ID VARCHAR(100) NULL DEFAULT NULL,
  ADD CONSTRAINT FK_AUTH_AM_ATTR FOREIGN KEY (AM_ATTRIBUTE_ID) REFERENCES AUTH_RESOURCE_AM_ATTRIBUTE (AM_ATTRIBUTE_ID);

commit;
use openiam;

update AUTH_RESOURCE_ATTRIBUTE_MAP
set ATTRIBUTE_TYPE='Any';
commit;
use openiam;

DROP TABLE IF EXISTS URI_META_VALUE_XREF;
DROP TABLE IF EXISTS URI_PATTERN_META_VALUE;
DROP TABLE IF EXISTS URI_PATTERN_META;
DROP TABLE IF EXISTS URI_PATTERN_META_TYPE;
DROP TABLE IF EXISTS URI_PATTERN;
DROP TABLE IF EXISTS CONTENT_PROVIDER_SERVER;
DROP TABLE IF EXISTS CONTENT_PROVIDER;
DROP TABLE IF EXISTS AUTH_LEVEL;


CREATE TABLE AUTH_LEVEL (
	AUTH_LEVEL_ID varchar(32) NOT NULL,
	AUTH_LEVEL_NAME varchar(100) NOT NULL,
	LEVEL int(3) NOT NULL,
	primary key(AUTH_LEVEL_ID),
	CONSTRAINT UNIQUE_AUTH_LEVEL_NAME  UNIQUE(AUTH_LEVEL_NAME),
	CONSTRAINT UNIQUE_AUTH_LEVEL_LEVEL UNIQUE(LEVEL)
)ENGINE=InnoDB;

CREATE TABLE CONTENT_PROVIDER (
	CONTENT_PROVIDER_ID varchar(32) NOT NULL,
	CONTENT_PROVIDER_NAME varchar(100) NOT NULL,
	IS_PUBLIC char(1) NOT NULL DEFAULT 'N',
	MIN_AUTH_LEVEL varchar(32) NOT NULL,
	DOMAIN_PATTERN varchar(100) NOT NULL,
	IS_SSL char(1) NULL, /* NULL means don't care */
	CONTEXT_PATH varchar(100) NOT NULL,
	RESOURCE_ID varchar(32) NOT NULL,
	primary key(CONTENT_PROVIDER_ID),
	CONSTRAINT UNIQUE_CP_NAME UNIQUE(CONTENT_PROVIDER_NAME),
	CONSTRAINT UNIQUE_CP_PATTERN UNIQUE(DOMAIN_PATTERN, iS_SSL, CONTEXT_PATH),
	CONSTRAINT CP_AUTH_LEVEL_FK FOREIGN KEY (MIN_AUTH_LEVEL) REFERENCES AUTH_LEVEL(AUTH_LEVEL_ID),
	CONSTRAINT CP_RES_FK FOREIGN KEY (RESOURCE_ID) REFERENCES RES(RESOURCE_ID)
)ENGINE=InnoDB;


CREATE TABLE CONTENT_PROVIDER_SERVER (
	CONTENT_PROVIDER_SERVER_ID varchar(32) NOT NULL,
	CONTENT_PROVIDER_ID varchar(32) NOT NULL,
	SERVER_URL varchar(100) NOT NULL,
	primary key(CONTENT_PROVIDER_SERVER_ID),
	CONSTRAINT CP_SERVER_CP_FK FOREIGN KEY (CONTENT_PROVIDER_ID) REFERENCES CONTENT_PROVIDER(CONTENT_PROVIDER_ID),
	CONSTRAINT UNIQUE_CP_SERVER UNIQUE(CONTENT_PROVIDER_ID, SERVER_URL)
)ENGINE=InnoDB;


CREATE TABLE URI_PATTERN (
	URI_PATTERN_ID varchar(32) NOT NULL,
	CONTENT_PROVIDER_ID varchar(32) NOT NULL,
	MIN_AUTH_LEVEL varchar(32) NOT NULL, /* logic should default this to value in CP */
	PATTERN varchar(100) NOT NULL,
	IS_PUBLIC char(1) NOT NULL DEFAULT 'N', /* logic should default this to value in CP */
	RESOURCE_ID varchar(32) NOT NULL,
	primary key(URI_PATTERN_ID),
	CONSTRAINT URI_PATTERN_AUTH_LEVEL_FK FOREIGN KEY (MIN_AUTH_LEVEL) REFERENCES AUTH_LEVEL(AUTH_LEVEL_ID),
	CONSTRAINT URI_PATTERN_RES_FK FOREIGN KEY (RESOURCE_ID) REFERENCES RES(RESOURCE_ID),
	CONSTRAINT URI_PATTERN_CP_FK FOREIGN KEY (CONTENT_PROVIDER_ID) REFERENCES CONTENT_PROVIDER(CONTENT_PROVIDER_ID),
	CONSTRAINT URI_PATTERN_UNIQUE UNIQUE (CONTENT_PROVIDER_ID, PATTERN)
)ENGINE=InnoDB;


CREATE TABLE URI_PATTERN_META_TYPE (
	URI_PATTERN_META_TYPE_ID varchar(32) NOT NULL,
	METADATA_TYPE_NAME varchar(100) NOT NULL,
	SPRING_BEAN_NAME varchar(100) NOT NULL,
	primary key(URI_PATTERN_META_TYPE_ID),
	CONSTRAINT UNIQUE_URI_PATTERN_META_TYPE_NAME UNIQUE (METADATA_TYPE_NAME),
	CONSTRAINT UNIQUE_URI_PATTERN_META_TYPE_SPRING_BEAN UNIQUE (SPRING_BEAN_NAME)
)ENGINE=InnoDB;

CREATE TABLE URI_PATTERN_META (
	URI_PATTERN_META_ID varchar(32) NOT NULL,
	URI_PATTERN_ID varchar(32) NOT NULL,
	URI_PATTERN_META_TYPE_ID varchar(32) NOT NULL,
	primary key(URI_PATTERN_META_ID),
	CONSTRAINT URI_PATTERN_META_URI_PATTERN_FK FOREIGN KEY (URI_PATTERN_ID) REFERENCES URI_PATTERN(URI_PATTERN_ID),
	CONSTRAINT URI_PATTERN_META_URI_PATTERN_META_TYPE_FK FOREIGN KEY (URI_PATTERN_META_TYPE_ID) REFERENCES URI_PATTERN_META_TYPE(URI_PATTERN_META_TYPE_ID),
	CONSTRAINT URI_PATTERN_META_UNIQUE UNIQUE (URI_PATTERN_ID, URI_PATTERN_META_TYPE_ID)
)ENGINE=InnoDB;


CREATE TABLE URI_PATTERN_META_VALUE (
	URI_PATTERN_META_VALUE_ID varchar(32) NOT NULL,
	URI_PATTERN_META_ID varchar(32) NOT NULL,
	META_ATTRIBUTE_NAME varchar(100) NOT NULL,
	AM_ATTRIBUTE_ID varchar(32) NULL,
	STATIC_VALUE varchar(100) NULL,
	primary key(URI_PATTERN_META_VALUE_ID),
	CONSTRAINT URI_PATTERN_META_VALUE_AM_FK FOREIGN KEY (AM_ATTRIBUTE_ID) REFERENCES AUTH_RESOURCE_AM_ATTRIBUTE(AM_ATTRIBUTE_ID),
	CONSTRAINT URI_PATTERN_META_VALUE_META_FK FOREIGN KEY (URI_PATTERN_META_ID) REFERENCES URI_PATTERN_META(URI_PATTERN_META_ID)
)ENGINE=InnoDB;

/* this is here to keep CP+URI stuff in one place */
INSERT INTO URI_PATTERN_META_TYPE (URI_PATTERN_META_TYPE_ID, METADATA_TYPE_NAME, SPRING_BEAN_NAME) VALUES('formPostURIPatternRule', 'Form Post Processor', 'formPostURIPatternRule');
INSERT INTO URI_PATTERN_META_TYPE (URI_PATTERN_META_TYPE_ID, METADATA_TYPE_NAME, SPRING_BEAN_NAME) VALUES('cookieURIPatternRule', 'Set Cookie', 'cookieURIPatternRule');
INSERT INTO URI_PATTERN_META_TYPE (URI_PATTERN_META_TYPE_ID, METADATA_TYPE_NAME, SPRING_BEAN_NAME) VALUES('headerURIPatternRule', 'Set Header', 'headerURIPatternRule');
INSERT INTO URI_PATTERN_META_TYPE (URI_PATTERN_META_TYPE_ID, METADATA_TYPE_NAME, SPRING_BEAN_NAME) VALUES('requestParamURIPatternRule', 'Set URI String Parameter', 'requestParamURIPatternRule');

/* auth levels */
INSERT INTO AUTH_LEVEL (AUTH_LEVEL_ID, AUTH_LEVEL_NAME, LEVEL) VALUES('PASSWORD_AUTH', 'Password Authentication', 1);
INSERT INTO AUTH_LEVEL (AUTH_LEVEL_ID, AUTH_LEVEL_NAME, LEVEL) VALUES('CERT_AUTH', 'Certification Authentication', 2);
commit;
use openiam;

ALTER TABLE AUTH_ATTRIBUTE ADD COLUMN DEFAULT_VALUE VARCHAR(255) NULL;

commit;
use openiam;

INSERT INTO AUTH_ATTRIBUTE (AUTH_ATTRIBUTE_ID, ATTRIBUTE_NAME, PROVIDER_TYPE, DESCRIPTION, REQUIRED, DATA_TYPE)
	VALUES('AuthnContextClassRef', 'Authentication Context Class', 'SAML_PROVIDER', 'The Value of the AuthnContextClassRef attribute', 'N', 'singleValue');
	
INSERT INTO AUTH_ATTRIBUTE (AUTH_ATTRIBUTE_ID, ATTRIBUTE_NAME, PROVIDER_TYPE, DESCRIPTION, REQUIRED, DATA_TYPE)
	VALUES('NameIdFormat', 'Name ID Format', 'SAML_PROVIDER', 'The Value of the Format attribute in the NameID element', 'N', 'singleValue');
	
INSERT INTO AUTH_ATTRIBUTE (AUTH_ATTRIBUTE_ID, ATTRIBUTE_NAME, PROVIDER_TYPE, DESCRIPTION, REQUIRED, DATA_TYPE)
	VALUES('SPNameQualifier', 'SP Name Qualifier', 'SAML_PROVIDER', 'Value of the SPNameQualifier attribute in the NameID element', 'N', 'singleValue');
commit;
use openiam;

DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('CONTENT_PROV_ROOT', 'CONTENT_PROV_EDIT', 'CONTENT_PROV_SEARCH_CHILD',
                                                              'CONTENT_PROV_SEARCH', 'CONTENT_PROV_NEW','CONTENT_PROV_EDIT_SEARCH',
                                                              'CONTENT_PROV_NEW_EDIT',	'CONTENT_PROV_EDIT_CURRENT','CONTENT_PROV_SERVER',
                                                              'CONTENT_PROV_URL_PATTERN', 'URI_PATTERN_EDIT', 'URI_PATTERN_EDT_PROV_SEARCH',
                                                              'URI_PATTERN_EDT_PTRN_SEARCH', 'URI_PATTERN_EDIT_NEW_PATTERN',
                                                              'URI_PATTERN_EDIT_PATTERN', 'URI_PATTERN_EDIT_META');

DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN('CONTENT_PROV_ROOT', 'CONTENT_PROV_EDIT', 'CONTENT_PROV_SEARCH_CHILD',
                                                       'CONTENT_PROV_SEARCH', 'CONTENT_PROV_NEW','CONTENT_PROV_EDIT_SEARCH',
                                                       'CONTENT_PROV_NEW_EDIT',	'CONTENT_PROV_EDIT_CURRENT','CONTENT_PROV_SERVER',
                                                       'CONTENT_PROV_URL_PATTERN', 'URI_PATTERN_EDIT', 'URI_PATTERN_EDT_PROV_SEARCH',
                                                       'URI_PATTERN_EDT_PTRN_SEARCH', 'URI_PATTERN_EDIT_NEW_PATTERN',
                                                       'URI_PATTERN_EDIT_PATTERN', 'URI_PATTERN_EDIT_META');

DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('CONTENT_PROV_ROOT', 'CONTENT_PROV_EDIT', 'CONTENT_PROV_SEARCH_CHILD',
                                               'CONTENT_PROV_SEARCH', 'CONTENT_PROV_NEW','CONTENT_PROV_EDIT_SEARCH',
                                               'CONTENT_PROV_NEW_EDIT',	'CONTENT_PROV_EDIT_CURRENT','CONTENT_PROV_SERVER',
                                               'CONTENT_PROV_URL_PATTERN', 'URI_PATTERN_EDIT', 'URI_PATTERN_EDT_PROV_SEARCH',
                                               'URI_PATTERN_EDT_PTRN_SEARCH', 'URI_PATTERN_EDIT_NEW_PATTERN',
                                               'URI_PATTERN_EDIT_PATTERN', 'URI_PATTERN_EDIT_META');

DELETE FROM RES WHERE RESOURCE_ID IN('CONTENT_PROV_ROOT', 'CONTENT_PROV_EDIT', 'CONTENT_PROV_SEARCH_CHILD',
                                     'CONTENT_PROV_SEARCH', 'CONTENT_PROV_NEW','CONTENT_PROV_EDIT_SEARCH',
                                     'CONTENT_PROV_NEW_EDIT',	'CONTENT_PROV_EDIT_CURRENT','CONTENT_PROV_SERVER',
                                     'CONTENT_PROV_URL_PATTERN', 'URI_PATTERN_EDIT', 'URI_PATTERN_EDT_PROV_SEARCH',
                                     'URI_PATTERN_EDT_PTRN_SEARCH', 'URI_PATTERN_EDIT_NEW_PATTERN',
                                     'URI_PATTERN_EDIT_PATTERN', 'URI_PATTERN_EDIT_META');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('CONTENT_PROV_SEARCH_CHILD', 'MENU_ITEM', 'CONTENT_PROV_SEARCH_CHILD', 'Content Provider Search', '/webconsole-am/contentProviders.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CONTENT_PROV_SEARCH_CHILD_PUB', 'CONTENT_PROV_SEARCH_CHILD', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CONTENT_PROV_SEARCH_CHILD_DESC', 'CONTENT_PROV_SEARCH_CHILD', 'MENU_DISPLAY_NAME', 'Content Providers');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ACC_CONTROL', 'CONTENT_PROV_SEARCH_CHILD');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('CONTENT_PROV_ROOT', 'MENU_ITEM', 'CONTENT_PROV_ROOT', 'Content Provider Root Menu');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CONTENT_PROV_ROOT_PUB', 'CONTENT_PROV_ROOT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CONTENT_PROV_ROOT_DESC', 'CONTENT_PROV_ROOT', 'MENU_DISPLAY_NAME', 'Content Provider Root Menu');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('CONTENT_PROV_SEARCH', 'MENU_ITEM', 'CONTENT_PROV_SEARCH', 'Search Content Providers', '/webconsole-am/contentProviders.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CONTENT_PROV_SEARCH_PUB', 'CONTENT_PROV_SEARCH', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CONTENT_PROV_SEARCH_DESC', 'CONTENT_PROV_SEARCH', 'MENU_DISPLAY_NAME', 'Search Content Providers');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('CONTENT_PROV_NEW', 'MENU_ITEM', 'CONTENT_PROV_NEW', 'Create Content Provider', '/webconsole-am/newContentProvider.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CONTENT_PROV_NEW_PUB', 'CONTENT_PROV_NEW', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CONTENT_PROV_NEW_DSC', 'CONTENT_PROV_NEW', 'MENU_DISPLAY_NAME', 'Create New Provider');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('CONTENT_PROV_ROOT', 'CONTENT_PROV_SEARCH');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('CONTENT_PROV_ROOT', 'CONTENT_PROV_NEW');




INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('CONTENT_PROV_EDIT', 'MENU_ITEM', 'CONTENT_PROV_EDIT', 'Content Provider Edit Menu');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CONTENT_PROV_EDIT_PUB', 'CONTENT_PROV_EDIT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CONTENT_PROV_EDIT_DESC', 'CONTENT_PROV_EDIT', 'MENU_DISPLAY_NAME', 'Content Provider Edit Menu');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('CONTENT_PROV_EDIT_SEARCH', 'MENU_ITEM', 'CONTENT_PROV_EDIT_SEARCH', 'Back to Search', '/webconsole-am/contentProviders.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CONTENT_PROV_EDIT_SEARCH_PUB', 'CONTENT_PROV_EDIT_SEARCH', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CONTENT_PROV_EDIT_SEARCH_DESC', 'CONTENT_PROV_EDIT_SEARCH', 'MENU_DISPLAY_NAME', 'Back to Search');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('CONTENT_PROV_NEW_EDIT', 'MENU_ITEM', 'CONTENT_PROV_NEW_EDIT', 'Create Content Provider', '/webconsole-am/newContentProvider.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CONTENT_PROV_NEW_EDIT_PUB', 'CONTENT_PROV_NEW_EDIT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CONTENT_PROV_NEW_EDIT_DESC', 'CONTENT_PROV_NEW_EDIT', 'MENU_DISPLAY_NAME', 'Create New Provider');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('CONTENT_PROV_EDIT_CURRENT', 'MENU_ITEM', 'CONTENT_PROV_EDIT_CURRENT', 'Edit Current Provider', '/webconsole-am/editContentProvider.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CONTENT_PROV_EDIT_CURRENT_PUB', 'CONTENT_PROV_EDIT_CURRENT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CONTENT_PROV_EDIT_CURRENT_DESC', 'CONTENT_PROV_EDIT_CURRENT', 'MENU_DISPLAY_NAME', 'Edit Provider');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('CONTENT_PROV_SERVER', 'MENU_ITEM', 'CONTENT_PROV_SERVER', 'Application Servers', '/webconsole-am/contentProviderServers.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CONTENT_PROV_SERVER_PUB', 'CONTENT_PROV_SERVER', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CONTENT_PROV_SERVER_DESC', 'CONTENT_PROV_SERVER', 'MENU_DISPLAY_NAME', 'Application Servers');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('CONTENT_PROV_URL_PATTERN', 'MENU_ITEM', 'CONTENT_PROV_URL_PATTERN', 'Url Patterns', '/webconsole-am/contentProviderPatterns.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CONTENT_PROV_URL_PATTERN_PUB', 'CONTENT_PROV_URL_PATTERN', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CONTENT_PROV_URL_PATTERN_DESC', 'CONTENT_PROV_URL_PATTERN', 'MENU_DISPLAY_NAME', 'Url Patterns');


INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('CONTENT_PROV_EDIT', 'CONTENT_PROV_EDIT_SEARCH');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('CONTENT_PROV_EDIT', 'CONTENT_PROV_NEW_EDIT');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('CONTENT_PROV_EDIT', 'CONTENT_PROV_EDIT_CURRENT');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('CONTENT_PROV_EDIT', 'CONTENT_PROV_SERVER');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('CONTENT_PROV_EDIT', 'CONTENT_PROV_URL_PATTERN');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('URI_PATTERN_EDIT', 'MENU_ITEM', 'URI_PATTERN_EDIT', 'URI Pattern Edit Menu');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('URI_PATTERN_EDIT_PUB', 'URI_PATTERN_EDIT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('URI_PATTERN_EDIT_DESC', 'URI_PATTERN_EDIT', 'MENU_DISPLAY_NAME', 'URI Pattern Edit Menu');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('URI_PATTERN_EDT_PROV_SEARCH', 'MENU_ITEM', 'URI_PATTERN_EDT_PROV_SEARCH', 'Context Provider Search', '/webconsole-am/contentProviders.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('URI_PATTERN_EDT_PROV_SEARCH_PUB', 'URI_PATTERN_EDT_PROV_SEARCH', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('URI_PATTERN_EDT_PROV_SEARCH_DESC', 'URI_PATTERN_EDT_PROV_SEARCH', 'MENU_DISPLAY_NAME', 'Context Provider Search');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('URI_PATTERN_EDT_PTRN_SEARCH', 'MENU_ITEM', 'URI_PATTERN_EDT_PTRN_SEARCH', 'URI Pattern Search', '/webconsole-am/contentProviderPatterns.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('URI_PATTERN_EDT_PTRN_SEARCH_PUB', 'URI_PATTERN_EDT_PTRN_SEARCH', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('URI_PATTERN_EDT_PTRN_SEARCH_DESC', 'URI_PATTERN_EDT_PTRN_SEARCH', 'MENU_DISPLAY_NAME', 'URI Pattern Search');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('URI_PATTERN_EDIT_NEW_PATTERN', 'MENU_ITEM', 'URI_PATTERN_EDIT_NEW_PATTERN', 'Create URI Pattern', '/webconsole-am/newProviderPattern.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('URI_PATTERN_EDNW_PATTERN_PUB', 'URI_PATTERN_EDIT_NEW_PATTERN', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('URI_PATTERN_EDNW_PATTERN_DESC', 'URI_PATTERN_EDIT_NEW_PATTERN', 'MENU_DISPLAY_NAME', 'Create URI Pattern');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('URI_PATTERN_EDIT_PATTERN', 'MENU_ITEM', 'URI_PATTERN_EDIT_PATTERN', 'Edit URI Pattern', '/webconsole-am/editProviderPattern.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('URI_PATTERN_EDIT_PATTERN_PUB', 'URI_PATTERN_EDIT_PATTERN', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('URI_PATTERN_EDIT_PATTERN_DESC', 'URI_PATTERN_EDIT_PATTERN', 'MENU_DISPLAY_NAME', 'Edit URI Pattern');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('URI_PATTERN_EDIT_META', 'MENU_ITEM', 'URI_PATTERN_EDIT_META', 'URI Pattern Meta data', '/webconsole-am/patternMetadata.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('URI_PATTERN_EDIT_META_PUB', 'URI_PATTERN_EDIT_META', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('URI_PATTERN_EDIT_META_DESC', 'URI_PATTERN_EDIT_META', 'MENU_DISPLAY_NAME', 'URI Pattern Meta data');


INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('URI_PATTERN_EDIT', 'URI_PATTERN_EDT_PROV_SEARCH');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('URI_PATTERN_EDIT', 'URI_PATTERN_EDT_PTRN_SEARCH');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('URI_PATTERN_EDIT', 'URI_PATTERN_EDIT_NEW_PATTERN');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('URI_PATTERN_EDIT', 'URI_PATTERN_EDIT_PATTERN');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('URI_PATTERN_EDIT', 'URI_PATTERN_EDIT_META');




commit;
use openiam;

ALTER TABLE URI_PATTERN_META DROP FOREIGN KEY URI_PATTERN_META_URI_PATTERN_META_TYPE_FK;
ALTER TABLE URI_PATTERN_META DROP FOREIGN KEY URI_PATTERN_META_URI_PATTERN_FK;
ALTER TABLE URI_PATTERN_META
    ADD COLUMN URI_PATTERN_NAME VARCHAR(100) NOT NULL,
    DROP INDEX URI_PATTERN_META_UNIQUE;

ALTER TABLE URI_PATTERN_META
  ADD CONSTRAINT URI_PATTERN_META_URI_PATTERN_FK
    FOREIGN KEY (URI_PATTERN_ID ) REFERENCES URI_PATTERN (URI_PATTERN_ID),
  ADD CONSTRAINT URI_PATTERN_META_URI_PATTERN_META_TYPE_FK
    FOREIGN KEY (URI_PATTERN_META_TYPE_ID) REFERENCES URI_PATTERN_META_TYPE (URI_PATTERN_META_TYPE_ID),
  ADD INDEX URI_PATTERN_META_URI_PATTERN_FK (URI_PATTERN_ID ASC),
  ADD INDEX URI_PATTERN_META_URI_PATTERN_META_TYPE_FK (URI_PATTERN_META_TYPE_ID ASC);
commit;
use openiam;

UPDATE AUTH_ATTRIBUTE SET DEFAULT_VALUE='urn:oasis:names:tc:SAML:2.0:ac:classes:Password' WHERE AUTH_ATTRIBUTE_ID='AuthnContextClassRef';

UPDATE AUTH_ATTRIBUTE SET DEFAULT_VALUE='urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress' WHERE AUTH_ATTRIBUTE_ID='NameIdFormat';

INSERT INTO AUTH_ATTRIBUTE (AUTH_ATTRIBUTE_ID, ATTRIBUTE_NAME, PROVIDER_TYPE, DESCRIPTION, REQUIRED, DATA_TYPE) 
					 VALUES('METADATA_EXPOSED', 'Metdata Exposed', 'SAML_PROVIDER', 'Is the metadata for this SAML Provider exposed?  Some Service Providers require a URL that defines the Identity Provider Metadata', 'N', 'booleanValue');
commit;
use openiam;

ALTER TABLE CONTENT_PROVIDER DROP INDEX UNIQUE_CP_PATTERN;
ALTER TABLE CONTENT_PROVIDER DROP COLUMN CONTEXT_PATH;
ALTER TABLE CONTENT_PROVIDER ADD CONSTRAINT UNIQUE_CP_PATTERN UNIQUE(DOMAIN_PATTERN, iS_SSL);
commit;
use openiam;

INSERT INTO AUTH_RESOURCE_AM_ATTRIBUTE (AM_ATTRIBUTE_ID, ATTRIBUTE_NAME) VALUES('Login.login', 'Principal');
INSERT INTO AUTH_RESOURCE_AM_ATTRIBUTE (AM_ATTRIBUTE_ID, ATTRIBUTE_NAME) VALUES('User.email', 'Email Address');
INSERT INTO AUTH_RESOURCE_AM_ATTRIBUTE (AM_ATTRIBUTE_ID, ATTRIBUTE_NAME) VALUES('User.title', 'Functional Title');
commit;
use openiam;

DELETE FROM RESOURCE_USER WHERE RESOURCE_ID IN('CONTENT_PROV_SERVER', 'CONTENT_PROV_URL_PATTERN', 'URI_PATTERN_EDT_PTRN_SEARCH', 'URI_PATTERN_EDIT_META', 'URI_META_EDIT', 'URI_META_BACK', 'BACK_TO_CP');
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN('CONTENT_PROV_SERVER', 'CONTENT_PROV_URL_PATTERN', 'URI_PATTERN_EDT_PTRN_SEARCH', 'URI_PATTERN_EDIT_META', 'URI_META_EDIT', 'URI_META_BACK', 'BACK_TO_CP');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('CONTENT_PROV_SERVER', 'CONTENT_PROV_URL_PATTERN', 'URI_PATTERN_EDT_PTRN_SEARCH', 'URI_PATTERN_EDIT_META', 'URI_META_EDIT', 'URI_META_BACK', 'BACK_TO_CP');
DELETE FROM RESOURCE_GROUP WHERE RESOURCE_ID IN('CONTENT_PROV_SERVER', 'CONTENT_PROV_URL_PATTERN', 'URI_PATTERN_EDT_PTRN_SEARCH', 'URI_PATTERN_EDIT_META', 'URI_META_EDIT', 'URI_META_BACK', 'BACK_TO_CP');
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('CONTENT_PROV_SERVER', 'CONTENT_PROV_URL_PATTERN', 'URI_PATTERN_EDT_PTRN_SEARCH', 'URI_PATTERN_EDIT_META', 'URI_META_EDIT', 'URI_META_BACK', 'BACK_TO_CP');
DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN('CONTENT_PROV_SERVER', 'CONTENT_PROV_URL_PATTERN', 'URI_PATTERN_EDT_PTRN_SEARCH', 'URI_PATTERN_EDIT_META', 'URI_META_EDIT', 'URI_META_BACK', 'BACK_TO_CP');
DELETE FROM RES WHERE RESOURCE_ID IN('CONTENT_PROV_SERVER', 'CONTENT_PROV_URL_PATTERN', 'URI_PATTERN_EDT_PTRN_SEARCH', 'URI_PATTERN_EDIT_META', 'URI_META_EDIT', 'URI_META_BACK', 'BACK_TO_CP');


UPDATE RESOURCE_PROP SET NAME='MENU_DISPLAY_NAME', PROP_VALUE='Content Provider Search' WHERE RESOURCE_PROP_ID='URI_PATTERN_EDT_PROV_SEARCH_DESC';



INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('URI_META_EDIT', 'MENU_ITEM', 'URI_META_EDIT', 'URI Meta Root');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('URI_META_EDIT_PUB', 'URI_META_EDIT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('URI_META_EDIT_DESC', 'URI_META_EDIT', 'MENU_DISPLAY_NAME', 'URI Meta Root Item');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('URI_META_BACK', 'MENU_ITEM', 'URI_META_BACK', 'Back To Pattern', '/webconsole-am/editProviderPattern.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('URI_META_BACK_PUB', 'URI_META_BACK', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('URI_META_BACK_DESC', 'URI_META_BACK', 'MENU_DISPLAY_NAME', 'Back To Pattern');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('URI_META_EDIT', 'URI_META_BACK');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('BACK_TO_CP', 'MENU_ITEM', 'BACK_TO_CP', 'Back To Content Provider', '/webconsole-am/editContentProvider.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('BACK_TO_CP_PUB', 'BACK_TO_CP', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('BACK_TO_CP_DESC', 'BACK_TO_CP', 'MENU_DISPLAY_NAME', 'Back To Content Provider');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('URI_PATTERN_EDIT', 'BACK_TO_CP');
commit;
use openiam;

INSERT INTO AUTH_ATTRIBUTE (AUTH_ATTRIBUTE_ID, ATTRIBUTE_NAME, PROVIDER_TYPE, DESCRIPTION, REQUIRED, DATA_TYPE)
	VALUES('NameQualifier', 'Name Qualifier', 'SAML_PROVIDER', 'Value of the NameQualifier attribute in the NameID element', 'N', 'singleValue');
commit;
use openiam;

DELETE FROM URI_PATTERN_META_VALUE WHERE AM_ATTRIBUTE_ID='User.email';
UPDATE AUTH_RESOURCE_ATTRIBUTE_MAP SET AM_ATTRIBUTE_ID=NULL, AM_POLICY_URL='AM/PrimaryEmail.groovy' WHERE AM_ATTRIBUTE_ID='User.email';
DELETE FROM AUTH_RESOURCE_AM_ATTRIBUTE WHERE AM_ATTRIBUTE_ID='User.email';
commit;
use openiam;

DROP TABLE IF EXISTS METADATA_ELEMENT_TEMPLATE_URI_PATTERN_XREF;

CREATE TABLE METADATA_ELEMENT_TEMPLATE_URI_PATTERN_XREF (
	TEMPLATE_ID VARCHAR(32) NOT NULL,
	URI_PATTERN_ID VARCHAR(32) NOT NULL,
	CONSTRAINT TEMPLATE_PATTERN_XREF_TEMPLATE_FK FOREIGN KEY (TEMPLATE_ID) REFERENCES METADATA_ELEMENT_PAGE_TEMPLATE(ID),
	CONSTRAINT TEMPLATE_PATTERN_XREF_PATTERN_FK FOREIGN KEY (URI_PATTERN_ID) REFERENCES URI_PATTERN(URI_PATTERN_ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;
commit;
use openiam;

DROP TABLE IF EXISTS USER_KEY;
CREATE TABLE USER_KEY (
	USER_KEY_ID varchar(32) NOT NULL,
	USER_ID varchar(32) NOT NULL,
	NAME varchar(40) NOT NULL,
	KEY_VALUE varchar(255) NOT NULL,
	primary key(USER_KEY_ID),
    CONSTRAINT FK_USER_KEY_USER_ID FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID)
)  Engine=InnoDB;

ALTER TABLE USERS ADD COLUMN SYSTEM_FLAG VARCHAR(1) NULL;
ALTER TABLE LOGIN CHANGE COLUMN PASSWORD PASSWORD VARCHAR(255) NULL DEFAULT NULL,
                    CHANGE COLUMN PWD_EQUIVALENT_TOKEN PWD_EQUIVALENT_TOKEN VARCHAR(255) NULL DEFAULT NULL;

ALTER TABLE MANAGED_SYS CHANGE COLUMN PSWD PSWD VARCHAR(255) NULL DEFAULT NULL;
ALTER TABLE PWD_HISTORY CHANGE COLUMN PASSWORD PASSWORD VARCHAR(255) NULL DEFAULT NULL;


commit;

use openiam;

insert into USERS (USER_ID,FIRST_NAME, LAST_NAME, STATUS, COMPANY_ID, SYSTEM_FLAG ) values('0001','system','system','ACTIVE','100','1');

insert into LOGIN(SERVICE_ID, LOGIN, LOWERCASE_LOGIN, MANAGED_SYS_ID, USER_ID, PASSWORD,RESET_PWD, IS_LOCKED, AUTH_FAIL_COUNT) VALUES('IDM','system','system','0','0001','passwd00',0,0,0);

commit;



commit;
use openiam;
DROP TABLE IF EXISTS REPORT_INFO;
CREATE TABLE REPORT_INFO(
	REPORT_INFO_ID varchar(32) NOT NULL,
	REPORT_NAME VARCHAR(64) NOT NULL UNIQUE,
    DATASOURCE_FILE_PATH VARCHAR(255) NOT NULL,
    REPORT_FILE_PATH VARCHAR(255),
    PRIMARY KEY (REPORT_INFO_ID)
)Engine=InnoDB;
commit;
use openiam;

/* rename column that cauases Oracle to blow up */
ALTER TABLE AUTH_LEVEL CHANGE LEVEL AUTH_LEVEL_DIG int (3) NOT NULL;

/* 30 char limit for table names in Oracle */
RENAME TABLE METADATA_ELEMENT_VALID_VALUES TO MD_ELEMENT_VALID_VALUES;

RENAME TABLE METADATA_ELEMENT_PAGE_TEMPLATE_XREF TO PAGE_TEMPLATE_XREF;

RENAME TABLE METADATA_ELEMENT_TEMPLATE_URI_PATTERN_XREF TO METADATA_URI_XREF;

/* 32 char limit for FK name sin Oracle */
ALTER TABLE PAGE_TEMPLATE_XREF DROP FOREIGN KEY METADATA_ELEMENT_PAGE_TEMPLATE_ELEMENT_FK;

ALTER TABLE PAGE_TEMPLATE_XREF 
	ADD CONSTRAINT MD_ELMT_TEMPLATE_FK FOREIGN KEY (METADATA_ELEMENT_ID)
	REFERENCES METADATA_ELEMENT(METADATA_ID);
	
	

	
ALTER TABLE USER_IDENTITY_ANS DROP FOREIGN KEY FK_USER_IDENTITY_ANS_IDENTITY_QUESTION;

ALTER TABLE USER_IDENTITY_ANS 
	ADD CONSTRAINT FK_ID_AND_QUEST_FK FOREIGN KEY (IDENTITY_QUESTION_ID)
	REFERENCES IDENTITY_QUESTION(IDENTITY_QUESTION_ID);


	
ALTER TABLE USER_ATTRIBUTES DROP FOREIGN KEY FK_USER_ATTRIBUTES_METADATA_ELEMENT;

ALTER TABLE USER_ATTRIBUTES 
	ADD CONSTRAINT FK_USR_ATTR_ELMT_FK FOREIGN KEY (METADATA_ID)
	REFERENCES METADATA_ELEMENT(METADATA_ID);


	
ALTER TABLE URI_PATTERN_META_TYPE DROP INDEX UNIQUE_URI_PATTERN_META_TYPE_SPRING_BEAN;

ALTER TABLE URI_PATTERN_META_TYPE ADD CONSTRAINT META_SPRING_BEAN_UNIQUE  UNIQUE (SPRING_BEAN_NAME);



ALTER TABLE URI_PATTERN_META_TYPE DROP INDEX UNIQUE_URI_PATTERN_META_TYPE_NAME;

ALTER TABLE URI_PATTERN_META_TYPE ADD CONSTRAINT URI_META_TYPE_NAME_UNIQUE UNIQUE (METADATA_TYPE_NAME);



ALTER TABLE URI_PATTERN_META DROP FOREIGN KEY URI_PATTERN_META_URI_PATTERN_META_TYPE_FK;

ALTER TABLE URI_PATTERN_META DROP INDEX URI_PATTERN_META_URI_PATTERN_META_TYPE_FK;

ALTER TABLE URI_PATTERN_META
	ADD CONSTRAINT URI_PATTERN_META_META_TYPE_FK
    	FOREIGN KEY (URI_PATTERN_META_TYPE_ID) REFERENCES URI_PATTERN_META_TYPE (URI_PATTERN_META_TYPE_ID),
    ADD INDEX URI_PATTERN_META_META_TYPE_FK (URI_PATTERN_META_TYPE_ID ASC);
    
    

ALTER TABLE IDENTITY_QUESTION DROP FOREIGN KEY FK_IDENTITY_QUESTION_IDENTITY_QUEST_GRP;

ALTER TABLE IDENTITY_QUESTION
	ADD CONSTRAINT ID_QU_IDEN_QUEST_GRP_FK
    	FOREIGN KEY (IDENTITY_QUEST_GRP_ID) REFERENCES IDENTITY_QUEST_GRP(IDENTITY_QUEST_GRP_ID);
    	

ALTER TABLE RELATION_CATEGORY DROP FOREIGN KEY FK_RELATION_CATEGORY_RELATION_SET;

ALTER TABLE RELATION_CATEGORY
	ADD CONSTRAINT REL_CAT_REL_SET_FK
    	FOREIGN KEY (RELATION_SET_ID) REFERENCES RELATION_SET(RELATION_SET_ID);
    	
    	
    	
    	
    	
    	
    	
    	
ALTER TABLE POLICY_ATTRIBUTE DROP FOREIGN KEY FK_POLICY_ATTRIBUTE_POLICY_DEF_PARAM;

ALTER TABLE POLICY_ATTRIBUTE ADD CONSTRAINT POLI_ATTR_POL_DEF_PARAM FOREIGN KEY (DEF_PARAM_ID) REFERENCES POLICY_DEF_PARAM(DEF_PARAM_ID);




ALTER TABLE PAGE_TEMPLATE_XREF DROP FOREIGN KEY METADATA_ELEMENT_PAGE_TEMPLATE_FK;

ALTER TABLE PAGE_TEMPLATE_XREF ADD CONSTRAINT META_PG_TEMPLATE_FK FOREIGN KEY (TEMPLATE_ID) REFERENCES METADATA_ELEMENT_PAGE_TEMPLATE(ID);



ALTER TABLE  METADATA_URI_XREF DROP FOREIGN KEY TEMPLATE_PATTERN_XREF_TEMPLATE_FK;

ALTER TABLE  METADATA_URI_XREF ADD CONSTRAINT TEMPLETE_PATTERN_XREF_FK FOREIGN KEY (TEMPLATE_ID) REFERENCES METADATA_ELEMENT_PAGE_TEMPLATE(ID);



ALTER TABLE METADATA_ELEMENT_PAGE_TEMPLATE DROP INDEX METADATA_ELEMENT_PAGE_TEMPLATE_UNIQUE;

ALTER TABLE METADATA_ELEMENT_PAGE_TEMPLATE ADD CONSTRAINT PAGE_TEMPLATE_UNIQUE UNIQUE (NAME);


ALTER TABLE METADATA_ELEMENT DROP FOREIGN KEY FK_METADATA_ELEMENT_METADATA_TYPE;

ALTER TABLE METADATA_ELEMENT ADD CONSTRAINT FK_MD_ELMT_TYPE_FK FOREIGN KEY (TYPE_ID) REFERENCES METADATA_TYPE(TYPE_ID);



ALTER TABLE MD_ELEMENT_VALID_VALUES DROP FOREIGN KEY METADATA_FIELD_VALID_VALUES_ELEMENT_FK; 

ALTER TABLE MD_ELEMENT_VALID_VALUES ADD CONSTRAINT VALID_VALUES_ELEMENT_FK FOREIGN KEY (METADATA_ELEMENT_ID) REFERENCES METADATA_ELEMENT(METADATA_ID);




ALTER TABLE GRP_ATTRIBUTES DROP FOREIGN KEY FK_GRP_ATTRIBUTES_METADATA_ELEMENT;

ALTER TABLE GRP_ATTRIBUTES ADD CONSTRAINT GRP_ATTR_META_ELMT_FK FOREIGN KEY (METADATA_ID) REFERENCES METADATA_ELEMENT(METADATA_ID);



ALTER TABLE COMPANY_TO_COMPANY_MEMBERSHIP DROP FOREIGN KEY COMPANY_TO_COMPANY_MEMBERSHIP_ibfk_1;

ALTER TABLE COMPANY_TO_COMPANY_MEMBERSHIP DROP FOREIGN KEY COMPANY_TO_COMPANY_MEMBERSHIP_ibfk_2;

ALTER TABLE COMPANY_TO_COMPANY_MEMBERSHIP ADD CONSTRAINT COMPANY_COMPANY_CHILD FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (COMPANY_ID );

ALTER TABLE COMPANY_TO_COMPANY_MEMBERSHIP ADD CONSTRAINT COMPANY_COMPANY_PARENT FOREIGN KEY (MEMBER_COMPANY_ID) REFERENCES COMPANY (COMPANY_ID );

commit;
update LOGIN set PASSWORD='passwd00';
use openiam;

DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('SYNCDETAIL');
DELETE FROM RESOURCE_USER WHERE RESOURCE_ID IN('SYNCDETAIL');
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN('SYNCDETAIL');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('SYNCDETAIL');
DELETE FROM RESOURCE_GROUP WHERE RESOURCE_ID IN('SYNCDETAIL');
DELETE FROM RES WHERE RESOURCE_ID IN('SYNCDETAIL');

UPDATE RES SET URL='/webconsole-idm/provisioning/synchronizationlist.html' WHERE RESOURCE_ID='SYNCUSER';

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('SYNCUSER_MENU_ITEM', 'MENU_ITEM', 'SYNCUSER_MENU_ITEM', 'Synchronization', '/webconsole-idm/provisioning/synchronizationlist.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SYNCUSER_DESC', 'SYNCUSER_MENU_ITEM', 'MENU_DISPLAY_NAME', 'Synchronization');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SYNCUSER_PUB', 'SYNCUSER_MENU_ITEM', 'MENU_IS_PUBLIC', 'true');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('SYNCUSER_NEW', 'MENU_ITEM', 'SYNCUSER_NEW', 'Create Synchronization', '/webconsole-idm/provisioning/synchronization.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SYNCUSER_NEW_DESC', 'SYNCUSER_NEW', 'MENU_DISPLAY_NAME', 'Create Synchronization');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SYNCUSER_NEW_PUB', 'SYNCUSER_NEW', 'MENU_IS_PUBLIC', 'true');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('SYNCUSER_MENU_ITEM', 'SYNCUSER_NEW');

commit;

USE openiam;

ALTER TABLE RECONCILIATION_CONFIG
ADD COLUMN CSV_LINE_SEPARATOR VARCHAR(10) NULL DEFAULT 'comma',
ADD COLUMN CSV_END_OF_LINE VARCHAR(10) NULL DEFAULT 'enter',
ADD COLUMN NOTIFICATION_EMAIL_ADDRESS VARCHAR(120) NULL,
ADD COLUMN TARGET_SYS_MATCH_SCRIPT VARCHAR(120) NULL;


commit;
USE openiam;

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, IS_PUBLIC, IS_SSL) VALUES ('MNGSYS_EDIT_MENU_ROOT', 'MENU_ITEM', NULL, 'MNGSYS_EDIT_MENU_ROOT', 1, 'Y', 'N');

UPDATE RES SET URL='/webconsole/reconciliationEdit.html' WHERE RESOURCE_ID='RESRECONCILE';
UPDATE res_to_res_membership SET RESOURCE_ID='MNGSYS_EDIT_MENU_ROOT' WHERE MEMBER_RESOURCE_ID='RESRECONCILE';
UPDATE res_to_res_membership SET RESOURCE_ID='MNGSYS_EDIT_MENU_ROOT' WHERE MEMBER_RESOURCE_ID='RESPOLICYMAP';

INSERT INTO RES (RESOURCE_ID, NAME, RESOURCE_TYPE_ID, DESCRIPTION, DISPLAY_ORDER, URL, IS_PUBLIC, IS_SSL) VALUES ('MNGSYS_EDIT','MNGSYS_EDIT', 'MENU_ITEM', 'Edit managed system', 1, '/webconsole-idm/provisioning/mngsystem.html', 'Y', 'N');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('MNGSYS_EDIT_MENU_ROOT', 'MNGSYS_EDIT');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('MNGSYS_EDIT_DESC', 'MNGSYS_EDIT', 'MENU_DISPLAY_NAME', 'Edit managed system');


commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS USER_SCHEMA_CHANGE$$

CREATE PROCEDURE USER_SCHEMA_CHANGE()
	BEGIN
		IF EXISTS (SELECT * FROM information_schema.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA = 'openiam' AND TABLE_NAME='USERS' AND CONSTRAINT_NAME = 'FK_USERS_DEPARTMENT') THEN
			ALTER TABLE USERS DROP FOREIGN KEY FK_USERS_DEPARTMENT;
 		END IF;

        IF EXISTS (SELECT * FROM information_schema.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA = 'openiam' AND TABLE_NAME='USERS' AND CONSTRAINT_NAME = 'FK_USERS_DIVISION') THEN
			ALTER TABLE USERS DROP FOREIGN KEY FK_USERS_DIVISION;
 		END IF;



	END$$
DELIMITER ;

call USER_SCHEMA_CHANGE();
DROP PROCEDURE USER_SCHEMA_CHANGE;


update USERS set DIVISION=null where DIVISION='';
update USERS set DEPT_CD=null where DEPT_CD='';


ALTER TABLE USERS
    DROP COLUMN DEL_ADMIN,
    ADD CONSTRAINT FK_USERS_DEPARTMENT FOREIGN KEY (DEPT_CD) REFERENCES COMPANY (COMPANY_ID),
    ADD CONSTRAINT FK_USERS_DIVISION FOREIGN KEY (DIVISION) REFERENCES COMPANY (COMPANY_ID);
commit;
use openiam;

ALTER TABLE APPROVER_ASSOC CHANGE ASSOCIATION_OBJ_ID ASSOCIATION_ENTITY_ID VARCHAR(32) NULL;

ALTER TABLE APPROVER_ASSOC ADD COLUMN APPROVER_ENTITY_TYPE VARCHAR(20) NULL;
ALTER TABLE APPROVER_ASSOC ADD COLUMN APPROVER_ENTITY_ID VARCHAR(32) NULL;

ALTER TABLE APPROVER_ASSOC CHANGE ON_APPROVE_NOTIFY_USER_ID ON_APPROVE_ENTITY_ID VARCHAR(32) NULL;
ALTER TABLE APPROVER_ASSOC CHANGE ON_REJECT_NOTIFY_USER_ID ON_REJECT_ENTITY_ID VARCHAR(32) NULL;

ALTER TABLE APPROVER_ASSOC CHANGE APPROVE_NOTIFY_USER_TYPE ON_APPROVE_ENTITY_TYPE VARCHAR(20) NULL;
ALTER TABLE APPROVER_ASSOC CHANGE REJECT_NOTIFY_USER_TYPE ON_REJECT_ENTITY_TYPE VARCHAR(20) NULL;

ALTER TABLE APPROVER_ASSOC DROP COLUMN ACTN;

ALTER TABLE APPROVER_ASSOC DROP COLUMN APPROVER_ROLE_DOMAIN;

UPDATE APPROVER_ASSOC SET APPROVER_ENTITY_TYPE='USER', APPROVER_ENTITY_ID=APPROVER_USER_ID WHERE APPROVER_USER_ID IS NOT NULL;
UPDATE APPROVER_ASSOC SET APPROVER_ENTITY_TYPE='ROLE', APPROVER_ENTITY_ID=APPROVER_ROLE_ID WHERE APPROVER_ROLE_ID IS NOT NULL;

ALTER TABLE APPROVER_ASSOC DROP COLUMN APPROVER_ROLE_ID;
ALTER TABLE APPROVER_ASSOC DROP COLUMN APPROVER_USER_ID;

ALTER TABLE APPROVER_ASSOC ADD COLUMN APPLY_DELEGATION_FILTER_T char(1) NULL;
UPDATE APPROVER_ASSOC SET APPLY_DELEGATION_FILTER_T='Y' WHERE APPLY_DELEGATION_FILTER=1;
UPDATE APPROVER_ASSOC SET APPLY_DELEGATION_FILTER_T='N' WHERE APPLY_DELEGATION_FILTER=0;
UPDATE APPROVER_ASSOC SET APPLY_DELEGATION_FILTER_T='N' WHERE APPLY_DELEGATION_FILTER IS NULL;
ALTER TABLE APPROVER_ASSOC DROP COLUMN APPLY_DELEGATION_FILTER;
ALTER TABLE APPROVER_ASSOC CHANGE APPLY_DELEGATION_FILTER_T APPLY_DELEGATION_FILTER char(1) NOT NULL DEFAULT 'N';
commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS POLICY_SCHEMA_CHANGE$$

CREATE PROCEDURE POLICY_SCHEMA_CHANGE()
	BEGIN
		IF EXISTS (SELECT * FROM information_schema.columns WHERE TABLE_SCHEMA = 'openiam' AND TABLE_NAME='POLICY_ATTRIBUTE' AND COLUMN_NAME = 'REQUIRED') THEN
			ALTER TABLE POLICY_ATTRIBUTE DROP COLUMN REQUIRED;
 		END IF;
	END$$
DELIMITER ;

call POLICY_SCHEMA_CHANGE();
DROP PROCEDURE POLICY_SCHEMA_CHANGE;

ALTER TABLE POLICY_ATTRIBUTE ADD COLUMN REQUIRED CHAR(1) DEFAULT 'Y';
UPDATE POLICY_ATTRIBUTE SET REQUIRED='Y';
ALTER TABLE POLICY_ATTRIBUTE MODIFY REQUIRED CHAR(1) NOT NULL DEFAULT 'Y';

commit;
USE openiam;

DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('AUTHENTICATION_POLICY', 'NEW_AUTHENTICATION_POLICY', 'PASSWORD_POLICY', 'NEW_PASSWORD_POLICY', 'ASSOC_POLICY', 'UPLOAD_CUST_PSWD_POLICY', 'POLICY_ATTR_ROOT', 'POLICY_ATTR_EDIT_ROOT', 'PASSWORD_POLICY_EDIT', 'EDIT_POLICY_ATTR_SRCH_BCK', 'NEW_EDIT_POLICY_ATTR', 'NEW_POLICY_ATTR', 'ATTRIBUTE_POLICY');

DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN ('AUTHENTICATION_POLICY', 'NEW_AUTHENTICATION_POLICY', 'PASSWORD_POLICY', 'NEW_PASSWORD_POLICY', 'PASSWORD_POLICY_ROOT_MENU', 'AUTHENTICATION_POLICY_ROOT_MENU', 'ASSOC_POLICY', 'UPLOAD_CUST_PSWD_POLICY', 'POLICY_ATTR_ROOT', 'POLICY_ATTR_EDIT_ROOT', 'PASSWORD_POLICY_EDIT', 'EDIT_POLICY_ATTR_SRCH_BCK', 'NEW_EDIT_POLICY_ATTR', 'NEW_POLICY_ATTR', 'ATTRIBUTE_POLICY');

DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN ('AUTHENTICATION_POLICY', 'NEW_AUTHENTICATION_POLICY', 'PASSWORD_POLICY', 'NEW_PASSWORD_POLICY', 'PASSWORD_POLICY_ROOT_MENU', 'AUTHENTICATION_POLICY_ROOT_MENU', 'ASSOC_POLICY', 'UPLOAD_CUST_PSWD_POLICY', 'POLICY_ATTR_ROOT', 'POLICY_ATTR_EDIT_ROOT', 'PASSWORD_POLICY_EDIT', 'EDIT_POLICY_ATTR_SRCH_BCK', 'NEW_EDIT_POLICY_ATTR', 'NEW_POLICY_ATTR', 'ATTRIBUTE_POLICY');

DELETE FROM RES WHERE RESOURCE_ID IN('AUTHENTICATION_POLICY', 'NEW_AUTHENTICATION_POLICY', 'PASSWORD_POLICY', 'NEW_PASSWORD_POLICY', 'PASSWORD_POLICY_ROOT_MENU', 'AUTHENTICATION_POLICY_ROOT_MENU', 'ASSOC_POLICY', 'UPLOAD_CUST_PSWD_POLICY', 'POLICY_ATTR_ROOT', 'POLICY_ATTR_EDIT_ROOT', 'PASSWORD_POLICY_EDIT', 'EDIT_POLICY_ATTR_SRCH_BCK', 'NEW_EDIT_POLICY_ATTR', 'NEW_POLICY_ATTR', 'ATTRIBUTE_POLICY');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL, IS_PUBLIC, IS_SSL) VALUES ('PASSWORD_POLICY', 'MENU_ITEM', 'Password policy', 'PASSWORD_POLICY', 1, '/webconsole/passwordPolicy.html', 'Y', 'N');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('POLICY_MENU_PUB', 'PASSWORD_POLICY', 'MENU_IS_PUBLIC', 'true');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('POLICY_MENU_DESC', 'PASSWORD_POLICY', 'MENU_DISPLAY_NAME', 'Password Policy');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, IS_PUBLIC, IS_SSL) VALUES ('PASSWORD_POLICY_ROOT_MENU', 'MENU_ITEM', 'Root for Password policy Context Menu', 'PASSWORD_POLICY_ROOT_MENU', 1, 'Y', 'N');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('POLICY_ROOT_MENU_PUB', 'PASSWORD_POLICY_ROOT_MENU', 'MENU_IS_PUBLIC', 'true');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('POLICY_ROOT_MENU_DESC', 'PASSWORD_POLICY_ROOT_MENU', 'MENU_DISPLAY_NAME', 'Password Policy Root Menu');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL, DISPLAY_ORDER, IS_PUBLIC, IS_SSL) VALUES('NEW_PASSWORD_POLICY', 'MENU_ITEM', 'NEW_PASSWORD_POLICY', 'Create New Password Policy ','/webconsole/editPolicy.html', 1, 'Y', 'N');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('NEW_PASSWORD_POLICY_PUB', 'NEW_PASSWORD_POLICY', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('NEW_PASSWORD_POLICY_DESC', 'NEW_PASSWORD_POLICY', 'MENU_DISPLAY_NAME', 'Create New Pswd Policy');



INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('SECURITY_POLICY', 'PASSWORD_POLICY');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('PASSWORD_POLICY_ROOT_MENU', 'NEW_PASSWORD_POLICY');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL, IS_PUBLIC, IS_SSL) VALUES ('AUTHENTICATION_POLICY', 'MENU_ITEM', 'Authentication policy', 'AUTHENTICATION_POLICY', 2, '/webconsole/authenticationPolicy.html', 'Y', 'N');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AUTHENTICATION_POLICY_MENU_PUB', 'AUTHENTICATION_POLICY', 'MENU_IS_PUBLIC', 'true');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AUTHENTICATION_POLICY_MENU_DESC', 'AUTHENTICATION_POLICY', 'MENU_DISPLAY_NAME', 'Authenticaton Policy');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, IS_PUBLIC, IS_SSL) VALUES ('AUTHENTICATION_POLICY_ROOT_MENU', 'MENU_ITEM', 'Root for Authentication policy Context Menu', 'AUTHENTICATION_POLICY_ROOT_MENU', 1, 'Y', 'N');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AUTH_POLICY_ROOT_MENU_PUB', 'AUTHENTICATION_POLICY_ROOT_MENU', 'MENU_IS_PUBLIC', 'true');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AUTH_POLICY_ROOT_MENU_DESC', 'AUTHENTICATION_POLICY_ROOT_MENU', 'MENU_DISPLAY_NAME', 'Authentication Policy Root Menu');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL, DISPLAY_ORDER, IS_PUBLIC, IS_SSL) VALUES('NEW_AUTHENTICATION_POLICY', 'MENU_ITEM', 'NEW_AUTHENTICATION_POLICY', 'Create New Authentication Policy ','/webconsole/editAuthenticationPolicy.html' , 1, 'Y', 'N');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('NEW_AUTHENTICATION_POLICY_PUB', 'NEW_AUTHENTICATION_POLICY', 'MENU_IS_PUBLIC', 'true');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('NEW_AUTHENTICATION_POLICY_DESC', 'NEW_AUTHENTICATION_POLICY', 'MENU_DISPLAY_NAME', 'Create New Auth Policy');

INSERT INTO  res_to_res_membership(RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('SECURITY_POLICY', 'AUTHENTICATION_POLICY');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('AUTHENTICATION_POLICY_ROOT_MENU', 'NEW_AUTHENTICATION_POLICY');

/* for assoc password*/

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL, DISPLAY_ORDER, IS_PUBLIC, IS_SSL) VALUES('ASSOC_POLICY', 'MENU_ITEM', 'ASSOC_POLICY', 'Associate Policy','/webconsole/assocPasswordPolicy.html' , 1, 'Y', 'N');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ASSOC_POLICY_PUB', 'ASSOC_POLICY', 'MENU_IS_PUBLIC', 'true');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ASSOC_POLICY_DESC', 'ASSOC_POLICY', 'MENU_DISPLAY_NAME', 'Associate Policy');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, IS_PUBLIC, IS_SSL) VALUES ('PASSWORD_POLICY_EDIT', 'MENU_ITEM', 'Root for edit policy Context Menu', 'PASSWORD_POLICY_EDIT', 1, 'Y', 'N');

INSERT INTO RESOURCE_PROP  (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('PASSWORD_POLICY_EDIT_PUB', 'PASSWORD_POLICY_EDIT', 'MENU_IS_PUBLIC', 'true');

INSERT INTO RESOURCE_PROP  (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('PASSWORD_POLICY_EDIT_DESC', 'PASSWORD_POLICY_EDIT', 'MENU_DISPLAY_NAME', 'Associate Policy Root Menu');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('PASSWORD_POLICY_EDIT', 'ASSOC_POLICY');

/*Upload Custom Password Policy Menu*/

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL, DISPLAY_ORDER, IS_PUBLIC, IS_SSL) VALUES('UPLOAD_CUST_PSWD_POLICY', 'MENU_ITEM', 'UPLOAD_CUST_PSWD_POLICY', 'Upload Custom Password Policy','/webconsole/uploadCustomPswdPolicy.html',2, 'Y', 'N');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('UPLOAD_CUST_PSWD_POLICY_PUB', 'UPLOAD_CUST_PSWD_POLICY', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('UPLOAD_CUST_PSWD_POLICY_DESC', 'UPLOAD_CUST_PSWD_POLICY', 'MENU_DISPLAY_NAME', 'Custom Pswd Policy');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('PASSWORD_POLICY_ROOT_MENU', 'UPLOAD_CUST_PSWD_POLICY');



INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL, IS_PUBLIC, IS_SSL) VALUES ('ATTRIBUTE_POLICY', 'MENU_ITEM', 'Attribute policy', 'ATTRIBUTE_POLICY', 2, '/webconsole/attributePolicy.html', 'Y', 'N');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ATTRIBUTE_POLICY_PUB', 'ATTRIBUTE_POLICY', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ATTRIBUTE_POLICY_DESC', 'ATTRIBUTE_POLICY', 'MENU_DISPLAY_NAME', 'Attribute Policy');
INSERT INTO  res_to_res_membership(RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('SECURITY_POLICY', 'ATTRIBUTE_POLICY');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, IS_PUBLIC, IS_SSL) VALUES ('POLICY_ATTR_ROOT', 'MENU_ITEM', 'Root for Attribute policy Context Menu', 'POLICY_ATTR_ROOT', 1, 'Y', 'N');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('POLICY_ATTR_ROOT_PUB', 'POLICY_ATTR_ROOT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('POLICY_ATTR_ROOT_DESC', 'POLICY_ATTR_ROOT', 'MENU_DISPLAY_NAME', 'Attribute Policy Root Menu');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL, IS_PUBLIC, IS_SSL) VALUES ('NEW_POLICY_ATTR', 'MENU_ITEM', 'New Attribute policy', 'NEW_POLICY_ATTR', 2, '/webconsole/editAttributePolicy.html', 'Y', 'N');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('NEW_POLICY_ATTR_PUB', 'NEW_POLICY_ATTR', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('NEW_POLICY_ATTR_DESC', 'NEW_POLICY_ATTR', 'MENU_DISPLAY_NAME', 'New Attribute Policy');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('POLICY_ATTR_ROOT', 'NEW_POLICY_ATTR');



INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, IS_PUBLIC, IS_SSL) VALUES ('POLICY_ATTR_EDIT_ROOT', 'MENU_ITEM', 'Root for Edit Attribute policy Context Menu', 'POLICY_ATTR_EDIT_ROOT', 1, 'Y', 'N');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('POLICY_ATTR_EDIT_ROOT_PUB', 'POLICY_ATTR_EDIT_ROOT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('POLICY_ATTR_EDIT_ROOTT_DESC', 'POLICY_ATTR_EDIT_ROOT', 'MENU_DISPLAY_NAME', 'Attribute Policy Edit Root Menu');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL, IS_PUBLIC, IS_SSL) VALUES ('EDIT_POLICY_ATTR_SRCH_BCK', 'MENU_ITEM', 'Back to Search', 'EDIT_POLICY_ATTR_SRCH_BCK', 2, '/webconsole/attributePolicy.html', 'Y', 'N');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('EDIT_POLICY_ATTR_SRCH_BCK_PUB', 'EDIT_POLICY_ATTR_SRCH_BCK', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('EDIT_POLICY_ATTR_SRCH_BCK_DESC', 'EDIT_POLICY_ATTR_SRCH_BCK', 'MENU_DISPLAY_NAME', 'Back to Search');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('POLICY_ATTR_EDIT_ROOT', 'EDIT_POLICY_ATTR_SRCH_BCK');



commit;
USE openiam;

CREATE  TABLE DEF_RECON_ATTR_MAP (
  DEF_ATTR_MAP_ID VARCHAR(32) NOT NULL ,
  DEF_ATTR_MAP_NAME VARCHAR(100) NOT NULL ,
  PRIMARY KEY (DEF_ATTR_MAP_ID));

CREATE  TABLE RECON_RES_ATTR_MAP (
  RECON_RES_ATTR_MAP_ID INT NOT NULL AUTO_INCREMENT,
  ATTR_POLICY_ID VARCHAR(32) NULL ,
  DEF_RECON_ATTR_MAP_ID VARCHAR(32) NULL ,
  ATTR_MAP_ID VARCHAR(32) NOT NULL ,
  PRIMARY KEY (RECON_RES_ATTR_MAP_ID));

INSERT INTO RECON_RES_ATTR_MAP (ATTR_MAP_ID, ATTR_POLICY_ID) SELECT t1.ATTRIBUTE_MAP_ID, t1.ATTRIBUTE_POLICY_ID FROM ATTRIBUTE_MAP AS t1;
INSERT INTO DEF_RECON_ATTR_MAP (DEF_ATTR_MAP_ID, DEF_ATTR_MAP_NAME) VALUES ('Login.login','Principal'),('User.title','Functional Title');

UPDATE ATTRIBUTE_MAP am,RECON_RES_ATTR_MAP rram SET am.ATTRIBUTE_POLICY_ID=rram.RECON_RES_ATTR_MAP_ID
WHERE am.ATTRIBUTE_MAP_ID=rram.ATTR_MAP_ID;

ALTER TABLE RECON_RES_ATTR_MAP CHANGE COLUMN RECON_RES_ATTR_MAP_ID RECON_RES_ATTR_MAP_ID VARCHAR(32) NOT NULL;
ALTER TABLE RECON_RES_ATTR_MAP DROP COLUMN ATTR_MAP_ID ;




commit;
USE openiam;

UPDATE POLICY_DEF_PARAM SET PARAM_GROUP='PSWD_CHANGE_RULE' WHERE DEF_PARAM_ID='111';

UPDATE POLICY_DEF_PARAM SET PARAM_GROUP='PSWD_CHANGE_RULE' WHERE DEF_PARAM_ID='129';

UPDATE POLICY_DEF_PARAM SET PARAM_GROUP='PSWD_CHANGE_RULE' WHERE DEF_PARAM_ID='133';

UPDATE POLICY_DEF_PARAM SET PARAM_GROUP='PSWD_CHANGE_RULE' WHERE DEF_PARAM_ID='134';

UPDATE POLICY_DEF_PARAM SET PARAM_GROUP='PSWD_CHANGE_RULE' WHERE DEF_PARAM_ID='141';

UPDATE POLICY_DEF_PARAM SET PARAM_GROUP='PSWD_CHANGE_RULE' WHERE DEF_PARAM_ID='142';

UPDATE POLICY_DEF_PARAM SET PARAM_GROUP='PSWD_CHANGE_RULE' WHERE DEF_PARAM_ID='139';

UPDATE POLICY_DEF_PARAM SET PARAM_GROUP='FORGET_PSWD' WHERE DEF_PARAM_ID='130';

UPDATE POLICY_DEF_PARAM SET PARAM_GROUP='FORGET_PSWD' WHERE DEF_PARAM_ID='131';

UPDATE POLICY_DEF_PARAM SET PARAM_GROUP='FORGET_PSWD' WHERE DEF_PARAM_ID='132';

UPDATE POLICY_DEF_PARAM SET PARAM_GROUP='FORGET_PSWD' WHERE DEF_PARAM_ID='171';

UPDATE POLICY_DEF_PARAM SET PARAM_GROUP='PSWD_COMPOSITION' WHERE DEF_PARAM_ID='135';

UPDATE POLICY_DEF_PARAM SET PARAM_GROUP='PSWD_COMPOSITION' WHERE DEF_PARAM_ID='136';

UPDATE POLICY_DEF_PARAM SET PARAM_GROUP='PSWD_COMPOSITION' WHERE DEF_PARAM_ID='120';

DELETE FROM POLICY_DEF_PARAM WHERE DEF_PARAM_ID IN ('180','181');

INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID,POLICY_DEF_ID,NAME,DESCRIPTION,OPERATION,VALUE1,VALUE2,REPEATS,PARAM_GROUP,HANDLER_LANGUAGE,POLICY_PARAM_HANDLER) VALUES ('180','100','MIN_WORDS_PASSPHRASE','Minimum number of words in the phrase',NULL,'',NULL,NULL,'PSWD_COMPOSITION',NULL,'org.openiam.idm.srvc.pswd.rule.PassphraseMinWordsRule');
INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID,POLICY_DEF_ID,NAME,DESCRIPTION,OPERATION,VALUE1,VALUE2,REPEATS,PARAM_GROUP,HANDLER_LANGUAGE,POLICY_PARAM_HANDLER) VALUES ('181','100','REPEAT_SAME_WORD_PASSPHRASE','Repetition of the same word in the phrase',NULL,NULL,NULL,NULL,'PSWD_COMPOSITION',NULL,'org.openiam.idm.srvc.pswd.rule.PassphraseRepeatWordRule');

DELETE FROM POLICY_ATTRIBUTE WHERE DEF_PARAM_ID IN ('123','124','125','126','128','120','135','136');

DELETE FROM POLICY_DEF_PARAM WHERE DEF_PARAM_ID='123';

DELETE FROM POLICY_DEF_PARAM WHERE DEF_PARAM_ID='124';

DELETE FROM POLICY_DEF_PARAM WHERE DEF_PARAM_ID='125';

DELETE FROM POLICY_DEF_PARAM WHERE DEF_PARAM_ID='126';

DELETE FROM POLICY_DEF_PARAM WHERE DEF_PARAM_ID='128';

DELETE FROM POLICY_DEF_PARAM WHERE DEF_PARAM_ID='120';

DELETE FROM POLICY_DEF_PARAM WHERE DEF_PARAM_ID='135';

DELETE FROM POLICY_DEF_PARAM WHERE DEF_PARAM_ID='136';
commit;
use openiam;

DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('RES_APROVER_ASSOC', 'GRP_APROVER_ASSOC', 'ROLE_APROVER_ASSOC');
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('RES_APROVER_ASSOC', 'GRP_APROVER_ASSOC', 'ROLE_APROVER_ASSOC');
DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN('RES_APROVER_ASSOC', 'GRP_APROVER_ASSOC', 'ROLE_APROVER_ASSOC');
DELETE FROM RES WHERE RESOURCE_ID IN('RES_APROVER_ASSOC', 'GRP_APROVER_ASSOC', 'ROLE_APROVER_ASSOC');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('RES_APROVER_ASSOC', 'MENU_ITEM', 'RES_APROVER_ASSOC', 'Approver Associations', '/webconsole-idm/provisioning/resourceApproverAssociations.html');
INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('GRP_APROVER_ASSOC', 'MENU_ITEM', 'GRP_APROVER_ASSOC', 'Approver Associations', '/webconsole-idm/provisioning/groupApproverAssociations.html');
INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('ROLE_APROVER_ASSOC', 'MENU_ITEM', 'ROLE_APROVER_ASSOC', 'Approver Associations', '/webconsole-idm/provisioning/roleApproverAssociations.html');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('RES_APROVER_ASSOC_DN', 'RES_APROVER_ASSOC', 'MENU_DISPLAY_NAME', 'Approver Associations');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('RES_APROVER_ASSOC_PUB', 'RES_APROVER_ASSOC', 'MENU_IS_PUBLIC', 'true');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('GRP_APROVER_ASSOC_DN', 'GRP_APROVER_ASSOC', 'MENU_DISPLAY_NAME', 'Approver Associations');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('GRP_APROVER_ASSOC_PUB', 'GRP_APROVER_ASSOC', 'MENU_IS_PUBLIC', 'true');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ROLE_APROVER_ASSOC_DN', 'ROLE_APROVER_ASSOC', 'MENU_DISPLAY_NAME', 'Approver Associations');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ROLE_APROVER_ASSOC_PUB', 'ROLE_APROVER_ASSOC', 'MENU_IS_PUBLIC', 'true');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('RESOURCE_EDIT_PAGE_ROOT', 'RES_APROVER_ASSOC');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('GROUP_EDIT_MENU', 'GRP_APROVER_ASSOC');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('ROLE_EDIT_MENU', 'ROLE_APROVER_ASSOC');

UPDATE APPROVER_ASSOC SET ASSOCIATION_ENTITY_ID='254', ASSOCIATION_TYPE='RESOURCE' WHERE REQUEST_TYPE='254';
commit;
USE openiam;

UPDATE RES SET URL='/webconsole-idm/provisioning/syncloglist.html' WHERE RESOURCE_ID='SYNCLOG';

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('SYNCLOG_MENU_ITEM', 'MENU_ITEM', 'SYNCLOG_MENU_ITEM', 'LOG Viewer', '/webconsole-idm/provisioning/syncloglist.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SYNCLOG_PUB', 'SYNCLOG_MENU_ITEM', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SYNCLOG_DESC', 'SYNCLOG_MENU_ITEM', 'MENU_DISPLAY_NAME', 'Synchronization Transaction Log Viewer');
commit;
use openiam;

CREATE  TABLE MANAGED_SYS_RULE (
  MANAGED_SYS_RULE_ID VARCHAR(32) NOT NULL ,
  MANAGED_SYS_ID VARCHAR(32) NOT NULL ,
  MANAGED_SYS_RULE_NAME VARCHAR(45) NULL ,
  MANAGED_SYS_RULE_VALUE VARCHAR(45) NULL ,
  PRIMARY KEY (MANAGED_SYS_RULE_ID));

commit;
use openiam;

DELETE FROM RESOURCE_PROP WHERE RESOURCE_PROP_ID = 'MNGSYSRULES_DESC';
DELETE FROM res_to_res_membership WHERE RESOURCE_ID = 'MNGSYS_EDIT_MENU_ROOT' AND MEMBER_RESOURCE_ID = 'MNGSYSRULES';
DELETE FROM RES WHERE RESOURCE_ID = 'MNGSYSRULES';

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL, IS_PUBLIC, IS_SSL) VALUES ('MNGSYSRULES', 'MENU_ITEM', 'Managed system roles', 'MNGSYSRULES', 3, '/webconsole-idm/provisioning/mngsystemrules.html','Y','N');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('MNGSYS_EDIT_MENU_ROOT', 'MNGSYSRULES');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('MNGSYSRULES_DESC', 'MNGSYSRULES', 'MENU_DISPLAY_NAME', 'Manages system rules');

commit;
use openiam;

UPDATE RES SET URL='/selfservice/users.html' WHERE RESOURCE_ID='CREATEREQ';
UPDATE RES SET URL='/selfservice/myTasks.html' WHERE RESOURCE_ID='REQINBOX';
UPDATE RES SET URL='/selfservice/newUser.html' WHERE RESOURCE_ID='NEWUSER';

DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN('CREATEREQ');
INSERT INTO RESOURCE_ROLE (RESOURCE_ID, ROLE_ID) VALUES('CREATEREQ', '1');

DELIMITER $$

DROP PROCEDURE IF EXISTS showBetaMenus$$


CREATE PROCEDURE showBetaMenus()
	BEGIN
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='REQINBOX' AND NAME='IS_VISIBLE') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='true' WHERE  RESOURCE_ID='REQINBOX' AND NAME='IS_VISIBLE';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('REQINBOX_VISIBLE', 'REQINBOX', 'IS_VISIBLE', 'true');
		END IF;
		
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='NEWUSER' AND NAME='IS_VISIBLE') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='true' WHERE  RESOURCE_ID='NEWUSER' AND NAME='IS_VISIBLE';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('NEWUSER_VISIBLE', 'NEWUSER', 'IS_VISIBLE', 'true');
		END IF;
		
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='CREATEREQ' AND NAME='IS_VISIBLE') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='true' WHERE  RESOURCE_ID='CREATEREQ' AND NAME='IS_VISIBLE';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('CREATEREQ_VISIBLE', 'CREATEREQ', 'IS_VISIBLE', 'true');
		END IF;
	END$$
	
DELIMITER ;

call showBetaMenus();

DROP PROCEDURE showBetaMenus;

DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('SELFSERV_USER_EDIT_ROOT', 'SELFSERV_USER_EDIT', 'SELFSERV_USER_MEMSHP');
DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN('SELFSERV_USER_EDIT_ROOT', 'SELFSERV_USER_EDIT', 'SELFSERV_USER_MEMSHP');
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('SELFSERV_USER_EDIT_ROOT', 'SELFSERV_USER_EDIT', 'SELFSERV_USER_MEMSHP');
DELETE FROM RES WHERE RESOURCE_ID IN('SELFSERV_USER_EDIT_ROOT', 'SELFSERV_USER_EDIT', 'SELFSERV_USER_MEMSHP');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('SELFSERV_USER_EDIT_ROOT', 'MENU_ITEM', 'SELFSERV_USER_EDIT_ROOT', 'SelfService Edit User Root');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SS_USR_EDIT_RT_PUB', 'SELFSERV_USER_EDIT_ROOT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SS_USR_EDIT_RT_DESC', 'SELFSERV_USER_EDIT_ROOT', 'MENU_DISPLAY_NAME', 'SelfService Edit User Root');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('SELFSERV_USER_EDIT', 'MENU_ITEM', 'SELFSERV_USER_EDIT', 'Edit User','/selfservice/editUser.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERV_USER_EDIT_PUB', 'SELFSERV_USER_EDIT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERV_USER_EDIT_DESC', 'SELFSERV_USER_EDIT', 'MENU_DISPLAY_NAME', 'Edit User');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('SELFSERV_USER_MEMSHP', 'MENU_ITEM', 'SELFSERV_USER_MEMSHP', 'User Entitlements','/selfservice/userEntitlements.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERV_USER_MEMSHP_PUB', 'SELFSERV_USER_MEMSHP', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERV_USER_MEMSHP_DES', 'SELFSERV_USER_MEMSHP', 'MENU_DISPLAY_NAME', 'User Entitlements');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('SELFSERV_USER_EDIT_ROOT', 'SELFSERV_USER_EDIT');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('SELFSERV_USER_EDIT_ROOT', 'SELFSERV_USER_MEMSHP');

commit;
use openiam;
ALTER TABLE USER_ATTRIBUTES ADD COLUMN VALUE_AS_BYTE_ARRAY BLOB NULL;
commit;
use openiam;

ALTER TABLE URI_PATTERN_META_VALUE ADD GROOVY_SCRIPT VARCHAR(200) NULL;

ALTER TABLE CONTENT_PROVIDER ADD MANAGED_SYS_ID VARCHAR(32) NULL;

UPDATE CONTENT_PROVIDER SET MANAGED_SYS_ID='0';

ALTER TABLE CONTENT_PROVIDER MODIFY COLUMN MANAGED_SYS_ID VARCHAR(32) NOT NULL;

ALTER TABLE CONTENT_PROVIDER ADD CONSTRAINT FK_CP_MANAGED_SYS FOREIGN KEY(MANAGED_SYS_ID) REFERENCES MANAGED_SYS(MANAGED_SYS_ID);
commit;
use openiam;

INSERT INTO AUTH_RESOURCE_AM_ATTRIBUTE (AM_ATTRIBUTE_ID, ATTRIBUTE_NAME) VALUES('Login.password', 'Password');
commit;
use openiam;

DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('ABOUT', 'ABOUT_ROOT_MENU');

DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN('ABOUT', 'ABOUT_ROOT_MENU');

DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('ABOUT', 'ABOUT_ROOT_MENU');

DELETE FROM RES WHERE RESOURCE_ID IN('ABOUT','ABOUT_ROOT_MENU');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL, DISPLAY_ORDER, IS_PUBLIC) VALUES('ABOUT', 'MENU_ITEM', 'ABOUT', 'About OpenIAM', '/webconsole/about.html', 3, 'Y');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, IS_PUBLIC) VALUES('ABOUT_ROOT_MENU', 'MENU_ITEM', 'ABOUT_ROOT_MENU', 'About OpenIAM', 'Y');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ABOUT_PUB', 'ABOUT', 'MENU_IS_PUBLIC', 'true');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ABOUT_DESC', 'ABOUT', 'MENU_DISPLAY_NAME', 'About OpenIAM');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ABOUT_ROOT_MENU_PUB', 'ABOUT_ROOT_MENU', 'MENU_IS_PUBLIC', 'true');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ABOUT_ROOT_MENU_DESC', 'ABOUT_ROOT_MENU', 'MENU_DISPLAY_NAME', 'About OpenIAM');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ADMIN', 'ABOUT');
commit;
use openiam;

DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('CHALLENGE_RESPONSE_QUESTION', 'CHALLENGE_RESPONSE_QUESTION_ROOT',  'CHALLENGE_RESPONSE_QUESTION_NEW');

DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('CHALLENGE_RESPONSE_QUESTION', 'CHALLENGE_RESPONSE_QUESTION_ROOT',  'CHALLENGE_RESPONSE_QUESTION_NEW');

DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN (
'CHALLENGE_RESPONSE_QUESTION', 'CHALLENGE_RESPONSE_QUESTION_ROOT',  'CHALLENGE_RESPONSE_QUESTION_NEW');

DELETE FROM RES WHERE RESOURCE_ID IN('CHALLENGE_RESPONSE_QUESTION', 'CHALLENGE_RESPONSE_QUESTION_ROOT',  'CHALLENGE_RESPONSE_QUESTION_NEW');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL, DISPLAY_ORDER, IS_PUBLIC, IS_SSL) VALUES('CHALLENGE_RESPONSE_QUESTION', 'MENU_ITEM', 'CHALLENGE_RESPONSE_QUESTION', 'Challenge Response Question', '/webconsole/challengeResponseQuestion.html', 3, 'Y', 'N');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CHALLENGE_RESPONSE_QUESTION_PUB', 'CHALLENGE_RESPONSE_QUESTION', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CHALLENGE_RESPONSE_QUESTION_DESC', 'CHALLENGE_RESPONSE_QUESTION', 'MENU_DISPLAY_NAME', 'Challenge Response Question');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ADMIN', 'CHALLENGE_RESPONSE_QUESTION');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('CHALLENGE_RESPONSE_QUESTION_ROOT', 'MENU_ITEM', 'CHALLENGE_RESPONSE_QUESTION_ROOT', 'Challenge Response Question Root Menu');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CHALLENGE_RESP_QUESTION_ROOT_PUB', 'CHALLENGE_RESPONSE_QUESTION_ROOT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CHALLENGE_RESP_QUEST_ROOT_DESC', 'CHALLENGE_RESPONSE_QUESTION_ROOT', 'MENU_DISPLAY_NAME', 'Challenge Response Question Root Menu');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('CHALLENGE_RESPONSE_QUESTION_NEW', 'MENU_ITEM', 'CHALLENGE_RESPONSE_QUESTION_NEW', 'New Question', '/webconsole/editChallengeResponseQuestion.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CHALLENGE_RESP_QUESTION_NEW_PUB', 'CHALLENGE_RESPONSE_QUESTION_NEW', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CHALLENGE_RESP_QUESTION_NEW_DSC', 'CHALLENGE_RESPONSE_QUESTION_NEW', 'MENU_DISPLAY_NAME', 'Create New Question');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('CHALLENGE_RESPONSE_QUESTION_ROOT', 'CHALLENGE_RESPONSE_QUESTION_NEW');











commit;
use openiam;

UPDATE RES SET URL='/selfservice/newUserWithApprover.html' WHERE RESOURCE_ID='NEWUSER';
commit;
use openiam;

ALTER TABLE ATTRIBUTE_MAP ADD SYNCH_CONFIG_ID VARCHAR(32) NULL;
ALTER TABLE ATTRIBUTE_MAP MODIFY MANAGED_SYS_ID VARCHAR(32) NULL DEFAULT NULL;
ALTER TABLE SYNCH_CONFIG ADD USE_POLICY_MAP CHAR(1) DEFAULT 'N';



commit;
use openiam;


DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN ('SYNCUSER_EDIT','SYNCUSER_EDIT_MENU_ROOT','SYNCUSER_POLICYMAP');
DELETE FROM RESOURCE_USER WHERE RESOURCE_ID IN ('SYNCUSER_EDIT','SYNCUSER_EDIT_MENU_ROOT','SYNCUSER_POLICYMAP');
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN ('SYNCUSER_EDIT','SYNCUSER_EDIT_MENU_ROOT','SYNCUSER_POLICYMAP');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN ('SYNCUSER_EDIT','SYNCUSER_EDIT_MENU_ROOT','SYNCUSER_POLICYMAP');
DELETE FROM RESOURCE_GROUP WHERE RESOURCE_ID IN ('SYNCUSER_EDIT','SYNCUSER_EDIT_MENU_ROOT','SYNCUSER_POLICYMAP');
DELETE FROM RES WHERE RESOURCE_ID IN ('SYNCUSER_EDIT','SYNCUSER_EDIT_MENU_ROOT','SYNCUSER_POLICYMAP');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, URL) VALUES ('SYNCUSER_EDIT', 'MENU_ITEM', 'Edit sync', 'SYNCUSER_EDIT', '/webconsole-idm/provisioning/synchronization.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SYNCUSER_EDIT_PUB', 'SYNCUSER_EDIT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SYNCUSER_EDIT_DESC', 'SYNCUSER_EDIT', 'MENU_DISPLAY_NAME', 'Edit Synchronization');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, URL) VALUES ('SYNCUSER_POLICYMAP', 'MENU_ITEM', 'Policy map', 'SYNCUSER_POLICYMAP', '/webconsole/synchPolicyMap.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SYNCUSER_POLICYMAP_PUB', 'SYNCUSER_POLICYMAP', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SYNCUSER_POLICYMAP_DESC', 'SYNCUSER_POLICYMAP', 'MENU_DISPLAY_NAME', 'Policy Map');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME) VALUES ('SYNCUSER_EDIT_MENU_ROOT', 'MENU_ITEM', 'Edit sync', 'SYNCUSER_EDIT_MENU_ROOT');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('SYNCUSER_EDIT_MENU_ROOT', 'SYNCUSER_EDIT');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('SYNCUSER_EDIT_MENU_ROOT', 'SYNCUSER_POLICYMAP');

commit;
use openiam;

DELETE FROM RES WHERE RESOURCE_ID = 'MNGSYS_EDIT_NO_RES_MENU_ROOT';

INSERT INTO RES 
(RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DISPLAY_ORDER, IS_PUBLIC, IS_SSL) VALUES 
('MNGSYS_EDIT_NO_RES_MENU_ROOT', 'MENU_ITEM','MNGSYS_EDIT_NO_RES_MENU_ROOT', 1,  'Y', 'N');

commit;
use openiam;

DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('WEB_REPORT', 'WEB_REPORT_ROOT',  'WEB_REPORT_NEW');

DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('WEB_REPORT', 'WEB_REPORT_ROOT',  'WEB_REPORT_NEW');

DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN (
'WEB_REPORT', 'WEB_REPORT_ROOT',  'WEB_REPORT_NEW');

DELETE FROM RES WHERE RESOURCE_ID IN('WEB_REPORT', 'WEB_REPORT_ROOT',  'WEB_REPORT_NEW');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL, DISPLAY_ORDER, IS_PUBLIC, IS_SSL) VALUES('WEB_REPORT', 'MENU_ITEM', 'WEB_REPORT', 'Report', '/webconsole/report.html', 6, 'Y', 'N');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('WEB_REPORT_PUB', 'WEB_REPORT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('WEB_REPORT_DESC', 'WEB_REPORT', 'MENU_DISPLAY_NAME', 'Report');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('IDM', 'WEB_REPORT');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('WEB_REPORT_ROOT', 'MENU_ITEM', 'WEB_REPORT_ROOT', 'Report Root Menu');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('WEB_REPORT_ROOT_PUB', 'WEB_REPORT_ROOT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('WEB_REPORT_ROOT_DESC', 'WEB_REPORT_ROOT', 'MENU_DISPLAY_NAME', 'Report Root Menu');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('WEB_REPORT_NEW', 'MENU_ITEM', 'WEB_REPORT_NEW', 'New Report', '/webconsole/editReport.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('WEB_REPORT_NEW_PUB', 'WEB_REPORT_NEW', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('WEB_REPORT_NEW_DSC', 'WEB_REPORT_NEW', 'MENU_DISPLAY_NAME', 'Create New Report');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('WEB_REPORT_ROOT', 'WEB_REPORT_NEW');











commit;
use openiam;

DELETE FROM res_to_res_membership WHERE RESOURCE_ID='RESOURCE_EDIT_PAGE_ROOT' AND MEMBER_RESOURCE_ID = 'RESPOLICYMAP';

DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN ('MNGSYS_ATTR_PAGE');
DELETE FROM RESOURCE_USER WHERE RESOURCE_ID IN ('MNGSYS_ATTR_PAGE');
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN ('MNGSYS_ATTR_PAGE');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN ('MNGSYS_ATTR_PAGE');
DELETE FROM RESOURCE_GROUP WHERE RESOURCE_ID IN ('MNGSYS_ATTR_PAGE');
DELETE FROM RES WHERE RESOURCE_ID IN ('MNGSYS_ATTR_PAGE');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, URL) VALUES ('MNGSYS_ATTR_PAGE', 'MENU_ITEM', 'Resource Attributes', 'MNGSYS_ATTR_PAGE', '/webconsole/resourceAttributes.html');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('MNGSYS_ATTR_PAGE_PUB', 'MNGSYS_ATTR_PAGE', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('MNGSYS_ATTR_PAGE_DIS', 'MNGSYS_ATTR_PAGE', 'MENU_DISPLAY_NAME', 'Attributes & Patterns');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('MNGSYS_EDIT_MENU_ROOT', 'MNGSYS_ATTR_PAGE');

commit;
use openiam;

ALTER TABLE SYNCH_CONFIG ALTER USE_POLICY_MAP SET DEFAULT 'Y';
ALTER TABLE SYNCH_CONFIG ADD USE_TRANSFORM_SCRIPT CHAR(1) DEFAULT 'Y';
ALTER TABLE SYNCH_CONFIG ADD POLICY_MAP_BEFORE_TRANSFORM CHAR(1) DEFAULT 'Y';
commit;
use openiam;

ALTER TABLE COMPANY_ATTRIBUTE MODIFY METADATA_ID VARCHAR(32) NULL;

ALTER TABLE COMPANY_ATTRIBUTE MODIFY NAME VARCHAR(100) NULL;
commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS ORG_MIGRATION$$
CREATE PROCEDURE ORG_MIGRATION()
	BEGIN
		IF EXISTS (SELECT * FROM information_schema.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'COMPANY' AND CONSTRAINT_NAME = 'COMPANY_ORG_TYPE_FK') THEN
			ALTER TABLE COMPANY DROP FOREIGN KEY COMPANY_ORG_TYPE_FK;
 		END IF;
		
		IF EXISTS (SELECT * FROM information_schema.columns WHERE TABLE_SCHEMA='openiam' and table_name = 'COMPANY' AND column_name = 'ORG_TYPE_ID') THEN
			ALTER TABLE COMPANY DROP COLUMN ORG_TYPE_ID;
 		END IF;
 		
 		IF EXISTS (SELECT * FROM information_schema.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'USER_AFFILIATION' AND CONSTRAINT_NAME = 'FK_USR_ORG_AFFL') THEN
			ALTER TABLE USER_AFFILIATION DROP FOREIGN KEY FK_USR_ORG_AFFL;
 		END IF;
 		
 		IF EXISTS (SELECT * FROM information_schema.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'USER_AFFILIATION' AND CONSTRAINT_NAME = 'FK_USR_USER_AFFIL') THEN
			ALTER TABLE USER_AFFILIATION DROP FOREIGN KEY FK_USR_USER_AFFIL;
 		END IF;
 		
 		IF EXISTS (SELECT * FROM information_schema.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'USER_AFFILIATION' AND CONSTRAINT_NAME = 'USER_AFFILIATION_UNIQUE') THEN
			ALTER TABLE USER_AFFILIATION DROP INDEX USER_AFFILIATION_UNIQUE;
 		END IF;
	END$$
DELIMITER ;

call ORG_MIGRATION();
DROP PROCEDURE ORG_MIGRATION;

DROP TABLE IF EXISTS RES_ORG_MEMBERSHIP;
DROP TABLE IF EXISTS ROLE_ORG_MEMBERSHIP;
DROP TABLE IF EXISTS GRP_ORG_MEMBERSHIP;
DROP TABLE IF EXISTS USER_ORG_MEMBERSHIP;
DROP TABLE IF EXISTS ORG_TYPE_VALID_MEMBERSHIP;
DROP TABLE IF EXISTS ORGANIZATION_TYPE;

CREATE TABLE ORGANIZATION_TYPE (
  ORG_TYPE_ID VARCHAR(32) NOT NULL,
  NAME VARCHAR(100) NOT NULL,
  DESCRIPTION VARCHAR(100) NULL,
  PRIMARY KEY (ORG_TYPE_ID)
) Engine=InnoDB;

INSERT INTO ORGANIZATION_TYPE (ORG_TYPE_ID, NAME) VALUES('ORGANIZATION', 'Organization');
INSERT INTO ORGANIZATION_TYPE (ORG_TYPE_ID, NAME) VALUES('DEPARTMENT', 'Department');
INSERT INTO ORGANIZATION_TYPE (ORG_TYPE_ID, NAME) VALUES('DIVISION', 'Division');
INSERT INTO ORGANIZATION_TYPE (ORG_TYPE_ID, NAME) VALUES('SUBSIDIARY', 'Subsidiary');

CREATE TABLE ORG_TYPE_VALID_MEMBERSHIP (
	ORG_TYPE_ID VARCHAR(32) NOT NULL,
	MEMBER_ORG_TYPE_ID VARCHAR(32) NOT NULL
) Engine=InnoDB;

INSERT INTO ORG_TYPE_VALID_MEMBERSHIP (ORG_TYPE_ID, MEMBER_ORG_TYPE_ID) VALUES('ORGANIZATION', 'DEPARTMENT');
INSERT INTO ORG_TYPE_VALID_MEMBERSHIP (ORG_TYPE_ID, MEMBER_ORG_TYPE_ID) VALUES('ORGANIZATION', 'DIVISION');
INSERT INTO ORG_TYPE_VALID_MEMBERSHIP (ORG_TYPE_ID, MEMBER_ORG_TYPE_ID) VALUES('ORGANIZATION', 'SUBSIDIARY');
INSERT INTO ORG_TYPE_VALID_MEMBERSHIP (ORG_TYPE_ID, MEMBER_ORG_TYPE_ID) VALUES('SUBSIDIARY', 'DIVISION');
INSERT INTO ORG_TYPE_VALID_MEMBERSHIP (ORG_TYPE_ID, MEMBER_ORG_TYPE_ID) VALUES('DIVISION', 'DEPARTMENT');

ALTER TABLE ORG_TYPE_VALID_MEMBERSHIP ADD CONSTRAINT ORG_T_VAL_MEM_SOURCE_FK FOREIGN KEY (ORG_TYPE_ID) REFERENCES ORGANIZATION_TYPE(ORG_TYPE_ID);
ALTER TABLE ORG_TYPE_VALID_MEMBERSHIP ADD CONSTRAINT ORG_T_VAL_MEM_TARGET_FK FOREIGN KEY (MEMBER_ORG_TYPE_ID) REFERENCES ORGANIZATION_TYPE(ORG_TYPE_ID);
ALTER TABLE ORG_TYPE_VALID_MEMBERSHIP ADD CONSTRAINT UNIQUE_USER_ORG_TYPE UNIQUE(ORG_TYPE_ID, MEMBER_ORG_TYPE_ID);

ALTER TABLE COMPANY ADD COLUMN ORG_TYPE_ID VARCHAR(32) NULL;
UPDATE COMPANY SET ORG_TYPE_ID=CLASSIFICATION;
UPDATE COMPANY SET ORG_TYPE_ID=NULL WHERE ORG_TYPE_ID NOT IN (SELECT ORG_TYPE_ID FROM ORGANIZATION_TYPE);
ALTER TABLE COMPANY ADD CONSTRAINT COMPANY_ORG_TYPE_FK FOREIGN KEY (ORG_TYPE_ID) REFERENCES ORGANIZATION_TYPE(ORG_TYPE_ID);


ALTER TABLE USER_AFFILIATION ADD CONSTRAINT FK_USR_ORG_AFFL FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(COMPANY_ID);
ALTER TABLE USER_AFFILIATION ADD CONSTRAINT FK_USR_USER_AFFIL FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID);
ALTER TABLE USER_AFFILIATION ADD CONSTRAINT USER_AFFILIATION_UNIQUE UNIQUE(USER_ID, COMPANY_ID);
commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS AUTH_RES_ATTRIBUTE_SCHEMA_CHANGE$$
CREATE PROCEDURE AUTH_RES_ATTRIBUTE_SCHEMA_CHANGE()
	BEGIN
        DECLARE done INT DEFAULT FALSE;
		DECLARE reflectionKey VARCHAR(255);	
        DECLARE attrId INT DEFAULT 1;	
		DECLARE cur1 CURSOR FOR (SELECT REFLECTION_KEY FROM AUTH_RESOURCE_AM_ATTRIBUTE);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

        #drop FK
		IF EXISTS (SELECT * FROM information_schema.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'AUTH_RESOURCE_ATTRIBUTE_MAP' AND CONSTRAINT_NAME = 'FK_AUTH_AM_ATTR') THEN
			ALTER TABLE AUTH_RESOURCE_ATTRIBUTE_MAP DROP FOREIGN KEY FK_AUTH_AM_ATTR;
 		END IF;
        IF EXISTS (SELECT * FROM information_schema.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'URI_PATTERN_META_VALUE' AND CONSTRAINT_NAME = 'URI_PATTERN_META_VALUE_AM_FK') THEN
			ALTER TABLE URI_PATTERN_META_VALUE DROP FOREIGN KEY URI_PATTERN_META_VALUE_AM_FK;
 		END IF;
        #drop PK from AUTH_RESOURCE_AM_ATTRIBUTE   
        IF EXISTS (SELECT * FROM information_schema.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'AUTH_RESOURCE_AM_ATTRIBUTE' AND CONSTRAINT_NAME = 'PRIMARY') THEN
			ALTER TABLE AUTH_RESOURCE_AM_ATTRIBUTE DROP PRIMARY KEY;
 		END IF;
        # RENAME columns
		IF EXISTS (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'AUTH_RESOURCE_AM_ATTRIBUTE' AND COLUMN_NAME = 'AM_ATTRIBUTE_ID') THEN
            ALTER TABLE AUTH_RESOURCE_AM_ATTRIBUTE CHANGE COLUMN AM_ATTRIBUTE_ID REFLECTION_KEY VARCHAR(255) NOT NULL;
 		END IF;
		IF EXISTS (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'AUTH_RESOURCE_ATTRIBUTE_MAP' AND COLUMN_NAME = 'AM_ATTRIBUTE_ID') THEN
            ALTER TABLE AUTH_RESOURCE_ATTRIBUTE_MAP CHANGE COLUMN AM_ATTRIBUTE_ID AM_RES_ATTRIBUTE_ID VARCHAR(32) NOT NULL;
 		END IF;
		IF EXISTS (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'URI_PATTERN_META_VALUE' AND COLUMN_NAME = 'AM_ATTRIBUTE_ID') THEN
            ALTER TABLE URI_PATTERN_META_VALUE CHANGE COLUMN AM_ATTRIBUTE_ID AM_RES_ATTRIBUTE_ID VARCHAR(32) NOT NULL;
 		END IF;
        # Add new PK column
 		IF NOT EXISTS (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'AUTH_RESOURCE_AM_ATTRIBUTE' AND COLUMN_NAME = 'AM_RES_ATTRIBUTE_ID') THEN
            ALTER TABLE AUTH_RESOURCE_AM_ATTRIBUTE ADD COLUMN AM_RES_ATTRIBUTE_ID VARCHAR(32) NOT NULL;
            ALTER TABLE AUTH_RESOURCE_AM_ATTRIBUTE ADD UNIQUE INDEX REFLECTION_KEY_IDX USING BTREE (REFLECTION_KEY ASC);

            OPEN cur1;
            REPEAT 
                FETCH cur1 INTO reflectionKey;
                IF (reflectionKey IS NOT NULL) THEN
                    update AUTH_RESOURCE_AM_ATTRIBUTE t
                    set t.AM_RES_ATTRIBUTE_ID =attrId
                    where t.REFLECTION_KEY = reflectionKey;
                    
                    update AUTH_RESOURCE_ATTRIBUTE_MAP t
                    set t.AM_RES_ATTRIBUTE_ID =attrId
                    where t.AM_RES_ATTRIBUTE_ID = reflectionKey;

                    update URI_PATTERN_META_VALUE t
                    set t.AM_RES_ATTRIBUTE_ID =attrId
                    where t.AM_RES_ATTRIBUTE_ID = reflectionKey;

                    set attrId:=attrId+1;
                END IF;
            UNTIL done END REPEAT; 
            CLOSE cur1;
 		END IF;

	END$$
DELIMITER ;

call AUTH_RES_ATTRIBUTE_SCHEMA_CHANGE();
DROP PROCEDURE AUTH_RES_ATTRIBUTE_SCHEMA_CHANGE;



ALTER TABLE AUTH_RESOURCE_AM_ATTRIBUTE ADD PRIMARY KEY (AM_RES_ATTRIBUTE_ID);

ALTER TABLE AUTH_RESOURCE_ATTRIBUTE_MAP 
  ADD CONSTRAINT FK_AUTH_AM_ATTR FOREIGN KEY (AM_RES_ATTRIBUTE_ID) REFERENCES AUTH_RESOURCE_AM_ATTRIBUTE (AM_RES_ATTRIBUTE_ID);

ALTER TABLE URI_PATTERN_META_VALUE 
  ADD CONSTRAINT URI_PATTERN_META_VALUE_AM_FK FOREIGN KEY (AM_RES_ATTRIBUTE_ID) REFERENCES AUTH_RESOURCE_AM_ATTRIBUTE (AM_RES_ATTRIBUTE_ID);


commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS MIGRATE_USER_COMPANIES$$
CREATE PROCEDURE MIGRATE_USER_COMPANIES()
	BEGIN
	    DECLARE done INT DEFAULT FALSE;
		DECLARE division VARCHAR(50);
		DECLARE deptCode VARCHAR(50);
		DECLARE deptName VARCHAR(100);
		DECLARE companyId VARCHAR(32);
		DECLARE userId VARCHAR(32);
		DECLARE attrId INT DEFAULT 1;
		DECLARE cur1 CURSOR FOR (SELECT USER_ID, COMPANY_ID, DEPT_CD, DEPT_NAME FROM USERS);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
		
		REPEAT 
			FETCH cur1 INTO userId, companyId, deptCode, deptName;
			IF (userId IS NOT NULL) THEN
				IF (companyId IS NOT NULL) THEN
					IF ((SELECT count(*) FROM COMPANY WHERE COMPANY_ID=companyId) = 1) THEN
						IF ((SELECT count(*) FROM USER_AFFILIATION WHERE COMPANY_ID=companyId AND USER_ID=userId) <= 0) THEN
							INSERT INTO USER_AFFILIATION (USER_AFFILIATION_ID, USER_ID, COMPANY_ID) VALUES(attrId, userId, companyId);
							set attrId:=attrId+1;
						END IF;
					END IF;
				END IF;

				IF (deptCode IS NOT NULL) THEN
					IF ((SELECT count(*) FROM COMPANY WHERE COMPANY_ID=deptCode) = 1) THEN
						IF ((SELECT count(*) FROM USER_AFFILIATION WHERE COMPANY_ID=deptCode AND USER_ID=userId) <= 0) THEN
							INSERT INTO USER_AFFILIATION (USER_AFFILIATION_ID, USER_ID, COMPANY_ID) VALUES(attrId, userId, deptCode);
							set attrId:=attrId+1;
						END IF;
					END IF;
				END IF;
				
				IF (deptName IS NOT NULL) THEN
					IF ((SELECT count(*) FROM COMPANY WHERE COMPANY_ID=deptName) = 1) THEN
						IF ((SELECT count(*) FROM USER_AFFILIATION WHERE COMPANY_ID=deptName AND USER_ID=userId) <= 0) THEN
							INSERT INTO USER_AFFILIATION (USER_AFFILIATION_ID, USER_ID, COMPANY_ID) VALUES(attrId, userId, deptName);
							set attrId:=attrId+1;
						END IF;
					END IF;
				END IF;
			END IF;
		UNTIL done END REPEAT; 
		CLOSE cur1;
	END$$
DELIMITER ;

call MIGRATE_USER_COMPANIES();
DROP PROCEDURE MIGRATE_USER_COMPANIES;


ALTER TABLE USERS DROP FOREIGN KEY FK_USERS_DEPARTMENT;
ALTER TABLE USERS DROP COLUMN DEPT_CD;
ALTER TABLE USERS DROP COLUMN DEPT_NAME;
ALTER TABLE USERS DROP FOREIGN KEY FK_USERS_DIVISION;
ALTER TABLE USERS DROP COLUMN DIVISION;
ALTER TABLE USERS DROP FOREIGN KEY FK_USERS_COMPANY;
ALTER TABLE USERS DROP COLUMN COMPANY_ID;
commit;
use openiam;

ALTER TABLE USERS ADD DATE_IT_POLICY_APPROVED TIMESTAMP NULL;

CREATE  TABLE IT_POLICY (
  IT_POLICY_ID VARCHAR(32) NOT NULL,
  APPROVE_TYPE VARCHAR(64) NOT NULL DEFAULT 'Once',
  ACTIVE CHAR(1) NOT NULL DEFAULT 'N',
  CREATE_DATE TIMESTAMP NULL,
  UPDATE_DATE TIMESTAMP NULL,
  CREATED_BY varchar(32) NULL,
  UPDATED_BY varchar(32) NULL,
  POLICY_CONTENT LONGTEXT NULL,
  CONFIRMATION varchar(255) NULL,
  PRIMARY KEY (IT_POLICY_ID)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

commit;
use openiam;

DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN ('CONF_POLICY_PAGE');
DELETE FROM RESOURCE_USER WHERE RESOURCE_ID IN ('CONF_POLICY_PAGE');
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN ('CONF_POLICY_PAGE');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN ('CONF_POLICY_PAGE');
DELETE FROM RESOURCE_GROUP WHERE RESOURCE_ID IN ('CONF_POLICY_PAGE');
DELETE FROM RES WHERE RESOURCE_ID IN ('CONF_POLICY_PAGE');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, URL) VALUES ('CONF_POLICY_PAGE', 'MENU_ITEM', 'Configure IT Policy', 'IT_POLICY_PAGE', '/webconsole/configurePolicy.html');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CONF_POLICY_PAGE_PUB', 'CONF_POLICY_PAGE', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('CONF_POLICY_PAGE_DIS', 'CONF_POLICY_PAGE', 'MENU_DISPLAY_NAME', 'Configure IT Policy');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ADMIN', 'CONF_POLICY_PAGE');

commit;
use openiam;

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('ORG_APROVER_ASSOC', 'MENU_ITEM', 'ORG_APROVER_ASSOC', 'Approver Associations', '/webconsole-idm/provisioning/organizationApproverAssociations.html');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ORG_APROVER_ASSOC_DN', 'ORG_APROVER_ASSOC', 'MENU_DISPLAY_NAME', 'Approver Associations');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ORG_APROVER_ASSOC_PUB', 'ORG_APROVER_ASSOC', 'MENU_IS_PUBLIC', 'true');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('ORGANIZATION_EDIT_ID', 'ORG_APROVER_ASSOC');
commit;
use openiam;

ALTER TABLE ORGANIZATION_TYPE ADD CONSTRAINT UNIQUE_ORG_TYPE UNIQUE(NAME);
commit;
use openiam;


DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('ORG_TYPE_SUBMENU_ROOT', 'ORG_TYPE_SUBMENU_EDIT', 'ORG_TYPE_SEARCH', 'NEW_ORG_TYPE', 'EDIT_ORG_TYPE', 'EDIT_ORG_MEMBERSHIP', 'EDIT_ORG_TYPE_IDMAN', 'ORG_TYPE_EDIT_SEARCH');
DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN('ORG_TYPE_SUBMENU_ROOT', 'ORG_TYPE_SUBMENU_EDIT', 'ORG_TYPE_SEARCH', 'NEW_ORG_TYPE', 'EDIT_ORG_TYPE', 'EDIT_ORG_MEMBERSHIP', 'EDIT_ORG_TYPE_IDMAN', 'ORG_TYPE_EDIT_SEARCH');
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('ORG_TYPE_SUBMENU_ROOT', 'ORG_TYPE_SUBMENU_EDIT', 'ORG_TYPE_SEARCH', 'NEW_ORG_TYPE', 'EDIT_ORG_TYPE', 'EDIT_ORG_MEMBERSHIP', 'EDIT_ORG_TYPE_IDMAN', 'ORG_TYPE_EDIT_SEARCH');
DELETE FROM RES WHERE RESOURCE_ID IN('ORG_TYPE_SUBMENU_ROOT', 'ORG_TYPE_SUBMENU_EDIT', 'ORG_TYPE_SEARCH', 'NEW_ORG_TYPE', 'EDIT_ORG_TYPE', 'EDIT_ORG_MEMBERSHIP', 'EDIT_ORG_TYPE_IDMAN', 'ORG_TYPE_EDIT_SEARCH');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('ORG_TYPE_SUBMENU_ROOT', 'MENU_ITEM', 'ORG_TYPE_SUBMENU_ROOT', 'Organization Type Root');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ORG_TYPE_SUBMENU_ROOT_PUB', 'ORG_TYPE_SUBMENU_ROOT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ORG_TYPE_SUBMENU_ROOT_DESC', 'ORG_TYPE_SUBMENU_ROOT', 'MENU_DISPLAY_NAME', 'Organization Type Root');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('ORG_TYPE_SUBMENU_EDIT', 'MENU_ITEM', 'ORG_TYPE_SUBMENU_EDIT', 'Organization Type Edit');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ORG_TYPE_SUBMENU_EDIT_PUB', 'ORG_TYPE_SUBMENU_EDIT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ORG_TYPE_SUBMENU_EDIT_DESC', 'ORG_TYPE_SUBMENU_EDIT', 'MENU_DISPLAY_NAME', 'Organization Type Edit');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('ORG_TYPE_SEARCH', 'MENU_ITEM', 'ORG_TYPE_SEARCH', 'Organization Type Search', '/webconsole/organizationTypeSearch.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ORG_TYPE_SEARCH_PUB', 'ORG_TYPE_SEARCH', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ORG_TYPE_SEARCH_DESC', 'ORG_TYPE_SEARCH', 'MENU_DISPLAY_NAME', 'Search Organization Types');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('NEW_ORG_TYPE', 'MENU_ITEM', 'NEW_ORG_TYPE', 'Edit Organization Type', '/webconsole/organizationTypeEdit.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('NEW_ORG_TYPE_PUB', 'NEW_ORG_TYPE', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('NEW_ORG_TYPE_DESC', 'NEW_ORG_TYPE', 'MENU_DISPLAY_NAME', 'New Organization Type');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('EDIT_ORG_TYPE', 'MENU_ITEM', 'EDIT_ORG_TYPE', 'Edit Organization Type', '/webconsole/organizationTypeEdit.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('EDIT_ORG_TYPE_PUB', 'EDIT_ORG_TYPE', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('EDIT_ORG_TYPE_DESC', 'EDIT_ORG_TYPE', 'MENU_DISPLAY_NAME', 'Edit Organization Type');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('EDIT_ORG_MEMBERSHIP', 'MENU_ITEM', 'EDIT_ORG_MEMBERSHIP', 'Membership', '/webconsole/organizationTypeMembership.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('EDIT_ORG_MEMBERSHIP_PUB', 'EDIT_ORG_MEMBERSHIP', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('EDIT_ORG_MEMBERSHIP_DESC', 'EDIT_ORG_MEMBERSHIP', 'MENU_DISPLAY_NAME', 'Membership');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('ORG_TYPE_EDIT_SEARCH', 'MENU_ITEM', 'ORG_TYPE_EDIT_SEARCH', 'Organization Type Search', '/webconsole/organizationTypeSearch.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ORG_TYPE_EDIT_SEARCH_PUB', 'ORG_TYPE_EDIT_SEARCH', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ORG_TYPE_EDIT_SEARCH_DESC', 'ORG_TYPE_EDIT_SEARCH', 'MENU_DISPLAY_NAME', 'Search Organization Types');


INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ORG_TYPE_SUBMENU_ROOT', 'ORG_TYPE_SEARCH');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ORG_TYPE_SUBMENU_ROOT', 'NEW_ORG_TYPE');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ORG_TYPE_SUBMENU_EDIT', 'ORG_TYPE_EDIT_SEARCH');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ORG_TYPE_SUBMENU_EDIT', 'EDIT_ORG_TYPE');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ORG_TYPE_SUBMENU_EDIT', 'EDIT_ORG_MEMBERSHIP');




INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('EDIT_ORG_TYPE_IDMAN', 'MENU_ITEM', 'EDIT_ORG_TYPE_IDMAN', 'Membership', '/webconsole/organizationTypeSearch.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('EDIT_ORG_TYPE_IDMAN_PUB', 'EDIT_ORG_TYPE_IDMAN', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('EDIT_ORG_TYPE_IDMAN_DESC', 'EDIT_ORG_TYPE_IDMAN', 'MENU_DISPLAY_NAME', 'Organization Types');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('IDMAN', 'EDIT_ORG_TYPE_IDMAN');
commit;
use openiam;

DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN ('SUP_SUB_PAGE');
DELETE FROM RESOURCE_USER WHERE RESOURCE_ID IN ('SUP_SUB_PAGE');
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN ('SUP_SUB_PAGE');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN ('SUP_SUB_PAGE');
DELETE FROM RESOURCE_GROUP WHERE RESOURCE_ID IN ('SUP_SUB_PAGE');
DELETE FROM RES WHERE RESOURCE_ID IN ('SUP_SUB_PAGE');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, URL, DISPLAY_ORDER) VALUES ('SUP_SUB_PAGE', 'MENU_ITEM', 'Configure IT Policy', 'SUP_SUB_PAGE', '/webconsole/supSub.html', '11');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SUP_SUB_PAGE_PUB', 'SUP_SUB_PAGE', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SUP_SUB_PAGE_DIS', 'SUP_SUB_PAGE', 'MENU_DISPLAY_NAME', 'Superiors & Subordinates');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('USER_EDIT_MENU', 'SUP_SUB_PAGE');

commit;
use openiam;

ALTER TABLE BATCH_CONFIG ADD COLUMN T_ENABLED CHAR(1) DEFAULT 'N';
UPDATE BATCH_CONFIG SET T_ENABLED='Y' WHERE ENABLED = 1;
ALTER TABLE BATCH_CONFIG DROP COLUMN ENABLED;
ALTER TABLE BATCH_CONFIG CHANGE T_ENABLED ENABLED CHAR(1) DEFAULT 'N' NOT NULL;
commit;
use openiam;

ALTER TABLE BATCH_CONFIG ADD COLUMN LAST_MODIFIED_DATETIME DATETIME NULL;
ALTER TABLE BATCH_CONFIG ADD COLUMN RUN_ON DATETIME NULL;
ALTER TABLE BATCH_CONFIG ADD COLUMN CRON_EXPRESSION VARCHAR(100) NULL;
ALTER TABLE BATCH_CONFIG ADD COLUMN SPRING_BEAN VARCHAR(100) NULL;
ALTER TABLE BATCH_CONFIG ADD COLUMN SPRING_BEAN_METHOD VARCHAR(100) NULL;

UPDATE BATCH_CONFIG SET CRON_EXPRESSION='0 0/1 * 1/1 * ? *' WHERE FREQUENCY_UNIT_OF_MEASURE='MINUTE';
UPDATE BATCH_CONFIG SET CRON_EXPRESSION='0 0 0 1/1 * ? *' WHERE FREQUENCY_UNIT_OF_MEASURE='NIGHTLY';

UPDATE BATCH_CONFIG SET CRON_EXPRESSION='0 0/1 * * * ?' WHERE CRON_EXPRESSION='0 0/1 * 1/1 * ? *';
UPDATE BATCH_CONFIG SET CRON_EXPRESSION='0 0 0 1/1 * ?' WHERE CRON_EXPRESSION='0 0 0 1/1 * ? *';

ALTER TABLE BATCH_CONFIG DROP COLUMN FREQUENCY;
ALTER TABLE BATCH_CONFIG DROP COLUMN FREQUENCY_UNIT_OF_MEASURE;

DROP TRIGGER IF EXISTS ON_BATCH_TASK_INSERT;
DROP TRIGGER IF EXISTS ON_BATCH_TASK_UPDATE;

DELIMITER $$

CREATE TRIGGER ON_BATCH_TASK_INSERT 
BEFORE 
INSERT ON BATCH_CONFIG 
	FOR EACH ROW
	BEGIN
		SET NEW.LAST_MODIFIED_DATETIME = NOW();
	END$$
	
CREATE TRIGGER ON_BATCH_TASK_UPDATE
BEFORE 
UPDATE ON BATCH_CONFIG 
	FOR EACH ROW
	BEGIN
		SET NEW.LAST_MODIFIED_DATETIME = NOW();
	END$$
	
DELIMITER ;
commit;
use openiam;

INSERT INTO BATCH_CONFIG (TASK_ID, TASK_NAME, CRON_EXPRESSION, SPRING_BEAN, SPRING_BEAN_METHOD) VALUES('ATTESTATION', 'Attestation', '0 0 0 1 1/3 ?', 'attestationInitializer', 'initializeAttestation');
commit;
use openiam;

DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('BATCH_TASK_ROOT', 'SEARCH_BATCH_NEW', 'NEW_BATCH_TASK', 'BATCH_TASK_EDIT', 'SEARCH_BATCH_EDIT', 'EDIT_BATCH_TASK', 'ADMIN_BATCH_TASKS');
DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN('BATCH_TASK_ROOT', 'SEARCH_BATCH_NEW', 'NEW_BATCH_TASK', 'BATCH_TASK_EDIT', 'SEARCH_BATCH_EDIT', 'EDIT_BATCH_TASK', 'ADMIN_BATCH_TASKS');
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('BATCH_TASK_ROOT', 'SEARCH_BATCH_NEW', 'NEW_BATCH_TASK', 'BATCH_TASK_EDIT', 'SEARCH_BATCH_EDIT', 'EDIT_BATCH_TASK', 'ADMIN_BATCH_TASKS');
DELETE FROM RES WHERE RESOURCE_ID IN('BATCH_TASK_ROOT', 'SEARCH_BATCH_NEW', 'NEW_BATCH_TASK', 'BATCH_TASK_EDIT', 'SEARCH_BATCH_EDIT', 'EDIT_BATCH_TASK', 'ADMIN_BATCH_TASKS');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('BATCH_TASK_ROOT', 'MENU_ITEM', 'BATCH_TASK_ROOT', 'Batch Task Root');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('BATCH_TASK_ROOT_PUB', 'BATCH_TASK_ROOT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('BATCH_TASK_ROOT_DESC', 'BATCH_TASK_ROOT', 'MENU_DISPLAY_NAME', 'Batch Task Root');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('SEARCH_BATCH_NEW', 'MENU_ITEM', 'SEARCH_BATCH_NEW', 'Search Batch Tasks', '/webconsole-idm/provisioning/batchTaskSearch.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SEARCH_BATCH_NEW_PUB', 'SEARCH_BATCH_NEW', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SEARCH_BATCH_NEW_DESC', 'SEARCH_BATCH_NEW', 'MENU_DISPLAY_NAME', 'Search Batch Tasks');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('NEW_BATCH_TASK', 'MENU_ITEM', 'NEW_BATCH_TASK', 'New Batch Task', '/webconsole-idm/provisioning/batchTask.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('NEW_BATCH_TASK_PUB', 'NEW_BATCH_TASK', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('NEW_BATCH_TASK_DESC', 'NEW_BATCH_TASK', 'MENU_DISPLAY_NAME', 'New Batch Task');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('BATCH_TASK_ROOT', 'SEARCH_BATCH_NEW');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('BATCH_TASK_ROOT', 'NEW_BATCH_TASK');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('BATCH_TASK_EDIT', 'MENU_ITEM', 'BATCH_TASK_EDIT', 'Batch Task Edit');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('BATCH_TASK_EDIT_PUB', 'BATCH_TASK_EDIT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('BATCH_TASK_EDIT_DESC', 'BATCH_TASK_EDIT', 'MENU_DISPLAY_NAME', 'Batch Task Edit');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('SEARCH_BATCH_EDIT', 'MENU_ITEM', 'SEARCH_BATCH_EDIT', 'Search Batch Tasks', '/webconsole-idm/provisioning/batchTaskSearch.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SEARCH_BATCH_EDIT_PUB', 'SEARCH_BATCH_EDIT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SEARCH_BATCH_EDIT_DESC', 'SEARCH_BATCH_EDIT', 'MENU_DISPLAY_NAME', 'Search Batch Tasks');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('EDIT_BATCH_TASK', 'MENU_ITEM', 'EDIT_BATCH_TASK', 'Edit Batch Task', '/webconsole-idm/provisioning/batchTask.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('EDIT_BATCH_TASK_PUB', 'EDIT_BATCH_TASK', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('EDIT_BATCH_TASK_DESC', 'EDIT_BATCH_TASK', 'MENU_DISPLAY_NAME', 'Edit Batch Task');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('BATCH_TASK_EDIT', 'SEARCH_BATCH_EDIT');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('BATCH_TASK_EDIT', 'EDIT_BATCH_TASK');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('ADMIN_BATCH_TASKS', 'MENU_ITEM', 'ADMIN_BATCH_TASKS', 'Batch Tasks', '/webconsole-idm/provisioning/batchTaskSearch.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ADMIN_BATCH_TASKS_PUB', 'ADMIN_BATCH_TASKS', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ADMIN_BATCH_TASKS_DESC', 'ADMIN_BATCH_TASKS', 'MENU_DISPLAY_NAME', 'Batch Tasks');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ADMIN', 'ADMIN_BATCH_TASKS');
commit;
use openiam;

DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN ('DIR_LOOKUP_PAGE');
DELETE FROM RESOURCE_USER WHERE RESOURCE_ID IN ('DIR_LOOKUP_PAGE');
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN ('DIR_LOOKUP_PAGE');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN ('DIR_LOOKUP_PAGE');
DELETE FROM RESOURCE_GROUP WHERE RESOURCE_ID IN ('DIR_LOOKUP_PAGE');
DELETE FROM RES WHERE RESOURCE_ID IN ('DIR_LOOKUP_PAGE');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, URL, DISPLAY_ORDER) VALUES ('DIR_LOOKUP_PAGE', 'MENU_ITEM', 'Directory Lookup', 'DIR_LOOKUP_PAGE', '/selfservice/dirLookup.html', 5);

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('DIR_LOOKUP_PAGE_PUB', 'DIR_LOOKUP_PAGE', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('DIR_LOOKUP_PAGE_DIS', 'DIR_LOOKUP_PAGE', 'MENU_DISPLAY_NAME', 'Directory Lookup');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('SELFCENTER', 'DIR_LOOKUP_PAGE');

commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS showHistoryMenus$$

CREATE PROCEDURE showHistoryMenus()
	BEGIN
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='MANAGEREQ' AND NAME='IS_VISIBLE') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='true' WHERE  RESOURCE_ID='MANAGEREQ' AND NAME='IS_VISIBLE';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('MANAGEREQ_VISIBLE', 'MANAGEREQ', 'IS_VISIBLE', 'true');
		END IF;
	END$$

DELIMITER ;

call showHistoryMenus();

DROP PROCEDURE showHistoryMenus;

UPDATE RES SET URL='/selfservice/taskHistory.html' WHERE RESOURCE_ID='MANAGEREQ';
commit;
use openiam;


DELIMITER $$

DROP PROCEDURE IF EXISTS DROP_UI_TYPE_CONSTRAINT$$
CREATE PROCEDURE DROP_UI_TYPE_CONSTRAINT()
	BEGIN
		IF EXISTS (SELECT * FROM information_schema.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'METADATA_ELEMENT_PAGE_TEMPLATE' AND CONSTRAINT_NAME = 'TEMPLATE_TYPE_FK') THEN
			ALTER TABLE METADATA_ELEMENT_PAGE_TEMPLATE DROP FOREIGN KEY TEMPLATE_TYPE_FK;
 		END IF;
 		IF EXISTS (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA='openiam' and table_name = 'METADATA_ELEMENT_PAGE_TEMPLATE' AND column_name = 'TEMPLATE_TYPE_ID') THEN
 			ALTER TABLE METADATA_ELEMENT_PAGE_TEMPLATE DROP COLUMN TEMPLATE_TYPE_ID;
 		END IF;
	END$$
DELIMITER ;

call DROP_UI_TYPE_CONSTRAINT();
DROP PROCEDURE DROP_UI_TYPE_CONSTRAINT;

DROP TABLE IF EXISTS UI_FIELD_TEMPLATE_XREF;
DROP TABLE IF EXISTS UI_TEMPLATE_FIELDS;
DROP TABLE IF EXISTS UI_TEMPLATE_TYPE;

CREATE TABLE UI_TEMPLATE_TYPE (
	TEMPLATE_TYPE_ID VARCHAR(32) NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	DESCRIPTION VARCHAR(200),
	PRIMARY KEY(TEMPLATE_TYPE_ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

INSERT INTO UI_TEMPLATE_TYPE (TEMPLATE_TYPE_ID, NAME, DESCRIPTION) VALUES('USER_TEMPLATE', 'User Page Tempate', 'Template for SelfService User-centric pages');

ALTER TABLE METADATA_ELEMENT_PAGE_TEMPLATE ADD COLUMN TEMPLATE_TYPE_ID VARCHAR(32) NULL;

UPDATE METADATA_ELEMENT_PAGE_TEMPLATE SET TEMPLATE_TYPE_ID='USER_TEMPLATE';

ALTER TABLE METADATA_ELEMENT_PAGE_TEMPLATE MODIFY COLUMN TEMPLATE_TYPE_ID VARCHAR(32) NOT NULL;

ALTER TABLE METADATA_ELEMENT_PAGE_TEMPLATE ADD CONSTRAINT TEMPLATE_TYPE_FK FOREIGN KEY(TEMPLATE_TYPE_ID) REFERENCES UI_TEMPLATE_TYPE(TEMPLATE_TYPE_ID);

CREATE TABLE UI_TEMPLATE_FIELDS (
	UI_FIELD_ID VARCHAR(32) NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	DESCRIPTION VARCHAR(200),
	TEMPLATE_TYPE_ID VARCHAR(32) NOT NULL,
	IS_REQUIRED CHAR(1) NOT NULL DEFAULT 'N',
	PRIMARY KEY(UI_FIELD_ID),
  	CONSTRAINT TEMPLATE_TYPE_UI_TEMPL_FK FOREIGN KEY (TEMPLATE_TYPE_ID) REFERENCES UI_TEMPLATE_TYPE(TEMPLATE_TYPE_ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID, IS_REQUIRED) VALUES('USER_FIRST_NAME', 'First Name', 'USER_TEMPLATE', 'Y');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID, IS_REQUIRED) VALUES('USER_LAST_NAME', 'Last Name', 'USER_TEMPLATE', 'Y');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_MIDDLE_INIT', 'Middle Initial', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_MAIDEN_NAME', 'Maiden Name', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_NICKNAME', 'User NickName', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_DOB', 'Date of Birth', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_TITLE', 'User Title', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_GENDER', 'Gender', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_EMPLOYEE_ID', 'Employee ID', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_EMPLOYEE_TYPE', 'Employee Type', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_LOCATION_CODE', 'Location Code', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_LOCATION_NAME', 'Location Name', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_SELECT_SUPERVISOR', 'Select Supervisor', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_CLASSICIATION', 'User Classification', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_PREFIX', 'Prefix', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_STATUS', 'User Status', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_SECONDARY_STATUS', 'Account Status', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_SUFFIX', 'User Suffix', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_ALTERNATE_CONTACT', 'Alternate Contact', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_MAILCODE', 'Mail Code', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_COST_CENTER', 'Cost Center', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_JOB_CODE', 'Job Code', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_USER_TYPE', 'User Type', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_OBJECT_TYPE', 'User Type', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_START_DATE', 'Start Date', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_END_DATE', 'End Date', 'USER_TEMPLATE');

INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_ADDRESS_REQUIRED', 'User is required to input at least one address', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_PHONES_REQUIRED', 'User is required to input at least one phone number', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_PHONES_CREATABLE', 'User can input phone numbers', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_ADDRESSES_CREATABLE', 'User can input addresses', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_SHOW_ROLES', 'User can select a Role', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_SHOW_GROUPS', 'User can select a Group', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID) VALUES('USER_SHOW_ORGANIZATIONS', 'User can define his organizational structure', 'USER_TEMPLATE');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID, IS_REQUIRED) VALUES('USER_CREATE_LOGIN', 'User can create a custom login', 'USER_TEMPLATE', 'Y');

CREATE TABLE UI_FIELD_TEMPLATE_XREF (
	UI_FIELD_ID VARCHAR(32) NOT NULL,
	TEMPLATE_ID VARCHAR(32) NOT NULL,
	IS_REQUIRED CHAR(1) NOT NULL DEFAULT 'N',
	IS_EDITABLE CHAR(1) NOT NULL DEFAULT 'Y',
	DISPLAY_ORDER INT(3) NOT NULL,
	CONSTRAINT TEMPLATE_XREF_UI_FIELD_FK FOREIGN KEY (UI_FIELD_ID) REFERENCES UI_TEMPLATE_FIELDS(UI_FIELD_ID),
	CONSTRAINT TEMPLATE_XREF_TEMPLATE_FK FOREIGN KEY (TEMPLATE_ID) REFERENCES METADATA_ELEMENT_PAGE_TEMPLATE(ID),
	CONSTRAINT TEMPLATE_XREF_UNIQUE UNIQUE(TEMPLATE_ID, UI_FIELD_ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS SUPERVISOR_DATA_TRANSFER$$
CREATE PROCEDURE SUPERVISOR_DATA_TRANSFER()
    BEGIN

        DECLARE counter INT DEFAULT 3000;
        DECLARE finished INTEGER DEFAULT 0;
        DECLARE employee VARCHAR(32) DEFAULT "";
        DECLARE supervisor VARCHAR(32) DEFAULT "";
        DECLARE user_cursor CURSOR FOR SELECT USER_ID, MANAGER_ID FROM USERS;
        DECLARE CONTINUE HANDLER FOR NOT FOUND SET finished = 1;

        IF EXISTS (SELECT * FROM information_schema.COLUMNS WHERE TABLE_NAME='USERS' AND COLUMN_NAME='MANAGER_ID') THEN

            OPEN user_cursor;
       
            employee_loop: LOOP
                FETCH user_cursor INTO employee, supervisor;
                IF (supervisor IS NOT NULL) THEN
                    IF NOT EXISTS (SELECT * FROM ORG_STRUCTURE WHERE SUPERVISOR_ID=supervisor AND STAFF_ID=employee) THEN
                        loop_counter: LOOP
                            SET counter=counter+1;
                            IF EXISTS (SELECT * FROM ORG_STRUCTURE WHERE ORG_STRUCTURE_ID=counter) THEN
                                ITERATE loop_counter;
                            ELSE
                                LEAVE loop_counter;
                            END IF;
                        END LOOP loop_counter;
                        INSERT INTO ORG_STRUCTURE (ORG_STRUCTURE_ID, SUPERVISOR_ID, STAFF_ID) VALUES (counter, supervisor, employee);
                    END IF;
                END IF;

                IF finished = 1 THEN
                    LEAVE employee_loop;
                END IF;

            END LOOP employee_loop;

            CLOSE user_cursor;

            ALTER TABLE USERS DROP COLUMN MANAGER_ID;

        END IF;

    END$$
DELIMITER ;

call SUPERVISOR_DATA_TRANSFER();
DROP PROCEDURE SUPERVISOR_DATA_TRANSFER;

commit;
use openiam;

DELETE FROM RESOURCE_PROP WHERE RESOURCE_PROP_ID = 'MANUALRECON_DESC';
DELETE FROM res_to_res_membership WHERE RESOURCE_ID = 'MNGSYS_EDIT_MENU_ROOT' AND MEMBER_RESOURCE_ID = 'MANUALRECON';
DELETE FROM RES WHERE RESOURCE_ID = 'MANUALRECON';

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL) VALUES ('MANUALRECON', 'MENU_ITEM', 'Manual reconciliation', 'MANUALRECON', 6, '/webconsole/manual-reconciliation.html');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('MNGSYS_EDIT_MENU_ROOT', 'MANUALRECON');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('MANUALRECON_DESC', 'MANUALRECON', 'MENU_DISPLAY_NAME', 'Manual reconciliation');

commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS MODIFY_RECONCILIATION_CONFIG$$
CREATE PROCEDURE MODIFY_RECONCILIATION_CONFIG()
	BEGIN

IF EXISTS (SELECT * FROM information_schema.columns WHERE TABLE_SCHEMA='openiam' and table_name = 'RECONCILIATION_CONFIG' AND column_name = 'MANUAL_RECONCILIATION_FLAG') THEN
			ALTER TABLE RECONCILIATION_CONFIG DROP COLUMN MANUAL_RECONCILIATION_FLAG;
 		END IF;

ALTER TABLE RECONCILIATION_CONFIG ADD COLUMN MANUAL_RECONCILIATION_FLAG CHAR(1) DEFAULT 'N' NOT NULL;

END$$
DELIMITER ;

call MODIFY_RECONCILIATION_CONFIG();
DROP PROCEDURE MODIFY_RECONCILIATION_CONFIG;

commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS DROP_CONTACT_INFO_CONSTRAINT$$
CREATE PROCEDURE DROP_CONTACT_INFO_CONSTRAINT()
	BEGIN
		IF EXISTS (SELECT * FROM information_schema.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'EMAIL_ADDRESS' AND CONSTRAINT_NAME = 'EMAIL_ADDRESS_TYPE_FK') THEN
			ALTER TABLE EMAIL_ADDRESS DROP FOREIGN KEY EMAIL_ADDRESS_TYPE_FK, DROP COLUMN TYPE_ID;
 		END IF;
 		IF EXISTS (SELECT * FROM information_schema.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA='openiam' and table_name = 'ADDRESS' AND CONSTRAINT_NAME = 'ADDRESS_TYPE_FK') THEN
 			ALTER TABLE ADDRESS DROP FOREIGN KEY ADDRESS_TYPE_FK, DROP COLUMN TYPE_ID;
 		END IF;
 		IF EXISTS (SELECT * FROM information_schema.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA='openiam' and table_name = 'PHONE' AND CONSTRAINT_NAME = 'PHONE_TYPE_FK') THEN
 			ALTER TABLE PHONE DROP FOREIGN KEY PHONE_TYPE_FK, DROP COLUMN TYPE_ID;
 		END IF;
        IF EXISTS (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA='openiam' and TABLE_NAME = 'EMAIL_ADDRESS' AND column_name  = 'TYPE_ID') THEN
			ALTER TABLE EMAIL_ADDRESS DROP COLUMN TYPE_ID;
 		END IF;
 		IF EXISTS (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA='openiam' and table_name = 'ADDRESS' AND column_name  = 'TYPE_ID') THEN
 			ALTER TABLE ADDRESS DROP COLUMN TYPE_ID;
 		END IF;
 		IF EXISTS (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA='openiam' and table_name = 'PHONE' AND column_name  = 'TYPE_ID') THEN
 			ALTER TABLE PHONE DROP COLUMN TYPE_ID;
 		END IF;
 		IF EXISTS (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA='openiam' and table_name = 'PHONE' AND column_name  = 'PHONE_TYPE') THEN
 			ALTER TABLE PHONE DROP COLUMN PHONE_TYPE;
 		END IF;
	END$$
DELIMITER ;

call DROP_CONTACT_INFO_CONSTRAINT();
DROP PROCEDURE DROP_CONTACT_INFO_CONSTRAINT;


DELETE FROM METADATA_TYPE WHERE GROUPING IN ('EMAIL', 'PHONE', 'ADDRESS');  

INSERT INTO METADATA_TYPE(TYPE_ID,DESCRIPTION,ACTIVE,GROUPING)
VALUES('WORK_EMAIL','Work Email','Y','EMAIL'),
      ('PRIMARY_EMAIL','Primary Email','Y','EMAIL'),
      ('HOME_EMAIL','Home Email','Y','EMAIL');

INSERT INTO METADATA_TYPE(TYPE_ID,DESCRIPTION,ACTIVE,GROUPING)
VALUES('OFFICE_PHONE','Office phone','Y','PHONE'),
      ('CELL_PHONE','Cell phone','Y','PHONE'),
      ('HOME_PHONE','Home phone','Y','PHONE');


INSERT INTO METADATA_TYPE(TYPE_ID,DESCRIPTION,ACTIVE,GROUPING)
VALUES('OFFICE_ADDRESS','Office Address','Y','ADDRESS'),
      ('HOME_ADDRESS','Home Address','Y','ADDRESS');

ALTER TABLE EMAIL_ADDRESS ADD COLUMN TYPE_ID VARCHAR(32) NOT NULL;
ALTER TABLE ADDRESS ADD COLUMN TYPE_ID VARCHAR(32) NOT NULL;
ALTER TABLE PHONE ADD COLUMN TYPE_ID VARCHAR(32) NOT NULL;

UPDATE EMAIL_ADDRESS SET TYPE_ID='WORK_EMAIL';
UPDATE ADDRESS SET TYPE_ID='OFFICE_ADDRESS';
UPDATE PHONE SET TYPE_ID='OFFICE_PHONE';


ALTER TABLE EMAIL_ADDRESS ADD CONSTRAINT EMAIL_ADDRESS_TYPE_FK
  FOREIGN KEY (TYPE_ID) REFERENCES METADATA_TYPE(TYPE_ID); 
ALTER TABLE ADDRESS ADD CONSTRAINT ADDRESS_TYPE_FK
  FOREIGN KEY (TYPE_ID) REFERENCES METADATA_TYPE(TYPE_ID);
ALTER TABLE PHONE ADD CONSTRAINT PHONE_TYPE_FK
  FOREIGN KEY (TYPE_ID) REFERENCES METADATA_TYPE(TYPE_ID);



commit;
use openiam;

UPDATE RESOURCE_PROP SET PROP_VALUE = 'Managed System' WHERE PROP_VALUE = 'Managed Resource'; 
UPDATE RESOURCE_PROP SET PROP_VALUE = 'Create Managed System' WHERE PROP_VALUE = 'Create New Managed System';
UPDATE RESOURCE_PROP SET PROP_VALUE = 'Managed system rules' WHERE PROP_VALUE = 'Manages system rules'; 
commit;
use openiam;

DROP TABLE IF EXISTS REPORT_PARAMETER_TYPE;
DROP TABLE IF EXISTS REPORT_INFO;
DROP TABLE IF EXISTS REPORT_CRITERIA_PARAMETER;
DROP TABLE IF EXISTS REPORT_SUBSCRIPTIONS;
DROP TABLE IF EXISTS REPORT_SUB_CRITERIA_PARAM;

CREATE TABLE REPORT_PARAMETER_TYPE (
  RCPT_ID varchar(100) DEFAULT NULL,
  TYPE_NAME varchar(100) DEFAULT NULL,
  TYPE_DESCRIPTION varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

CREATE TABLE REPORT_INFO (
  REPORT_INFO_ID varchar(32) NOT NULL,
  REPORT_NAME varchar(64) NOT NULL,
  DATASOURCE_FILE_PATH varchar(255) NOT NULL,
  REPORT_FILE_PATH varchar(255) DEFAULT NULL,
  PRIMARY KEY (REPORT_INFO_ID),
  UNIQUE KEY REPORT_NAME (REPORT_NAME)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

CREATE TABLE  REPORT_CRITERIA_PARAMETER(
  RCP_ID varchar(32) NOT NULL,
  REPORT_INFO_ID varchar(32) NOT NULL,
  PARAM_NAME varchar(64) NOT NULL,
  PARAM_VALUE varchar(64) DEFAULT NULL,
  RCPT_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (RCP_ID)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;


CREATE TABLE REPORT_SUBSCRIPTIONS (
  REPORT_SUB_ID varchar(32) NOT NULL,
  REPORT_INFO_ID varchar(45) DEFAULT NULL,
  REPORT_NAME varchar(64) NOT NULL,
  DELIVERY_METHOD varchar(45) DEFAULT NULL,
  DELIVERY_FORMAT varchar(45) DEFAULT NULL,
  DELIVERY_AUDIENCE varchar(45) DEFAULT NULL,
  STATUS varchar(45) DEFAULT NULL,
  USERID varchar(45) DEFAULT NULL,
  PRIMARY KEY (REPORT_SUB_ID)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;


CREATE TABLE  REPORT_SUB_CRITERIA_PARAM (
  RSCP_ID varchar(45) NOT NULL,
  RCP_ID varchar(32) DEFAULT NULL,
  REPORT_SUB_ID varchar(32) DEFAULT NULL,
  PARAM_NAME varchar(64) DEFAULT NULL,
  PARAM_VALUE varchar(64) DEFAULT NULL,
  PRIMARY KEY (RSCP_ID)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;





commit;
use openiam;

DELETE FROM  REPORT_PARAMETER_TYPE;

INSERT INTO REPORT_PARAMETER_TYPE
(RCPT_ID,
TYPE_NAME,
TYPE_DESCRIPTION)
VALUES
(
1,
'STRING',
'String'
);

INSERT INTO REPORT_PARAMETER_TYPE
(RCPT_ID,
TYPE_NAME,
TYPE_DESCRIPTION)
VALUES
(
2,
'DATE',
'Date'
);

INSERT INTO REPORT_PARAMETER_TYPE
(RCPT_ID,
TYPE_NAME,
TYPE_DESCRIPTION)
VALUES
(
3,
'INTEGER',
'Integer'
);
commit;
use openiam;

DELETE FROM  res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('SELFSERVICE_REPORT', 'SUBSCRIBE',  'VIEW', 'SELF_SUB_REPORT_NEW', 'SELF_VIEW_REPORT_NEW','SELF_SUB_REPORT_NEW','SELF_VIEW_REPORT_ROOT');

DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('SELFSERVICE_REPORT', 'SUBSCRIBE',  'VIEW', 'SELF_SUB_REPORT_ROOT', 'SELF_VIEW_REPORT_NEW','SELF_SUB_REPORT_NEW','SELF_VIEW_REPORT_ROOT');

DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN ('SELFSERVICE_REPORT', 'SUBSCRIBE',  'VIEW', 'SELF_SUB_REPORT_ROOT', 'SELF_VIEW_REPORT_NEW','SELF_SUB_REPORT_NEW','SELF_VIEW_REPORT_ROOT');

DELETE FROM RES WHERE RESOURCE_ID IN('SELFSERVICE_REPORT', 'SUBSCRIBE',  'VIEW', 'SELF_SUB_REPORT_ROOT', 'SELF_VIEW_REPORT_NEW','SELF_SUB_REPORT_NEW','SELF_VIEW_REPORT_ROOT');

/* Selfservice Report Menu */

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION,  DISPLAY_ORDER, IS_PUBLIC, IS_SSL) VALUES('SELFSERVICE_REPORT', 'MENU_ITEM', 'SELFSERVICE_REPORT', 'Report', 5, 'Y', 'N');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERVICE_REPORT_PUB', 'SELFSERVICE_REPORT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERVICE_REPORT_DESC', 'SELFSERVICE_REPORT', 'MENU_DISPLAY_NAME', 'Report');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('SELFSERVICE', 'SELFSERVICE_REPORT');

/* SelfService Report Subscibe SubMenu */

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL, IS_PUBLIC, IS_SSL) VALUES ('SUBSCRIBE', 'MENU_ITEM', 'Subscribe', 'SUBSCRIBE', 1, '/selfservice/subscribe.html', 'Y', 'N');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SUBSCRIBE_MENU_PUB', 'SUBSCRIBE', 'MENU_IS_PUBLIC', 'true');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SUBSCRIBE_MENU_DESC', 'SUBSCRIBE', 'MENU_DISPLAY_NAME', 'Subscribe');

INSERT INTO  res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('SELFSERVICE_REPORT', 'SUBSCRIBE');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL, IS_PUBLIC, IS_SSL) VALUES ('VIEW', 'MENU_ITEM', 'View', 'VIEW', 2, '/selfservice/view.html', 'Y', 'N');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('VIEW_MENU_PUB', 'VIEW', 'MENU_IS_PUBLIC', 'true');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('VIEW_MENU_DESC', 'VIEW', 'MENU_DISPLAY_NAME', 'View');

INSERT INTO  res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('SELFSERVICE_REPORT', 'VIEW');

/*subscribe report sub root menu*/

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('SELF_SUB_REPORT_ROOT', 'MENU_ITEM', 'SELF_SUB_REPORT_ROOT', 'Subscribe Report Root Menu');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELF_SUB_REPORT_ROOT_PUB', 'SELF_SUB_REPORT_ROOT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELF_SUB_REPORT_ROOT_DESC', 'SELF_SUB_REPORT_ROOT', 'MENU_DISPLAY_NAME', 'Subscribe Report Root Menu');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('SELF_SUB_REPORT_NEW', 'MENU_ITEM', 'SELF_SUB_REPORT_NEW', 'New Subscribe Report', '/selfservice/editSubscribeReport.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELF_SUB_REPORT_NEW_PUB', 'SELF_SUB_REPORT_NEW', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELF_SUB_REPORT_NEW_DSC', 'SELF_SUB_REPORT_NEW', 'MENU_DISPLAY_NAME', 'Subscribe Report');

INSERT INTO  res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('SELF_SUB_REPORT_ROOT', 'SELF_SUB_REPORT_NEW');

/* View Report sub root menu */

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('SELF_VIEW_REPORT_ROOT', 'MENU_ITEM', 'SELF_VIEW_REPORT_ROOT', 'View Report Root Menu');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELF_VIEW_REPORT_ROOT_PUB', 'SELF_VIEW_REPORT_ROOT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELF_VIEW_REPORT_ROOT_DESC', 'SELF_VIEW_REPORT_ROOT', 'MENU_DISPLAY_NAME', 'View Report Root Menu');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('SELF_VIEW_REPORT_NEW', 'MENU_ITEM', 'SELF_VIEW_REPORT_NEW', 'New Subscribe Report', '/selfservice/editViewReport.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELF_VIEW_REPORT_NEW_PUB', 'SELF_VIEW_REPORT_NEW', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELF_VIEW_REPORT_NEW_DSC', 'SELF_VIEW_REPORT_NEW', 'MENU_DISPLAY_NAME', 'Create New View Report');

INSERT INTO res_to_res_membership(RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('SELF_VIEW_REPORT_ROOT', 'SELF_VIEW_REPORT_NEW');


commit;
use openiam;

UPDATE RES SET URL='/idp/changePassword.html' WHERE RESOURCE_ID='CHNGPSWD';
commit;
use openiam;


DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN ('SELFSERVE_SUP_SUB');
DELETE FROM RESOURCE_USER WHERE RESOURCE_ID IN ('SELFSERVE_SUP_SUB');
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN ('SELFSERVE_SUP_SUB');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN ('SELFSERVE_SUP_SUB');
DELETE FROM RESOURCE_GROUP WHERE RESOURCE_ID IN ('SELFSERVE_SUP_SUB');
DELETE FROM RES WHERE RESOURCE_ID IN ('SELFSERVE_SUP_SUB');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, URL) VALUES ('SELFSERVE_SUP_SUB', 'MENU_ITEM', 'Superiors & Subordinates', 'SELFSERVE_SUP_SUB', '/selfservice/supSub.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERVE_SUP_SUB_PUB', 'SELFSERVE_SUP_SUB', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERVE_SUP_SUB_DESC', 'SELFSERVE_SUP_SUB', 'MENU_DISPLAY_NAME', 'Superiors & Subordinates');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('SELFSERV_USER_EDIT_ROOT', 'SELFSERVE_SUP_SUB');

commit;
use openiam;

UPDATE RES SET URL = '/webconsole/mngsysAttributes.html' WHERE RESOURCE_ID = 'MNGSYS_ATTR_PAGE';
commit;
use openiam;

ALTER TABLE SYNCH_CONFIG ADD COLUMN USE_SYSTEM_PATH CHAR(1) DEFAULT 'N'; 
commit;
use openiam;

DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN ('SELF_USERIDENTITY', 'SELF_LOGIN_LIST', 'SELF_LOGIN_NEW', 'SELF_LOGIN_LIST', 'SELF_LOGIN_ROOT', 'SELFSER_USER_LOGIN', 'SELFSER_USER_NEW_LOGIN');
DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN ('SELF_USERIDENTITY', 'SELF_LOGIN_LIST', 'SELF_LOGIN_NEW', 'SELF_LOGIN_LIST', 'SELF_LOGIN_ROOT', 'SELFSER_USER_LOGIN', 'SELFSER_USER_NEW_LOGIN');
DELETE FROM RESOURCE_USER WHERE RESOURCE_ID IN ('SELF_USERIDENTITY', 'SELF_LOGIN_LIST', 'SELF_LOGIN_NEW', 'SELF_LOGIN_LIST', 'SELF_LOGIN_ROOT', 'SELFSER_USER_LOGIN', 'SELFSER_USER_NEW_LOGIN');
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN ('SELF_USERIDENTITY', 'SELF_LOGIN_LIST', 'SELF_LOGIN_NEW', 'SELF_LOGIN_LIST', 'SELF_LOGIN_ROOT', 'SELFSER_USER_LOGIN', 'SELFSER_USER_NEW_LOGIN');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN ('SELF_USERIDENTITY', 'SELF_LOGIN_LIST', 'SELF_LOGIN_NEW', 'SELF_LOGIN_LIST', 'SELF_LOGIN_ROOT', 'SELFSER_USER_LOGIN', 'SELFSER_USER_NEW_LOGIN');
DELETE FROM RESOURCE_GROUP WHERE RESOURCE_ID IN ('SELF_USERIDENTITY', 'SELF_LOGIN_LIST', 'SELF_LOGIN_NEW', 'SELF_LOGIN_LIST', 'SELF_LOGIN_ROOT', 'SELFSER_USER_LOGIN', 'SELFSER_USER_NEW_LOGIN');
DELETE FROM RES WHERE RESOURCE_ID IN ('SELF_USERIDENTITY', 'SELF_LOGIN_LIST', 'SELF_LOGIN_NEW', 'SELF_LOGIN_LIST', 'SELF_LOGIN_ROOT', 'SELFSER_USER_LOGIN', 'SELFSER_USER_NEW_LOGIN');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, URL) VALUES ('SELFSER_USER_LOGIN', 'MENU_ITEM', 'Identities', 'SELFSER_USER_LOGIN', '/selfservice/userIdenties.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSER_USER_LOGIN_PUB', 'SELFSER_USER_LOGIN', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSER_USER_LOGIN_DESC', 'SELFSER_USER_LOGIN', 'MENU_DISPLAY_NAME', 'Identities');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, URL) VALUES ('SELFSER_USER_NEW_LOGIN', 'MENU_ITEM', 'Create New Identity', 'SELFSER_USER_NEW_LOGIN', '/selfservice/identity.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSER_USER_NEW_LOGIN_PUB', 'SELFSER_USER_NEW_LOGIN', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSER_USER_NEW_LOGIN_DESC', 'SELFSER_USER_NEW_LOGIN', 'MENU_DISPLAY_NAME', 'Create New Identity');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('SELFSERV_USER_EDIT_ROOT', 'SELFSER_USER_LOGIN');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('SELFSERV_USER_EDIT_ROOT', 'SELFSER_USER_NEW_LOGIN');
commit;
use openiam;

ALTER TABLE LANGUAGE ADD COLUMN IS_DEFAULT CHAR(1) NOT NULL DEFAULT 'N'; 

UPDATE LANGUAGE SET IS_DEFAULT='Y' WHERE ID='1';
commit;
use openiam;

ALTER TABLE URI_PATTERN_META_VALUE MODIFY AM_RES_ATTRIBUTE_ID VARCHAR(32) NULL;
commit;
use openiam;

UPDATE POLICY_DEF_PARAM SET PARAM_GROUP='PSWD_COMPOSITION' WHERE DEF_PARAM_ID='180';

UPDATE POLICY_DEF_PARAM SET PARAM_GROUP='PSWD_COMPOSITION' WHERE DEF_PARAM_ID='181';

commit;
use openiam;

ALTER TABLE COMPANY DROP FOREIGN KEY FK_COMPANY_METADATA_TYPE;
ALTER TABLE COMPANY DROP COLUMN TYPE_ID, DROP INDEX FK_COMPANY_METADATA_TYPE;


commit;
use openiam;

ALTER TABLE AUTH_RESOURCE_ATTRIBUTE_MAP MODIFY AM_RES_ATTRIBUTE_ID VARCHAR(32) NULL;
commit;
use openiam;

ALTER TABLE USER_ROLE DROP COLUMN CREATED_BY, DROP COLUMN END_DATE, DROP COLUMN START_DATE, DROP COLUMN CREATE_DATE, DROP COLUMN STATUS, DROP COLUMN USER_ROLE_ID;
ALTER TABLE USER_GRP DROP COLUMN CREATED_BY, DROP COLUMN END_DATE, DROP COLUMN START_DATE, DROP COLUMN CREATE_DATE, DROP COLUMN STATUS, DROP COLUMN USER_GRP_ID;
ALTER TABLE RESOURCE_USER DROP COLUMN END_DATE, DROP COLUMN STATUS, DROP COLUMN OP_AGAINST_ROLE, DROP COLUMN PRIVILEGE_LIST, DROP COLUMN RESOURCE_USER_ID, CHANGE COLUMN START_DATE START_DATE DATETIME NULL DEFAULT NULL , DROP PRIMARY KEY , ADD PRIMARY KEY (RESOURCE_ID, USER_ID);
ALTER TABLE USER_AFFILIATION DROP COLUMN CREATED_BY, DROP COLUMN END_DATE, DROP COLUMN START_DATE, DROP COLUMN STATUS, DROP COLUMN USER_AFFILIATION_ID, CHANGE COLUMN CREATE_DATE CREATE_DATE DATETIME NULL DEFAULT NULL , DROP PRIMARY KEY , ADD PRIMARY KEY (COMPANY_ID, USER_ID);
ALTER TABLE RESOURCE_GROUP DROP COLUMN END_DATE, DROP COLUMN RES_GROUP_ID, DROP PRIMARY KEY , ADD PRIMARY KEY (RESOURCE_ID, GRP_ID);
ALTER TABLE RESOURCE_ROLE DROP COLUMN END_DATE;


commit;
use openiam;

DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN ('RES_ATTR_PAGE', 'RESAPPROVER', 'RESENTITLEMENT', 'ROLE_ATTRIBUTES', 'GROUP_ATTRIBUTES', 'ORG_ATTRIBUTES', 'MNGSYS_ATTR_PAGE', '255');
DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN ('RES_ATTR_PAGE', 'RESAPPROVER', 'RESENTITLEMENT', 'ROLE_ATTRIBUTES', 'GROUP_ATTRIBUTES', 'ORG_ATTRIBUTES', 'MNGSYS_ATTR_PAGE', '255');
DELETE FROM RESOURCE_USER WHERE RESOURCE_ID IN ('RES_ATTR_PAGE', 'RESAPPROVER', 'RESENTITLEMENT', 'ROLE_ATTRIBUTES', 'GROUP_ATTRIBUTES', 'ORG_ATTRIBUTES', 'MNGSYS_ATTR_PAGE', '255');
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN ('RES_ATTR_PAGE', 'RESAPPROVER', 'RESENTITLEMENT', 'ROLE_ATTRIBUTES', 'GROUP_ATTRIBUTES', 'ORG_ATTRIBUTES', 'MNGSYS_ATTR_PAGE', '255');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN ('RES_ATTR_PAGE', 'RESAPPROVER', 'RESENTITLEMENT', 'ROLE_ATTRIBUTES', 'GROUP_ATTRIBUTES', 'ORG_ATTRIBUTES', 'MNGSYS_ATTR_PAGE', '255');
DELETE FROM RESOURCE_GROUP WHERE RESOURCE_ID IN ('RES_ATTR_PAGE', 'RESAPPROVER', 'RESENTITLEMENT', 'ROLE_ATTRIBUTES', 'GROUP_ATTRIBUTES', 'ORG_ATTRIBUTES', 'MNGSYS_ATTR_PAGE', '255');
DELETE FROM RES WHERE RESOURCE_ID IN ('RES_ATTR_PAGE', 'RESAPPROVER', 'RESENTITLEMENT', 'ROLE_ATTRIBUTES', 'GROUP_ATTRIBUTES', 'ORG_ATTRIBUTES', 'MNGSYS_ATTR_PAGE', '255');

DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('ACCESSCENTER');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('ACCESSCENTER_MENU_DISPLAY', 'ACCESSCENTER', 'MENU_DISPLAY_NAME', 'Access Management');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('ACCESSCENTER_MENU_ICON', 'ACCESSCENTER', 'MENU_ICON', '/openiam-ui-static/images/common/icons/access_control.png');
commit;
use openiam;


DELETE FROM POLICY_ATTRIBUTE WHERE DEF_PARAM_ID IN(131,141, 180, 181, 182, 183);
DELETE FROM POLICY_DEF_PARAM WHERE DEF_PARAM_ID IN(131,141, 182,183);


INSERT INTO POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, VALUE1, REQUIRED) VALUES ('4052', '180', '4000', 'MIN_WORDS_PASSPHRASE', '', 'Y');

INSERT INTO POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, VALUE1, REQUIRED) VALUES ('4053', '181', '4000', 'REPEAT_SAME_WORD_PASSPHRASE', '', 'Y');

INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, PARAM_GROUP, POLICY_PARAM_HANDLER) VALUES ('182', '100', 'LIMIT_NUM_REPEAT_CHAR', 'Limit the repetition of same character', 'PSWD_COMPOSITION', 'org.openiam.idm.srvc.pswd.rule.LimitNumberRepeatCharRule');


INSERT INTO POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, REQUIRED) VALUES ('4054', '182', '4000', 'LIMIT_NUM_REPEAT_CHAR', 'Y');

INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, PARAM_GROUP, POLICY_PARAM_HANDLER) VALUES ('183', '100', 'PWD_PASSWORD', 'Cannot repeat same Password', 'PSWD_COMPOSITION','org.openiam.idm.srvc.pswd.rule.PasswordNotPasswordRule');

INSERT INTO POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, REQUIRED) VALUES ('4200', '183', '4000', 'PWD_PASSWORD', 'Y');




commit;
use openiam;

ALTER TABLE MANAGED_SYS DROP FOREIGN KEY FK_MNG_SYS_PROV_CON ;

ALTER TABLE MANAGED_SYS ADD CONSTRAINT FK_MNG_SYS_PROV_CON FOREIGN KEY (CONNECTOR_ID ) REFERENCES PROVISION_CONNECTOR (CONNECTOR_ID );

ALTER TABLE AUTH_PROVIDER DROP FOREIGN KEY FK_MNG_AUTH_PROVIDER ;

ALTER TABLE AUTH_PROVIDER ADD CONSTRAINT FK_MNG_AUTH_PROVIDER FOREIGN KEY (MANAGED_SYS_ID ) REFERENCES MANAGED_SYS (MANAGED_SYS_ID );

ALTER TABLE MNG_SYS_OBJECT_MATCH DROP FOREIGN KEY FK_MNG_SYS_OBJ_MATC ;

ALTER TABLE MNG_SYS_OBJECT_MATCH ADD CONSTRAINT FK_MNG_SYS_OBJ_MATC FOREIGN KEY (MANAGED_SYS_ID ) REFERENCES MANAGED_SYS (MANAGED_SYS_ID );

ALTER TABLE AUTH_PROVIDER_ATTRIBUTE DROP FOREIGN KEY FK_PROVIDER_PROVIDER_ATTRIBUTE ;

ALTER TABLE AUTH_PROVIDER_ATTRIBUTE ADD CONSTRAINT FK_PROVIDER_PROVIDER_ATTRIBUTE FOREIGN KEY (PROVIDER_ID ) REFERENCES AUTH_PROVIDER (PROVIDER_ID );



commit;
use openiam;

ALTER TABLE GRP DROP COLUMN OWNER_ID;

ALTER TABLE GRP DROP COLUMN PROVISION_METHOD;

ALTER TABLE GRP DROP COLUMN PROVISION_OBJ_NAME;

ALTER TABLE GRP DROP FOREIGN KEY FK_GRP_METADATA_TYPE;

ALTER TABLE GRP DROP COLUMN TYPE_ID;

ALTER TABLE GRP DROP COLUMN INTERNAL_GROUP_ID;

ALTER TABLE GRP DROP COLUMN EXTERNAL_GRP_NAME;

ALTER TABLE GRP ADD COLUMN (MANAGED_SYS_ID VARCHAR(32) NULL);

ALTER TABLE GRP ADD CONSTRAINT GRP_MNG_SYS_FK FOREIGN KEY (MANAGED_SYS_ID ) REFERENCES MANAGED_SYS (MANAGED_SYS_ID );
commit;
use openiam;

DELETE FROM POLICY_ATTRIBUTE WHERE POLICY_ATTR_ID IN('NUM_DAYS_FRGT_PWD_TOKEN_VALID');
DELETE FROM POLICY_DEF_PARAM WHERE DEF_PARAM_ID IN('NUM_DAYS_FRGT_PWD_TOKEN_VALID');

INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, PARAM_GROUP) VALUES ('NUM_DAYS_FRGT_PWD_TOKEN_VALID', '100', 'NUM_DAYS_FORGET_PWD_TOKEN_VALID', 'Number of days the forgot password token is valid', 'FORGET_PSWD');
INSERT INTO POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, REQUIRED) VALUES ('NUM_DAYS_FRGT_PWD_TOKEN_VALID', 'NUM_DAYS_FRGT_PWD_TOKEN_VALID', '4000', 'NUM_DAYS_FORGET_PWD_TOKEN_VALID', 'Y');
commit;
use openiam;

DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('WEB_REPORT', 'SELFSERVICE_REPORT');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('WEB_REPORT_DESC', 'WEB_REPORT', 'MENU_DISPLAY_NAME', 'Report');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('WEB_REPORT_PUB', 'WEB_REPORT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('WEB_REPORT_DISPLAY', 'WEB_REPORT', 'MENU_ICON', '/openiam-ui-static/images/common/icons/reports.png');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('SELFSERVICE_REPORT_DESC', 'SELFSERVICE_REPORT', 'MENU_DISPLAY_NAME', 'Report');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('SELFSERVICE_REPORT_PUB', 'SELFSERVICE_REPORT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('SELFSERVICE_REPORT_DISPLAY', 'SELFSERVICE_REPORT', 'MENU_ICON', '/openiam-ui-static/images/common/icons/reports.png');
commit;
use openiam;

DROP TABLE IF EXISTS IDM_AUDIT_LOG_CUSTOM;
DROP TABLE IF EXISTS IDM_AUDIT_LOG;

DROP TABLE IF EXISTS OPENIAM_LOG_LOG_MEMBERSHIP;
DROP TABLE IF EXISTS OPENIAM_LOG_ATTRIBUTE;
DROP TABLE IF EXISTS OPENIAM_LOG_TARGET;
DROP TABLE IF EXISTS OPENIAM_LOG;

CREATE TABLE OPENIAM_LOG (
	OPENIAM_LOG_ID VARCHAR(32) NOT NULL,
	USER_ID VARCHAR(32) NULL,
	PRINCIPAL VARCHAR(320) NULL,
	MANAGED_SYS_ID VARCHAR(32) NULL,
	CREATED_DATETIME DATETIME NULL,
	SOURCE VARCHAR(50) NULL,
	CLIENT_IP VARCHAR(50) NULL,
	NODE_ID VARCHAR(50) NULL,
	LOG_ACTION VARCHAR(50) NULL,
	RESULT VARCHAR(50) NULL,
	SESSION_ID VARCHAR(100) NULL,
	HASH VARCHAR(100) NOT NULL,
	CORRELATION_ID VARCHAR(32) NULL,
	PRIMARY KEY(OPENIAM_LOG_ID)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

CREATE TABLE OPENIAM_LOG_TARGET (
	OPENIAM_LOG_TARGET_ID VARCHAR(32) NOT NULL,
	OPENIAM_LOG_ID VARCHAR(32) NOT NULL,
	TARGET_ID VARCHAR(32) NULL,
	TARGET_TYPE VARCHAR(70) NULL,
	PRIMARY KEY(OPENIAM_LOG_TARGET_ID)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

CREATE TABLE OPENIAM_LOG_ATTRIBUTE (
	OPENIAM_LOG_ATTRIBUTE_ID VARCHAR(32) NOT NULL,
	OPENIAM_LOG_ID VARCHAR(32) NOT NULL,
	NAME VARCHAR(100) NULL,
	VALUE TEXT NULL,
	PRIMARY KEY(OPENIAM_LOG_ATTRIBUTE_ID)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

CREATE TABLE OPENIAM_LOG_LOG_MEMBERSHIP (
	OPENIAM_LOG_ID VARCHAR(32) NOT NULL,
	OPENIAM_MEMBER_LOG_ID VARCHAR(32) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

/*
AUDIT_USER_ROLE:
ROLE_ID
USER_ID
DATE
ACTION
 
AUDIT_USER_GRP
GRP_ID
USER_ID
DATE
ACTION 

AUDIT_USER_AFFILIATION
COMPANY_ID
USER_ID
DATE
ACTION
 
AUDIT_RESOURCE_USER
RESOURCE_ID
USER_ID
DATE
ACTION
*/
commit;
USE openiam;

DELETE FROM RESOURCE_PROP WHERE  RESOURCE_ID = 'SELFSRVS_ACCESS_MNGMNT_ORG';
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID = 'SELFSRVS_ACCESS_MNGMNT_ORG';
DELETE FROM RES WHERE RESOURCE_ID = 'SELFSRVS_ACCESS_MNGMNT_ORG';

DELETE FROM RESOURCE_PROP WHERE  RESOURCE_ID = 'SELFSRVS_ACCESS_MNGMNT';
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID = 'SELFSRVS_ACCESS_MNGMNT';
DELETE FROM RES WHERE RESOURCE_ID = 'SELFSRVS_ACCESS_MNGMNT';

DELETE FROM RESOURCE_PROP WHERE  RESOURCE_ID = 'SELF_SUB_ORGS_NEW';
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID = 'SELF_SUB_ORGS_NEW';
DELETE FROM RES WHERE RESOURCE_ID = 'SELF_SUB_ORGS_NEW';

DELETE FROM RESOURCE_PROP WHERE  RESOURCE_ID = 'SELF_SUB_ORGS_SEARCH';
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID = 'SELF_SUB_ORGS_SEARCH';
DELETE FROM RES WHERE RESOURCE_ID = 'SELF_SUB_ORGS_SEARCH';

DELETE FROM RESOURCE_PROP WHERE  RESOURCE_ID = 'SELF_SUB_ORGS_EDIT';
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID = 'SELF_SUB_ORGS_EDIT';
DELETE FROM RES WHERE RESOURCE_ID = 'SELF_SUB_ORGS_EDIT';

DELETE FROM RESOURCE_PROP WHERE  RESOURCE_ID = 'SELF_SUB_ORGS_MEMEBERSHIP';
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID = 'SELF_SUB_ORGS_MEMEBERSHIP';
DELETE FROM RES WHERE RESOURCE_ID = 'SELF_SUB_ORGS_MEMEBERSHIP';

DELETE FROM RES WHERE RESOURCE_ID = 'SELF_SUB_ORGS_ROOT';
DELETE FROM RES WHERE RESOURCE_ID = 'SELF_SUB_ORGS_EDIT_ROOT';


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL) VALUES ('SELFSRVS_ACCESS_MNGMNT', 'MENU_ITEM', 'Access Managment', 'SELFSRVS_ACCESS_MNGMNT', 6, '');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRVS_ACCESS_MNGMNT_DESC', 'SELFSRVS_ACCESS_MNGMNT', 'MENU_DISPLAY_NAME', 'Access managment');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRVS_ACCESS_MNGMNT_MENU_ICON', 'SELFSRVS_ACCESS_MNGMNT', 'MENU_ICON', '/openiam-ui-static/images/common/icons/access_control.png');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRVS_ACCESS_MNGMNT_MENU_PUB', 'SELFSRVS_ACCESS_MNGMNT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO res_to_res_membership (MEMBER_RESOURCE_ID, RESOURCE_ID) VALUES ('SELFSRVS_ACCESS_MNGMNT', 'SELFSERVICE');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL) VALUES ('SELFSRVS_ACCESS_MNGMNT_ORG', 'MENU_ITEM', 'Selfservice organization', 'SELFSRVS_ACCESS_MNGMNT_ORG', 1, '/selfservice/organizations.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRVS_ACCESS_MNGMNT_ORG_DESC', 'SELFSRVS_ACCESS_MNGMNT_ORG', 'MENU_DISPLAY_NAME', 'Organizations');
INSERT INTO res_to_res_membership (MEMBER_RESOURCE_ID, RESOURCE_ID) VALUES ('SELFSRVS_ACCESS_MNGMNT_ORG', 'SELFSRVS_ACCESS_MNGMNT');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL) VALUES ('SELF_SUB_ORGS_ROOT', 'MENU_ITEM', 'organizations menu', 'SELF_SUB_ORGS_ROOT', 2, '');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL) VALUES ('SELF_SUB_ORGS_NEW', 'MENU_ITEM', 'add organization', 'SELF_SUB_ORGS_NEW', 1, '/selfservice/editOrganization.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELF_SUB_ORGS_NEW_DESC', 'SELF_SUB_ORGS_NEW', 'MENU_DISPLAY_NAME', 'New Organization');
INSERT INTO res_to_res_membership (MEMBER_RESOURCE_ID, RESOURCE_ID) VALUES ('SELF_SUB_ORGS_NEW', 'SELF_SUB_ORGS_ROOT');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL) VALUES ('SELF_SUB_ORGS_SEARCH', 'MENU_ITEM', 'add organization', 'SELF_SUB_ORGS_SEARCH', 1, '/selfservice/organizations.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELF_SUB_ORGS_SEARCH_DESC', 'SELF_SUB_ORGS_SEARCH', 'MENU_DISPLAY_NAME', 'Search Organization');
INSERT INTO res_to_res_membership (MEMBER_RESOURCE_ID, RESOURCE_ID) VALUES ('SELF_SUB_ORGS_SEARCH', 'SELF_SUB_ORGS_ROOT');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL) VALUES ('SELF_SUB_ORGS_EDIT_ROOT', 'MENU_ITEM', 'organizations menu', 'SELF_SUB_ORGS_EDIT_ROOT', 2, '');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL) VALUES ('SELF_SUB_ORGS_EDIT', 'MENU_ITEM', 'add organization', 'SELF_SUB_ORGS_EDIT', 1, '/selfservice/editOrganization.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELF_SUB_ORGS_EDIT_DESC', 'SELF_SUB_ORGS_EDIT', 'MENU_DISPLAY_NAME', 'Edit Organization');
INSERT INTO res_to_res_membership (MEMBER_RESOURCE_ID, RESOURCE_ID) VALUES ('SELF_SUB_ORGS_EDIT', 'SELF_SUB_ORGS_EDIT_ROOT');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL) VALUES ('SELF_SUB_ORGS_MEMEBERSHIP', 'MENU_ITEM', 'add organization', 'SELF_SUB_ORGS_MEMEBERSHIP', 1, '/selfservice/membership-organizations.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELF_SUB_ORGS_MEMEBERSHIP_DESC', 'SELF_SUB_ORGS_MEMEBERSHIP', 'MENU_DISPLAY_NAME', 'Organization Membership');
INSERT INTO res_to_res_membership (MEMBER_RESOURCE_ID, RESOURCE_ID) VALUES ('SELF_SUB_ORGS_MEMEBERSHIP', 'SELF_SUB_ORGS_EDIT_ROOT');

commit;
use openiam;

DELETE FROM MNG_SYS_OBJECT_MATCH WHERE MANAGED_SYS_ID IN('SELFSERVICE_NEWHIRE', 'SELFSERVICE_CREATEREQUEST', 'SELFSERVICE_PROFILE', '200', '201', '202');
DELETE FROM MANAGED_SYS_ATTRIBUTE WHERE MANAGED_SYS_ID IN('SELFSERVICE_NEWHIRE', 'SELFSERVICE_CREATEREQUEST', 'SELFSERVICE_PROFILE', '200', '201', '202');
DELETE FROM MNG_SYS_GROUP WHERE MANAGED_SYS_ID IN('SELFSERVICE_NEWHIRE', 'SELFSERVICE_CREATEREQUEST', 'SELFSERVICE_PROFILE', '200', '201', '202');
DELETE FROM REQ_APPROVER WHERE MANAGED_SYS_ID IN('SELFSERVICE_NEWHIRE', 'SELFSERVICE_CREATEREQUEST', 'SELFSERVICE_PROFILE', '200', '201', '202');
DELETE FROM MNG_SYS_LIST WHERE MANAGED_SYS_ID IN('SELFSERVICE_NEWHIRE', 'SELFSERVICE_CREATEREQUEST', 'SELFSERVICE_PROFILE', '200', '201', '202');
DELETE FROM ATTRIBUTE_MAP WHERE MANAGED_SYS_ID IN('SELFSERVICE_NEWHIRE', 'SELFSERVICE_CREATEREQUEST', 'SELFSERVICE_PROFILE', '200', '201', '202');
DELETE FROM SYNCH_CONFIG WHERE MANAGED_SYS_ID IN('SELFSERVICE_NEWHIRE', 'SELFSERVICE_CREATEREQUEST', 'SELFSERVICE_PROFILE', '200', '201', '202');
DELETE FROM SYNCH_CONFIG WHERE MATCH_MANAGED_SYS_ID IN('SELFSERVICE_NEWHIRE', 'SELFSERVICE_CREATEREQUEST', 'SELFSERVICE_PROFILE', '200', '201', '202');
DELETE FROM AUTH_PROVIDER WHERE MANAGED_SYS_ID IN('SELFSERVICE_NEWHIRE', 'SELFSERVICE_CREATEREQUEST', 'SELFSERVICE_PROFILE', '200', '201', '202');
DELETE FROM MANAGED_SYS_RULE WHERE MANAGED_SYS_ID IN('SELFSERVICE_NEWHIRE', 'SELFSERVICE_CREATEREQUEST', 'SELFSERVICE_PROFILE', '200', '201', '202');
DELETE FROM CONTENT_PROVIDER_SERVER WHERE CONTENT_PROVIDER_ID IN(
	SELECT CONTENT_PROVIDER_ID FROM CONTENT_PROVIDER WHERE MANAGED_SYS_ID IN('SELFSERVICE_NEWHIRE', 'SELFSERVICE_CREATEREQUEST', 'SELFSERVICE_PROFILE', '200', '201', '202')
);
DELETE FROM URI_PATTERN_META_VALUE WHERE URI_PATTERN_META_ID IN(
	SELECT URI_PATTERN_META_ID FROM URI_PATTERN_META WHERE URI_PATTERN_ID IN(
		SELECT URI_PATTERN_ID FROM URI_PATTERN WHERE CONTENT_PROVIDER_ID IN(	
			SELECT CONTENT_PROVIDER_ID FROM CONTENT_PROVIDER WHERE MANAGED_SYS_ID IN('SELFSERVICE_NEWHIRE', 'SELFSERVICE_CREATEREQUEST', 'SELFSERVICE_PROFILE', '200', '201', '202')
		)
	)
);
DELETE FROM URI_PATTERN_META WHERE URI_PATTERN_ID IN(
	SELECT URI_PATTERN_ID FROM URI_PATTERN WHERE CONTENT_PROVIDER_ID IN(	
		SELECT CONTENT_PROVIDER_ID FROM CONTENT_PROVIDER WHERE MANAGED_SYS_ID IN('SELFSERVICE_NEWHIRE', 'SELFSERVICE_CREATEREQUEST', 'SELFSERVICE_PROFILE', '200', '201', '202')
	)
);
DELETE FROM URI_PATTERN WHERE CONTENT_PROVIDER_ID IN(
	SELECT CONTENT_PROVIDER_ID FROM CONTENT_PROVIDER WHERE MANAGED_SYS_ID IN('SELFSERVICE_NEWHIRE', 'SELFSERVICE_CREATEREQUEST', 'SELFSERVICE_PROFILE', '200', '201', '202')
);
DELETE FROM CONTENT_PROVIDER WHERE MANAGED_SYS_ID IN('SELFSERVICE_NEWHIRE', 'SELFSERVICE_CREATEREQUEST', 'SELFSERVICE_PROFILE', '200', '201', '202');
DELETE FROM GRP WHERE MANAGED_SYS_ID IN('SELFSERVICE_NEWHIRE', 'SELFSERVICE_CREATEREQUEST', 'SELFSERVICE_PROFILE', '200', '201', '202');
DELETE FROM LOGIN WHERE MANAGED_SYS_ID IN('SELFSERVICE_NEWHIRE', 'SELFSERVICE_CREATEREQUEST', 'SELFSERVICE_PROFILE', '200', '201', '202');
DELETE FROM RES WHERE MANAGED_SYS_ID IN('SELFSERVICE_NEWHIRE', 'SELFSERVICE_CREATEREQUEST', 'SELFSERVICE_PROFILE', '200', '201', '202');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN (SELECT RESOURCE_ID FROM RES WHERE MANAGED_SYS_ID IN('SELFSERVICE_NEWHIRE', 'SELFSERVICE_CREATEREQUEST', 'SELFSERVICE_PROFILE', '200', '201', '202'));
DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN (SELECT RESOURCE_ID FROM RES WHERE MANAGED_SYS_ID IN('SELFSERVICE_NEWHIRE', 'SELFSERVICE_CREATEREQUEST', 'SELFSERVICE_PROFILE', '200', '201', '202'));
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN (SELECT RESOURCE_ID FROM RES WHERE MANAGED_SYS_ID IN('SELFSERVICE_NEWHIRE', 'SELFSERVICE_CREATEREQUEST', 'SELFSERVICE_PROFILE', '200', '201', '202'));
DELETE FROM MANAGED_SYS WHERE MANAGED_SYS_ID IN('SELFSERVICE_NEWHIRE', 'SELFSERVICE_CREATEREQUEST', 'SELFSERVICE_PROFILE', '200', '201', '202');
commit;
use openiam;

DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN ('SYNCLOG');
DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN ('SYNCLOG');
DELETE FROM RESOURCE_USER WHERE RESOURCE_ID IN ('SYNCLOG');
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN ('SYNCLOG');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN ('SYNCLOG');
DELETE FROM RESOURCE_GROUP WHERE RESOURCE_ID IN ('SYNCLOG');
DELETE FROM RES WHERE RESOURCE_ID IN ('SYNCLOG');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL) VALUES ('SYNCLOG', 'MENU_ITEM', 'Log Viewer', 'SYNCLOG', 1, '/webconsole/viewAuditLog.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SYNCLOG_ADMIN_DESC', 'SYNCLOG', 'MENU_DISPLAY_NAME', 'Log Viewer');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SYNCLOG_ADMIN_PUB', 'SYNCLOG', 'MENU_IS_PUBLIC', 'true');
INSERT INTO res_to_res_membership (MEMBER_RESOURCE_ID, RESOURCE_ID) VALUES ('SYNCLOG', 'ADMIN');

commit;
use openiam;

ALTER TABLE ROLE DROP COLUMN INTERNAL_ROLE_ID;

ALTER TABLE ROLE DROP COLUMN TYPE_ID;

ALTER TABLE ROLE DROP COLUMN OWNER_ID;

ALTER TABLE ROLE ADD COLUMN (MANAGED_SYS_ID VARCHAR(32) NULL);

ALTER TABLE ROLE ADD CONSTRAINT ROLE_MNG_SYS_FK FOREIGN KEY (MANAGED_SYS_ID ) REFERENCES MANAGED_SYS (MANAGED_SYS_ID );
commit;
USE openiam;

DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN ('SELFSRVS_ACCESS_MNGMNT', 'SELFSRVS_ACCESS_MNGMNT_ORG');
DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN ('SELFSRVS_ACCESS_MNGMNT', 'SELFSRVS_ACCESS_MNGMNT_ORG');
DELETE FROM RESOURCE_USER WHERE RESOURCE_ID IN ('SELFSRVS_ACCESS_MNGMNT');
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN ('SELFSRVS_ACCESS_MNGMNT');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN ('SELFSRVS_ACCESS_MNGMNT');
DELETE FROM RESOURCE_GROUP WHERE RESOURCE_ID IN ('SELFSRVS_ACCESS_MNGMNT');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('SELFSRVS_ACCESS_MNGMNT');
DELETE FROM RES WHERE RESOURCE_ID IN ('SELFSRVS_ACCESS_MNGMNT');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ACCESSCENTER', 'SELFSRVS_ACCESS_MNGMNT_ORG');

commit;
use openiam;

ALTER TABLE RES DROP COLUMN MANAGED_SYS_ID;
commit;
use openiam;

UPDATE ATTRIBUTE_MAP SET DATA_TYPE='STRING' WHERE DATA_TYPE='string';
UPDATE ATTRIBUTE_MAP SET DATA_TYPE='MEMBER_OF' WHERE DATA_TYPE='memberOf';
DELETE FROM MNG_SYS_OBJECT_MATCH WHERE MANAGED_SYS_ID = '101' AND OBJECT_SEARCH_ID='100';

DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN ('254');
DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN ('254');
DELETE FROM RESOURCE_USER WHERE RESOURCE_ID IN ('254');
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN ('254');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN ('254');
DELETE FROM RESOURCE_GROUP WHERE RESOURCE_ID IN ('254');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN ('254');
DELETE FROM RES WHERE RESOURCE_ID IN ('254');
commit;
use openiam;
UPDATE ATTRIBUTE_MAP SET DATA_TYPE = 'STRING' WHERE MANAGED_SYS_ID = "105";

commit;
use openiam;

UPDATE RES SET IS_PUBLIC='N' WHERE RESOURCE_ID IN ('SUP_SUB_PAGE','USER_MENUS', 'USER_DELEGATION', 'ROLE_MENUS', 'GROUP_MENUS');	

UPDATE RESOURCE_PROP SET PROP_VALUE='false' WHERE RESOURCE_ID IN ('SUP_SUB_PAGE','USER_MENUS', 'USER_DELEGATION', 'ROLE_MENUS', 'GROUP_MENUS') and NAME like '%_IS_PUBLIC';


DELETE FROM RESOURCE_USER WHERE RESOURCE_ID IN ('SUP_SUB_PAGE','USER_MENUS', 'USER_DELEGATION', 'ROLE_MENUS', 'GROUP_MENUS') and USER_ID='3000';
INSERT RESOURCE_USER(RESOURCE_ID, USER_ID) VALUES ('USER_MENUS', '3000');
INSERT RESOURCE_USER(RESOURCE_ID, USER_ID) VALUES ('USER_DELEGATION', '3000');
INSERT RESOURCE_USER(RESOURCE_ID, USER_ID) VALUES ('ROLE_MENUS', '3000');
INSERT RESOURCE_USER(RESOURCE_ID, USER_ID) VALUES ('GROUP_MENUS', '3000');
INSERT RESOURCE_USER(RESOURCE_ID, USER_ID) VALUES ('SUP_SUB_PAGE','3000');

commit;
use openiam;

UPDATE IDENTITY_QUESTION SET QUESTION_TEXT='Where did you meet your significant other?' WHERE IDENTITY_QUESTION_ID=217;

commit;

commit;

commit;

commit;

commit;
use openiam;

ALTER TABLE RECONCILIATION_CONFIG ADD COLUMN CUSTOM_IDENTITY_MATCH_SCRIPT VARCHAR(120) NULL;
commit;
use openiam;

ALTER TABLE RECONCILIATION_CONFIG ADD COLUMN MATCH_FIELD_NAME VARCHAR(40) NULL;
ALTER TABLE RECONCILIATION_CONFIG ADD COLUMN CUSTOM_MATCH_ATTR VARCHAR(40) NULL;
ALTER TABLE RECONCILIATION_CONFIG ADD COLUMN CUSTOM_MATCH_SRC_ATTR VARCHAR(40) NULL;
commit;
use openiam;

ALTER TABLE RECONCILIATION_CONFIG ADD COLUMN MANAGED_SYS_ID VARCHAR(32) NULL;
commit;
use openiam;

DELIMITER $$
DROP PROCEDURE IF EXISTS ALTERNATE_RECONCILIATION_CONFIG$$
CREATE PROCEDURE ALTERNATE_RECONCILIATION_CONFIG()
BEGIN

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS
	WHERE TABLE_NAME='RECONCILIATION_CONFIG' AND column_name='SEARCH_FILTER') THEN
	ALTER TABLE RECONCILIATION_CONFIG ADD COLUMN SEARCH_FILTER VARCHAR(200) NULL;
END IF;

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS
	WHERE TABLE_NAME='RECONCILIATION_CONFIG' AND column_name='UPDATED_SINCE') THEN
	ALTER TABLE RECONCILIATION_CONFIG ADD COLUMN UPDATED_SINCE DATETIME NULL;
END IF;

END$$
DELIMITER ;
call ALTERNATE_RECONCILIATION_CONFIG();
DROP PROCEDURE ALTERNATE_RECONCILIATION_CONFIG;
commit;
use openiam;

DELIMITER $$
DROP PROCEDURE IF EXISTS ALTERNATE_RECONCILIATION_CONFIG$$
CREATE PROCEDURE ALTERNATE_RECONCILIATION_CONFIG()
BEGIN

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS
	WHERE TABLE_NAME='RECONCILIATION_CONFIG' AND column_name='TARGET_SYS_SEARCH_FILTER') THEN
	ALTER TABLE RECONCILIATION_CONFIG ADD COLUMN TARGET_SYS_SEARCH_FILTER VARCHAR(200) NULL;
END IF;

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS
	WHERE TABLE_NAME='RECONCILIATION_CONFIG' AND column_name='MATCH_SCRIPT') THEN
	ALTER TABLE RECONCILIATION_CONFIG ADD COLUMN MATCH_SCRIPT VARCHAR(120) NULL;
END IF;

END$$
DELIMITER ;
call ALTERNATE_RECONCILIATION_CONFIG();
DROP PROCEDURE ALTERNATE_RECONCILIATION_CONFIG;
commit;
use openiam;

DELIMITER $$
DROP PROCEDURE IF EXISTS ALTERNATE_MANAGED_SYS$$
CREATE PROCEDURE ALTERNATE_MANAGED_SYS()
BEGIN

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS
	WHERE TABLE_NAME='MANAGED_SYS' AND column_name='ATTRIBUTE_NAMES_LOOKUP') THEN
	ALTER TABLE MANAGED_SYS ADD COLUMN ATTRIBUTE_NAMES_LOOKUP VARCHAR(120) NULL;
END IF;

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS
	WHERE TABLE_NAME='MANAGED_SYS' AND column_name='ATTRIBUTE_NAMES_HNDLR') THEN
	ALTER TABLE MANAGED_SYS ADD COLUMN ATTRIBUTE_NAMES_HNDLR VARCHAR(100) NULL;
END IF;

END$$
DELIMITER ;
call ALTERNATE_MANAGED_SYS();
DROP PROCEDURE ALTERNATE_MANAGED_SYS;
commit;
use openiam;

DELETE FROM UI_TEMPLATE_FIELDS WHERE UI_FIELD_ID IN('USER_EMAIL_CREATABLE', 'USER_EMAILS_REQUIRED');

INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID, IS_REQUIRED) VALUES('USER_EMAIL_CREATABLE', 'User can create email addresses', 'USER_TEMPLATE', 'N');
INSERT INTO UI_TEMPLATE_FIELDS (UI_FIELD_ID, NAME, TEMPLATE_TYPE_ID, IS_REQUIRED) VALUES('USER_EMAILS_REQUIRED', 'User is required to input at least one email address', 'USER_TEMPLATE', 'N');
commit;
use openiam;

DELIMITER $$
DROP PROCEDURE IF EXISTS ALTERNATE_RECONCILIATION_CONFIG$$
CREATE PROCEDURE ALTERNATE_RECONCILIATION_CONFIG()
BEGIN

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS
	WHERE TABLE_NAME='RECONCILIATION_CONFIG' AND column_name='EXEC_STATUS') THEN
	ALTER TABLE RECONCILIATION_CONFIG ADD COLUMN EXEC_STATUS VARCHAR(20) NULL;
END IF;

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS
	WHERE TABLE_NAME='RECONCILIATION_CONFIG' AND column_name='LAST_EXEC_TIME') THEN
	ALTER TABLE RECONCILIATION_CONFIG ADD COLUMN LAST_EXEC_TIME DATETIME NULL;
END IF;

END$$
DELIMITER ;
call ALTERNATE_RECONCILIATION_CONFIG();
DROP PROCEDURE ALTERNATE_RECONCILIATION_CONFIG;
commit;
use openiam;
ALTER TABLE OPENIAM_LOG_ATTRIBUTE ADD COLUMN CREATED_TIMESTAMP long NULL;

commit;
use openiam;

DELIMITER $$
DROP PROCEDURE IF EXISTS ALTERNATE_SYNCH_CONFIG$$
CREATE PROCEDURE ALTERNATE_SYNCH_CONFIG()
BEGIN

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS
	WHERE TABLE_NAME='SYNCH_CONFIG' AND column_name='PRE_SYNC_SCRIPT') THEN
	ALTER TABLE SYNCH_CONFIG ADD COLUMN PRE_SYNC_SCRIPT VARCHAR(80) NULL;
END IF;

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS
	WHERE TABLE_NAME='SYNCH_CONFIG' AND column_name='POST_SYNC_SCRIPT') THEN
	ALTER TABLE SYNCH_CONFIG ADD COLUMN POST_SYNC_SCRIPT VARCHAR(80) NULL;
END IF;

END$$
DELIMITER ;
call ALTERNATE_SYNCH_CONFIG();
DROP PROCEDURE ALTERNATE_SYNCH_CONFIG;
commit;
use openiam;

DELETE FROM ATTRIBUTE_MAP WHERE ATTRIBUTE_MAP_ID = '612';
DELETE FROM ATTRIBUTE_MAP WHERE ATTRIBUTE_MAP_ID = '613';
DELETE FROM ATTRIBUTE_MAP WHERE ATTRIBUTE_MAP_ID = '614';
DELETE FROM ATTRIBUTE_MAP WHERE ATTRIBUTE_MAP_ID = '615';
DELETE FROM ATTRIBUTE_MAP WHERE ATTRIBUTE_MAP_ID = '616';
DELETE FROM ATTRIBUTE_MAP WHERE ATTRIBUTE_MAP_ID = '617';
DELETE FROM ATTRIBUTE_MAP WHERE ATTRIBUTE_MAP_ID = '618';
DELETE FROM ATTRIBUTE_MAP WHERE ATTRIBUTE_MAP_ID = '619';
DELETE FROM ATTRIBUTE_MAP WHERE ATTRIBUTE_MAP_ID = '620';

DELETE FROM MANAGED_SYS WHERE MANAGED_SYS_ID = '113';
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID = '113';
DELETE FROM RES WHERE RESOURCE_ID = '113';

DELETE FROM PROVISION_CONNECTOR WHERE CONNECTOR_ID = '61';

DELETE FROM RECON_RES_ATTR_MAP WHERE RECON_RES_ATTR_MAP_ID='65';
DELETE FROM RECON_RES_ATTR_MAP WHERE RECON_RES_ATTR_MAP_ID='66';
DELETE FROM RECON_RES_ATTR_MAP WHERE RECON_RES_ATTR_MAP_ID='67';
DELETE FROM RECON_RES_ATTR_MAP WHERE RECON_RES_ATTR_MAP_ID='68';
DELETE FROM RECON_RES_ATTR_MAP WHERE RECON_RES_ATTR_MAP_ID='69';
DELETE FROM RECON_RES_ATTR_MAP WHERE RECON_RES_ATTR_MAP_ID='70';
DELETE FROM RECON_RES_ATTR_MAP WHERE RECON_RES_ATTR_MAP_ID='71';
DELETE FROM RECON_RES_ATTR_MAP WHERE RECON_RES_ATTR_MAP_ID='72';
DELETE FROM RECON_RES_ATTR_MAP WHERE RECON_RES_ATTR_MAP_ID='73';
DELETE FROM POLICY WHERE POLICY_ID = '4660';
DELETE FROM POLICY WHERE POLICY_ID = '4661';
DELETE FROM POLICY WHERE POLICY_ID = '4662';


INSERT INTO POLICY (POLICY_ID,POLICY_DEF_ID,NAME,DESCRIPTION,STATUS,CREATE_DATE,CREATED_BY,RULE_SRC_URL,RULE_TEXT) VALUES ('4660','104','userCreateDate','userCreateDate',1,CURRENT_TIMESTAMP(),'3000','provision/userCreateDate.groovy','');
INSERT INTO POLICY (POLICY_ID,POLICY_DEF_ID,NAME,DESCRIPTION,STATUS,CREATE_DATE,CREATED_BY,RULE_SRC_URL,RULE_TEXT) VALUES ('4661','104','userCreateDate','userCreateDate',1,CURRENT_TIMESTAMP(),'3000','provision/ext_phone.groovy','');
INSERT INTO POLICY (POLICY_ID,POLICY_DEF_ID,NAME,DESCRIPTION,STATUS,CREATE_DATE,CREATED_BY,RULE_SRC_URL,RULE_TEXT) VALUES ('4662','104','userCreateDate','userCreateDate',1,CURRENT_TIMESTAMP(),'3000','provision/nmb_phone.groovy','');

#LOGIN
INSERT INTO RECON_RES_ATTR_MAP (RECON_RES_ATTR_MAP_ID,ATTR_POLICY_ID) VALUES (65,4562);
#PASSWORD
INSERT INTO RECON_RES_ATTR_MAP (RECON_RES_ATTR_MAP_ID,ATTR_POLICY_ID) VALUES (66,4509);
#FIRST_NAME
INSERT INTO RECON_RES_ATTR_MAP (RECON_RES_ATTR_MAP_ID,ATTR_POLICY_ID) VALUES (67,4601);
#LAST_NAME_NAME
INSERT INTO RECON_RES_ATTR_MAP (RECON_RES_ATTR_MAP_ID,ATTR_POLICY_ID) VALUES (68,4602);
#EMPLOYEE_ID
INSERT INTO RECON_RES_ATTR_MAP (RECON_RES_ATTR_MAP_ID,ATTR_POLICY_ID) VALUES (69,4543);
#DOB
INSERT INTO RECON_RES_ATTR_MAP (RECON_RES_ATTR_MAP_ID,ATTR_POLICY_ID) VALUES (70,4541);
#CREATE_DATE
INSERT INTO RECON_RES_ATTR_MAP (RECON_RES_ATTR_MAP_ID,ATTR_POLICY_ID) VALUES (71,4660);
#ROLE

#PHONE_EXT
INSERT INTO RECON_RES_ATTR_MAP (RECON_RES_ATTR_MAP_ID,ATTR_POLICY_ID) VALUES (72,4661);
#PHONE_NMB
INSERT INTO RECON_RES_ATTR_MAP (RECON_RES_ATTR_MAP_ID,ATTR_POLICY_ID) VALUES (73,4662);

#RESOURCE_
INSERT INTO RES (RESOURCE_ID,RESOURCE_TYPE_ID,DESCRIPTION,NAME,DISPLAY_ORDER,URL,MIN_AUTH_LEVEL,IS_PUBLIC) VALUES ('113','MANAGED_SYS',NULL,'AppTableMSys',NULL,NULL,NULL,'N');

#RESOURCE_PROP
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID,RESOURCE_ID,METADATA_ID,NAME,PROP_VALUE,PROP_GROUP) VALUES ('113','113',NULL,'TABLE_NAME','MY_USR_TABLE',NULL);

#CONENCTOR
INSERT INTO PROVISION_CONNECTOR (CONNECTOR_ID,NAME,CLIENT_COMM_PROTOCOL, SERVICE_URL,SERVICE_NAMESPACE,SERVICE_PORT,CONNECTOR_INTERFACE) VALUES ('61','AppTableConnector','CLEAR','localhost:9080/openiam-esb/idmsrvc/ApplicationTablesConnector','http://www.openiam.org/service/connector','NA','LOCAL');


#MSYS
INSERT INTO MANAGED_SYS (MANAGED_SYS_ID,NAME,DESCRIPTION,STATUS,CONNECTOR_ID,HOST_URL,APPL_URL,PORT,COMM_PROTOCOL,USER_ID,PSWD,START_DATE,END_DATE,RESOURCE_ID,PRIMARY_REPOSITORY,SECONDARY_REPOSITORY_ID,ALWAYS_UPDATE_SECONDARY,RES_DEPENDENCY,ADD_HNDLR,MODIFY_HNDLR,DELETE_HNDLR,SETPASS_HNDLR,SUSPEND_HNDLR,SEARCH_HNDLR,LOOKUP_HNDLR,TEST_CONNECTION_HNDLR,RECONCILE_RESOURCE_HNDLR,HNDLR_5,DRIVER_URL,CONNECTION_STRING,ATTRIBUTE_NAMES_LOOKUP,ATTRIBUTE_NAMES_HNDLR) VALUES (113,'AppTableMSys',NULL,'ACTIVE',61,NULL,NULL,NULL,'CLEAR','root',NULL,NULL,NULL,113,0,NULL,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'com.mysql.jdbc.Driver','jdbc:mysql://localhost/test',NULL,NULL);

INSERT INTO ATTRIBUTE_MAP (ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID) VALUES (612,113,113,'PRINCIPAL','LOGIN_ID',NULL,NULL,65,NULL,'ACTIVE',NULL,NULL,NULL,'STRING',NULL,NULL);

INSERT INTO ATTRIBUTE_MAP
(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID) VALUES (613,113,113,'USER','USER_PASSWORD',NULL,NULL,66,NULL,'ACTIVE',NULL,NULL,NULL,'STRING',NULL,NULL);

INSERT INTO ATTRIBUTE_MAP
(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID) VALUES (614,113,113,'USER','FIRST_NAME',NULL,NULL,67,NULL,'ACTIVE',NULL,NULL,NULL,'STRING',NULL,NULL);

INSERT INTO ATTRIBUTE_MAP
(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID) VALUES (615,113,113,'USER','LAST_NAME',NULL,NULL,68,NULL,'ACTIVE',NULL,NULL,NULL,'STRING',NULL,NULL);

INSERT INTO ATTRIBUTE_MAP
(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID) VALUES (616,113,113,'USER','EMPLOYEE_ID',NULL,NULL,69,NULL,'ACTIVE',NULL,NULL,NULL,'STRING',NULL,NULL);

INSERT INTO ATTRIBUTE_MAP
(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID) VALUES (617,113,113,'USER','DOB',NULL,NULL,70,NULL,'ACTIVE',NULL,NULL,NULL,'DATE',NULL,NULL);

INSERT INTO ATTRIBUTE_MAP
(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID) VALUES (618,113,113,'USER','CREATE_DATE',NULL,NULL,71,NULL,'ACTIVE',NULL,NULL,NULL,'DATE',NULL,NULL);

INSERT INTO ATTRIBUTE_MAP
(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID) VALUES (619,113,113,'USER','PHONE_EXT',NULL,NULL,72,NULL,'ACTIVE',NULL,NULL,NULL,'INT',NULL,NULL);

INSERT INTO ATTRIBUTE_MAP
(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID) VALUES (620,113,113,'USER','PHONE_NBR',NULL,NULL,73,NULL,'ACTIVE',NULL,NULL,NULL,'STRING',NULL,NULL);

commit;
use openiam;

DELIMITER $$
DROP PROCEDURE IF EXISTS ALTERNATE_SYNCH_CONFIG$$
CREATE PROCEDURE ALTERNATE_SYNCH_CONFIG()
BEGIN

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS
	WHERE TABLE_NAME='SYNCH_CONFIG' AND column_name='COMPANY_ID') THEN
	ALTER TABLE SYNCH_CONFIG ADD COLUMN COMPANY_ID VARCHAR(32) NULL;
END IF;

END$$
DELIMITER ;
call ALTERNATE_SYNCH_CONFIG();
DROP PROCEDURE ALTERNATE_SYNCH_CONFIG;
commit;
use openiam;

DELIMITER $$
DROP PROCEDURE IF EXISTS ALTERNATE_CONFIGS$$
CREATE PROCEDURE ALTERNATE_CONFIGS()
BEGIN

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS
	WHERE TABLE_NAME='SYNCH_CONFIG' AND column_name='ATTRIBUTE_NAMES_LOOKUP') THEN
	ALTER TABLE SYNCH_CONFIG ADD COLUMN ATTRIBUTE_NAMES_LOOKUP VARCHAR(120) NULL;
END IF;
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS
	WHERE TABLE_NAME='SYNCH_CONFIG' AND column_name='SEARCH_SCOPE') THEN
	ALTER TABLE SYNCH_CONFIG ADD COLUMN SEARCH_SCOPE INTEGER NOT NULL DEFAULT 2;
END IF;
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS
	WHERE TABLE_NAME='MANAGED_SYS' AND column_name='SEARCH_SCOPE') THEN
	ALTER TABLE MANAGED_SYS ADD COLUMN SEARCH_SCOPE INTEGER NOT NULL DEFAULT 2;
END IF;

END$$

DELIMITER ;
call ALTERNATE_CONFIGS();
DROP PROCEDURE ALTERNATE_CONFIGS;
commit;
use openiam;
ALTER TABLE COMPANY MODIFY COLUMN DOMAIN_NAME VARCHAR(250) DEFAULT NULL;

commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS CHANGE_SUPERVISOR_TABLE$$
CREATE PROCEDURE CHANGE_SUPERVISOR_TABLE()
	BEGIN
		IF EXISTS (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA='openiam' and table_name = 'ORG_STRUCTURE' AND column_name  = 'ORG_STRUCTURE_ID') THEN
	 		ALTER TABLE ORG_STRUCTURE 
				DROP PRIMARY KEY, 
				DROP COLUMN COMMENTS, 
				DROP COLUMN STATUS, 
				DROP COLUMN END_DATE, 
				DROP COLUMN START_DATE, 
				DROP COLUMN SUPERVISOR_TYPE, 
				DROP COLUMN ORG_STRUCTURE_ID, 
				CHANGE COLUMN IS_PRIMARY_SUPER IS_PRIMARY_SUPER VARCHAR(1) NOT NULL DEFAULT 'N', 
				ADD PRIMARY KEY (SUPERVISOR_ID, STAFF_ID) ;


			UPDATE ORG_STRUCTURE 
			SET IS_PRIMARY_SUPER='Y'
			WHERE IS_PRIMARY_SUPER='1';

			UPDATE ORG_STRUCTURE 
			SET IS_PRIMARY_SUPER='N'
			WHERE IS_PRIMARY_SUPER='0';

		END IF;
	
	END$$
DELIMITER ;

call CHANGE_SUPERVISOR_TABLE();
DROP PROCEDURE CHANGE_SUPERVISOR_TABLE;









commit;
use openiam;

ALTER TABLE RES DROP COLUMN BRANCH_ID;
ALTER TABLE RES DROP FOREIGN KEY FK_RESOURCE_CATEGORY;
ALTER TABLE RES DROP COLUMN CATEGORY_ID;
ALTER TABLE RES DROP COLUMN RES_OWNER_USER_ID;
ALTER TABLE RES DROP COLUMN RES_OWNER_GROUP_ID;

ALTER TABLE RES ADD COLUMN ADMIN_RESOURCE_ID VARCHAR(32) NULL;
ALTER TABLE RES ADD CONSTRAINT RES_ADMIN_RES_FK FOREIGN KEY (ADMIN_RESOURCE_ID) REFERENCES RES(RESOURCE_ID);

ALTER TABLE ROLE ADD COLUMN ADMIN_RESOURCE_ID VARCHAR(32) NULL;
ALTER TABLE ROLE ADD CONSTRAINT ROLE_ADMIN_RES_FK FOREIGN KEY (ADMIN_RESOURCE_ID) REFERENCES RES(RESOURCE_ID);


ALTER TABLE GRP ADD COLUMN ADMIN_RESOURCE_ID VARCHAR(32) NULL;
ALTER TABLE GRP ADD CONSTRAINT GRP_ADMIN_RES_FK FOREIGN KEY (ADMIN_RESOURCE_ID) REFERENCES RES(RESOURCE_ID);

INSERT INTO METADATA_TYPE (TYPE_ID, DESCRIPTION, ACTIVE, SYNC_MANAGED_SYS) VALUES('ADMIN_RESOURCE', 'Admin Resource', 'Y', 'Y');
INSERT INTO RESOURCE_TYPE (RESOURCE_TYPE_ID, DESCRIPTION, METADATA_TYPE_ID) VALUES('ADMIN_RESOURCE', 'Admin Resource', 'ADMIN_RESOURCE');

ALTER TABLE RESOURCE_TYPE ADD COLUMN SUPPORTS_HIERARCHY CHAR(1) NULL DEFAULT 'Y';
UPDATE RESOURCE_TYPE SET SUPPORTS_HIERARCHY='Y';
UPDATE RESOURCE_TYPE SET SUPPORTS_HIERARCHY='N' WHERE RESOURCE_TYPE_ID='ADMIN_RESOURCE';
ALTER TABLE RESOURCE_TYPE MODIFY COLUMN SUPPORTS_HIERARCHY CHAR(1) NOT NULL DEFAULT 'Y';
commit;
use openiam;

ALTER TABLE COMPANY ADD COLUMN ADMIN_RESOURCE_ID VARCHAR(32) NULL;
ALTER TABLE COMPANY ADD CONSTRAINT COMPANY_ADMIN_RES_FK FOREIGN KEY (ADMIN_RESOURCE_ID) REFERENCES RES(RESOURCE_ID);
commit;
use openiam;

UPDATE APPROVER_ASSOC SET APPROVER_LEVEL=0 WHERE APPROVER_LEVEL IS NULL;
commit;
use openiam;

DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID = 'SELFSERV_ACCESS_REVIEW';
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID = 'SELFSERV_ACCESS_REVIEW';
DELETE FROM RES WHERE RESOURCE_ID = 'SELFSERV_ACCESS_REVIEW';

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, IS_PUBLIC, URL) VALUES('SELFSERV_ACCESS_REVIEW', 'MENU_ITEM', 'SELFSERV_ACCESS_REVIEW', 'Access Review','Y', '/selfservice/accessReview.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SS_ACCESS_REVIEW_PUB', 'SELFSERV_ACCESS_REVIEW', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SS_ACCESS_REVIEW_DESC', 'SELFSERV_ACCESS_REVIEW', 'MENU_DISPLAY_NAME', 'Access Review');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('SELFSERV_USER_EDIT_ROOT', 'SELFSERV_ACCESS_REVIEW');

commit;
use openiam;

UPDATE RES SET IS_PUBLIC='N' WHERE RESOURCE_ID IN ('ABOUT','ABOUT_ROOT_MENU','ACC_CONTROL','ADMIN','AM_PROV_EDIT','AM_PROV_ROOT','AUTHENTICATION_POLICY_ROOT_MENU','BATCH_PROC','BATCH_TASK_EDIT','BATCH_TASK_ROOT','CONTENT_PROV_EDIT','CONTENT_PROV_ROOT','CUSTOM_FIELD_EDIT','CUSTOM_FIELD_ROOT','GROUP_EDIT_MENU','IDMAN','IDQUEST','LOCATION','METADATA','MNGSYS_EDIT_MENU_ROOT','MNGSYS_EDIT_NO_RES_MENU_ROOT','ORGANIZATION_EDIT_ID','ORG_TYPE_SUBMENU_EDIT','ORG_TYPE_SUBMENU_ROOT','PAGE_TEMPLATE_EDIT','PASSWORD_POLICY_EDIT','PASSWORD_POLICY_ROOT_MENU','POLICY_ATTR_EDIT_ROOT','POLICY_ATTR_ROOT','PROVISIONING','RESOURCE_MENU_ROOT','RESOURCE_EDIT_PAGE_ROOT','ROLE_EDIT_MENU','SECURITY_POLICY','SYNCUSER_EDIT_MENU_ROOT','URI_META_EDIT','URI_PATTERN_EDIT','USER_EDIT_MENU','USER_ROOT_MENU','WEB_REPORT_ROOT','ADMIN_BATCH_TASKS','AM_PROV_AM_ATTR','AM_PROV_EDIT_CURRENT','AM_PROV_EDIT_SEARCH','AM_PROV_NEW','AM_PROV_NEW_EDIT','AM_PROV_SEARCH','AM_PROV_SEARCH_CHILD','ASSOC_POLICY','ATTRIBUTE_POLICY','BACK_TO_CP','CHALLENGE_RESPONSE_QUESTION','CHALLENGE_RESPONSE_QUESTION_NEW','CONF_POLICY_PAGE','CONTENT_PROV_EDIT_CURRENT','CONTENT_PROV_EDIT_SEARCH','CONTENT_PROV_NEW','CONTENT_PROV_NEW_EDIT','CONTENT_PROV_SEARCH','CONTENT_PROV_SEARCH_CHILD','CREATE_RESOURCE_MENU','CUSTOM_FIELD_EDIT_NEW','CUSTOM_FIELD_EDIT_SEARCH','CUSTOM_FIELD_NEW','CUSTOM_FIELD_SEARCH','CUSTOM_FIELD_SEARCH_CHILD','CUSTOM_FIELD_SEARCH_CHILD','EDIT_BATCH_TASK','EDIT_GROUP','EDIT_ORG','EDIT_ORG_MEMBERSHIP','EDIT_ORG_TYPE','EDIT_ORG_TYPE_IDMAN','EDIT_POLICY_ATTR_SRCH_BCK','EDIT_RESOURCE','EDIT_ROLE','GROUP_ATTRIBUTES','GROUP_ENTITLEMENTS','GROUP_MENUS','GROUP_ROOT_MENU','GROUP_SEARCH','GRP_APROVER_ASSOC','MANUALRECON','MNGSYSRULES','MNGSYS_ATTR_PAGE','MNGSYS_EDIT','MNGSYS_MENU_ITEM','MNGSYS_NEW','NEW_AUTHENTICATION_POLICY','NEW_BATCH_TASK','NEW_GROUP','NEW_ORG','NEW_ORG_TYPE','NEW_PASSWORD_POLICY','NEW_POLICY_ATTR','NEW_ROLE','NEW_USER','ORGANIZATION_ROOT_ID','ORG_APROVER_ASSOC','ORG_ATTRIBUTES','ORG_MEMBERSHIP','ORG_SEARCH','ORG_TYPE_EDIT_SEARCH','ORG_TYPE_SEARCH','PAGE_TEMPLATE_EDIT_NEW','PAGE_TEMPLATE_EDIT_SEARCH','PAGE_TEMPLATE_NEW','PAGE_TEMPLATE_SEARCH','PROVCONNECT_MENU_ITEM','PROV_CONNECTOR_NEW','RES_APROVER_ASSOC','RES_ENT_SUB','ROLE_APROVER_ASSOC','ROLE_ENTITLEMENTS','ROLE_MENUS','ROLE_ROOT_MENU','ROLE_SEARCH','SEARCH_BATCH_EDIT','SEARCH_BATCH_NEW','SUP_SUB_PAGE','SYNCLOG','SYNCLOG_MENU_ITEM','SYNCUSER_EDIT','SYNCUSER_MENU_ITEM','CHALLENGE_RESPONSE_QUESTION_ROOT','SYNCUSER_NEW','SYNCUSER_POLICYMAP','TEMPLATE_SEARCH_CHILD','UPLOAD_CUST_PSWD_POLICY','URI_META_BACK','URI_PATTERN_EDIT_NEW_PATTERN','URI_PATTERN_EDIT_PATTERN','URI_PATTERN_EDT_PROV_SEARCH','USER_ATTRIBUTES','USER_DELEGATION','USER_EDIT_CONTACT_INFO','USER_EDIT_INFO','USER_ENTITLEMENTS','USER_HISTORY','USER_IDENTITY','USER_MENUS','USER_RESET_PASSWORD','USER_SEARCH','WEB_REPORT','WEB_REPORT_NEW');


commit;
use openiam;

ALTER TABLE RES DROP COLUMN DOMAIN;

ALTER TABLE RES DROP COLUMN IS_SSL;
commit;
use openiam;

DELETE FROM POLICY WHERE NAME = "linuxGroups";

INSERT INTO POLICY (POLICY_ID,POLICY_DEF_ID,NAME,DESCRIPTION,STATUS,CREATE_DATE,CREATED_BY,RULE_SRC_URL,RULE_TEXT,ENABLEMENT) VALUES ('4658','104','linuxGroups','Default Linux Groups provision rule',1,CURRENT_TIMESTAMP(),'3000','provision/linuxGroups.groovy','',1);

UPDATE RECON_RES_ATTR_MAP SET ATTR_POLICY_ID = '4658' WHERE RECON_RES_ATTR_MAP_ID = '62';

commit;
use openiam;

/* selfservice */
DELETE FROM RESOURCE_USER WHERE RESOURCE_ID IN('REQUEST_APPROVAL', 'ORG_APROVER_ASSOC', 'SELFSERVICE_GROUPS', 'SELFSERVICE_ROLES', 'SELFSERVICE_RESOURCES', 'SELF_SUB_ORGS_MEMEBERSHIP', 'SS_ORG_BACK_SEARCH', 'MENUS_SEARCH');
DELETE FROM RESOURCE_GROUP WHERE RESOURCE_ID IN('REQUEST_APPROVAL', 'ORG_APROVER_ASSOC', 'SELFSERVICE_GROUPS', 'SELFSERVICE_ROLES', 'SELFSERVICE_RESOURCES', 'SELF_SUB_ORGS_MEMEBERSHIP', 'SS_ORG_BACK_SEARCH', 'MENUS_SEARCH');
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN('REQUEST_APPROVAL', 'SELFSERVICE_GROUPS', 'SELFSERVICE_ROLES', 'SELFSERVICE_RESOURCES', 'SELF_SUB_ORGS_MEMEBERSHIP', 'SS_ORG_BACK_SEARCH', 'MENUS_SEARCH');
DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN('REQUEST_APPROVAL', 'ORG_APROVER_ASSOC', 'SELFSERVICE_GROUPS', 'SELFSERVICE_ROLES', 'SELFSERVICE_RESOURCES', 'SELF_SUB_ORGS_MEMEBERSHIP', 'SS_ORG_BACK_SEARCH', 'MENUS_SEARCH');
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('REQUEST_APPROVAL', 'REQINBOX', 'MANAGEREQ', 'ORG_APROVER_ASSOC', 'SELFSERVICE_GROUPS', 'SELFSERVICE_ROLES', 'SELFSERVICE_RESOURCES', 'SELF_SUB_ORGS_MEMEBERSHIP', 'SS_ORG_BACK_SEARCH', 'MENUS_SEARCH');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('REQUEST_APPROVAL', 'ORG_APROVER_ASSOC', 'SELFSERVICE_GROUPS', 'SELFSERVICE_ROLES', 'SELFSERVICE_RESOURCES', 'SELF_SUB_ORGS_MEMEBERSHIP', 'SS_ORG_BACK_SEARCH', 'MENUS_SEARCH');
DELETE FROM RES  WHERE RESOURCE_ID IN('REQUEST_APPROVAL', 'ORG_APROVER_ASSOC', 'SELFSERVICE_GROUPS', 'SELFSERVICE_ROLES', 'SELFSERVICE_RESOURCES', 'SELF_SUB_ORGS_MEMEBERSHIP', 'SS_ORG_BACK_SEARCH', 'MENUS_SEARCH');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, IS_PUBLIC, URL) VALUES('REQUEST_APPROVAL', 'MENU_ITEM', 'REQUEST_APPROVAL', 'Request Approval','N', 'javascript:void(0);');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('REQUEST_APPROVAL_PUB', 'REQUEST_APPROVAL', 'MENU_IS_PUBLIC', 'false');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('REQUEST_APPROVAL_DESC', 'REQUEST_APPROVAL', 'MENU_DISPLAY_NAME', 'Request Approval');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('REQUEST_APPROVAL_DESC_ICON', 'REQUEST_APPROVAL', 'MENU_ICON', '/openiam-ui-static/images/common/icons/admin.png');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('REQUEST_APPROVAL', 'REQINBOX');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('REQUEST_APPROVAL', 'MANAGEREQ');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('SELFSERVICE', 'REQUEST_APPROVAL');

UPDATE RES SET IS_PUBLIC='N' WHERE RESOURCE_ID='SELFSRVS_ACCESS_MNGMNT_ORG';
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID='SELFSRVS_ACCESS_MNGMNT_ORG' AND NAME='MENU_IS_PUBLIC';
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('SEFSERV_ORG_PUBLIC' ,'SELFSRVS_ACCESS_MNGMNT_ORG', 'MENU_IS_PUBLIC', 'false');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, IS_PUBLIC, URL) VALUES ('SELFSERVICE_GROUPS', 'MENU_ITEM', 'SELFSERVICE_GROUPS', 'Selfservice Groups', 'N', '/selfservice/groups.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERVICE_GROUPS_DN', 'SELFSERVICE_GROUPS', 'MENU_DISPLAY_NAME', 'Groups');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERVICE_GROUPS_PUB', 'SELFSERVICE_GROUPS', 'MENU_IS_PUBLIC', 'false');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, IS_PUBLIC, URL) VALUES ('SELFSERVICE_ROLES', 'MENU_ITEM', 'SELFSERVICE_ROLES', 'Selfservice Roles', 'N', '/selfservice/roles.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERVICE_ROLES_DN', 'SELFSERVICE_ROLES', 'MENU_DISPLAY_NAME', 'Roles');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERVICE_ROLES_PUB', 'SELFSERVICE_ROLES', 'MENU_IS_PUBLIC', 'false');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, IS_PUBLIC, URL) VALUES ('SELFSERVICE_RESOURCES', 'MENU_ITEM', 'SELFSERVICE_RESOURCES', 'Selfservice Resources', 'N', '/selfservice/resources.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERVICE_RESOURCES_DN', 'SELFSERVICE_RESOURCES', 'MENU_DISPLAY_NAME', 'Resources');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERVICE_RESOURCES_PUB', 'SELFSERVICE_RESOURCES', 'MENU_IS_PUBLIC', 'false');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('ACCESSCENTER', 'SELFSERVICE_GROUPS');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('ACCESSCENTER', 'SELFSERVICE_ROLES');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('ACCESSCENTER', 'SELFSERVICE_RESOURCES');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('SS_ORG_BACK_SEARCH', 'MENU_ITEM', 'SS_ORG_BACK_SEARCH', 'Selfservice Resources', '/selfservice/organizations.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SS_ORG_BACK_SEARCH_DN', 'SS_ORG_BACK_SEARCH', 'MENU_DISPLAY_NAME', 'Back to Search');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SS_ORG_BACK_SEARCH_PUB', 'SS_ORG_BACK_SEARCH', 'MENU_IS_PUBLIC', 'true');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('SELF_SUB_ORGS_EDIT_ROOT', 'SS_ORG_BACK_SEARCH');

/* groups */
DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN('SELFSRV_GRP_SRCH_ROOT', 'SELFSERV_GRP_NEW', 'SELFSRV_GRP_EDIT_ROOT', 'SELFSERV_GRP_EDIT', 'SELFSERV_GRP_BACK_SRCH');
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('SELFSRV_GRP_SRCH_ROOT', 'SELFSERV_GRP_NEW', 'SELFSRV_GRP_EDIT_ROOT', 'SELFSERV_GRP_EDIT', 'SELFSERV_GRP_BACK_SRCH');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('SELFSRV_GRP_SRCH_ROOT', 'SELFSERV_GRP_NEW', 'SELFSRV_GRP_EDIT_ROOT', 'SELFSERV_GRP_EDIT', 'SELFSERV_GRP_BACK_SRCH');
DELETE FROM RES  WHERE RESOURCE_ID IN('SELFSRV_GRP_SRCH_ROOT', 'SELFSERV_GRP_NEW', 'SELFSRV_GRP_EDIT_ROOT', 'SELFSERV_GRP_EDIT', 'SELFSERV_GRP_BACK_SRCH');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('SELFSRV_GRP_SRCH_ROOT', 'MENU_ITEM', 'SELFSRV_GRP_SRCH_ROOT', 'SelfService Group Root');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRV_GRP_SRCH_ROOT_PUB', 'SELFSRV_GRP_SRCH_ROOT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRV_GRP_SRCH_ROOT_DESC', 'SELFSRV_GRP_SRCH_ROOT', 'MENU_DISPLAY_NAME', 'SelfService Group Root');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('SELFSERV_GRP_NEW', 'MENU_ITEM', 'SELFSERV_GRP_NEW', 'Create New Group', '/selfservice/editGroup.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERV_GRP_NEW_DN', 'SELFSERV_GRP_NEW', 'MENU_DISPLAY_NAME', 'Create New Group');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERV_GRP_NEW_PUB', 'SELFSERV_GRP_NEW', 'MENU_IS_PUBLIC', 'true');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('SELFSRV_GRP_SRCH_ROOT', 'SELFSERV_GRP_NEW');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('SELFSRV_GRP_EDIT_ROOT', 'MENU_ITEM', 'SELFSRV_GRP_EDIT_ROOT', 'SelfService Group Edit Root');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRV_GRP_EDIT_ROOT_DN', 'SELFSRV_GRP_EDIT_ROOT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRV_GRP_EDIT_ROOT_DESC', 'SELFSRV_GRP_EDIT_ROOT', 'MENU_DISPLAY_NAME', 'SelfService Group Edit Root');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('SELFSERV_GRP_EDIT', 'MENU_ITEM', 'SELFSERV_GRP_EDIT', 'Edit Group', '/selfservice/editGroup.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERV_GRP_EDIT_DN', 'SELFSERV_GRP_EDIT', 'MENU_DISPLAY_NAME', 'Edit Group');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERV_GRP_EDIT_PUB', 'SELFSERV_GRP_EDIT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('SELFSRV_GRP_EDIT_ROOT', 'SELFSERV_GRP_EDIT');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('SELFSERV_GRP_BACK_SRCH', 'MENU_ITEM', 'SELFSERV_GRP_BACK_SRCH', 'Back to Search', '/selfservice/groups.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERV_GRP_BACK_SRCH_DN', 'SELFSERV_GRP_BACK_SRCH', 'MENU_DISPLAY_NAME', 'Back to Search');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERV_GRP_BACK_SRCH_PUB', 'SELFSERV_GRP_BACK_SRCH', 'MENU_IS_PUBLIC', 'true');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('SELFSRV_GRP_EDIT_ROOT', 'SELFSERV_GRP_BACK_SRCH');
/* groups */

/* roles */
DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN('SELFSRV_ROLE_SRCH_ROOT', 'SELFSERV_ROLE_NEW', 'SELFSRV_ROLE_EDIT_ROOT', 'SELFSRV_ROLE_EDIT', 'SELFSRV_ROLE_BACK_SRCH');
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('SELFSRV_ROLE_SRCH_ROOT', 'SELFSERV_ROLE_NEW', 'SELFSRV_ROLE_EDIT_ROOT', 'SELFSRV_ROLE_EDIT', 'SELFSRV_ROLE_BACK_SRCH');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('SELFSRV_ROLE_SRCH_ROOT', 'SELFSERV_ROLE_NEW', 'SELFSRV_ROLE_EDIT_ROOT', 'SELFSRV_ROLE_EDIT', 'SELFSRV_ROLE_BACK_SRCH');
DELETE FROM RES  WHERE RESOURCE_ID IN('SELFSRV_ROLE_SRCH_ROOT', 'SELFSERV_ROLE_NEW', 'SELFSRV_ROLE_EDIT_ROOT', 'SELFSRV_ROLE_EDIT', 'SELFSRV_ROLE_BACK_SRCH');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('SELFSRV_ROLE_SRCH_ROOT', 'MENU_ITEM', 'SELFSRV_ROLE_SRCH_ROOT', 'SelfService Role Root');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRV_ROLE_SRCH_ROOT_PB', 'SELFSRV_ROLE_SRCH_ROOT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRV_ROLE_SRCH_ROOT_DN', 'SELFSRV_ROLE_SRCH_ROOT', 'MENU_DISPLAY_NAME', 'SelfService Role Root');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('SELFSERV_ROLE_NEW', 'MENU_ITEM', 'SELFSERV_ROLE_NEW', 'Create New Role', '/selfservice/editRole.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERV_ROLE_NEW_DN', 'SELFSERV_ROLE_NEW', 'MENU_DISPLAY_NAME', 'Create New Role');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERV_ROLE_NEW_PB', 'SELFSERV_ROLE_NEW', 'MENU_IS_PUBLIC', 'true');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('SELFSRV_ROLE_SRCH_ROOT', 'SELFSERV_ROLE_NEW');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('SELFSRV_ROLE_EDIT_ROOT', 'MENU_ITEM', 'SELFSRV_ROLE_EDIT_ROOT', 'SelfService Role Edit Root');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRV_ROLE_EDIT_ROOT_DN', 'SELFSRV_ROLE_EDIT_ROOT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRV_ROLE_EDIT_ROOT_DESC', 'SELFSRV_ROLE_EDIT_ROOT', 'MENU_DISPLAY_NAME', 'SelfService Role Edit Root');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('SELFSRV_ROLE_EDIT', 'MENU_ITEM', 'SELFSRV_ROLE_EDIT', 'Edit Role', '/selfservice/editRole.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRV_ROLE_EDIT_DN', 'SELFSRV_ROLE_EDIT', 'MENU_DISPLAY_NAME', 'Edit Role');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRV_ROLE_EDIT_PUB', 'SELFSRV_ROLE_EDIT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('SELFSRV_ROLE_EDIT_ROOT', 'SELFSRV_ROLE_EDIT');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('SELFSRV_ROLE_BACK_SRCH', 'MENU_ITEM', 'SELFSRV_ROLE_BACK_SRCH', 'Back to Search', '/selfservice/roles.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRV_ROLE_BACK_SRCH_DN', 'SELFSRV_ROLE_BACK_SRCH', 'MENU_DISPLAY_NAME', 'Back to Search');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRV_ROLE_BACK_SRCH_PUB', 'SELFSRV_ROLE_BACK_SRCH', 'MENU_IS_PUBLIC', 'true');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('SELFSRV_ROLE_EDIT_ROOT', 'SELFSRV_ROLE_BACK_SRCH');
/* roles */

/* resources */
DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN('SELFSRV_RES_SRCH_ROOT', 'SELFSRV_RES_NEW',  'SELFSRV_RES_EDIT_ROOT', 'SELFSRV_RES_EDIT', 'SELFSRV_RES_BACK_SRCH');
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('SELFSRV_RES_SRCH_ROOT', 'SELFSRV_RES_NEW',  'SELFSRV_RES_EDIT_ROOT', 'SELFSRV_RES_EDIT', 'SELFSRV_RES_BACK_SRCH');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('SELFSRV_RES_SRCH_ROOT', 'SELFSRV_RES_NEW',  'SELFSRV_RES_EDIT_ROOT', 'SELFSRV_RES_EDIT', 'SELFSRV_RES_BACK_SRCH');
DELETE FROM RES  WHERE RESOURCE_ID IN('SELFSRV_RES_SRCH_ROOT', 'SELFSRV_RES_NEW',  'SELFSRV_RES_EDIT_ROOT', 'SELFSRV_RES_EDIT', 'SELFSRV_RES_BACK_SRCH');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('SELFSRV_RES_SRCH_ROOT', 'MENU_ITEM', 'SELFSRV_RES_SRCH_ROOT', 'SelfService Resource Root');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRV_RES_SRCH_ROOT_PB', 'SELFSRV_RES_SRCH_ROOT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRV_RES_SRCH_ROOT_DN', 'SELFSRV_RES_SRCH_ROOT', 'MENU_DISPLAY_NAME', 'SelfService Resource Root');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('SELFSRV_RES_NEW', 'MENU_ITEM', 'SELFSRV_RES_NEW', 'Create New Resource', '/selfservice/editResource.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRV_RES_NEW_DN', 'SELFSRV_RES_NEW', 'MENU_DISPLAY_NAME', 'Create New Resource');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRV_RES_NEW_PB', 'SELFSRV_RES_NEW', 'MENU_IS_PUBLIC', 'true');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('SELFSRV_RES_SRCH_ROOT', 'SELFSRV_RES_NEW');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('SELFSRV_RES_EDIT_ROOT', 'MENU_ITEM', 'SELFSRV_RES_EDIT_ROOT', 'SelfService Resource Edit Root');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRV_RES_EDIT_ROOT_DN', 'SELFSRV_RES_EDIT_ROOT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRV_RES_EDIT_ROOT_DESC', 'SELFSRV_RES_EDIT_ROOT', 'MENU_DISPLAY_NAME', 'SelfService Resource Edit Root');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('SELFSRV_RES_EDIT', 'MENU_ITEM', 'SELFSRV_RES_EDIT', 'Edit Resource', '/selfservice/editResource.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRV_RES_EDIT_DN', 'SELFSRV_RES_EDIT', 'MENU_DISPLAY_NAME', 'Edit Resource');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRV_RES_EDIT_PUB', 'SELFSRV_RES_EDIT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('SELFSRV_RES_EDIT_ROOT', 'SELFSRV_RES_EDIT');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('SELFSRV_RES_BACK_SRCH', 'MENU_ITEM', 'SELFSRV_RES_BACK_SRCH', 'Back to Search', '/selfservice/resources.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRV_RES_BACK_SRCH_DN', 'SELFSRV_RES_BACK_SRCH', 'MENU_DISPLAY_NAME', 'Back to Search');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRV_RES_BACK_SRCH_PUB', 'SELFSRV_RES_BACK_SRCH', 'MENU_IS_PUBLIC', 'true');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('SELFSRV_RES_EDIT_ROOT', 'SELFSRV_RES_BACK_SRCH');
/* resources */

DELIMITER $$

DROP PROCEDURE IF EXISTS ADD_MENU_ENTITLEMENTS$$
CREATE PROCEDURE ADD_MENU_ENTITLEMENTS()
	BEGIN
		IF EXISTS (SELECT * FROM ROLE WHERE ROLE_ID='4') THEN
			INSERT INTO RESOURCE_ROLE (ROLE_ID, RESOURCE_ID) VALUES('4', 'REQUEST_APPROVAL');
 		END IF;
 		
 		IF EXISTS (SELECT * FROM ROLE WHERE ROLE_ID='9') THEN
			INSERT INTO RESOURCE_ROLE (ROLE_ID, RESOURCE_ID) VALUES('9', 'REQUEST_APPROVAL');
			INSERT INTO RESOURCE_ROLE (ROLE_ID, RESOURCE_ID) VALUES('9', 'SELFSERVICE_GROUPS');
			INSERT INTO RESOURCE_ROLE (ROLE_ID, RESOURCE_ID) VALUES('9', 'SELFSERVICE_ROLES');
			INSERT INTO RESOURCE_ROLE (ROLE_ID, RESOURCE_ID) VALUES('9', 'SELFSERVICE_RESOURCES');
			IF NOT EXISTS (SELECT * FROM RESOURCE_ROLE WHERE ROLE_ID='9' and RESOURCE_ID='SELFSRVS_ACCESS_MNGMNT_ORG') THEN
				INSERT INTO RESOURCE_ROLE (ROLE_ID, RESOURCE_ID) VALUES('9', 'SELFSRVS_ACCESS_MNGMNT_ORG');
			END IF;
 		END IF;
 		
 		IF EXISTS (SELECT * FROM ROLE WHERE ROLE_ID='2') THEN
 		INSERT INTO RESOURCE_ROLE (ROLE_ID, RESOURCE_ID) VALUES('2', 'SELFSERVICE_GROUPS');
 		INSERT INTO RESOURCE_ROLE (ROLE_ID, RESOURCE_ID) VALUES('2', 'SELFSERVICE_ROLES');
 		INSERT INTO RESOURCE_ROLE (ROLE_ID, RESOURCE_ID) VALUES('2', 'SELFSERVICE_RESOURCES');
 			IF NOT EXISTS (SELECT * FROM RESOURCE_ROLE WHERE ROLE_ID='2' and RESOURCE_ID='SELFSRVS_ACCESS_MNGMNT_ORG') THEN
 				INSERT INTO RESOURCE_ROLE (ROLE_ID, RESOURCE_ID) VALUES('2', 'SELFSRVS_ACCESS_MNGMNT_ORG');
 			END IF;
 		END IF;
	END$$
DELIMITER ;

call ADD_MENU_ENTITLEMENTS();
DROP PROCEDURE ADD_MENU_ENTITLEMENTS;




/* webconsole */
INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('ORG_APROVER_ASSOC', 'MENU_ITEM', 'ORG_APROVER_ASSOC', 'Approver Associations', '/webconsole-idm/provisioning/organizationApproverAssociations.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ORG_APROVER_ASSOC_DN', 'ORG_APROVER_ASSOC', 'MENU_DISPLAY_NAME', 'Approver Associations');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('ORG_APROVER_ASSOC_PUB', 'ORG_APROVER_ASSOC', 'MENU_IS_PUBLIC', 'true');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('ORGANIZATION_EDIT_ID', 'ORG_APROVER_ASSOC');




INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('MENUS_SEARCH', 'MENU_ITEM', 'MENUS_SEARCH', 'Menus Search', '/webconsole/menus.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('MENUS_SEARCH_PB', 'MENUS_SEARCH', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('MENUS_SEARCH_DC', 'MENUS_SEARCH', 'MENU_DISPLAY_NAME', 'Menus');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ACC_CONTROL', 'MENUS_SEARCH');


commit;
use openiam;

ALTER TABLE RESOURCE_TYPE ADD COLUMN SEARCHABLE CHAR(1) DEFAULT 'Y';

UPDATE RESOURCE_TYPE SET SEARCHABLE='N' WHERE RESOURCE_TYPE_ID='MENU_ITEM';
commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS REMOVE_UI_THEME_FK$$

CREATE PROCEDURE REMOVE_UI_THEME_FK()
	BEGIN
		IF EXISTS (SELECT * FROM information_schema.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA = 'openiam' AND TABLE_NAME='CONTENT_PROVIDER' AND CONSTRAINT_NAME = 'CP_UI_THEME') THEN
			ALTER TABLE CONTENT_PROVIDER DROP FOREIGN KEY CP_UI_THEME;
 		END IF;
		
		IF EXISTS (SELECT * FROM information_schema.columns WHERE table_schema='openiam' AND table_name = 'CONTENT_PROVIDER' AND column_name = 'UI_THEME_ID') THEN
			ALTER TABLE CONTENT_PROVIDER DROP COLUMN UI_THEME_ID;
 		END IF;
 		
 		IF EXISTS (SELECT * FROM information_schema.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA = 'openiam' AND TABLE_NAME='URI_PATTERN' AND CONSTRAINT_NAME = 'URI_PATTERN_UI_THEME') THEN
			ALTER TABLE URI_PATTERN DROP FOREIGN KEY URI_PATTERN_UI_THEME;
 		END IF;
 		
 		IF EXISTS (SELECT * FROM information_schema.columns WHERE table_schema='openiam' AND table_name = 'URI_PATTERN' AND column_name = 'UI_THEME_ID') THEN
 			ALTER TABLE URI_PATTERN DROP COLUMN UI_THEME_ID;
 		END IF;
	END$$
DELIMITER ;

call REMOVE_UI_THEME_FK();
DROP PROCEDURE REMOVE_UI_THEME_FK;

DROP TABLE IF EXISTS UI_THEME;

CREATE TABLE UI_THEME(
	UI_THEME_ID VARCHAR(32) NOT NULL,
	UI_THEME_NAME VARCHAR(100) NOT NULL,
	URL VARCHAR(300) NOT NULL,
	PRIMARY KEY(UI_THEME_ID)
) ENGINE=InnoDB;/* DEFAULT CHARSET=utf8 COLLATE utf8_bin;

ALTER TABLE URI_PATTERN CONVERT TO CHARACTER SET utf8 COLLATE utf8_bin;
ALTER TABLE CONTENT_PROVIDER CONVERT TO CHARACTER SET utf8 COLLATE utf8_bin;
*/

ALTER TABLE UI_THEME ADD CONSTRAINT UI_THEME_NAME_UNIUE UNIQUE(UI_THEME_NAME);

ALTER TABLE CONTENT_PROVIDER ADD COLUMN UI_THEME_ID VARCHAR(32) NULL;
ALTER TABLE URI_PATTERN ADD COLUMN UI_THEME_ID VARCHAR(32) NULL;

ALTER TABLE CONTENT_PROVIDER ADD CONSTRAINT CP_UI_THEME FOREIGN KEY (UI_THEME_ID) REFERENCES UI_THEME(UI_THEME_ID);
ALTER TABLE URI_PATTERN ADD CONSTRAINT URI_PATTERN_UI_THEME FOREIGN KEY (UI_THEME_ID) REFERENCES UI_THEME(UI_THEME_ID);

commit;
use openiam;

DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN('UI_THEME_ROOT', 'UI_THEME_ROOT_SRCH', 'NEW_UI_THEME', 'UI_THEME_EDIT', 'UI_THEME_BACK_SRCH', 'UI_THEME_EDIT_MODIFY', 'UI_THEMES');
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('UI_THEME_ROOT', 'UI_THEME_ROOT_SRCH', 'NEW_UI_THEME', 'UI_THEME_EDIT', 'UI_THEME_BACK_SRCH', 'UI_THEME_EDIT_MODIFY', 'UI_THEMES');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('UI_THEME_ROOT', 'UI_THEME_ROOT_SRCH', 'NEW_UI_THEME', 'UI_THEME_EDIT', 'UI_THEME_BACK_SRCH', 'UI_THEME_EDIT_MODIFY', 'UI_THEMES');
DELETE FROM RES WHERE RESOURCE_ID IN('UI_THEME_ROOT', 'UI_THEME_ROOT_SRCH', 'NEW_UI_THEME', 'UI_THEME_EDIT', 'UI_THEME_BACK_SRCH', 'UI_THEME_EDIT_MODIFY', 'UI_THEMES');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('UI_THEME_ROOT', 'MENU_ITEM', 'UI_THEME_ROOT', 'UI Theme Root');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('UI_THEME_ROOT_PB', 'UI_THEME_ROOT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('UI_THEME_ROOT_DN', 'UI_THEME_ROOT', 'MENU_DISPLAY_NAME', 'UI Theme Root');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('UI_THEME_ROOT_SRCH', 'MENU_ITEM', 'UI_THEME_ROOT_SRCH', 'Search UI Themes', '/webconsole/uiThemes.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('UI_THEME_ROOT_SRCH_DN', 'UI_THEME_ROOT_SRCH', 'MENU_DISPLAY_NAME', 'Search UI Themes');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('UI_THEME_ROOT_SRCH_PB', 'UI_THEME_ROOT_SRCH', 'MENU_IS_PUBLIC', 'true');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('NEW_UI_THEME', 'MENU_ITEM', 'NEW_UI_THEME', 'New UI Theme', '/webconsole/newUITheme.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('NEW_UI_THEME_DN', 'NEW_UI_THEME', 'MENU_DISPLAY_NAME', 'New UI Theme');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('NEW_UI_THEME_PB', 'NEW_UI_THEME', 'MENU_IS_PUBLIC', 'true');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('UI_THEME_ROOT', 'UI_THEME_ROOT_SRCH');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('UI_THEME_ROOT', 'NEW_UI_THEME');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('UI_THEME_EDIT', 'MENU_ITEM', 'UI_THEME_EDIT', 'UI Theme Edit');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('UI_THEME_EDIT_PB', 'UI_THEME_EDIT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('UI_THEME_EDIT_DN', 'UI_THEME_EDIT', 'MENU_DISPLAY_NAME', 'UI Theme Edit');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('UI_THEME_BACK_SRCH', 'MENU_ITEM', 'UI_THEME_BACK_SRCH', 'Back to Search', '/webconsole/uiThemes.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('UI_THEME_BACK_SRCH_DN', 'UI_THEME_BACK_SRCH', 'MENU_DISPLAY_NAME', 'Back to Search');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('UI_THEME_BACK_SRCH_PB', 'UI_THEME_BACK_SRCH', 'MENU_IS_PUBLIC', 'true');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('UI_THEME_EDIT_MODIFY', 'MENU_ITEM', 'UI_THEME_EDIT_MODIFY', 'Edit UI Theme', '/webconsole/editUITheme.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('UI_THEME_EDIT_MODIFY_DN', 'UI_THEME_EDIT_MODIFY', 'MENU_DISPLAY_NAME', 'Edit UI Theme');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('UI_THEME_EDIT_MODIFY_PB', 'UI_THEME_EDIT_MODIFY', 'MENU_IS_PUBLIC', 'true');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('UI_THEME_EDIT', 'UI_THEME_BACK_SRCH');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('UI_THEME_EDIT', 'UI_THEME_EDIT_MODIFY');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('UI_THEMES', 'MENU_ITEM', 'UI_THEMES', 'UI Themes', '/webconsole/uiThemes.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('UI_THEMES_DN', 'UI_THEMES', 'MENU_DISPLAY_NAME', 'UI Themes');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('UI_THEMES_PB', 'UI_THEMES', 'MENU_IS_PUBLIC', 'true');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('ADMIN', 'UI_THEMES');
commit;
use openiam;

DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('SS_GRP_ENT', 'SS_ROLE_ENT', 'SS_RES_ENT');
DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN('SS_GRP_ENT', 'SS_ROLE_ENT', 'SS_RES_ENT');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('SS_GRP_ENT', 'SS_ROLE_ENT', 'SS_RES_ENT');
DELETE FROM RES WHERE RESOURCE_ID IN('SS_GRP_ENT', 'SS_ROLE_ENT', 'SS_RES_ENT');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('SS_GRP_ENT', 'MENU_ITEM', 'SS_GRP_ENT', 'New UI Theme', '/selfservice/groupEntitlements.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SS_GRP_ENT_DN', 'SS_GRP_ENT', 'MENU_DISPLAY_NAME', 'Entitlements');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SS_GRP_ENT_PB', 'SS_GRP_ENT', 'MENU_IS_PUBLIC', 'true');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('SELFSRV_GRP_EDIT_ROOT', 'SS_GRP_ENT');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('SS_ROLE_ENT', 'MENU_ITEM', 'SS_ROLE_ENT', 'New UI Theme', '/selfservice/roleEntitlements.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SS_ROLE_ENT_DN', 'SS_ROLE_ENT', 'MENU_DISPLAY_NAME', 'Entitlements');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SS_ROLE_ENT_PB', 'SS_ROLE_ENT', 'MENU_IS_PUBLIC', 'true');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('SELFSRV_ROLE_EDIT_ROOT', 'SS_ROLE_ENT');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('SS_RES_ENT', 'MENU_ITEM', 'SS_RES_ENT', 'New UI Theme', '/selfservice/resourceEntitlements.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SS_RES_ENT_DN', 'SS_RES_ENT', 'MENU_DISPLAY_NAME', 'Entitlements');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SS_RES_ENT_PB', 'SS_RES_ENT', 'MENU_IS_PUBLIC', 'true');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('SELFSRV_RES_EDIT_ROOT', 'SS_RES_ENT');
commit;
use openiam;

DELETE FROM ATTRIBUTE_MAP WHERE ATTRIBUTE_MAP_ID = '610';
DELETE FROM ATTRIBUTE_MAP WHERE ATTRIBUTE_MAP_ID = '611';
DELETE FROM RECON_RES_ATTR_MAP WHERE RECON_RES_ATTR_MAP_ID = '63';
DELETE FROM RECON_RES_ATTR_MAP WHERE RECON_RES_ATTR_MAP_ID = '64';

DELETE FROM POLICY WHERE POLICY_ID = '4659';


INSERT INTO POLICY (POLICY_ID,POLICY_DEF_ID,NAME,DESCRIPTION,STATUS,CREATE_DATE,CREATED_BY,RULE_SRC_URL,RULE_TEXT) VALUES ('4659','104','googleGroups','GoogleApps groups Policy',1,CURRENT_TIMESTAMP(),'3000','provision/googleGroups.groovy','');

INSERT INTO RECON_RES_ATTR_MAP (RECON_RES_ATTR_MAP_ID, ATTR_POLICY_ID) VALUES (64,4659);
INSERT INTO ATTRIBUTE_MAP (ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID, STATUS, DATA_TYPE) VALUES ('611','103','103','USER','groups','64','ACTIVE','STRING');


INSERT INTO RECON_RES_ATTR_MAP (RECON_RES_ATTR_MAP_ID, ATTR_POLICY_ID) VALUES (63,4540);
INSERT INTO ATTRIBUTE_MAP (ATTRIBUTE_MAP_ID, MANAGED_SYS_ID, RESOURCE_ID, MAP_FOR_OBJECT_TYPE, ATTRIBUTE_NAME, ATTRIBUTE_POLICY_ID, STATUS, DATA_TYPE) VALUES ('610','103','103','USER','userEmail','63','ACTIVE','STRING');

UPDATE ATTRIBUTE_MAP SET ATTRIBUTE_NAME= 'login', ATTRIBUTE_POLICY_ID='26' WHERE ATTRIBUTE_MAP_ID = '400';
UPDATE ATTRIBUTE_MAP SET DATA_TYPE= 'STRING' WHERE MANAGED_SYS_ID = '103';

commit;
use openiam;
DELIMITER $$

DROP PROCEDURE IF EXISTS DROP_SEC_DOMAIN_TABLE$$
CREATE PROCEDURE DROP_SEC_DOMAIN_TABLE()
	BEGIN
		IF EXISTS (select table_name from information_schema.KEY_COLUMN_USAGE
                where table_schema = 'openiam' and referenced_table_name = 'SECURITY_DOMAIN') THEN

      delete from PWD_HISTORY where  LOGIN_ID in (select LOGIN_ID from LOGIN where SERVICE_ID<>'USR_SEC_DOMAIN');

      delete from LOGIN where SERVICE_ID<>'USR_SEC_DOMAIN';

      ALTER TABLE LOGIN DROP FOREIGN KEY FK_LOGIN_SERVICE;
      ALTER TABLE LOGIN DROP INDEX UNIQUE_LOGIN,
                        DROP INDEX FK_LOGIN_SERVICE;

      ALTER TABLE LOGIN DROP COLUMN SERVICE_ID;
      ALTER TABLE LOGIN ADD UNIQUE INDEX UNIQUE_LOGIN (LOGIN ASC, MANAGED_SYS_ID ASC);



      ALTER TABLE ROLE DROP FOREIGN KEY FK_ROLE_SERVICE;
      ALTER TABLE ROLE DROP COLUMN SERVICE_ID,
                       DROP INDEX FK_ROLE_SERVICE;


      ALTER TABLE MANAGED_SYS DROP COLUMN DOMAIN_ID;


      DROP TABLE IF EXISTS SECURITY_DOMAIN;

    END IF;

	END$$
DELIMITER ;

call DROP_SEC_DOMAIN_TABLE();
DROP PROCEDURE DROP_SEC_DOMAIN_TABLE;

drop view IF EXISTS USER_PSWD_EXPIRED_YESTERDAY_VW;

CREATE
OR REPLACE ALGORITHM = UNDEFINED
  SQL SECURITY DEFINER
VIEW USER_PSWD_EXPIRED_YESTERDAY_VW AS
  select
    l.LOGIN AS LOGIN,
    l.MANAGED_SYS_ID AS MANAGED_SYS_ID,
    l.USER_ID AS USER_ID,
    l.GRACE_PERIOD AS EXPIRATION_DATE,
    u.FIRST_NAME AS FIRST_NAME,
    u.LAST_NAME AS LAST_NAME,
    u.STATUS AS STATUS
  from LOGIN l
    join USERS u
  where
    ((l.USER_ID = u.USER_ID)
     and (l.MANAGED_SYS_ID = 0)
     and (((l.GRACE_PERIOD is not null)
           and (cast(l.GRACE_PERIOD as date) = (curdate() - 1)))
          or ((l.PWD_EXP is not null)
              and isnull(l.GRACE_PERIOD)
              and (cast(l.PWD_EXP as date) = (curdate() - 1)))));
commit;
use openiam;

DELETE FROM RESOURCE_USER where RESOURCE_ID like 'SECDOMAIN%';
DELETE FROM RESOURCE_PROP where RESOURCE_ID like 'SECDOMAIN%';
DELETE FROM RESOURCE_PRIVILEGE where RESOURCE_ID like 'SECDOMAIN%';
DELETE FROM RESOURCE_GROUP where RESOURCE_ID like 'SECDOMAIN%';
DELETE FROM res_to_res_membership where RESOURCE_ID like 'SECDOMAIN%' or MEMBER_RESOURCE_ID like 'SECDOMAIN%';
DELETE FROM RESOURCE_ROLE where RESOURCE_ID like 'SECDOMAIN%';
DELETE FROM RES where RESOURCE_ID like 'SECDOMAIN%';



DELETE FROM ATTRIBUTE_MAP
WHERE ATTRIBUTE_POLICY_ID in (SELECT RECON_RES_ATTR_MAP_ID FROM RECON_RES_ATTR_MAP
WHERE ATTR_POLICY_ID in (select POLICY_ID from POLICY
WHERE RULE_SRC_URL = 'provision/primaryDomain.groovy'
      OR RULE_SRC_URL = 'provision/secDomain.groovy'));

DELETE FROM RECON_RES_ATTR_MAP
WHERE ATTR_POLICY_ID in (select POLICY_ID from POLICY
WHERE RULE_SRC_URL = 'provision/primaryDomain.groovy'
      OR RULE_SRC_URL = 'provision/secDomain.groovy');

DELETE FROM POLICY WHERE RULE_SRC_URL = 'provision/primaryDomain.groovy'
                         OR RULE_SRC_URL = 'provision/secDomain.groovy';
commit;
USE openiam;

DELETE FROM RESOURCE_PROP WHERE RESOURCE_PROP_ID = 'META_ADMIN_DESC';
DELETE FROM RESOURCE_PROP WHERE RESOURCE_PROP_ID = 'META_TYPE_ADMIN_DESC';
DELETE FROM res_to_res_membership WHERE RESOURCE_ID='META_SUBMENU_ROOT';
DELETE FROM res_to_res_membership WHERE RESOURCE_ID='META_TYPE_SUBMENU_ROOT';
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID='META_ADMIN';
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID='META_TYPE_ADMIN';



DELETE FROM RESOURCE_PROP WHERE RESOURCE_PROP_ID = 'META_TYPE_EDIT_DESC';
DELETE FROM RESOURCE_PROP WHERE RESOURCE_PROP_ID = 'META_EDIT_DESC';
DELETE FROM RESOURCE_PROP WHERE RESOURCE_PROP_ID = 'META_TYPE_SEARCH_DESC';
DELETE FROM RESOURCE_PROP WHERE RESOURCE_PROP_ID = 'META_SEARCH_DESC';

DELETE FROM RES WHERE RESOURCE_ID='META_TYPE_EDIT';
DELETE FROM RES WHERE RESOURCE_ID='META_EDIT';
DELETE FROM RES WHERE RESOURCE_ID='META_TYPE_SEARCH';
DELETE FROM RES WHERE RESOURCE_ID='META_SEARCH';

DELETE FROM RES WHERE RESOURCE_ID='META_ADMIN';
DELETE FROM RES WHERE RESOURCE_ID='META_TYPE_ADMIN';
DELETE FROM RES WHERE RESOURCE_ID='META_SUBMENU_ROOT';
DELETE FROM RES WHERE RESOURCE_ID='META_TYPE_SUBMENU_ROOT';

INSERT INTO RES (RESOURCE_ID,RESOURCE_TYPE_ID,DESCRIPTION,NAME,DISPLAY_ORDER,IS_PUBLIC,URL) VALUES ('META_ADMIN','MENU_ITEM','metadata admin root','META_ADMIN',1,'Y','/webconsole/metaDataSearch.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID,RESOURCE_ID,NAME,PROP_VALUE) VALUES ('META_ADMIN_DESC','META_ADMIN','MENU_DISPLAY_NAME','Metadata Elements');
INSERT INTO res_to_res_membership (RESOURCE_ID,MEMBER_RESOURCE_ID) VALUES ('ADMIN','META_ADMIN');



INSERT INTO RES (RESOURCE_ID,RESOURCE_TYPE_ID,DESCRIPTION,NAME,DISPLAY_ORDER,IS_PUBLIC,URL) VALUES ('META_TYPE_ADMIN','MENU_ITEM','metadata admin root','META_TYPE_ADMIN',1,'Y','/webconsole/metaDataTypeSearch.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID,RESOURCE_ID,NAME,PROP_VALUE) VALUES ('META_TYPE_ADMIN_DESC','META_TYPE_ADMIN','MENU_DISPLAY_NAME','Metadata Types');
INSERT INTO res_to_res_membership (RESOURCE_ID,MEMBER_RESOURCE_ID) VALUES ('ADMIN','META_TYPE_ADMIN');




INSERT INTO RES (RESOURCE_ID,RESOURCE_TYPE_ID,DESCRIPTION,NAME,DISPLAY_ORDER,IS_PUBLIC) VALUES ('META_TYPE_SUBMENU_ROOT','MENU_ITEM','metadata root menu','META_TYPE_SUBMENU_ROOT',1,'Y'); 

INSERT INTO RES (RESOURCE_ID,RESOURCE_TYPE_ID,DESCRIPTION,NAME,DISPLAY_ORDER,IS_PUBLIC,URL) VALUES ('META_TYPE_EDIT','MENU_ITEM','metadata type edit','META_TYPE_EDIT',1,'Y','/webconsole/metaDataTypeEdit.html'); 
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID,RESOURCE_ID,NAME,PROP_VALUE) VALUES ('META_TYPE_EDIT_DESC','META_TYPE_EDIT','MENU_DISPLAY_NAME','New MetaData Type');

INSERT INTO RES (RESOURCE_ID,RESOURCE_TYPE_ID,DESCRIPTION,NAME,DISPLAY_ORDER,IS_PUBLIC,URL) VALUES ('META_TYPE_SEARCH','MENU_ITEM','metadata type search','META_TYPE_SEARCH',3,'Y','/webconsole/metaDataTypeSearch.html'); 
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID,RESOURCE_ID,NAME,PROP_VALUE) VALUES ('META_TYPE_SEARCH_DESC','META_TYPE_SEARCH','MENU_DISPLAY_NAME','MetaData Type Search');




INSERT INTO RES (RESOURCE_ID,RESOURCE_TYPE_ID,DESCRIPTION,NAME,DISPLAY_ORDER,IS_PUBLIC) VALUES ('META_SUBMENU_ROOT','MENU_ITEM','metadata root menu','META_SUBMENU_ROOT',1,'Y'); 

INSERT INTO RES (RESOURCE_ID,RESOURCE_TYPE_ID,DESCRIPTION,NAME,DISPLAY_ORDER,IS_PUBLIC,URL) VALUES ('META_EDIT','MENU_ITEM','metadata type edit','META_EDIT',2,'Y','/webconsole/metaDataEdit.html'); 
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID,RESOURCE_ID,NAME,PROP_VALUE) VALUES ('META_EDIT_DESC','META_EDIT','MENU_DISPLAY_NAME','New MetaData');

INSERT INTO RES (RESOURCE_ID,RESOURCE_TYPE_ID,DESCRIPTION,NAME,DISPLAY_ORDER,IS_PUBLIC,URL) VALUES ('META_SEARCH','MENU_ITEM','metadata search','META_SEARCH',4,'Y','/webconsole/metaDataSearch.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID,RESOURCE_ID,NAME,PROP_VALUE) VALUES ('META_SEARCH_DESC','META_SEARCH','MENU_DISPLAY_NAME','MetaData Search');

INSERT INTO res_to_res_membership (MEMBER_RESOURCE_ID, RESOURCE_ID) VALUES ('META_SEARCH', 'META_SUBMENU_ROOT');
INSERT INTO res_to_res_membership (MEMBER_RESOURCE_ID, RESOURCE_ID) VALUES ('META_TYPE_SEARCH', 'META_TYPE_SUBMENU_ROOT');
INSERT INTO res_to_res_membership (MEMBER_RESOURCE_ID, RESOURCE_ID) VALUES ('META_EDIT', 'META_SUBMENU_ROOT');
INSERT INTO res_to_res_membership (MEMBER_RESOURCE_ID, RESOURCE_ID) VALUES ('META_TYPE_EDIT', 'META_TYPE_SUBMENU_ROOT');



commit;
use openiam;

ALTER TABLE RES ADD COLUMN RISK VARCHAR(10) NULL DEFAULT NULL;

commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS REMOVE_UNUSED_COLUMNS$$

CREATE PROCEDURE REMOVE_UNUSED_COLUMNS()
	BEGIN
		IF EXISTS (SELECT * FROM information_schema.columns WHERE table_schema='openiam' AND table_name = 'AUTH_LEVEL' AND column_name = 'AUTH_LEVEL_DIG') THEN
			ALTER TABLE AUTH_LEVEL DROP COLUMN AUTH_LEVEL_DIG;
 		END IF;
 		
 		IF EXISTS (SELECT * FROM information_schema.columns WHERE table_schema='openiam' AND table_name = 'AUTH_LEVEL' AND column_name = 'REQUIRES_AUTHENTICATION') THEN
			ALTER TABLE AUTH_LEVEL DROP COLUMN REQUIRES_AUTHENTICATION;
 		END IF;
 		
 		IF EXISTS (SELECT * FROM information_schema.columns WHERE table_schema='openiam' AND table_name = 'AUTH_LEVEL_GROUPING') THEN
			DELETE FROM AUTH_LEVEL_GROUPING;
 		END IF;
	END$$
DELIMITER ;

call REMOVE_UNUSED_COLUMNS();
DROP PROCEDURE REMOVE_UNUSED_COLUMNS;

ALTER TABLE AUTH_LEVEL ADD COLUMN REQUIRES_AUTHENTICATION CHAR(1) DEFAULT 'Y';
UPDATE AUTH_LEVEL SET REQUIRES_AUTHENTICATION='Y';
ALTER TABLE AUTH_LEVEL CHANGE REQUIRES_AUTHENTICATION REQUIRES_AUTHENTICATION CHAR(1) NOT NULL DEFAULT 'Y';

DELETE FROM AUTH_LEVEL WHERE AUTH_LEVEL_ID IN('None', 'NONE');
INSERT INTO AUTH_LEVEL (AUTH_LEVEL_ID, AUTH_LEVEL_NAME, REQUIRES_AUTHENTICATION) VALUES('NONE', 'No Authentication Required', 'N');

DROP TABLE IF EXISTS CP_AUTH_LEVEL_GRP_XREF;
DROP TABLE IF EXISTS URI_AUTH_LEVEL_GRP_XREF;
DROP TABLE IF EXISTS AUTH_LEVEL_ATTRIBUTE;
DROP TABLE IF EXISTS AUTH_LEVEL_GROUPING;

CREATE TABLE AUTH_LEVEL_GROUPING (
	AUTH_LEVEL_GROUPING_ID VARCHAR(32) NOT NULL,
	AUTH_LEVEL_ID VARCHAR(32) NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	PRIMARY KEY(AUTH_LEVEL_GROUPING_ID),
	CONSTRAINT AUTH_LEVEL_GROUPING_FK FOREIGN KEY (AUTH_LEVEL_ID) REFERENCES AUTH_LEVEL(AUTH_LEVEL_ID)
)ENGINE=InnoDB;

CREATE TABLE AUTH_LEVEL_ATTRIBUTE(
	AUTH_LEVEL_ATTRIBUTE_ID VARCHAR(32) NOT NULL,
	AUTH_LEVEL_GROUPING_ID VARCHAR(32) NOT NULL,
	TYPE_ID VARCHAR(32) NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	VALUE BLOB NOT NULL,
	PRIMARY KEY(AUTH_LEVEL_ATTRIBUTE_ID),
	CONSTRAINT AUTH_LEVEL_ATTR_GRP_FK FOREIGN KEY (AUTH_LEVEL_GROUPING_ID) REFERENCES AUTH_LEVEL_GROUPING(AUTH_LEVEL_GROUPING_ID),
	CONSTRAINT AUTH_LEVEL_ATTR_TYPE_FK FOREIGN KEY (TYPE_ID) REFERENCES METADATA_TYPE(TYPE_ID)
)ENGINE=InnoDB;

CREATE TABLE URI_AUTH_LEVEL_GRP_XREF(
	URI_PATTERN_ID VARCHAR(32) NOT NULL,
	AUTH_LEVEL_GROUPING_ID VARCHAR(32) NOT NULL,
	EXEC_ORDER INT(3) NOT NULL,
	CONSTRAINT URI_AUTH_LEVEL_GRP_FK FOREIGN KEY (AUTH_LEVEL_GROUPING_ID) REFERENCES AUTH_LEVEL_GROUPING(AUTH_LEVEL_GROUPING_ID),
	CONSTRAINT URI_AUTH_LEVEL_URI_FK FOREIGN KEY (URI_PATTERN_ID) REFERENCES URI_PATTERN(URI_PATTERN_ID),
	CONSTRAINT UNIQUE_URI_AUTH_GROUP UNIQUE(URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER)
)ENGINE=InnoDB;

CREATE TABLE CP_AUTH_LEVEL_GRP_XREF(
	CONTENT_PROVIDER_ID VARCHAR(32) NOT NULL,
	AUTH_LEVEL_GROUPING_ID VARCHAR(32) NOT NULL,
	EXEC_ORDER INT(3) NOT NULL,
	CONSTRAINT CP_AUTH_LEVEL_GRP_FK FOREIGN KEY (AUTH_LEVEL_GROUPING_ID) REFERENCES AUTH_LEVEL_GROUPING(AUTH_LEVEL_GROUPING_ID),
	CONSTRAINT CP_AUTH_LEVEL_CP_FK FOREIGN KEY (CONTENT_PROVIDER_ID) REFERENCES CONTENT_PROVIDER(CONTENT_PROVIDER_ID),
	CONSTRAINT UNIQUE_CP_AUTH_GROUP UNIQUE(CONTENT_PROVIDER_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER)
)ENGINE=InnoDB;

INSERT INTO AUTH_LEVEL_GROUPING (AUTH_LEVEL_GROUPING_ID, AUTH_LEVEL_ID, NAME) VALUES('NONE', 'NONE', 'None');
INSERT INTO AUTH_LEVEL_GROUPING (AUTH_LEVEL_GROUPING_ID, AUTH_LEVEL_ID, NAME) VALUES('PASSWORD_AUTH', 'PASSWORD_AUTH', 'Password Authentication');
INSERT INTO AUTH_LEVEL_GROUPING (AUTH_LEVEL_GROUPING_ID, AUTH_LEVEL_ID, NAME) VALUES('CERT_AUTH', 'CERT_AUTH', 'Certificate Authentication');
commit;
use openiam;

DELETE FROM URI_AUTH_LEVEL_GRP_XREF;
DELETE FROM CP_AUTH_LEVEL_GRP_XREF;


DELIMITER $$

DROP PROCEDURE IF EXISTS MIGRATE_PATTERNS$$

CREATE PROCEDURE MIGRATE_PATTERNS()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE authLevelId VARCHAR(32);
		DECLARE entityId VARCHAR(32);
		DECLARE cur1 CURSOR FOR (SELECT URI_PATTERN_ID, MIN_AUTH_LEVEL FROM URI_PATTERN);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
			
		REPEAT 
			FETCH cur1 INTO entityId, authLevelId;
			IF (entityId IS NOT NULL) THEN
				IF (authLevelId IS NOT NULL) THEN
					IF ((SELECT count(*) FROM URI_AUTH_LEVEL_GRP_XREF WHERE URI_PATTERN_ID=entityId AND AUTH_LEVEL_GROUPING_ID=authLevelId)= 0) THEN
						INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES(entityId, authLevelId, 0);
					END IF;
				END IF;
			END IF;
		UNTIL done END REPEAT;
		CLOSE cur1;
	END$$
DELIMITER ;

call MIGRATE_PATTERNS();
DROP PROCEDURE MIGRATE_PATTERNS;

DELIMITER $$

DROP PROCEDURE IF EXISTS MIGRATE_PATTERNS$$

CREATE PROCEDURE MIGRATE_PATTERNS()
	BEGIN
	    DECLARE done INT DEFAULT FALSE;
		DECLARE authLevelId VARCHAR(32);
		DECLARE entityId VARCHAR(32);
		DECLARE cur1 CURSOR FOR (SELECT CONTENT_PROVIDER_ID, MIN_AUTH_LEVEL FROM CONTENT_PROVIDER);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
		
		REPEAT
			FETCH cur1 INTO entityId, authLevelId;
			IF (entityId IS NOT NULL) THEN
				IF (authLevelId IS NOT NULL) THEN
					IF ((SELECT count(*) FROM CP_AUTH_LEVEL_GRP_XREF WHERE CONTENT_PROVIDER_ID=entityId AND AUTH_LEVEL_GROUPING_ID=authLevelId)= 0) THEN
						INSERT INTO CP_AUTH_LEVEL_GRP_XREF (CONTENT_PROVIDER_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES(entityId, authLevelId, 0);
					END IF;
				END IF;
			END IF;
		UNTIL done END REPEAT; 
		CLOSE cur1;
	END$$
DELIMITER ;

call MIGRATE_PATTERNS();
DROP PROCEDURE MIGRATE_PATTERNS;
commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS REMOVE_UNUSED_COLUMNS$$

CREATE PROCEDURE REMOVE_UNUSED_COLUMNS()
	BEGIN
		IF EXISTS (SELECT * FROM information_schema.columns WHERE table_schema='openiam' AND table_name = 'CONTENT_PROVIDER' AND column_name = 'MIN_AUTH_LEVEL') THEN
			ALTER TABLE CONTENT_PROVIDER DROP FOREIGN KEY CP_AUTH_LEVEL_FK;
			ALTER TABLE CONTENT_PROVIDER DROP COLUMN MIN_AUTH_LEVEL;
 		END IF;
 		
 		IF EXISTS (SELECT * FROM information_schema.columns WHERE table_schema='openiam' AND table_name = 'URI_PATTERN' AND column_name = 'MIN_AUTH_LEVEL') THEN
 			ALTER TABLE URI_PATTERN DROP FOREIGN KEY URI_PATTERN_AUTH_LEVEL_FK;
			ALTER TABLE URI_PATTERN DROP COLUMN MIN_AUTH_LEVEL;
 		END IF;
	END$$
DELIMITER ;

call REMOVE_UNUSED_COLUMNS();
DROP PROCEDURE REMOVE_UNUSED_COLUMNS;
commit;
use openiam;

DROP TABLE IF EXISTS AUTH_LEVEL_ATTRIBUTE;

CREATE TABLE AUTH_LEVEL_ATTRIBUTE(
	AUTH_LEVEL_ATTRIBUTE_ID VARCHAR(32) NOT NULL,
	AUTH_LEVEL_GROUPING_ID VARCHAR(32) NOT NULL,
	TYPE_ID VARCHAR(32) NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	VALUE_AS_BYTE_ARRAY BLOB NULL,
	VALUE_AS_STRING VARCHAR(32) NULL,
	PRIMARY KEY(AUTH_LEVEL_ATTRIBUTE_ID),
	CONSTRAINT AUTH_LEVEL_ATTR_GRP_FK FOREIGN KEY (AUTH_LEVEL_GROUPING_ID) REFERENCES AUTH_LEVEL_GROUPING(AUTH_LEVEL_GROUPING_ID),
	CONSTRAINT AUTH_LEVEL_ATTR_TYPE_FK FOREIGN KEY (TYPE_ID) REFERENCES METADATA_TYPE(TYPE_ID)
)ENGINE=InnoDB;


DELIMITER $$

DROP PROCEDURE IF EXISTS ADD_BINARY_FLAG$$

CREATE PROCEDURE ADD_BINARY_FLAG()
	BEGIN
		IF NOT EXISTS (SELECT * FROM information_schema.columns WHERE table_schema='openiam' AND table_name = 'METADATA_TYPE' AND column_name = 'IS_BINARY') THEN
			ALTER TABLE METADATA_TYPE ADD COLUMN IS_BINARY CHAR(1) DEFAULT 'N' NOT NULL;
 		END IF;
 		
	END$$
DELIMITER ;

call ADD_BINARY_FLAG();
DROP PROCEDURE ADD_BINARY_FLAG;

DELETE FROM METADATA_TYPE WHERE GROUPING IN('AUTH_LEVEL');

INSERT INTO METADATA_TYPE (TYPE_ID, DESCRIPTION, ACTIVE, GROUPING, IS_BINARY) VALUES('KERBEROS_SERVICE_NAME', 'Kerberos Service Name', 'Y', 'AUTH_LEVEL', 'N');
INSERT INTO METADATA_TYPE (TYPE_ID, DESCRIPTION, ACTIVE, GROUPING, IS_BINARY) VALUES('KERBEROS_KEYTAB_FILE', 'Kerberos Keytab File', 'Y', 'AUTH_LEVEL', 'Y');
commit;
use openiam;

ALTER TABLE RESOURCE_TYPE ADD COLUMN URL VARCHAR(512) NULL DEFAULT NULL;
ALTER TABLE RESOURCE_TYPE DROP COLUMN METADATA_TYPE_ID;
ALTER TABLE RESOURCE_TYPE MODIFY COLUMN RESOURCE_TYPE_ID varchar(32) NOT NULL;


commit;
USE openiam;

DELETE FROM RESOURCE_PROP WHERE RESOURCE_PROP_ID = 'RES_TYPE_DESC';
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID='RES_TYPE_ITEM';
DELETE FROM RES WHERE RESOURCE_ID='RES_TYPE_ITEM';

DELETE FROM RESOURCE_PROP WHERE RESOURCE_PROP_ID = 'RES_TYPE_NEW_DESC';
DELETE FROM res_to_res_membership WHERE RESOURCE_ID='RES_TYPE_MENU_ROOT';
DELETE FROM RES WHERE RESOURCE_ID='RES_TYPE_MENU_ROOT';
DELETE FROM RES WHERE RESOURCE_ID='RES_TYPE_NEW';

INSERT INTO RES (RESOURCE_ID,RESOURCE_TYPE_ID,DESCRIPTION,NAME,DISPLAY_ORDER,IS_PUBLIC,URL) VALUES ('RES_TYPE_ITEM','MENU_ITEM','Resource Type','RES_TYPE_ITEM',1,'Y','/webconsole/resourceTypes.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID,RESOURCE_ID,NAME,PROP_VALUE) VALUES ('RES_TYPE_DESC','RES_TYPE_ITEM','MENU_DISPLAY_NAME','Resource Type');
INSERT INTO res_to_res_membership (RESOURCE_ID,MEMBER_RESOURCE_ID) VALUES ('ACC_CONTROL','RES_TYPE_ITEM');

INSERT INTO RES (RESOURCE_ID,RESOURCE_TYPE_ID,DESCRIPTION,NAME,DISPLAY_ORDER,IS_PUBLIC) VALUES ('RES_TYPE_MENU_ROOT','MENU_ITEM','resource type root menu','RES_TYPE_MENU_ROOT',1,'Y'); 
INSERT INTO RES (RESOURCE_ID,RESOURCE_TYPE_ID,DESCRIPTION,NAME,DISPLAY_ORDER,IS_PUBLIC,URL) VALUES ('RES_TYPE_NEW','MENU_ITEM','metadata type edit','RES_TYPE_EDIT',1,'Y','/webconsole/editResourceType.html'); 
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID,RESOURCE_ID,NAME,PROP_VALUE) VALUES ('RES_TYPE_NEW_DESC','RES_TYPE_NEW','MENU_DISPLAY_NAME','New Resource Type');
INSERT INTO res_to_res_membership (RESOURCE_ID,MEMBER_RESOURCE_ID) VALUES ('RES_TYPE_MENU_ROOT','RES_TYPE_NEW');

commit;
use openiam;

DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('AUTH_LVL_GRP_NEW_ROOT', 'NEW_AUTH_LVL_GRP', 'AUTH_LVL_GRP_EDIT_ROOT', 'BACK_TO_AUTH_LVL_GRP_SRH', 'AUTH_LVL_GRP_ATTR', 'BACK_TO_AUTH_LVL', 'AUTH_LEVEL_GRP');
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('AUTH_LVL_GRP_NEW_ROOT', 'NEW_AUTH_LVL_GRP', 'AUTH_LVL_GRP_EDIT_ROOT', 'BACK_TO_AUTH_LVL_GRP_SRH', 'AUTH_LVL_GRP_ATTR', 'BACK_TO_AUTH_LVL', 'AUTH_LEVEL_GRP');
DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN('AUTH_LVL_GRP_NEW_ROOT', 'NEW_AUTH_LVL_GRP', 'AUTH_LVL_GRP_EDIT_ROOT', 'BACK_TO_AUTH_LVL_GRP_SRH', 'AUTH_LVL_GRP_ATTR', 'BACK_TO_AUTH_LVL', 'AUTH_LEVEL_GRP');
DELETE FROM RES WHERE RESOURCE_ID IN('AUTH_LVL_GRP_NEW_ROOT', 'NEW_AUTH_LVL_GRP', 'AUTH_LVL_GRP_EDIT_ROOT', 'BACK_TO_AUTH_LVL_GRP_SRH', 'AUTH_LVL_GRP_ATTR', 'BACK_TO_AUTH_LVL', 'AUTH_LEVEL_GRP');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('AUTH_LVL_GRP_NEW_ROOT', 'MENU_ITEM', 'AUTH_LVL_GRP_NEW_ROOT', 'Auth Level Grouping Root');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AUTH_LVL_GRP_NEW_ROOT_PB', 'AUTH_LVL_GRP_NEW_ROOT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AUTH_LVL_GRP_NEW_ROOT_DN', 'AUTH_LVL_GRP_NEW_ROOT', 'MENU_DISPLAY_NAME', 'Auth Level Grouping Root');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('NEW_AUTH_LVL_GRP', 'MENU_ITEM', 'NEW_AUTH_LVL_GRP', 'Create New Grouping', '/webconsole-am/editAuthLevelGrouping.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('NEW_AUTH_LVL_GRP_DN', 'NEW_AUTH_LVL_GRP', 'MENU_DISPLAY_NAME', 'Create New Grouping');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('NEW_AUTH_LVL_GRP_PB', 'NEW_AUTH_LVL_GRP', 'MENU_IS_PUBLIC', 'true');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('AUTH_LVL_GRP_NEW_ROOT', 'NEW_AUTH_LVL_GRP');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('AUTH_LVL_GRP_EDIT_ROOT', 'MENU_ITEM', 'AUTH_LVL_GRP_EDIT_ROOT', 'Auth Level Grouping Edit Root');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AUTH_LVL_GRP_EDIT_ROOT_PB', 'AUTH_LVL_GRP_EDIT_ROOT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AUTH_LVL_GRP_EDIT_ROOT_DN', 'AUTH_LVL_GRP_EDIT_ROOT', 'MENU_DISPLAY_NAME', 'Auth Level Grouping Edit Root');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('BACK_TO_AUTH_LVL_GRP_SRH', 'MENU_ITEM', 'BACK_TO_AUTH_LVL_GRP_SRH', 'Back to Search', '/webconsole-am/authLevelGroupings.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('BACK_TO_AUTH_LVL_GRP_SRH_DN', 'BACK_TO_AUTH_LVL_GRP_SRH', 'MENU_DISPLAY_NAME', 'Back to Search');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('BACK_TO_AUTH_LVL_GRP_SRH_PUB', 'BACK_TO_AUTH_LVL_GRP_SRH', 'MENU_IS_PUBLIC', 'true');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('AUTH_LVL_GRP_EDIT_ROOT', 'BACK_TO_AUTH_LVL_GRP_SRH');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('AUTH_LVL_GRP_ATTR', 'MENU_ITEM', 'AUTH_LVL_GRP_ATTR', 'Auth Level Grouping Attribute Root');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AUTH_LVL_GRP_ATTR_PB', 'AUTH_LVL_GRP_ATTR', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AUTH_LVL_GRP_ATTR_DN', 'AUTH_LVL_GRP_ATTR', 'MENU_DISPLAY_NAME', 'Auth Level Grouping Attribute Root');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES ('BACK_TO_AUTH_LVL', 'MENU_ITEM', 'BACK_TO_AUTH_LVL', 'Back to Grouping', '/webconsole-am/editAuthLevelGrouping.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('BACK_TO_AUTH_LVL_DN', 'BACK_TO_AUTH_LVL', 'MENU_DISPLAY_NAME', 'Back to Grouping');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('BACK_TO_AUTH_LVL_PUB', 'BACK_TO_AUTH_LVL', 'MENU_IS_PUBLIC', 'true');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('AUTH_LVL_GRP_ATTR', 'BACK_TO_AUTH_LVL');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL) VALUES('AUTH_LEVEL_GRP', 'MENU_ITEM', 'AUTH_LEVEL_GRP', 'Authentication Levels', '/webconsole-am/authLevelGroupings.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AUTH_LEVEL_GRP_PB', 'AUTH_LEVEL_GRP', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('AUTH_LEVEL_GRP_DN', 'AUTH_LEVEL_GRP', 'MENU_DISPLAY_NAME', 'Authentication Groupings');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('ACC_CONTROL', 'AUTH_LEVEL_GRP');
commit;
use openiam;

DELETE FROM AUTH_LEVEL_ATTRIBUTE WHERE AUTH_LEVEL_GROUPING_ID IN('CERT_AUTH', 'KERB_AUTH');

DELETE FROM URI_AUTH_LEVEL_GRP_XREF WHERE AUTH_LEVEL_GROUPING_ID IN('CERT_AUTH', 'KERB_AUTH');
DELETE FROM CP_AUTH_LEVEL_GRP_XREF WHERE AUTH_LEVEL_GROUPING_ID IN('CERT_AUTH', 'KERB_AUTH');
DELETE FROM AUTH_LEVEL_GROUPING WHERE AUTH_LEVEL_GROUPING_ID IN('CERT_AUTH', 'KERB_AUTH');

DELETE FROM AUTH_LEVEL WHERE AUTH_LEVEL_ID IN('KERB_AUTH', 'CERT_AUTH');

INSERT INTO AUTH_LEVEL (AUTH_LEVEL_ID, AUTH_LEVEL_NAME, REQUIRES_AUTHENTICATION) VALUES('KERB_AUTH', 'Kerberos Authentication', 'Y');

INSERT INTO AUTH_LEVEL_GROUPING (AUTH_LEVEL_GROUPING_ID, AUTH_LEVEL_ID, NAME) VALUES('KERB_AUTH', 'KERB_AUTH', 'Kerberos Authentication');
commit;
use openiam;

ALTER TABLE RESOURCE_TYPE ADD COLUMN IMAGE_TYPE VARCHAR(16) NULL DEFAULT NULL;
ALTER TABLE RESOURCE_TYPE MODIFY COLUMN URL MEDIUMTEXT NULL DEFAULT NULL;

commit;
use openiam;

DELETE FROM ATTRIBUTE_MAP WHERE MANAGED_SYS_ID='113';
DELETE FROM MNG_SYS_OBJECT_MATCH WHERE MANAGED_SYS_ID = '113';
DELETE FROM MANAGED_SYS WHERE MANAGED_SYS_ID = '113';
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID = '113';
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID = '112';
DELETE FROM RESOURCE_USER WHERE RESOURCE_ID = '113';
DELETE FROM RESOURCE_USER WHERE RESOURCE_ID = '112';
DELETE FROM RESOURCE_GROUP WHERE RESOURCE_ID = '113';
DELETE FROM RESOURCE_GROUP WHERE RESOURCE_ID = '112';
DELETE FROM RESOURCE_PRIVILEGE WHERE RESOURCE_ID = '113';
DELETE FROM RESOURCE_PRIVILEGE WHERE RESOURCE_ID = '112';
DELETE FROM RESOURCE_POLICY WHERE RESOURCE_ID = '113';
DELETE FROM RESOURCE_POLICY WHERE RESOURCE_ID = '112';

DELETE FROM RES WHERE RESOURCE_ID = '113';
DELETE FROM RES WHERE RESOURCE_ID = '112';

DELETE FROM PROVISION_CONNECTOR WHERE CONNECTOR_ID = '61';

DELETE FROM RECON_RES_ATTR_MAP WHERE RECON_RES_ATTR_MAP_ID='65';
DELETE FROM RECON_RES_ATTR_MAP WHERE RECON_RES_ATTR_MAP_ID='66';
DELETE FROM RECON_RES_ATTR_MAP WHERE RECON_RES_ATTR_MAP_ID='67';
DELETE FROM RECON_RES_ATTR_MAP WHERE RECON_RES_ATTR_MAP_ID='68';
DELETE FROM RECON_RES_ATTR_MAP WHERE RECON_RES_ATTR_MAP_ID='69';
DELETE FROM RECON_RES_ATTR_MAP WHERE RECON_RES_ATTR_MAP_ID='70';
DELETE FROM RECON_RES_ATTR_MAP WHERE RECON_RES_ATTR_MAP_ID='71';
DELETE FROM RECON_RES_ATTR_MAP WHERE RECON_RES_ATTR_MAP_ID='72';
DELETE FROM RECON_RES_ATTR_MAP WHERE RECON_RES_ATTR_MAP_ID='73';
DELETE FROM RECON_RES_ATTR_MAP WHERE RECON_RES_ATTR_MAP_ID='74';
DELETE FROM POLICY WHERE POLICY_ID = '4660';
DELETE FROM POLICY WHERE POLICY_ID = '4661';
DELETE FROM POLICY WHERE POLICY_ID = '4662';
DELETE FROM POLICY WHERE POLICY_ID = '4663';

INSERT INTO POLICY (POLICY_ID,POLICY_DEF_ID,NAME,DESCRIPTION,STATUS,CREATE_DATE,CREATED_BY,RULE_SRC_URL,RULE_TEXT) VALUES ('4660','104','userCreateDate','userCreateDate',1,CURRENT_TIMESTAMP(),'3000','provision/userCreateDate.groovy','');
INSERT INTO POLICY (POLICY_ID,POLICY_DEF_ID,NAME,DESCRIPTION,STATUS,CREATE_DATE,CREATED_BY,RULE_SRC_URL,RULE_TEXT) VALUES ('4661','104','userCreateDate','userCreateDate',1,CURRENT_TIMESTAMP(),'3000','provision/ext_phone.groovy','');
INSERT INTO POLICY (POLICY_ID,POLICY_DEF_ID,NAME,DESCRIPTION,STATUS,CREATE_DATE,CREATED_BY,RULE_SRC_URL,RULE_TEXT) VALUES ('4662','104','userCreateDate','userCreateDate',1,CURRENT_TIMESTAMP(),'3000','provision/nmb_phone.groovy','');
INSERT INTO POLICY (POLICY_ID,POLICY_DEF_ID,NAME,DESCRIPTION,STATUS,CREATE_DATE,CREATED_BY,RULE_SRC_URL,RULE_TEXT) VALUES ('4663','104','appTableGroups','Groups for AppTable connector',1,CURRENT_TIMESTAMP(),'3000','provision/appTableGroup.groovy','');

#LOGIN
INSERT INTO RECON_RES_ATTR_MAP (RECON_RES_ATTR_MAP_ID,ATTR_POLICY_ID) VALUES (65,4562);
#PASSWORD
INSERT INTO RECON_RES_ATTR_MAP (RECON_RES_ATTR_MAP_ID,ATTR_POLICY_ID) VALUES (66,4509);
#FIRST_NAME
INSERT INTO RECON_RES_ATTR_MAP (RECON_RES_ATTR_MAP_ID,ATTR_POLICY_ID) VALUES (67,4601);
#LAST_NAME_NAME
INSERT INTO RECON_RES_ATTR_MAP (RECON_RES_ATTR_MAP_ID,ATTR_POLICY_ID) VALUES (68,4602);
#EMPLOYEE_ID
INSERT INTO RECON_RES_ATTR_MAP (RECON_RES_ATTR_MAP_ID,ATTR_POLICY_ID) VALUES (69,4543);
#DOB
INSERT INTO RECON_RES_ATTR_MAP (RECON_RES_ATTR_MAP_ID,ATTR_POLICY_ID) VALUES (70,4541);
#CREATE_DATE
INSERT INTO RECON_RES_ATTR_MAP (RECON_RES_ATTR_MAP_ID,ATTR_POLICY_ID) VALUES (71,4660);
#PHONE_EXT
INSERT INTO RECON_RES_ATTR_MAP (RECON_RES_ATTR_MAP_ID,ATTR_POLICY_ID) VALUES (72,4661);
#PHONE_NMB
INSERT INTO RECON_RES_ATTR_MAP (RECON_RES_ATTR_MAP_ID,ATTR_POLICY_ID) VALUES (73,4662);
#GROUPS
INSERT INTO RECON_RES_ATTR_MAP (RECON_RES_ATTR_MAP_ID,ATTR_POLICY_ID) VALUES (74,4663);

#ADMINRESOURCE
INSERT INTO RES (RESOURCE_ID,RESOURCE_TYPE_ID,DESCRIPTION,NAME,DISPLAY_ORDER,URL,MIN_AUTH_LEVEL,IS_PUBLIC,ADMIN_RESOURCE_ID,RISK) VALUES ('112','ADMIN_RESOURCE',NULL,'RES_ADMIN_AppTable',NULL,NULL,NULL,'Y',NULL,NULL);

#RESOURCE_
INSERT INTO RES (RESOURCE_ID,RESOURCE_TYPE_ID,DESCRIPTION,NAME,DISPLAY_ORDER,URL,MIN_AUTH_LEVEL,IS_PUBLIC,ADMIN_RESOURCE_ID,RISK) VALUES ('113','MANAGED_SYS',NULL,'AppTableMSys',NULL,NULL,NULL,'N',112,NULL);

#RESOURCE_PROP
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID,RESOURCE_ID,METADATA_ID,NAME,PROP_VALUE,PROP_GROUP) VALUES ('113','113',NULL,'USER_TABLE','MY_USR_TABLE',NULL);
#RESOURCE_PROP
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID,RESOURCE_ID,METADATA_ID,NAME,PROP_VALUE,PROP_GROUP) VALUES ('114','113',NULL,'GROUP_TABLE','MY_GRP_TABLE',NULL);
#RESOURCE_PROP
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID,RESOURCE_ID,METADATA_ID,NAME,PROP_VALUE,PROP_GROUP) VALUES ('115','113',NULL,'USER_GROUP_MEMBERSHIP','USR_GRP_MBR',NULL);
#RESOURCE_PROP
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID,RESOURCE_ID,METADATA_ID,NAME,PROP_VALUE,PROP_GROUP) VALUES ('116','113',NULL,'USER_GROUP_MEMBERSHIP_GRP_ID','GRP_ID',NULL);
#RESOURCE_PROP
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID,RESOURCE_ID,METADATA_ID,NAME,PROP_VALUE,PROP_GROUP) VALUES ('117','113',NULL,'USER_GROUP_MEMBERSHIP_USR_ID','USR_ID',NULL);

#CONENCTOR
INSERT INTO PROVISION_CONNECTOR (CONNECTOR_ID,NAME,CLIENT_COMM_PROTOCOL, SERVICE_URL,SERVICE_NAMESPACE,SERVICE_PORT,CONNECTOR_INTERFACE) VALUES ('61','AppTableConnector','CLEAR','localhost:9080/openiam-esb/idmsrvc/ApplicationTablesConnector','http://www.openiam.org/service/connector','NA','LOCAL');


#MSYS
INSERT INTO MANAGED_SYS (MANAGED_SYS_ID,NAME,DESCRIPTION,STATUS,CONNECTOR_ID,HOST_URL,APPL_URL,PORT,COMM_PROTOCOL,USER_ID,PSWD,START_DATE,END_DATE,RESOURCE_ID,PRIMARY_REPOSITORY,SECONDARY_REPOSITORY_ID,ALWAYS_UPDATE_SECONDARY,RES_DEPENDENCY,ADD_HNDLR,MODIFY_HNDLR,DELETE_HNDLR,SETPASS_HNDLR,SUSPEND_HNDLR,SEARCH_HNDLR,LOOKUP_HNDLR,TEST_CONNECTION_HNDLR,RECONCILE_RESOURCE_HNDLR,HNDLR_5,DRIVER_URL,CONNECTION_STRING,ATTRIBUTE_NAMES_LOOKUP,ATTRIBUTE_NAMES_HNDLR) VALUES (113,'AppTableMSys',NULL,'ACTIVE',61,NULL,NULL,NULL,'CLEAR','root',NULL,NULL,NULL,113,0,NULL,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'com.mysql.jdbc.Driver','jdbc:mysql://localhost/test',NULL,NULL);

UPDATE MANAGED_SYS SET SEARCH_HNDLR='GROUP=GRP_ID,GRP_NAME;' WHERE MANAGED_SYS_ID = '113';

INSERT INTO ATTRIBUTE_MAP (ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID) VALUES (612,113,113,'PRINCIPAL','LOGIN_ID',NULL,NULL,65,NULL,'ACTIVE',NULL,NULL,NULL,'STRING',NULL,NULL);

INSERT INTO ATTRIBUTE_MAP
(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID) VALUES (613,113,113,'USER','USER_PASSWORD',NULL,NULL,66,NULL,'ACTIVE',NULL,NULL,NULL,'STRING',NULL,NULL);

INSERT INTO ATTRIBUTE_MAP
(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID) VALUES (614,113,113,'USER','FIRST_NAME',NULL,NULL,67,NULL,'ACTIVE',NULL,NULL,NULL,'STRING',NULL,NULL);

INSERT INTO ATTRIBUTE_MAP
(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID) VALUES (615,113,113,'USER','LAST_NAME',NULL,NULL,68,NULL,'ACTIVE',NULL,NULL,NULL,'STRING',NULL,NULL);

INSERT INTO ATTRIBUTE_MAP
(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID) VALUES (616,113,113,'USER','EMPLOYEE_ID',NULL,NULL,69,NULL,'ACTIVE',NULL,NULL,NULL,'STRING',NULL,NULL);

INSERT INTO ATTRIBUTE_MAP
(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID) VALUES (617,113,113,'USER','DOB',NULL,NULL,70,NULL,'ACTIVE',NULL,NULL,NULL,'DATE',NULL,NULL);

INSERT INTO ATTRIBUTE_MAP
(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID) VALUES (618,113,113,'USER','CREATE_DATE',NULL,NULL,71,NULL,'ACTIVE',NULL,NULL,NULL,'DATE',NULL,NULL);

INSERT INTO ATTRIBUTE_MAP
(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID) VALUES (619,113,113,'USER','PHONE_EXT',NULL,NULL,72,NULL,'ACTIVE',NULL,NULL,NULL,'INT',NULL,NULL);

INSERT INTO ATTRIBUTE_MAP
(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID) VALUES (620,113,113,'USER','PHONE_NBR',NULL,NULL,73,NULL,'ACTIVE',NULL,NULL,NULL,'STRING',NULL,NULL);

INSERT INTO ATTRIBUTE_MAP
(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID) VALUES (623,113,113,'GROUP','GRP_ID',NULL,NULL,74,NULL,'ACTIVE',NULL,NULL,NULL,'STRING',NULL,NULL);

commit;
USE openiam;

UPDATE RESOURCE_TYPE SET
	URL='iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH3gEHFCs3kbWVPAAAAwRJREFUOMuFk19IW3cUxz/3xuTGpJ1Y0WUxf2B1NtsQBMvWZA+DInvoHpywFxm0T0JfOgp7kL0WWtjYw9Y99N2NgnuRCUMwOofGmXQT3MJdiEbRmpCIayq5We69v1+Su4cRkbGy79P5Hs73C4fzPfACJJPJW5VKxSyXy2Yqlbr3ojn1PJmbm5vu1O12e6y/v9/b19fndbvdVzv9paWlm//ptLm5+bMQwtna2krl8/njRqPhGIbhGIbhmKbpFAoFc3t7+wfLspyDg4PDjk4BmJ2dvT0xMfFISomqqrhcLqrVKnt7e7TbbcLhMMFgECklzWYTRVHIZrNfjY+P31U6TplMJh0Khd7WNI10Oo3X6yUajQIKpVKRk5MTEokEtm1zfHxcjMfjYYCujoGUckhKSS6XIxZ7HYDSye84OFy6dJlgcJBsNsvg4CBCiNDZChsbGx8JId4KBAIfq6rK6ekpFy/28mT/S67Fr+F2e/gls0bEGqHVUnEcjQuDb2CY5mNN0zZcU1NTv/b09CQURUFVVUBB31vBCszTclk8t/Y5ymzwwdXvWHxY5J13j8gsnxIaGR2xbft91bZthBBIKfH5fLRaLRqNBs+tP0kdrfPT4RoepYzLaTDxyVMCiQhK4w+EEAghUIUQX9RqtaSUEsuy6PZ6eTUQZ/9Jk7btot5wUzyUoMIrb55AVxeWDfV6PW0YxiPlXECE3+93x2Ixcrk8hd08m/q3qF1NhvreY/TZ51y/Y/Lb2hiF+i0+nL7tAeTZFWq1WtLj8dzQdZ3h4WFUVeFK7D5ujxu/z0fpRy8t81MMc4DuYDgPyLMoz8/P34xGozc0TcPn81Eul4lEwgwNXSYaidDb24tzwU/TBLUJAwMDVxYXFx+cGUxOTn5jmmapu7ubdrtdVBSFWq1GpVKhXC5TrVbxB8LYf/0jEUJYy8vLn/37HZTV1dWHHbKysvJY13VH13VnfX09dfdlRp9973Fmp6/rMzMzPfwfFhYW7uzu7jo7OztOMpn8GuD+a76xl0A7P/c3vwJuLRaz1L8AAAAASUVORK5CYII=',
	IMAGE_TYPE='png'
WHERE RESOURCE_TYPE_ID='ADMIN_RESOURCE';

UPDATE RESOURCE_TYPE SET
	URL='iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAAK/INwWK6QAAAAZiS0dEAAAAAAAA+UO7fwAAAAlwSFlzAAAASAAAAEgARslrPgAAAAl2cEFnAAAAEAAAABAAXMatwwAAAuBJREFUOMulU11IU2EYfr5zzuYwp+Yf+ZPOKObyl1lmEV4kZt1EijECgyikuyIiiFC68aYfoug2kO66kYqgFIPyN9GT29BUjrjppnNz/5uenblz9nVhLaxLX3hvXt7n4eF53pdQSrGf4gDAZLoF8q5PX1Ce22loLG3Vnyg75lxyL80MCV9si56H2f+AmN/dR+kuAQAYazPvVd+50bWTXg51fgzNl4MnGxsCxlcPRG8aJVGqJJOUEkpAIEYTwa1Y7H1KAQBsSFls9o4BsSCBw3UALs8R5Gkn2N6Breccy4JQCioTsBxBYHkHb7oD/QA6OACglJYpZ9qN9mU3aqoqoNVqQBgWgXgPhMVrqNfZEFoFuDRgcxVITwcSW4w/paC62vDteFWlzsybsb0dQUvLaYyO8giGvNjkD4tvP3sfSV7JrlHk/GAMvAYoiyLZnyKQpNicmuN0pxrrkZenhSSJqK2twPDwJHKbe9Tr2RbjqtnyIelyLGmUOBIOG6+K+FKGYm1to8/r9UCl0gAgCIXCkKQYJCkOjYZwrRearl65bporbWl5Ga80HpLOt+1JBNvb0se5ufn+UMgPUUxgfd2P5eVVWK0/x6anf1idjhUUFxaoOy613j7bUDdNCCnZQwAg4XR6unh+ZkwQFkGpAq02Ezpd8Q7PzzeMjEw9Gxr6OhEMBlBZqS/Jysxoky+asCdGgAbtdleTx+O/GYlEnlRVVR+sqTGcEwR7p88Xuu/3hzmfL/CU41RuSYoProjRvwo4TgUAYFmGimL8tcUimKxWSyIjQ4u6OkMvgByOY2WfL3zX7fY+VhRFGB/+9JdgfHwQKpUahBAwDIEsK0MOx8aAICxBrz9aWFRU0C3LCmFZBizL/nfWWFuzYWHBvDtgGBAC+P3RdrPZKsiyjJycrFZCCEmBGAYMw+wxERbLd8zOTiESCQEACCFyOBx7MTIyuRgIRHgAyT/gzU0Xksnk7t5+3/kXA01Zlqy1T94AAAAldEVYdGNyZWF0ZS1kYXRlADIwMDktMTEtMTVUMTY6MDg6NDEtMDc6MDAkruHgAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDEwLTAxLTExVDA5OjE4OjM2LTA3OjAwd0j55AAAACV0RVh0ZGF0ZTptb2RpZnkAMjAxMC0wMS0xMVQwOToxODozNi0wNzowMAYVQVgAAAA1dEVYdExpY2Vuc2UAaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvTEdQTC8yLjEvO8G0GAAAACV0RVh0bW9kaWZ5LWRhdGUAMjAwOS0xMS0xNVQxNjowODo0MS0wNzowMHsfl9QAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAAADXRFWHRTb3VyY2UATnV2b2xhrE818QAAADR0RVh0U291cmNlX1VSTABodHRwOi8vd3d3Lmljb24ta2luZy5jb20vcHJvamVjdHMvbnV2b2xhL3Y9tFIAAAAASUVORK5CYII=',
	IMAGE_TYPE='png'
WHERE RESOURCE_TYPE_ID='AUTH_PROVIDER';


UPDATE RESOURCE_TYPE SET
	URL='iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAKPWlDQ1BpY2MAAHjanVNnVFPpFj333vRCS4iAlEtvUhUIIFJCi4AUkSYqIQkQSoghodkVUcERRUUEG8igiAOOjoCMFVEsDIoK2AfkIaKOg6OIisr74Xuja9a89+bN/rXXPues852zzwfACAyWSDNRNYAMqUIeEeCDx8TG4eQuQIEKJHAAEAizZCFz/SMBAPh+PDwrIsAHvgABeNMLCADATZvAMByH/w/qQplcAYCEAcB0kThLCIAUAEB6jkKmAEBGAYCdmCZTAKAEAGDLY2LjAFAtAGAnf+bTAICd+Jl7AQBblCEVAaCRACATZYhEAGg7AKzPVopFAFgwABRmS8Q5ANgtADBJV2ZIALC3AMDOEAuyAAgMADBRiIUpAAR7AGDIIyN4AISZABRG8lc88SuuEOcqAAB4mbI8uSQ5RYFbCC1xB1dXLh4ozkkXKxQ2YQJhmkAuwnmZGTKBNA/g88wAAKCRFRHgg/P9eM4Ors7ONo62Dl8t6r8G/yJiYuP+5c+rcEAAAOF0ftH+LC+zGoA7BoBt/qIl7gRoXgugdfeLZrIPQLUAoOnaV/Nw+H48PEWhkLnZ2eXk5NhKxEJbYcpXff5nwl/AV/1s+X48/Pf14L7iJIEyXYFHBPjgwsz0TKUcz5IJhGLc5o9H/LcL//wd0yLESWK5WCoU41EScY5EmozzMqUiiUKSKcUl0v9k4t8s+wM+3zUAsGo+AXuRLahdYwP2SycQWHTA4vcAAPK7b8HUKAgDgGiD4c93/+8//UegJQCAZkmScQAAXkQkLlTKsz/HCAAARKCBKrBBG/TBGCzABhzBBdzBC/xgNoRCJMTCQhBCCmSAHHJgKayCQiiGzbAdKmAv1EAdNMBRaIaTcA4uwlW4Dj1wD/phCJ7BKLyBCQRByAgTYSHaiAFiilgjjggXmYX4IcFIBBKLJCDJiBRRIkuRNUgxUopUIFVIHfI9cgI5h1xGupE7yAAygvyGvEcxlIGyUT3UDLVDuag3GoRGogvQZHQxmo8WoJvQcrQaPYw2oefQq2gP2o8+Q8cwwOgYBzPEbDAuxsNCsTgsCZNjy7EirAyrxhqwVqwDu4n1Y8+xdwQSgUXACTYEd0IgYR5BSFhMWE7YSKggHCQ0EdoJNwkDhFHCJyKTqEu0JroR+cQYYjIxh1hILCPWEo8TLxB7iEPENyQSiUMyJ7mQAkmxpFTSEtJG0m5SI+ksqZs0SBojk8naZGuyBzmULCAryIXkneTD5DPkG+Qh8lsKnWJAcaT4U+IoUspqShnlEOU05QZlmDJBVaOaUt2ooVQRNY9aQq2htlKvUYeoEzR1mjnNgxZJS6WtopXTGmgXaPdpr+h0uhHdlR5Ol9BX0svpR+iX6AP0dwwNhhWDx4hnKBmbGAcYZxl3GK+YTKYZ04sZx1QwNzHrmOeZD5lvVVgqtip8FZHKCpVKlSaVGyovVKmqpqreqgtV81XLVI+pXlN9rkZVM1PjqQnUlqtVqp1Q61MbU2epO6iHqmeob1Q/pH5Z/YkGWcNMw09DpFGgsV/jvMYgC2MZs3gsIWsNq4Z1gTXEJrHN2Xx2KruY/R27iz2qqaE5QzNKM1ezUvOUZj8H45hx+Jx0TgnnKKeX836K3hTvKeIpG6Y0TLkxZVxrqpaXllirSKtRq0frvTau7aedpr1Fu1n7gQ5Bx0onXCdHZ4/OBZ3nU9lT3acKpxZNPTr1ri6qa6UbobtEd79up+6Ynr5egJ5Mb6feeb3n+hx9L/1U/W36p/VHDFgGswwkBtsMzhg8xTVxbzwdL8fb8VFDXcNAQ6VhlWGX4YSRudE8o9VGjUYPjGnGXOMk423GbcajJgYmISZLTepN7ppSTbmmKaY7TDtMx83MzaLN1pk1mz0x1zLnm+eb15vft2BaeFostqi2uGVJsuRaplnutrxuhVo5WaVYVVpds0atna0l1rutu6cRp7lOk06rntZnw7Dxtsm2qbcZsOXYBtuutm22fWFnYhdnt8Wuw+6TvZN9un2N/T0HDYfZDqsdWh1+c7RyFDpWOt6azpzuP33F9JbpL2dYzxDP2DPjthPLKcRpnVOb00dnF2e5c4PziIuJS4LLLpc+Lpsbxt3IveRKdPVxXeF60vWdm7Obwu2o26/uNu5p7ofcn8w0nymeWTNz0MPIQ+BR5dE/C5+VMGvfrH5PQ0+BZ7XnIy9jL5FXrdewt6V3qvdh7xc+9j5yn+M+4zw33jLeWV/MN8C3yLfLT8Nvnl+F30N/I/9k/3r/0QCngCUBZwOJgUGBWwL7+Hp8Ib+OPzrbZfay2e1BjKC5QRVBj4KtguXBrSFoyOyQrSH355jOkc5pDoVQfujW0Adh5mGLw34MJ4WHhVeGP45wiFga0TGXNXfR3ENz30T6RJZE3ptnMU85ry1KNSo+qi5qPNo3ujS6P8YuZlnM1VidWElsSxw5LiquNm5svt/87fOH4p3iC+N7F5gvyF1weaHOwvSFpxapLhIsOpZATIhOOJTwQRAqqBaMJfITdyWOCnnCHcJnIi/RNtGI2ENcKh5O8kgqTXqS7JG8NXkkxTOlLOW5hCepkLxMDUzdmzqeFpp2IG0yPTq9MYOSkZBxQqohTZO2Z+pn5mZ2y6xlhbL+xW6Lty8elQfJa7OQrAVZLQq2QqboVFoo1yoHsmdlV2a/zYnKOZarnivN7cyzytuQN5zvn//tEsIS4ZK2pYZLVy0dWOa9rGo5sjxxedsK4xUFK4ZWBqw8uIq2Km3VT6vtV5eufr0mek1rgV7ByoLBtQFr6wtVCuWFfevc1+1dT1gvWd+1YfqGnRs+FYmKrhTbF5cVf9go3HjlG4dvyr+Z3JS0qavEuWTPZtJm6ebeLZ5bDpaql+aXDm4N2dq0Dd9WtO319kXbL5fNKNu7g7ZDuaO/PLi8ZafJzs07P1SkVPRU+lQ27tLdtWHX+G7R7ht7vPY07NXbW7z3/T7JvttVAVVN1WbVZftJ+7P3P66Jqun4lvttXa1ObXHtxwPSA/0HIw6217nU1R3SPVRSj9Yr60cOxx++/p3vdy0NNg1VjZzG4iNwRHnk6fcJ3/ceDTradox7rOEH0x92HWcdL2pCmvKaRptTmvtbYlu6T8w+0dbq3nr8R9sfD5w0PFl5SvNUyWna6YLTk2fyz4ydlZ19fi753GDborZ752PO32oPb++6EHTh0kX/i+c7vDvOXPK4dPKy2+UTV7hXmq86X23qdOo8/pPTT8e7nLuarrlca7nuer21e2b36RueN87d9L158Rb/1tWeOT3dvfN6b/fF9/XfFt1+cif9zsu72Xcn7q28T7xf9EDtQdlD3YfVP1v+3Njv3H9qwHeg89HcR/cGhYPP/pH1jw9DBY+Zj8uGDYbrnjg+OTniP3L96fynQ89kzyaeF/6i/suuFxYvfvjV69fO0ZjRoZfyl5O/bXyl/erA6xmv28bCxh6+yXgzMV70VvvtwXfcdx3vo98PT+R8IH8o/2j5sfVT0Kf7kxmTk/8EA5jz/Dou+7MAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAACxMAAAsTAQCanBgAAAAHdElNRQfeAQcUARBb1Ox/AAADE0lEQVQ4y22T3WubZRjGf8/zvPlom7RNwpK2KxPp3OZsZYy2fmCdTIdYlR04j/RgRx4Kng088dB/QHswD9WCiDCrIDgMFMeULptt7cRkznY1aVJJsywx70fe9709sI0gXufXdf1uuC/Ff1Qslh7XWp2LRCJPeJ53RER0LBYre173hh/4Vx89ceJH/k/FYun46tralcrOTmDbtvi+L0EQSBAE4vu+OI4j1WpNVtfW82sbt2cPfAqgVLrzWHmnsjx+eDwdjUbwgwAJQ5RoMEAIWiuMMYgIW/e23GRi6KVTp6byFsDq+vqHY2Oj6Xq9ju+HGKNQSqHUQYcgAiKCUYq+/oHY75t3LwNHLYDGXuOpVDpD5682Rmu0Niij0Urt2wERAhEkFOL9fYjIBIAFYNt298/dWsT3fYwxWMbCGI3SGqXYbw8JQiEMAmzHptlsSi9geHhI1Wq7pFIphAAERDTaGPbvoNuxiXZKWCbCXt2mb/QYABrAcRyVTCTwPJfBgQGGUynSmQypdIZ0JkMmk0HK9zg/9z6bVxaZn71F+fqy6hH0JxKyU6niuQ5Ga4aHhVYrIJkcQFsGu92h3/yCkQ4XLlUYmZ4jt/THvwQaZR2deJhabZfl76+hjMVILkvXcbHbHQYHB7GdFGg4PLUHlkXHEXoEjUaj1Wzq9PT0aZTS3Cn+irY0ruODCH0DMRyd49vLCc6943Hji2t0s6+E8OU/ARu3N269PD///NJXX6PQXLz4Jrlcjmq1BkFIJnuIdqvNJ+/lOWvnedDJUu1KsUdw9rkzC4VCYfbZuWeSrufy3dU88f44ruuDFuKxGK7r8tDJk/h2nk6zLccfmfig98phGOZWVlZe/3Txs3cFPXLhtfNkD2V50LpPGEIymaR5v8HS4sdceuMjfvrhye2Zt745E4/Ht639TdRnZmY+n5yc3C7cvPlqpVx+eq9eH2+1O7EwFIaGEp7nurunj02U/Bovbl7fK8y9HS9rrX11sKowDBUQBdLAWLfbHQ18f0hAGWNa0Wi0BpQXXpg6svBbu/Dz1pYD8DcBv3chtafXRwAAAABJRU5ErkJggg==',
	IMAGE_TYPE='png'
WHERE RESOURCE_TYPE_ID='AUTH_REPO';

UPDATE RESOURCE_TYPE SET
	URL='iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAAK/INwWK6QAAAAZiS0dEAAAAAAAA+UO7fwAAAAlwSFlzAAAASAAAAEgARslrPgAAAAl2cEFnAAAAEAAAABAAXMatwwAAA5NJREFUOMtN0VtPm2UAB/D/877P+7R9Dz239KAM3zkKQ2EgQ6IZY2RbopuJJovxziujxktv/ACLiZ9Ar/RiyRLjhcsS1IsNt2RhgymsI2sLlHIorLTQc+nhPXphTPx9hR8BgKHZ75DJHLC5S2ffHD0bu/Fq1HPFLTtVjiOk29O3j8qte5ns4S+/3Vt7PjIY7T2++zX+Q9jgN7AqTcdHH09/cHUm8dXESOytgFeUHYwSSnkYhmlX6p2TzFZp9cGTze9v3f7zTo96Op30TQAAb7qnhdmZkWvvzw5/e340PinwlqPe6hDdMMGYAEI44mCU+T3SKUrpubZuv3yRSq/bjaQF2KDqK6FEf8z/hSLxg9ntfXQ1Ezxl6I8FwBMOpmUDIOB5injYqw7EQ1+q/fFUNm8+BwDOq7iul6vNqWR6l6xtHiNf7EKWJPQFPXA4GAghsG2g2zVgWiAeRZ6IhH1XIU0LAMCJLnZR0zQlt1dFLl9HvlAHIQSSU4DoYlAkF3ieR+uki0KxCl0zJUVyTcrBAQUAaCzkGRg+HeE5zsT6dh5rmTLKtTaSqTxmplSo/WFYFlCutfFkZRP5wgmpNttRyqgMoEIZo4YkOu1wUCSdTgNLyR1s5etYTu7CsmzE+/xotTU8+juHxWc5CFRC8bgGXe8AAKimaeuapideHpaF1dQBynUNpk3R6QKp7BEKpSZy6/tYW3gEn0PA6PkEmBBAYbdHPvv0Mfjo61cCjAnTT5MZ6dl6ERYEMIFCELh/R3o9xJ7OY666gHHVjbHLU4Zf6q1QXltUVdXiqWesbFjc6eN6Z9iwwCmyCK/bBa8ighACz8EWPlHSGJrrAz/5LrRiVm8vPUyPXbvxRrlWG+LLJ1JTcMolcMJwwOeOxcMeLhxUEPTJCEgUl5pZvBM10T0TwYmLwY0K71bH1OM2xL9WVv/gncFxu7izvO8L9GW9iihHQt5wPOxxhPwKF3TxeLuShsoZcAYo3GELTfcAaUASWgvzq9u3bv/AG40UoonrtlG6vyeK3mWXg9ugxCp6KgWblfYaicOUHm8eKRyVwYku2JIAt12FvLtXbGyVfucBoFVagT8+aSfGP6z9+uPna7puPriwdDcT3liEt1eFT2QhXmAMugO03TO6B6XjjRf5+Yfbh/cJ/iccO4PBkYsI+COY+Pkms1yO1xRJPHUu3veeLxK8YHsVWraxnzuqLizn8nd+2j3Y+QcjV4VtW4vPBAAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxMC0wMi0yM1QxODoxNDoxMy0wNzowMEqc8Q0AAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTAtMDItMjNUMTg6MTQ6MTMtMDc6MDA7wUmxAAAANXRFWHRMaWNlbnNlAGh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL0xHUEwvMi4xLzvBtBgAAAAUdEVYdFNvdXJjZQBDcnlzdGFsIENsZWFy9eLnqAAAADp0RVh0U291cmNlX1VSTABodHRwOi8vY29tbW9ucy53aWtpbWVkaWEub3JnL3dpa2kvQ3J5c3RhbF9DbGVhcq++RWMAAAAASUVORK5CYII=',
	IMAGE_TYPE='png'
WHERE RESOURCE_TYPE_ID='CONTENT_PROVIDER';

UPDATE RESOURCE_TYPE SET
	URL='iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QAAAAAAAD5Q7t/AAAACXBIWXMAABuvAAAbrwFeGpEcAAAACXZwQWcAAAAQAAAAEABcxq3DAAADNElEQVQ4y3VTT0wjdRh9M79fpm1KaaEUisSCXQo1xPXg7kq4GZaEcFADBy0BEgGDid49qOFi1uwJE0P8E0Ig2VSSDZJoohgIK3qpyga3ON2lsN1ZCG1lGNpu0+nMr52OB6U2Ub/L917yve/wvfdx+J9aXV291tXV9SbHcdjb2/siFAr9+l9zfC2ZmJjw+nw+AIBhGP2BQGC6s7NzmhByHQDa2towOzvrrdVwF2B+fv6VoaGhFVEUb9lsNub3+0c9Ho8LAGRZzkqSFHa73ZampqbRSCTy+vDw8NfVLePj495oNFrM5XKmqqqmqqpmoVAwFUUxZVk2z8/PqziVSpnRaFQNhUJeAKAAsL29nR4ZGbnldrunGxoacKpkETs4hsYMMFYGTANBvxfNbidUVUUsFgtvbm6mqwuOjo5QLBbLuq4jfijhXjwFSil0VkKpXIGm6YhL99D/YgB2K4Gqqrosy3/dYG1t7arL5bouCMK7Ho/HufVzHE/UMnqf70BLox2/RBMQE2fI5PJodAgY7n8OmqblSqXSzWw2u8kXi8WZurq6G3a73WkYBnZ+l5CU82huboG7sQEv9fbgjVd7obEKftqJw2KxoL6+3ulwOG4UCoUZXlVVMMZQKpVQLpfx7Z27+GHnEAXNuLAT5yqH6OEpHh2fgud5MMbAGIOmaSB9fX2njLFjQsgLgiBYpGQGx3/kEQhcgsvpxI/3iwh/L0J69BBXnm1F7+V2KIryRJKkj9Lp9O1qDhYXFz8LBoMzmbyOdz5cQYuvG1euXkPZMPDb3R3IJw/x6ewoHDaCWCz2+dTU1FvVJPp8PlBKqa7rcNgIPnnvNficDBvf3Mad777CM+4KVj5+G92XngYhBIQQ2tHR8U8SJycnnxobG0vY7XYLpRSUUvA8X+0AwHEcTNOErus4OzvTFxYW/OFwOEkAYHd3N9/T0xNvbW19OZFIfKkoSsRqtQYEQbBWKhVkMpnc/v7+8snJyQOLxdIdiUQm5ubmIv/6rMHBwXZKKQ8AS0tLH4iiaIqiaC4vL78PAIQQfmBgoL1WQ2vJ+vr64wucSqW2Dg4OggCQTCa3/ra0srGx8bhW8yeDMIRDF0yzwwAAACV0RVh0Y3JlYXRlLWRhdGUAMjAwOS0xMS0xNVQxNzowMjozNC0wNzowMLbnjhIAAAAldEVYdGRhdGU6Y3JlYXRlADIwMTAtMDItMjBUMjM6MjY6MTgtMDc6MDBn7D1BAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDEwLTAxLTExVDA5OjI0OjM1LTA3OjAwtCPdSgAAAGd0RVh0TGljZW5zZQBodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1zYS8zLjAvIG9yIGh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL0xHUEwvMi4xL1uPPGMAAAAldEVYdG1vZGlmeS1kYXRlADIwMDktMDMtMTlUMTA6NTI6NTEtMDY6MDB/aP0GAAAAE3RFWHRTb3VyY2UAT3h5Z2VuIEljb25z7Biu6AAAACd0RVh0U291cmNlX1VSTABodHRwOi8vd3d3Lm94eWdlbi1pY29ucy5vcmcv7zeqywAAAABJRU5ErkJggg==',
	IMAGE_TYPE='png'
WHERE RESOURCE_TYPE_ID='MANAGED_SYS';

UPDATE RESOURCE_TYPE SET
	URL='iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAACrElEQVR4XoXTX0hTURwH8O+9XjfXJm2rKMgiSEYYEW1GOQT/PDTdq4T2ED1EBdVTj72UT4NMwoTAjB4kRBuOZM4pFBlS5CpiQ4OM0G1t15EpY3+8d7v3ns7dLkMk6QOXwz2H8z2/e+45DCEEDMOccblcx7mqKk5WFAUgBBUMQ/vZbC6Xm5ub84NqaWmBiud5QAuwkf8IBKZkUM6mJjidTjQ3N6O+vh4sUAop5gpFIgHYIkBOfZRKC9/0DI4crkufbGhozGQydlrM2Xw+3yQIgo1DGfGtimQ4wTDSVk4NBAgAhgZKCkgki7D7tGVxaekTtvF5X37goIkmNzE/nwPErDaZKbeKjD2p31AIwDLYDqn19Wwl4KZjP26dr4NUlKAiRIYgiChkM/C+WoAvJmJoWUC1mgmAM+3FCm+uqQSYDRxYjgFqqlFWBX4zgU0+BogZLMfTeP0mrnaXGc3AN55hoZFkRVtZgSRJiMcSePs+hHefwziwz0ortOLnnRNYvH4UX64cxOJlM+6eKgrlDQOOiaIoE00qlSIjIy/I48FBEolEyOjoKPmX50NPPrLQFAoFBdQav4bp4Aw2Nv6grbUVVqu1VNHw8NO82+2+1tHhuupyXbjh7uy87Xn4qJeDRq/Xo1gs4ms4DFEQ4HZ3libT/4729naEQqGNYDD4rKurC7IsQ6XT6aEFoBCNxpRkMolf8Tja2lphsVjUyWpl6kkFx3E6UBMTE+ju7oZ64ukJBwuqp+fSoUSS16XTaTp4ETabDQaDAbW1tTCZTDAajeq7CZrx8XE1ECzLAvfv9bqm/AHyoK9viw6s0AuzGggEopOTk1G6WnRsbCzq9XqTHo9nATvY7XbgnKPxO92QHwB0fr8fu+nv78dODocDKj0AFtTs7Cx2MzAwsO2CM5WAv/Vmfkv6rZhdAAAAAElFTkSuQmCC',
	IMAGE_TYPE='png'
WHERE RESOURCE_TYPE_ID='MENU_ITEM';

UPDATE RESOURCE_TYPE SET
	URL='iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAFzUkdCAK7OHOkAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAZiS0dEAAAAAAAA+UO7fwAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAl2cEFnAAAAEAAAABAAXMatwwAAAzlJREFUOMuNk11sU3UYxn89bUe3tZNuZSYDFjNYmKGLsOAUAku6zWxzcmNZwC1ZQoIxYhTjjVygGM2cNwZ0kY9NhRBogrKEmOk+KNtcaSUoS6zCNMRFA2vLuq6no+s5Zz2nf29ggYQLnqs3b/I8b/Lm98Bj5PP5dsTjcWV2dlbx+Xx199f53Z91bzt48P1yACHEo6aRkZFXAoFAB0AgEOjRdV0YhiGuXAkd7e///oiqZER6MS3+mb4lLvSf/wuwLZsHBgZ2plIpsbCwIKLRqNB1XWialstms7nh4SERjUXFUjYrQqGg2Lb1xWmgA1gBYAHIy8tzaZqGJElIksTg4CBLS0smi8XK6OgIbrebrKoip1J0dXV/4qn3nHtw3PRgCIfDoqioiBs3brKl5nnuJmbI5Qx+HBii2u1m+/YdyLJMRUXFSiAF8NHHHzxtCQaDW3Vdb3c4HMRiMTZUPkvo97Osq3YwOyOzeVMN1369SkXFOlavWS3OnjuTiESihxobG/f19fbdsqiq+nNxcbE1k8mIQnuhKSmnmNK7yM81czdeRuZOEZjM7PS28cvEZdP69ZWSoqjdSkbh+PEThyRVVYWmaSiKgsPuQFM1Uosyg5NjPLemg5rNmxi+dJmXGuqZCAQpLy83xaJRXvV6+6uqqr4ze73eoGEYqs1m2+JyuVAUjanrc7zVcB6zZKaqqhKXy8W1qyEKbPn09vZNXbz4w8lYNPr23NycsfzE8fFx4XQ6SSaT2O2FfHj4MHV1dTTUN+D3+ykrK6O0tJSWlhYJWKZIug/RHovFyvXJ30gk4+xqa8PpdNLa+jKRyAydnZ3U1tZSUlKC3+9/7WEAJYBIJGYL/zFJRlnk9X1vUFCQz/79bzI2OiY2bnQzPz+PYRhYrVY0TdMeCdi9e9fKZGr2aCI5L471nGCVaxWfdncxPjYumptbTJFI5Fh1dbUpHo/vTSQSba2trf0PB1iampoOpJX0U/9O/8faZ9bS3r6HwZ+G/n73wHsbzGYzsixfAPB4PKcfVzzT6TOn9urZpW/vpe9hLywkHP7zZs+XX70ApHkCmQCOfPH5yZQsN92+fWfim69PvQPIT2IG+B/FO35+VkPAygAAACV0RVh0Y3JlYXRlLWRhdGUAMjAwOS0xMS0xNVQxNzowMjozNC0wNzowMLbnjhIAAAAldEVYdGRhdGU6Y3JlYXRlADIwMTAtMDEtMTFUMDk6MjQ6MjQtMDc6MDCvo27cAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDEwLTAxLTExVDA5OjI0OjI0LTA3OjAw3v7WYAAAAGd0RVh0TGljZW5zZQBodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1zYS8zLjAvIG9yIGh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL0xHUEwvMi4xL1uPPGMAAAAldEVYdG1vZGlmeS1kYXRlADIwMDktMDgtMjdUMjE6NTE6MjYtMDY6MDAjJbvPAAAAE3RFWHRTb3VyY2UAT3h5Z2VuIEljb25z7Biu6AAAACd0RVh0U291cmNlX1VSTABodHRwOi8vd3d3Lm94eWdlbi1pY29ucy5vcmcv7zeqywAAAABJRU5ErkJggg==',
	IMAGE_TYPE='png'
WHERE RESOURCE_TYPE_ID='SYS_ACTION';

UPDATE RESOURCE_TYPE SET
	URL='iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAACzklEQVQ4jW2SzWtUZxTGn3PezzuZmzvXj9rJwkqDJabFUkEjLmpW7TZdZNVdIZSu3PgHDNRFwEXXumlrC0qyN+4sqBmIIFgS+jGdhVSKA3FCm8lM733v+75dJBml+MDZnIfzOw+HQ9evL3+ZNRqfAUBtYsJkk5O6Vqvb+kRN2yTRxlhtjVVaKyWE4KJ3c0LIktj3ft7rb7bln8+fn+/v7MwBRGmaUp7nnOc5O5dzA8RGW7LWcpZlbK2l3ssClh+ifjS/IMS5IQHA2r27f71z8lTTaI1hpwMVAhozM6ifOAEhxLiYGduda6jbNpTR2OlP3ZcAkGVZTIzB3vIyZqan4bRG+ewZXp45g7cuXkRZljDGgJnhqyF85aCMBoKPDABSStre3MSpLMPwxQv8cuQo1vMZbPcLEBGklGBmAAALDWKGryp4XxwAhODjs7N42G6j53bRe/9XFILgRAQRwXuPGCMAoHIDDHf/QVU5BO8OAEqRTVPM3rqFp8eOY/DA4WTD4cNP5wFgHB8AmDWkVPDOIfgyyv0EkkajEQKAC198BaUUlFIoigJKqYPBfYB3QxRhBA0L790BQO4DnHMwxsB7jxDCODYRjUEEBUSgciWCLw4BgpKkBu/9eLuUEsYYGGNARDiUr/bgRgPoJEEMfh/Q7++ERt74W0nFQGQiUIxRO1cKEComZiEEMTNAgkBEVeUQqiK+Qv9P3//wXXvq7amzjx6tp61WKxz2t9bO/qTt3mWpFMryyF1+0/Di4qK2NvkgTdMkO5bNve4RcQkf4J179Qev68rVK3MLCwvbg93BjY2Nx59cvvTx/ZWVlW8P/dINZPnvCJVzCK6Icn5+XjabzQYRTbLkxffePf1154/ffuz83n0SY2x2u92rS0tL39y5c/ujtbV7n/tqnXUtRyRG5Qt64w1arRZvbW2NvdXV1QAgAsDGbXkpgKaBAAZ1/wNbDyS1Uv4WmAAAAABJRU5ErkJggg==',
	IMAGE_TYPE='png'
WHERE RESOURCE_TYPE_ID='UI_TEMPLATE';

UPDATE RESOURCE_TYPE SET
	URL='iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAACaElEQVR4Xo2SX2iSURjGn08/3UzFgqIV/VsZWIwgumkadaFB6yIyIaKrRjdrwVhEBN0UFBR0Ewi76aIRDAajXcTKvGlF1JWtGmZ+bjUK0TnTRv7ZdN93Tt974IBIQT94PO8R3+d4zvMqnHMQ/YPXHAACAFT8Hx8ejdwvqGbjfgCDW7dsvti9Y1unxWIBIYzBQQsHfYgajDNYFQXOdZ3s9Ln+XuX2vQfFs+G+jU6nE/9i9rOGY0cOo9lsgjAMA6NjE0i8nxlXXS6Hw+PxIBaLgU4nhUIhdHV1QZLNF9FoNDA5OQlFUeD3+7G0VIQCbLDQF+l0GsFgELquw+12i+Z2lpeXMT09jWg0ilqtBsYNEBYTBAIBJJNJVKtVeL1eZLPZvxpEIhEMDw+jUChAoly/eTdxqu/4IavVCkkul0M+nzPN9oKut1gowuOyo1z+BUI3OLTMHL5o83ERY+/R0Ik7t27E3C4XaE+PJMUYk6lIgXA4HBh5+DguMvf1HFz0+XxY7/GQAb0FSdSymeKlfyljXllZAVqHplQqYTGfh6qqsNvtsNlsQh0dHbQXar0mY8yUYQg7mS1BJ8tampEJ1bpuIDO/AG3uG6ZevGQfZxKv2g0IOokapCgqkVDxZxkHevbBu3snatXfZS01+6TdgHKlYZF3Jok3eDr1HN27touBev3mbfPqlaELABakAV9bW4OEDEiyJgMaHtk8MHDpcr1WjXMTaaB9SmYaMiYyW11dRb1eR6VSESuDlY2NTyxFzoQj2R8Lo2avLg6QUZ0Mn99jUfgQwDeBQ0ELnBlMS6fefc2kngH4zmWTyR/tFUquTUg3IAAAAABJRU5ErkJggg==',
	IMAGE_TYPE='png'
WHERE RESOURCE_TYPE_ID='UI_WIDGET';

UPDATE RESOURCE_TYPE SET
	URL='iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAACDElEQVR4XpWQP2gTYRjGn7sk9lIviZhBRLuJkw49apakawaRgDi7C0IWwUEKlW6SoVoXh6uDiUMTKmijaYvgkoBIlIB/eliHFtumFKElhFxyudzr970UE7DE+sDD8/ve93vf4zvFsiyq1WpoNpv4H2mahng8DmSzWWq1WuQ4DuULeU7mPPNRdXmfncvlCKZpygYXSqUS51+8XKLqwuxgnWfkLC+olMvsckX4iPzwbJrstQItz03x+dC8QIXQlVgM44YBXddhiDTGmWXyeX/Tgk/xY6RnQw/xHcTEjJSKAekn9T8c0vuMXheKsK/bEotDGBQ/oV6v066wzD73vXL/BvW+vKCv5p3D3q7M/hOi0SjCkQiCwVFERDKPMrNPnT0HTz2Bi/EErLm72C48wGkxI6XKt7quK1ksGOFk1jR8e/kQ26smIl4HShDoBnyYuHkNl69O4tP8NMLhMPzyZxSLRTQaDQwqqrk4b+/gzEQS6zsHIIXgFwsIAYAIdqeLZDIpeIjWl2aos7FE3fpbcrZWqLNZpPb3AtlrC7Q4c5sHVAyR6wHkOPxFQNjzmN12G2MXLkFq6IIx4zo+vnsN8no8qBAvgecKDmhg0T+0V31Flae3yPn5hjo/Fsn+/JzeP5mirWqV+6BjaHX+HjUO9qjnutT6tUGPH81y/dgL0uk0pVIpSiQmhRPMmUyGe78B5vckeH7oLeoAAAAASUVORK5CYII=',
	IMAGE_TYPE='png'
WHERE RESOURCE_TYPE_ID='URL_PATTERN';

commit;
use openiam;

ALTER TABLE RES DROP FOREIGN KEY FK_RESOURCE_RESOURCE_TYPE;
ALTER TABLE RES CHANGE COLUMN RESOURCE_TYPE_ID RESOURCE_TYPE_ID VARCHAR(32) NOT NULL, 
  ADD CONSTRAINT FK_RESOURCE_RESOURCE_TYPE FOREIGN KEY (RESOURCE_TYPE_ID ) REFERENCES RESOURCE_TYPE (RESOURCE_TYPE_ID);


commit;
USE openiam;
UPDATE USERS SET LAST_NAME = 'user' WHERE ((USER_ID = '3000' OR USER_ID = '3001') AND (LAST_NAME = '' OR LAST_NAME IS NULL));
UPDATE USERS SET TYPE_ID = 'SystemAccount' WHERE (USER_ID IN ('3000','3001','0001','3006','3007','3008','3009','3010') AND TYPE_ID IS NULL);


commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS MODIFY_TEMPLATE_XREF$$

CREATE PROCEDURE MODIFY_TEMPLATE_XREF()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		IF EXISTS (SELECT * FROM information_schema.columns WHERE table_schema='openiam' AND table_name = 'UI_FIELD_TEMPLATE_XREF' AND column_name = 'XREF_ID') THEN
			ALTER TABLE UI_FIELD_TEMPLATE_XREF DROP COLUMN XREF_ID;
 		END IF;
	END$$
DELIMITER ;

call MODIFY_TEMPLATE_XREF();
DROP PROCEDURE MODIFY_TEMPLATE_XREF;

ALTER TABLE UI_FIELD_TEMPLATE_XREF ADD COLUMN XREF_ID VARCHAR(32) NULL;

DELIMITER $$

DROP PROCEDURE IF EXISTS MODIFY_TEMPLATE_XREF$$

CREATE PROCEDURE MODIFY_TEMPLATE_XREF()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE xrefId INT DEFAULT 1;
		DECLARE fieldId VARCHAR(32);
		DECLARE templateId VARCHAR(32);
		DECLARE cur1 CURSOR FOR (SELECT UI_FIELD_ID, TEMPLATE_ID FROM UI_FIELD_TEMPLATE_XREF);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
		
		REPEAT 
			FETCH cur1 INTO fieldId, templateId;
			IF (fieldId IS NOT NULL) THEN
				IF (templateId IS NOT NULL) THEN
					IF ((SELECT count(*) FROM UI_FIELD_TEMPLATE_XREF WHERE UI_FIELD_ID=fieldId AND TEMPLATE_ID=templateId AND XREF_ID IS NULL)=1) THEN
						UPDATE UI_FIELD_TEMPLATE_XREF SET XREF_ID=xrefId WHERE UI_FIELD_ID=fieldId AND TEMPLATE_ID=templateId;
						SET xrefId := xrefId + 1;
					END IF;
				END IF;
			END IF;
		UNTIL done END REPEAT;
		CLOSE cur1;
	END$$
DELIMITER ;

call MODIFY_TEMPLATE_XREF();
DROP PROCEDURE MODIFY_TEMPLATE_XREF;

ALTER TABLE UI_FIELD_TEMPLATE_XREF CHANGE XREF_ID XREF_ID VARCHAR(32) NOT NULL;

ALTER TABLE UI_FIELD_TEMPLATE_XREF ADD PRIMARY KEY(XREF_ID);
commit;
USE openiam;

DELETE  FROM MNG_SYS_OBJECT_MATCH WHERE MANAGED_SYS_ID = '104';
DELETE  FROM ATTRIBUTE_MAP WHERE MANAGED_SYS_ID = '104';
DELETE FROM RES WHERE RESOURCE_ID = '104';
DELETE FROM MANAGED_SYS WHERE CONNECTOR_ID = '62';
DELETE FROM PROVISION_CONNECTOR WHERE CONNECTOR_ID = '62';


INSERT INTO PROVISION_CONNECTOR (CONNECTOR_ID,NAME,METADATA_TYPE_ID,CLIENT_COMM_PROTOCOL,SERVICE_URL,SERVICE_NAMESPACE,SERVICE_PORT) VALUES ('62','Groovy Script CONNECTOR','SCRIPT_Connector','CLEAR','localhost:9080/openiam-esb/idmsrvc/ScriptConnectorService','http://www.openiam.org/service/connector','NA');

INSERT INTO RES (RESOURCE_ID,RESOURCE_TYPE_ID,DESCRIPTION,NAME,DISPLAY_ORDER,IS_PUBLIC) VALUES ('104','MANAGED_SYS','','Groovy Script Con',4,'Y');


INSERT INTO MANAGED_SYS (MANAGED_SYS_ID,NAME,DESCRIPTION,STATUS,CONNECTOR_ID,COMM_PROTOCOL,RESOURCE_ID,PRIMARY_REPOSITORY,ADD_HNDLR,MODIFY_HNDLR,DELETE_HNDLR,SEARCH_HNDLR,LOOKUP_HNDLR,TEST_CONNECTION_HNDLR)
VALUES 
('104','Script_CONNECTOR','Groovy script connector','ACTIVE','62','CLEAR', '104','0','example/AddScriptConnector.groovy','example/ModifyScriptConnector.groovy','example/DeleteScriptConnector.groovy','example/SearchScriptConnector.groovy','example/LookupScriptConnector.groovy','example/TestScriptConnector.groovy');

INSERT INTO ATTRIBUTE_MAP 
(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,STATUS,DATA_TYPE)
VALUES 
('621','104','104','PRINCIPAL','principal',0,'26','ACTIVE','STRING'),('622','104','104','USER','firstname',0,'27','ACTIVE','STRING');

commit;
use openiam;

DELETE FROM UI_FIELD_TEMPLATE_XREF WHERE UI_FIELD_ID IN('USER_PHONES_REQUIRED', 'USER_EMAILS_REQUIRED', 'USER_ADDRESS_REQUIRED');
DELETE FROM UI_TEMPLATE_FIELDS WHERE UI_FIELD_ID IN('USER_PHONES_REQUIRED', 'USER_EMAILS_REQUIRED', 'USER_ADDRESS_REQUIRED');
commit;
use openiam;

UPDATE UI_TEMPLATE_FIELDS SET NAME='Object Class' WHERE UI_FIELD_ID='USER_OBJECT_TYPE';
commit;
use openiam;

ALTER TABLE COMPANY ADD COLUMN IS_SELECTABLE CHAR(1) NOT NULL DEFAULT 'Y';
commit;
use openiam;

--  MODIFY USER ATTRIBUTES --

DELIMITER $$

DROP PROCEDURE IF EXISTS MODIFY_USER_ATTRIBUTES$$

CREATE PROCEDURE MODIFY_USER_ATTRIBUTES()
	BEGIN
		IF EXISTS (SELECT * FROM information_schema.columns WHERE table_schema='openiam' AND table_name = 'USER_ATTRIBUTES' AND column_name = 'IS_MULTIVALUED') THEN
			ALTER TABLE USER_ATTRIBUTES DROP COLUMN IS_MULTIVALUED;
 		END IF;
	END$$
DELIMITER ;

call MODIFY_USER_ATTRIBUTES();
DROP PROCEDURE MODIFY_USER_ATTRIBUTES;

ALTER TABLE USER_ATTRIBUTES ADD COLUMN IS_MULTIVALUED char(1) NOT NULL DEFAULT 'N';

DROP TABLE IF EXISTS USER_ATTRIBUTE_VALUES;

CREATE TABLE USER_ATTRIBUTE_VALUES (
  USER_ATTRIBUTE_ID varchar(32) NOT NULL,
  VALUE varchar(255),
  CONSTRAINT USER_ATTRIBUTE_VALUES_FK FOREIGN KEY (USER_ATTRIBUTE_ID) REFERENCES USER_ATTRIBUTES(ID)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--  MODIFY GROUP ATTRIBUTES --

DELIMITER $$

DROP PROCEDURE IF EXISTS MODIFY_GROUP_ATTRIBUTES$$

CREATE PROCEDURE MODIFY_GROUP_ATTRIBUTES()
	BEGIN
		IF EXISTS (SELECT * FROM information_schema.columns WHERE table_schema='openiam' AND table_name = 'GRP_ATTRIBUTES' AND column_name = 'IS_MULTIVALUED') THEN
			ALTER TABLE GRP_ATTRIBUTES DROP COLUMN IS_MULTIVALUED;
 		END IF;
	END$$
DELIMITER ;

call MODIFY_GROUP_ATTRIBUTES();
DROP PROCEDURE MODIFY_GROUP_ATTRIBUTES;

ALTER TABLE GRP_ATTRIBUTES ADD COLUMN IS_MULTIVALUED char(1) NOT NULL DEFAULT 'N';

DROP TABLE IF EXISTS GROUP_ATTRIBUTE_VALUES;

CREATE TABLE GROUP_ATTRIBUTE_VALUES (
  GROUP_ATTRIBUTE_ID varchar(32) NOT NULL,
  VALUE varchar(255),
  CONSTRAINT GROUP_ATTRIBUTE_VALUES_FK FOREIGN KEY (GROUP_ATTRIBUTE_ID) REFERENCES GRP_ATTRIBUTES(ID)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--  MODIFY ROLE ATTRIBUTES --

DELIMITER $$

DROP PROCEDURE IF EXISTS MODIFY_ROLE_ATTRIBUTES$$

CREATE PROCEDURE MODIFY_ROLE_ATTRIBUTES()
	BEGIN
		IF EXISTS (SELECT * FROM information_schema.columns WHERE table_schema='openiam' AND table_name = 'ROLE_ATTRIBUTE' AND column_name = 'IS_MULTIVALUED') THEN
			ALTER TABLE ROLE_ATTRIBUTE DROP COLUMN IS_MULTIVALUED;
 		END IF;
	END$$
DELIMITER ;

call MODIFY_ROLE_ATTRIBUTES();
DROP PROCEDURE MODIFY_ROLE_ATTRIBUTES;

ALTER TABLE ROLE_ATTRIBUTE ADD COLUMN IS_MULTIVALUED char(1) NOT NULL DEFAULT 'N';

DROP TABLE IF EXISTS ROLE_ATTRIBUTE_VALUES;

CREATE TABLE ROLE_ATTRIBUTE_VALUES (
  ROLE_ATTRIBUTE_ID varchar(32) NOT NULL,
  VALUE varchar(255),
  CONSTRAINT ROLE_ATTRIBUTE_VALUES_FK FOREIGN KEY (ROLE_ATTRIBUTE_ID) REFERENCES ROLE_ATTRIBUTE(ROLE_ATTR_ID)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--  MODIFY ORGANIZATION ATTRIBUTES --

DELIMITER $$

DROP PROCEDURE IF EXISTS MODIFY_ORGANIZATION_ATTRIBUTES$$

CREATE PROCEDURE MODIFY_ORGANIZATION_ATTRIBUTES()
	BEGIN
		IF EXISTS (SELECT * FROM information_schema.columns WHERE table_schema='openiam' AND table_name = 'COMPANY_ATTRIBUTE' AND column_name = 'IS_MULTIVALUED') THEN
			ALTER TABLE COMPANY_ATTRIBUTE DROP COLUMN IS_MULTIVALUED;
 		END IF;
	END$$
DELIMITER ;

call MODIFY_ORGANIZATION_ATTRIBUTES();
DROP PROCEDURE MODIFY_ORGANIZATION_ATTRIBUTES;

ALTER TABLE COMPANY_ATTRIBUTE ADD COLUMN IS_MULTIVALUED char(1) NOT NULL DEFAULT 'N';

DROP TABLE IF EXISTS COMPANY_ATTRIBUTE_VALUES;

CREATE TABLE COMPANY_ATTRIBUTE_VALUES (
  COMPANY_ATTRIBUTE_ID varchar(32) NOT NULL,
  VALUE varchar(255),
  CONSTRAINT COMPANY_ATTRIBUTE_VALUES_FK FOREIGN KEY (COMPANY_ATTRIBUTE_ID) REFERENCES COMPANY_ATTRIBUTE(COMPANY_ATTR_ID)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

commit;
use openiam;

DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN('IMPERSONATION_ACCESS', 'IMPERSIONATION_MENU');
DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN('IMPERSONATION_ACCESS', 'IMPERSIONATION_MENU');
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('IMPERSONATION_ACCESS', 'IMPERSIONATION_MENU');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('IMPERSONATION_ACCESS', 'IMPERSIONATION_MENU');
DELETE FROM RES WHERE RESOURCE_ID IN('IMPERSONATION_ACCESS', 'IMPERSIONATION_MENU');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, IS_PUBLIC) VALUES('IMPERSONATION_ACCESS', 'SYS_ACTION', 'IMPERSONATION_ACCESS', 'Ability to Impersonate','N');


INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, IS_PUBLIC, URL) VALUES('IMPERSIONATION_MENU', 'MENU_ITEM', 'IMPERSIONATION_MENU', 'Impersonation','N', '/webconsole/impersonate.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('IMPERSIONATION_MENU_PUB', 'IMPERSIONATION_MENU', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('IMPERSIONATION_MENU_DESC', 'IMPERSIONATION_MENU', 'MENU_DISPLAY_NAME', 'Impersonation');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('ADMIN', 'IMPERSIONATION_MENU');

DELIMITER $$

DROP PROCEDURE IF EXISTS ADD_MENU_ENTITLEMENTS$$
CREATE PROCEDURE ADD_MENU_ENTITLEMENTS()
	BEGIN
 		IF EXISTS (SELECT * FROM ROLE WHERE ROLE_ID='9') THEN
			INSERT INTO RESOURCE_ROLE (RESOURCE_ID, ROLE_ID) VALUES('IMPERSIONATION_MENU', '9');
			INSERT INTO RESOURCE_ROLE (RESOURCE_ID, ROLE_ID) VALUES('IMPERSONATION_ACCESS', '9');
 		END IF;
	END$$
DELIMITER ;

call ADD_MENU_ENTITLEMENTS();
DROP PROCEDURE ADD_MENU_ENTITLEMENTS;

commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS hideManualReconciliation$$

CREATE PROCEDURE hideManualReconciliation()
	BEGIN
		IF ((SELECT count(*) FROM RESOURCE_PROP WHERE RESOURCE_ID='MANUALRECON' AND NAME='IS_VISIBLE') >= 1) THEN
			UPDATE RESOURCE_PROP SET PROP_VALUE='false' WHERE  RESOURCE_ID='MANUALRECON' AND NAME='IS_VISIBLE';
		ELSE
			INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES('MANUALRECON_VISIBLE', 'MANUALRECON', 'IS_VISIBLE', 'false');
		END IF;
	END$$
DELIMITER ;

call hideManualReconciliation();

DROP PROCEDURE hideManualReconciliation;
commit;
use openiam;


DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN('SELFSERVICE_EXT', 'SELFSRV_EXAMPLE');
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('SELFSERVICE_EXT', 'SELFSRV_EXAMPLE');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('SELFSERVICE_EXT', 'SELFSRV_EXAMPLE');
DELETE FROM RES  WHERE RESOURCE_ID IN('SELFSERVICE_EXT', 'SELFSRV_EXAMPLE');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION) VALUES('SELFSERVICE_EXT', 'MENU_ITEM', 'SELFSERVICE_EXT', 'SelfService Extension Root');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERVICE_EXT_PB', 'SELFSERVICE_EXT', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSERVICE_EXT_DN', 'SELFSERVICE_EXT', 'MENU_DISPLAY_NAME', 'SelfService Extension Root');

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, IS_PUBLIC, URL) VALUES ('SELFSRV_EXAMPLE', 'MENU_ITEM', 'SELFSRV_EXAMPLE', 'Example', 'Y', '/selfservice-ext/example.html');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRV_EXAMPLE_DN', 'SELFSRV_EXAMPLE', 'MENU_DISPLAY_NAME', 'Example');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, PROP_VALUE) VALUES ('SELFSRV_EXAMPLE_PB', 'SELFSRV_EXAMPLE', 'MENU_IS_PUBLIC', 'false');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES ('SELFSERVICE_EXT', 'SELFSRV_EXAMPLE');
commit;
use openiam;

DROP PROCEDURE IF EXISTS ADD_NEW_COLUMN;

DELIMITER $$
CREATE PROCEDURE ADD_NEW_COLUMN()
	BEGIN
		IF NOT EXISTS (SELECT * FROM information_schema.columns WHERE table_schema='openiam' AND table_name = 'REPORT_INFO' AND column_name = 'BUILT_IN') THEN
			ALTER TABLE REPORT_INFO ADD COLUMN BUILT_IN CHAR(1) DEFAULT 'N' NOT NULL;
 		END IF;
	END$$
DELIMITER ;

call ADD_NEW_COLUMN();
DROP PROCEDURE ADD_NEW_COLUMN;

commit;
use openiam;

DELETE FROM REPORT_SUB_CRITERIA_PARAM WHERE REPORT_SUB_ID IN
	(SELECT REPORT_SUB_ID FROM REPORT_SUBSCRIPTIONS WHERE REPORT_INFO_ID IN 
		(SELECT REPORT_INFO_ID FROM REPORT_INFO WHERE REPORT_NAME IN ('USER_REPORT','AUDIT_REPORT','RECONCILIATION_REPORT','SYNCHRONIZATION_REPORT')));
DELETE FROM REPORT_SUBSCRIPTIONS WHERE REPORT_INFO_ID IN 
	(SELECT REPORT_INFO_ID FROM REPORT_INFO WHERE REPORT_NAME IN ('USER_REPORT','AUDIT_REPORT','RECONCILIATION_REPORT','SYNCHRONIZATION_REPORT'));
DELETE FROM REPORT_CRITERIA_PARAMETER WHERE REPORT_INFO_ID IN 
	(SELECT REPORT_INFO_ID FROM REPORT_INFO WHERE REPORT_NAME IN ('USER_REPORT','AUDIT_REPORT','RECONCILIATION_REPORT','SYNCHRONIZATION_REPORT'));
DELETE FROM REPORT_INFO WHERE REPORT_NAME IN ('USER_REPORT','AUDIT_REPORT','RECONCILIATION_REPORT','SYNCHRONIZATION_REPORT');

INSERT INTO REPORT_INFO (REPORT_INFO_ID, REPORT_NAME, DATASOURCE_FILE_PATH, REPORT_FILE_PATH, BUILT_IN) VALUES 
	('101','USER_REPORT','UserReport.groovy','UserReport.rptdesign', 'Y'),
	('102','AUDIT_REPORT','AuditReport.groovy','AuditReport.rptdesign', 'Y'),
	('103','RECONCILIATION_REPORT','ReconciliationReport.groovy','ReconciliationReport.rptdesign', 'Y'),
	('104','SYNCHRONIZATION_REPORT','SynchronizationReport.groovy','SynchronizationReport.rptdesign', 'Y');

INSERT INTO REPORT_CRITERIA_PARAMETER (REPORT_INFO_ID, RCP_ID, PARAM_NAME, PARAM_VALUE, RCPT_ID) VALUES 
	('101','1011','ROLE',NULL,'1'), ('101','1012','STATUS',NULL,'1'), ('101','1013','SECONDARY_STATUS',NULL,'1'), ('101','1014','ORG_ID',NULL,'1'),
	('102','1021','ACTION_ID',NULL,'1'), ('102','1022','ACTION_DATETIME_START',NULL,'2'), ('102','1023','ACTION_DATETIME_END',NULL,'2'),
	('103','1031','MANAGED_SYS_ID',NULL,'1'), ('104','1041','CONFIG_ID',NULL,'1'), ('104','1042','AUDIT_LOG_ID',NULL,'1');

commit;
use openiam;

DELETE FROM ATTRIBUTE_MAP WHERE MANAGED_SYS_ID='150';
DELETE FROM MNG_SYS_OBJECT_MATCH WHERE MANAGED_SYS_ID = '150';
DELETE FROM MANAGED_SYS WHERE MANAGED_SYS_ID = '150';
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID = '151';
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID = '150';
DELETE FROM RESOURCE_USER WHERE RESOURCE_ID = '151';
DELETE FROM RESOURCE_USER WHERE RESOURCE_ID = '150';
DELETE FROM RESOURCE_GROUP WHERE RESOURCE_ID = '151';
DELETE FROM RESOURCE_GROUP WHERE RESOURCE_ID = '150';
DELETE FROM RESOURCE_PRIVILEGE WHERE RESOURCE_ID = '151';
DELETE FROM RESOURCE_PRIVILEGE WHERE RESOURCE_ID = '150';
DELETE FROM RESOURCE_POLICY WHERE RESOURCE_ID = '151';
DELETE FROM RESOURCE_POLICY WHERE RESOURCE_ID = '150';

DELETE FROM RES WHERE RESOURCE_ID = '150';
DELETE FROM RES WHERE RESOURCE_ID = '151';


DELETE FROM PROVISION_CONNECTOR WHERE CONNECTOR_ID = '100';

DELETE FROM RECON_RES_ATTR_MAP WHERE RECON_RES_ATTR_MAP_ID='77';
DELETE FROM RECON_RES_ATTR_MAP WHERE RECON_RES_ATTR_MAP_ID='76';
DELETE FROM RECON_RES_ATTR_MAP WHERE RECON_RES_ATTR_MAP_ID='75';
DELETE FROM POLICY WHERE POLICY_ID = '5000';
DELETE FROM POLICY WHERE POLICY_ID = '5001';
DELETE FROM POLICY WHERE POLICY_ID = '5002';

insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT, RULE_SRC_URL) VALUES ('5000','104', 'ps-role', 'role', 1,CURRENT_TIMESTAMP(), '3000', '','provision/ps/role.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT, RULE_SRC_URL) VALUES ('5001','104', 'ps-displayName', 'displayName', 1,CURRENT_TIMESTAMP(), '3000', '','provision/ps/displayName.groovy');
insert into POLICY (POLICY_ID, POLICY_DEF_ID, NAME, DESCRIPTION, STATUS, CREATE_DATE, CREATED_BY, RULE_TEXT, RULE_SRC_URL) VALUES ('5002','104', 'ps-employeeId', 'employeeId', 1,CURRENT_TIMESTAMP(), '3000', '','provision/ps/employeeId.groovy');

#4562,5001,5000,4502,5002,4509


INSERT INTO RECON_RES_ATTR_MAP (RECON_RES_ATTR_MAP_ID,ATTR_POLICY_ID) VALUES (75,5000);
INSERT INTO RECON_RES_ATTR_MAP (RECON_RES_ATTR_MAP_ID,ATTR_POLICY_ID) VALUES (76,5001);
INSERT INTO RECON_RES_ATTR_MAP (RECON_RES_ATTR_MAP_ID,ATTR_POLICY_ID) VALUES (77,5002);


#ADMINRESOURCE
INSERT INTO RES (RESOURCE_ID,RESOURCE_TYPE_ID,DESCRIPTION,NAME,DISPLAY_ORDER,URL,MIN_AUTH_LEVEL,IS_PUBLIC,ADMIN_RESOURCE_ID,RISK) VALUES ('151','ADMIN_RESOURCE',NULL,'RES_ADMIN_PEOPLE_SOFT',NULL,NULL,NULL,'Y',NULL,NULL);

#RESOURCE_
INSERT INTO RES (RESOURCE_ID,RESOURCE_TYPE_ID,DESCRIPTION,NAME,DISPLAY_ORDER,URL,MIN_AUTH_LEVEL,IS_PUBLIC,ADMIN_RESOURCE_ID,RISK) VALUES ('150','MANAGED_SYS',NULL,'PEOPLE_SOFT_M_SYS',NULL,NULL,NULL,'N',151,NULL);

#CONNECTOR
INSERT INTO PROVISION_CONNECTOR (CONNECTOR_ID,NAME,CLIENT_COMM_PROTOCOL, SERVICE_URL,SERVICE_NAMESPACE,SERVICE_PORT,CONNECTOR_INTERFACE) VALUES ('100','PEOPLESOFT DB CONNECTOR','CLEAR','localhost:9080/openiam-esb/idmsrvc/PeoplesoftDbConnector','http://www.openiam.org/service/connector','NA','LOCAL');

#MSYS
INSERT INTO MANAGED_SYS (MANAGED_SYS_ID,NAME,DESCRIPTION,STATUS,CONNECTOR_ID,HOST_URL,APPL_URL,PORT,COMM_PROTOCOL,USER_ID,PSWD,START_DATE,END_DATE,RESOURCE_ID,PRIMARY_REPOSITORY,SECONDARY_REPOSITORY_ID,ALWAYS_UPDATE_SECONDARY,RES_DEPENDENCY,ADD_HNDLR,MODIFY_HNDLR,DELETE_HNDLR,SETPASS_HNDLR,SUSPEND_HNDLR,SEARCH_HNDLR,LOOKUP_HNDLR,TEST_CONNECTION_HNDLR,RECONCILE_RESOURCE_HNDLR,HNDLR_5,DRIVER_URL,CONNECTION_STRING,ATTRIBUTE_NAMES_LOOKUP,ATTRIBUTE_NAMES_HNDLR) VALUES ('150','PEOPLESOFT DB CONNECTOR','PEOPLESOFT DB CONNECTOR','ACTIVE','100',NULL,NULL,NULL,'CLEAR','root',NULL,NULL,NULL,150,0,NULL,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@localhost:1521:mkyong',NULL,NULL);

INSERT INTO ATTRIBUTE_MAP (ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID) VALUES (624,150,150,'PRINCIPAL','principal',NULL,NULL,65,NULL,'ACTIVE',NULL,NULL,NULL,'STRING',NULL,NULL);

INSERT INTO ATTRIBUTE_MAP
(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID) VALUES (625,150,150,'USER','displayName',NULL,NULL,76,NULL,'ACTIVE',NULL,NULL,NULL,'STRING',NULL,NULL);

INSERT INTO ATTRIBUTE_MAP
(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID) VALUES (626,150,150,'USER','role',NULL,NULL,75,NULL,'ACTIVE',NULL,NULL,NULL,'STRING',NULL,NULL);

INSERT INTO ATTRIBUTE_MAP
(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID) VALUES (627,150,150,'USER','email',NULL,NULL,2,NULL,'ACTIVE',NULL,NULL,NULL,'STRING',NULL,NULL);

INSERT INTO ATTRIBUTE_MAP
(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID) VALUES (628,150,150,'USER','employeeId',NULL,NULL,77,NULL,'ACTIVE',NULL,NULL,NULL,'STRING',NULL,NULL);

INSERT INTO ATTRIBUTE_MAP
(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID) VALUES (629,150,150,'USER','password',NULL,NULL,58,NULL,'ACTIVE',NULL,NULL,NULL,'DATE',NULL,NULL);

commit;
use openiam;
-- CREATE IDENTITY TABLE 

CREATE TABLE IDENTITY (
    IDENTITY_ID VARCHAR(32) NOT NULL,
    MANAGED_SYS_ID VARCHAR(32) NOT NULL,
    IDENTITY VARCHAR(320) NOT NULL,
    REFERRED_OBJECT_ID VARCHAR(32) NOT NULL,
    IDENTITY_TYPE VARCHAR(20) NULL, -- GROUP, ROLE, TYPE ...
    CREATE_DATE DATETIME NULL,
    CREATED_BY VARCHAR(32) NULL,
    STATUS varchar(20) NULL
);
commit;
use openiam;

ALTER TABLE OPENIAM_LOG ADD KEY CREATED_DATETIME (CREATED_DATETIME), ADD KEY LOG_ACTION (LOG_ACTION);
ALTER TABLE OPENIAM_LOG_ATTRIBUTE ADD KEY FK_LOG_ATTRIBUTE_LOG (OPENIAM_LOG_ID);
ALTER TABLE OPENIAM_LOG_TARGET ADD KEY FK_LOG_TARGET_LOG (OPENIAM_LOG_ID);
ALTER TABLE OPENIAM_LOG_LOG_MEMBERSHIP ADD KEY OPENIAM_LOG_ID (OPENIAM_LOG_ID), ADD KEY OPENIAM_MEMBER_LOG_ID (OPENIAM_MEMBER_LOG_ID);

commit;
use openiam;


DELETE FROM METADATA_TYPE WHERE TYPE_ID LIKE '%_REFDATA%';
DELETE FROM METADATA_TYPE WHERE TYPE_ID IN(SELECT STATUS_CD FROM STATUS WHERE STATUS_CD NOT IN('CONTRACTOR'));
DELETE FROM METADATA_TYPE WHERE TYPE_ID IN('CONTRACTOR TYPE');
UPDATE USERS SET EMPLOYEE_TYPE='CONTRACTOR TYPE' WHERE EMPLOYEE_TYPE='CONTRACTOR';

DELIMITER $$

DROP PROCEDURE IF EXISTS migrateRefData$$

CREATE PROCEDURE migrateRefData()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE _id VARCHAR(32);
		DECLARE _name VARCHAR(40);
		DECLARE _group VARCHAR(32);
		DECLARE _idx INT DEFAULT 1;
		DECLARE cur1 CURSOR FOR (SELECT STATUS_CD, CODE_GROUP, DESCRIPTION FROM STATUS);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
			
		REPEAT 
			FETCH cur1 INTO _id, _group, _name;
			IF (_id IS NOT NULL) THEN
				IF (_group IS NOT NULL) THEN
					IF (_name IS NOT NULL) THEN
						IF ((SELECT count(*) FROM METADATA_TYPE WHERE GROUPING=_group AND DESCRIPTION=_name)= 0) THEN
							IF (_id = 'CONTRACTOR') THEN
								INSERT INTO METADATA_TYPE(TYPE_ID, DESCRIPTION, ACTIVE, SYNC_MANAGED_SYS, GROUPING, IS_BINARY) VALUES('CONTRACTOR TYPE', _name, 'Y', 'Y', _group, 'N');
							ELSE
								INSERT INTO METADATA_TYPE(TYPE_ID, DESCRIPTION, ACTIVE, SYNC_MANAGED_SYS, GROUPING, IS_BINARY) VALUES(_id, _name, 'Y', 'Y', _group, 'N');
							END IF;
							SET _idx = _idx + 1;
						END IF;
					END IF;
				END IF;
			END IF;
		UNTIL done END REPEAT;
		CLOSE cur1;
	END$$
DELIMITER ;

call migrateRefData();

DROP PROCEDURE migrateRefData;

DELETE FROM LANGUAGE_MAPPING WHERE REFERENCE_TYPE='MetadataTypeEntity';


DELIMITER $$

DROP PROCEDURE IF EXISTS addDisplayName$$

CREATE PROCEDURE addDisplayName()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE _name VARCHAR(40);
		DECLARE _id VARCHAR(32);
		DECLARE _idx INT DEFAULT 1;
		DECLARE cur1 CURSOR FOR (SELECT TYPE_ID, DESCRIPTION FROM METADATA_TYPE);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
			
		REPEAT 
			FETCH cur1 INTO _id, _name;
			IF (_id IS NOT NULL) THEN
				IF (_name IS NOT NULL) THEN
					IF ((SELECT count(*) FROM LANGUAGE_MAPPING WHERE REFERENCE_TYPE='MetadataTypeEntity' AND REFERENCE_ID=_id)= 0) THEN
						INSERT INTO LANGUAGE_MAPPING(ID, LANGUAGE_ID, REFERENCE_TYPE, REFERENCE_ID, TEXT_VALUE) VALUES(CONCAT('MetadataTypeEntity', _idx), '1', 'MetadataTypeEntity', _id, _name);
						SET _idx = _idx + 1;
					END IF;
				END IF;
			END IF;
		UNTIL done END REPEAT;
		CLOSE cur1;
	END$$
DELIMITER ;

call addDisplayName();

DROP PROCEDURE addDisplayName;
commit;
use openiam;


DELIMITER $$

DROP PROCEDURE IF EXISTS languageLocalization$$

CREATE PROCEDURE languageLocalization()
	BEGIN

	DELETE FROM LANGUAGE_LOCALE where ID='1';
	UPDATE LANGUAGE SET IS_USED='N' WHERE ID='4';

	IF ((SELECT count(*) FROM LANGUAGE WHERE ID='8') = 0) THEN
    		INSERT INTO LANGUAGE (ID, LANGUAGE, IS_USED, LANGUAGE_CODE, IS_DEFAULT) VALUES ('8', 'Russian', 'Y', 'ru', 'N');
    		INSERT INTO LANGUAGE_LOCALE (ID, LANGUAGE_ID, LOCALE) VALUES ('10', '8', 'ru_RU');
	END IF;


  DELETE FROM LANGUAGE_MAPPING WHERE REFERENCE_TYPE='LanguageEntity';

  INSERT INTO LANGUAGE_MAPPING (ID, LANGUAGE_ID, REFERENCE_ID, REFERENCE_TYPE, TEXT_VALUE)
  VALUES ('LanguageEntity1', '1', '1', 'LanguageEntity', 'English'),
	     ('LanguageEntity2', '4', '1', 'LanguageEntity', 'Inglés'),
       ('LanguageEntity3', '8', '1', 'LanguageEntity', 'Английский'),
	     ('LanguageEntity4', '1', '4', 'LanguageEntity', 'Spanish'),
	     ('LanguageEntity5', '4', '4', 'LanguageEntity', 'Español'),
       ('LanguageEntity6', '8', '4', 'LanguageEntity', 'Испанский'),
       ('LanguageEntity7', '1', '8', 'LanguageEntity', 'Russian'),
	     ('LanguageEntity8', '4', '8', 'LanguageEntity', 'Ruso'),
       ('LanguageEntity9', '8', '8', 'LanguageEntity', 'Русский');

	END$$
DELIMITER ;

call languageLocalization();

DROP PROCEDURE languageLocalization;





commit;
use openiam;

ALTER TABLE METADATA_TYPE ADD COLUMN IS_SENSITIVE CHAR(1) NOT NULL DEFAULT 'N';
commit;
use openiam;

UPDATE METADATA_TYPE SET IS_SENSITIVE='Y' WHERE TYPE_ID IN(SELECT STATUS_CD FROM STATUS WHERE STATUS_CD NOT IN('CONTRACTOR'));
UPDATE METADATA_TYPE SET IS_SENSITIVE='Y' WHERE TYPE_ID IN('CONTRACTOR TYPE');
commit;
use openiam;

DELETE FROM LANGUAGE_MAPPING WHERE REFERENCE_TYPE IN('ResourceEntity');


DELIMITER $$

DROP PROCEDURE IF EXISTS migrateMenus$$

CREATE PROCEDURE migrateMenus()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE _id VARCHAR(32);
		DECLARE _resourceId VARCHAR(32);
		DECLARE _value VARCHAR(40);
		DECLARE cur1 CURSOR FOR (
			SELECT RESOURCE_PROP_ID, RESOURCE_ID, PROP_VALUE FROM RESOURCE_PROP 
				WHERE RESOURCE_ID IN(
					SELECT RESOURCE_ID FROM RES WHERE RESOURCE_TYPE_ID IN('MENU_ITEM')
				) AND NAME='MENU_DISPLAY_NAME'
		);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
			
		REPEAT 
			FETCH cur1 INTO _id, _resourceId, _value;
			IF (_id IS NOT NULL) THEN
				IF (_resourceId IS NOT NULL) THEN
					IF (_value IS NOT NULL) THEN
						IF ((SELECT count(*) FROM LANGUAGE_MAPPING WHERE ID=_id)= 0) THEN
							INSERT INTO LANGUAGE_MAPPING(ID, LANGUAGE_ID, REFERENCE_TYPE, REFERENCE_ID, TEXT_VALUE) VALUES(_id, '1', 'ResourceEntity', _resourceId, _value);
						END IF;
					END IF;
				END IF;
			END IF;
		UNTIL done END REPEAT;
		CLOSE cur1;
	END$$
DELIMITER ;

call migrateMenus();

DROP PROCEDURE migrateMenus;
commit;
use openiam;

ALTER TABLE GRP CHANGE COLUMN GROUP_DESC GROUP_DESC VARCHAR(512) DEFAULT NULL;
commit;
use openiam;

DELETE FROM LANGUAGE_MAPPING WHERE ID LIKE '%ElementMigrate%';

DELIMITER $$

DROP PROCEDURE IF EXISTS migrateMetadataElement$$

CREATE PROCEDURE migrateMetadataElement()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE _id VARCHAR(32);
		DECLARE _value VARCHAR(40);
		DECLARE cur1 CURSOR FOR (
			SELECT METADATA_ID, ATTRIBUTE_NAME FROM METADATA_ELEMENT WHERE METADATA_ID NOT IN(
				SELECT REFERENCE_ID FROM LANGUAGE_MAPPING WHERE REFERENCE_TYPE='MetadataElementEntity'
			)
		);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
			
		REPEAT 
			FETCH cur1 INTO _id, _value;
			IF (_id IS NOT NULL) THEN
				IF (_value IS NOT NULL) THEN
					IF ((SELECT count(*) FROM LANGUAGE_MAPPING WHERE ID=CONCAT('ElementMigrate',_id))= 0) THEN
						INSERT INTO LANGUAGE_MAPPING(ID, LANGUAGE_ID, REFERENCE_TYPE, REFERENCE_ID, TEXT_VALUE) VALUES(CONCAT('ElementMigrate',_id), '1', 'MetadataElementEntity', _id, _value);
					END IF;
				END IF;
			END IF;
		UNTIL done END REPEAT;
		CLOSE cur1;
	END$$
DELIMITER ;

call migrateMetadataElement();

DROP PROCEDURE migrateMetadataElement;
commit;
use openiam;

CREATE TABLE REPORT_PARAMETER_METATYPE (
	PARAM_METATYPE_ID VARCHAR(32) NOT NULL COLLATE utf8_bin,
	PARAM_METATYPE_NAME VARCHAR(45) NOT NULL,
	IS_MULTIPLE CHAR(1) NOT NULL DEFAULT 'N',
	PRIMARY KEY (PARAM_METATYPE_ID)) 
ENGINE=InnoDB DEFAULT CHARSET=utf8;

ALTER TABLE REPORT_CRITERIA_PARAMETER ADD COLUMN PARAM_META_TYPE_ID VARCHAR(32) NULL DEFAULT NULL COLLATE utf8_bin,
	ADD COLUMN IS_MULTIPLE CHAR(1) NOT NULL DEFAULT 'N',
	ADD COLUMN IS_REQUIRED CHAR(1) NOT NULL DEFAULT 'N',
	ADD COLUMN CAPTION VARCHAR(100) NOT NULL;

ALTER TABLE REPORT_CRITERIA_PARAMETER ADD CONSTRAINT RCP_PARAM_META_TYPE_FK 
	FOREIGN KEY (PARAM_META_TYPE_ID) REFERENCES REPORT_PARAMETER_METATYPE (PARAM_METATYPE_ID);

commit;
use openiam;

INSERT INTO REPORT_PARAMETER_METATYPE (PARAM_METATYPE_ID, PARAM_METATYPE_NAME, IS_MULTIPLE) 
	VALUES  ('ACTION','Audit action','Y'),('GROUP','Group','Y'),('ORGANIZATION','Organization','N'),
		('ROLE','Role','Y'),('USER','User','Y'),('USER_STATUS','User status','Y'),
		('USER_SEC_STATUS','User secondary status','Y');

commit;
use openiam;

DELETE FROM LANGUAGE_MAPPING WHERE REFERENCE_TYPE ='OrganizationTypeEntity';

DELIMITER $$

DROP PROCEDURE IF EXISTS migrateOrgTypes$$

CREATE PROCEDURE migrateOrgTypes()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE _id VARCHAR(32);
		DECLARE _value VARCHAR(100);
		DECLARE cur1 CURSOR FOR (
			SELECT ORG_TYPE_ID, NAME FROM ORGANIZATION_TYPE
		);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
			
		REPEAT 
			FETCH cur1 INTO _id, _value;
			IF (_id IS NOT NULL) THEN
				IF (_value IS NOT NULL) THEN
					IF ((SELECT count(*) FROM LANGUAGE_MAPPING WHERE REFERENCE_ID=_id AND REFERENCE_TYPE='OrganizationTypeEntity')= 0) THEN
						INSERT INTO LANGUAGE_MAPPING(ID, LANGUAGE_ID, REFERENCE_TYPE, REFERENCE_ID, TEXT_VALUE) VALUES(_id, '1', 'OrganizationTypeEntity', _id, _value);
					END IF;
				END IF;
			END IF;
		UNTIL done END REPEAT;
		CLOSE cur1;
	END$$
DELIMITER ;

call migrateOrgTypes();

DROP PROCEDURE migrateOrgTypes;
commit;
use openiam;

DELETE FROM LANGUAGE_MAPPING WHERE REFERENCE_TYPE ='ResourceTypeEntity';

DELIMITER $$

DROP PROCEDURE IF EXISTS migrateResourceTypes$$

CREATE PROCEDURE migrateResourceTypes()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE _id VARCHAR(32);
		DECLARE _value VARCHAR(100);
		DECLARE cur1 CURSOR FOR (
			SELECT RESOURCE_TYPE_ID, DESCRIPTION FROM RESOURCE_TYPE
		);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
			
		REPEAT 
			FETCH cur1 INTO _id, _value;
			IF (_id IS NOT NULL) THEN
				IF (_value IS NOT NULL) THEN
					IF ((SELECT count(*) FROM LANGUAGE_MAPPING WHERE ID=_id)= 0) THEN
						INSERT INTO LANGUAGE_MAPPING(ID, LANGUAGE_ID, REFERENCE_TYPE, REFERENCE_ID, TEXT_VALUE) VALUES(_id, '1', 'ResourceTypeEntity', _id, _value);
					END IF;
				END IF;
			END IF;
		UNTIL done END REPEAT;
		CLOSE cur1;
	END$$
DELIMITER ;

call migrateResourceTypes();

DROP PROCEDURE migrateResourceTypes;
commit;
use openiam;

DELETE FROM LANGUAGE_MAPPING WHERE REFERENCE_TYPE ='IdentityQuestionEntity';

DELIMITER $$

DROP PROCEDURE IF EXISTS migrateResourceTypes$$

CREATE PROCEDURE migrateResourceTypes()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE _id VARCHAR(32);
		DECLARE _value VARCHAR(255);
		DECLARE cur1 CURSOR FOR (
			SELECT IDENTITY_QUESTION_ID, QUESTION_TEXT FROM IDENTITY_QUESTION
		);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
			
		REPEAT 
			FETCH cur1 INTO _id, _value;
			IF (_id IS NOT NULL) THEN
				IF (_value IS NOT NULL) THEN
					IF ((SELECT count(*) FROM LANGUAGE_MAPPING WHERE ID=_id)= 0) THEN
						INSERT INTO LANGUAGE_MAPPING(ID, LANGUAGE_ID, REFERENCE_TYPE, REFERENCE_ID, TEXT_VALUE) VALUES(_id, '1', 'IdentityQuestionEntity', _id, _value);
					END IF;
				END IF;
			END IF;
		UNTIL done END REPEAT;
		CLOSE cur1;
	END$$
DELIMITER ;

call migrateResourceTypes();

DROP PROCEDURE migrateResourceTypes;
commit;
use openiam;

ALTER TABLE IDENTITY_QUESTION DROP COLUMN QUESTION_TEXT;
commit;
USE openiam;
ALTER TABLE MANAGED_SYS ADD COLUMN RESUME_HNDLR VARCHAR(100) NULL;


commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS ADD_METATYPE_DATA$$
CREATE PROCEDURE ADD_METATYPE_DATA()
	BEGIN
 		IF NOT EXISTS (SELECT * FROM REPORT_PARAMETER_METATYPE WHERE PARAM_METATYPE_ID='SUPERVISOR') THEN
			INSERT INTO REPORT_PARAMETER_METATYPE (PARAM_METATYPE_ID, PARAM_METATYPE_NAME, IS_MULTIPLE) VALUES ('SUPERVISOR','Supervisor','Y');
 		END IF;
 		IF NOT EXISTS (SELECT * FROM REPORT_PARAMETER_METATYPE WHERE PARAM_METATYPE_ID='MANAGED_SYSTEM') THEN
			INSERT INTO REPORT_PARAMETER_METATYPE (PARAM_METATYPE_ID, PARAM_METATYPE_NAME, IS_MULTIPLE) VALUES ('MANAGED_SYSTEM','Managed system','Y');
 		END IF;
	END$$
DELIMITER ;

call ADD_METATYPE_DATA();
DROP PROCEDURE ADD_METATYPE_DATA;


UPDATE REPORT_CRITERIA_PARAMETER SET CAPTION='Role', PARAM_META_TYPE_ID='ROLE' WHERE RCP_ID=1011;
UPDATE REPORT_CRITERIA_PARAMETER SET CAPTION='Status', PARAM_META_TYPE_ID='USER_STATUS' WHERE RCP_ID=1012;
UPDATE REPORT_CRITERIA_PARAMETER SET CAPTION='User secondary status', PARAM_META_TYPE_ID='USER_SEC_STATUS' WHERE RCP_ID=1013;
UPDATE REPORT_CRITERIA_PARAMETER SET CAPTION='Organization', PARAM_META_TYPE_ID='ORGANIZATION', IS_REQUIRED='Y' WHERE RCP_ID=1014;
UPDATE REPORT_CRITERIA_PARAMETER SET CAPTION='Audit action', PARAM_META_TYPE_ID='ACTION' WHERE RCP_ID=1021;
UPDATE REPORT_CRITERIA_PARAMETER SET CAPTION='Start date', IS_REQUIRED='Y' WHERE RCP_ID=1022;
UPDATE REPORT_CRITERIA_PARAMETER SET CAPTION='End date' WHERE RCP_ID=1023;
UPDATE REPORT_CRITERIA_PARAMETER SET CAPTION='Managed system', PARAM_META_TYPE_ID='MANAGED_SYSTEM', IS_REQUIRED='Y' WHERE RCP_ID=1031;
UPDATE REPORT_CRITERIA_PARAMETER SET CAPTION='Configuration', IS_REQUIRED='Y' WHERE RCP_ID=1041;
UPDATE REPORT_CRITERIA_PARAMETER SET CAPTION='Audit' WHERE RCP_ID=1042;

commit;
USE openiam;
ALTER TABLE AUTH_ATTRIBUTE MODIFY COLUMN DEFAULT_VALUE VARCHAR(4096);
ALTER TABLE AUTH_LEVEL_ATTRIBUTE MODIFY COLUMN VALUE_AS_STRING VARCHAR(4096);
ALTER TABLE AUTH_PROVIDER_ATTRIBUTE MODIFY COLUMN VALUE VARCHAR(4096);
ALTER TABLE URI_PATTERN_META_VALUE MODIFY COLUMN STATIC_VALUE VARCHAR(4096);
ALTER TABLE LOGIN_ATTRIBUTE MODIFY COLUMN NAME VARCHAR(100), MODIFY COLUMN VALUE VARCHAR(4096);
ALTER TABLE METADATA_ELEMENT MODIFY COLUMN ATTRIBUTE_NAME VARCHAR(100), MODIFY COLUMN STATIC_DEFAULT_VALUE VARCHAR(4096);
ALTER TABLE POLICY_ATTRIBUTE MODIFY COLUMN NAME VARCHAR(100), MODIFY COLUMN VALUE1 VARCHAR(4096), MODIFY COLUMN VALUE2 VARCHAR(4096);
ALTER TABLE REQUEST_ATTRIBUTE MODIFY COLUMN NAME VARCHAR(100), MODIFY COLUMN VALUE VARCHAR(4096);
ALTER TABLE GRP_ATTRIBUTES MODIFY COLUMN NAME VARCHAR(100), MODIFY COLUMN VALUE VARCHAR(4096);
ALTER TABLE COMPANY_ATTRIBUTE MODIFY COLUMN VALUE VARCHAR(4096);
ALTER TABLE ROLE_ATTRIBUTE MODIFY COLUMN NAME VARCHAR(100), MODIFY COLUMN VALUE VARCHAR(4096);
ALTER TABLE USER_ATTRIBUTES MODIFY COLUMN NAME VARCHAR(100), MODIFY COLUMN VALUE VARCHAR(4096);


commit;
USE openiam;

ALTER TABLE LOGIN_ATTRIBUTE
	ADD CONSTRAINT FK_LOGIN_METADATA_ELEMENT
	FOREIGN KEY (METADATA_ID)
	REFERENCES METADATA_ELEMENT(METADATA_ID);

ALTER TABLE RESOURCE_PROP
	ADD CONSTRAINT FK_RES_PROP_METADATA_ELEMENT
	FOREIGN KEY (METADATA_ID)
	REFERENCES METADATA_ELEMENT(METADATA_ID);

ALTER TABLE ROLE_ATTRIBUTE
	ADD CONSTRAINT FK_ROLE_ATTR_METADATA_ELEMENT
	FOREIGN KEY (METADATA_ID)
	REFERENCES METADATA_ELEMENT(METADATA_ID);


commit;
USE openiam;

DELETE FROM LANGUAGE_MAPPING WHERE REFERENCE_ID IN('LANGUAGE_SEARCH', 'LANGUAGE_EDIT', 'LANGUAGE_ROOT_MENU', 'LANGUAGE_ADMIN');
DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN('LANGUAGE_SEARCH', 'LANGUAGE_EDIT', 'LANGUAGE_ROOT_MENU', 'LANGUAGE_ADMIN');
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID IN('LANGUAGE_SEARCH', 'LANGUAGE_EDIT', 'LANGUAGE_ROOT_MENU', 'LANGUAGE_ADMIN');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_PROP_ID IN('LANGUAGE_SEARCH', 'LANGUAGE_EDIT', 'LANGUAGE_ROOT_MENU', 'LANGUAGE_ADMIN');
DELETE FROM RES WHERE RESOURCE_ID IN('LANGUAGE_SEARCH', 'LANGUAGE_EDIT', 'LANGUAGE_ROOT_MENU', 'LANGUAGE_ADMIN');


INSERT INTO RES (RESOURCE_ID,RESOURCE_TYPE_ID,DESCRIPTION,NAME,DISPLAY_ORDER,IS_PUBLIC,URL) VALUES ('LANGUAGE_ADMIN','MENU_ITEM','languages','LANGUAGE_ADMIN',1,'Y','/webconsole/languages.html');
INSERT INTO LANGUAGE_MAPPING(ID, LANGUAGE_ID, REFERENCE_TYPE, REFERENCE_ID, TEXT_VALUE) VALUES('LANGUAGE_ADMIN1', '1', 'ResourceEntity', 'LANGUAGE_ADMIN', 'Languages');
INSERT INTO res_to_res_membership (RESOURCE_ID,MEMBER_RESOURCE_ID) VALUES ('ADMIN','LANGUAGE_ADMIN');

INSERT INTO RES (RESOURCE_ID,RESOURCE_TYPE_ID,DESCRIPTION,NAME,DISPLAY_ORDER,IS_PUBLIC) VALUES ('LANGUAGE_ROOT_MENU','MENU_ITEM','languages root menu','LANGUAGE_ROOT_MENU',1,'Y'); 

INSERT INTO RES (RESOURCE_ID,RESOURCE_TYPE_ID,DESCRIPTION,NAME,DISPLAY_ORDER,IS_PUBLIC,URL) VALUES ('LANGUAGE_EDIT','MENU_ITEM','languages edit','LANGUAGE_EDIT',1,'Y','/webconsole/languageEdit.html'); 
INSERT INTO LANGUAGE_MAPPING(ID, LANGUAGE_ID, REFERENCE_TYPE, REFERENCE_ID, TEXT_VALUE) VALUES('LANGUAGE_EDIT1', '1', 'ResourceEntity', 'LANGUAGE_EDIT', 'New Language');

INSERT INTO RES (RESOURCE_ID,RESOURCE_TYPE_ID,DESCRIPTION,NAME,DISPLAY_ORDER,IS_PUBLIC,URL) VALUES ('LANGUAGE_SEARCH','MENU_ITEM','language search','LANGUAGE_SEARCH',3,'Y','/webconsole/languages.html'); 
INSERT INTO LANGUAGE_MAPPING(ID, LANGUAGE_ID, REFERENCE_TYPE, REFERENCE_ID, TEXT_VALUE) VALUES('LANGUAGE_SEARCH1', '1', 'ResourceEntity', 'LANGUAGE_SEARCH', 'Languages');

INSERT INTO res_to_res_membership (MEMBER_RESOURCE_ID, RESOURCE_ID) VALUES ('LANGUAGE_SEARCH', 'LANGUAGE_ROOT_MENU');
INSERT INTO res_to_res_membership (MEMBER_RESOURCE_ID, RESOURCE_ID) VALUES ('LANGUAGE_EDIT', 'LANGUAGE_ROOT_MENU');



commit;
use openiam;

ALTER TABLE OPENIAM_LOG_TARGET ADD COLUMN OBJECT_PRINCIPAL VARCHAR(255) NULL DEFAULT NULL;

commit;
use openiam;

UPDATE REPORT_CRITERIA_PARAMETER SET IS_MULTIPLE = 'N' WHERE REPORT_INFO_ID IN (SELECT REPORT_INFO_ID FROM REPORT_INFO WHERE BUILT_IN = 'Y');
UPDATE REPORT_CRITERIA_PARAMETER SET IS_MULTIPLE = 'Y' WHERE RCP_ID IN (1011,1014);

DELETE FROM REPORT_CRITERIA_PARAMETER WHERE RCP_ID='1024';
INSERT INTO REPORT_CRITERIA_PARAMETER (REPORT_INFO_ID, RCP_ID, PARAM_NAME, CAPTION, PARAM_VALUE, RCPT_ID, PARAM_META_TYPE_ID, IS_MULTIPLE) VALUES ('102','1024','USER_ID','User',null,'1','USER','N');

commit;
use openiam;

UPDATE GRP SET COMPANY_ID=NULL WHERE COMPANY_ID NOT IN(SELECT COMPANY_ID FROM COMPANY);

ALTER TABLE GRP ADD CONSTRAINT GRP_COMPANY_FK FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (COMPANY_ID);
commit;
use openiam;

insert into LOGIN(LOGIN,LOWERCASE_LOGIN,MANAGED_SYS_ID,USER_ID,PASSWORD,STATUS,LOGIN_ID) 
values('system','system','0','0001','passwd00','ACTIVE','0');

commit;
use openiam;

ALTER TABLE RESOURCE_PROP CHANGE PROP_VALUE VALUE VARCHAR(4096);

ALTER TABLE RESOURCE_PROP CHANGE NAME NAME VARCHAR(100);

ALTER TABLE RESOURCE_PROP ADD COLUMN IS_MULTIVALUED char(1) NOT NULL DEFAULT 'N';
commit;
use openiam;

ALTER TABLE RES ADD COLUMN TYPE_ID VARCHAR(32);

ALTER TABLE RES ADD CONSTRAINT RES_TYPE_FK FOREIGN KEY (TYPE_ID) REFERENCES METADATA_TYPE (TYPE_ID);
commit;
use openiam;

ALTER TABLE RESOURCE_PROP CHANGE METADATA_ID METADATA_ID VARCHAR(32);

ALTER TABLE ROLE_ATTRIBUTE CHANGE METADATA_ID METADATA_ID VARCHAR(32);

ALTER TABLE GRP_ATTRIBUTES CHANGE METADATA_ID METADATA_ID VARCHAR(32);
commit;
use openiam;

ALTER TABLE RESOURCE_PROP CHANGE VALUE _VALUE VARCHAR(4096);
ALTER TABLE GRP_ATTRIBUTES CHANGE VALUE _VALUE VARCHAR(4096);
ALTER TABLE ROLE_ATTRIBUTE CHANGE VALUE _VALUE VARCHAR(4096);
ALTER TABLE COMPANY_ATTRIBUTE CHANGE VALUE _VALUE VARCHAR(4096);
commit;
use openiam;

UPDATE METADATA_TYPE SET GROUPING=NULL WHERE GROUPING NOT IN(
	'OBJECT_TYPE',
	'USER_TYPE',
	'OPERATION',
	'PHONE',
	'UI_WIDGET',
	'USER',
	'USER_2ND_STATUS',
	'ADDRESS',
	'EMAIL',
	'AUTH_LEVEL',
	'JOB_CODE',
	'SERVICE_STATUS',
	'GROUP_TYPE',
	'ROLE_TYPE',
	'ORG_TYPE',
	'RESOURCE_TYPE'
);
commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS alterUserTypes$$

CREATE PROCEDURE alterUserTypes()
	BEGIN
		UPDATE USERS SET JOB_CODE=null WHERE JOB_CODE not in (SELECT TYPE_ID from METADATA_TYPE WHERE GROUPING='JOB_CODE');
		UPDATE USERS SET EMPLOYEE_TYPE=null WHERE EMPLOYEE_TYPE not in (SELECT TYPE_ID from METADATA_TYPE WHERE GROUPING='USER_TYPE');

		IF NOT EXISTS (SELECT 1 FROM information_schema.TABLE_CONSTRAINTS tc WHERE CONSTRAINT_TYPE = 'FOREIGN KEY' AND TABLE_SCHEMA = 'openiam' AND TABLE_NAME = 'USERS' AND CONSTRAINT_NAME='FK_JOB_CODE_METADATA_TYPE') THEN
			ALTER TABLE USERS CHANGE COLUMN JOB_CODE JOB_CODE VARCHAR(32) NULL DEFAULT NULL;

			ALTER TABLE USERS 
				ADD CONSTRAINT FK_JOB_CODE_METADATA_TYPE FOREIGN KEY (JOB_CODE) REFERENCES METADATA_TYPE (TYPE_ID);
		END IF;

		IF NOT EXISTS (SELECT 1 FROM information_schema.TABLE_CONSTRAINTS tc WHERE CONSTRAINT_TYPE = 'FOREIGN KEY' AND TABLE_SCHEMA = 'openiam' AND TABLE_NAME = 'USERS' AND CONSTRAINT_NAME='FK_EMPLOYEE_TYPE_METADATA_TYPE') THEN
			ALTER TABLE USERS CHANGE COLUMN EMPLOYEE_TYPE EMPLOYEE_TYPE VARCHAR(32) NULL DEFAULT NULL;

			ALTER TABLE USERS 
				ADD CONSTRAINT FK_EMPLOYEE_TYPE_METADATA_TYPE FOREIGN KEY (EMPLOYEE_TYPE) REFERENCES METADATA_TYPE (TYPE_ID);
		END IF;
	END$$
DELIMITER ;

call alterUserTypes();

DROP PROCEDURE alterUserTypes;


commit;
use openiam;

DELETE FROM RESOURCE_GROUP WHERE RESOURCE_ID = 'BULK_OPS';
DELETE FROM RESOURCE_USER WHERE RESOURCE_ID = 'BULK_OPS';
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID = 'BULK_OPS';
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID = 'BULK_OPS';
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID = 'BULK_OPS';
DELETE FROM RES WHERE RESOURCE_ID = 'BULK_OPS';
DELETE FROM LANGUAGE_MAPPING WHERE REFERENCE_ID='BULK_OPS';

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, IS_PUBLIC, URL) VALUES('BULK_OPS', 'MENU_ITEM', 'BULK_OPS', 'User Bulk Operations Root', 'N', '/webconsole/bulkOperations.html');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, _VALUE) VALUES ('BULK_OPS_PUB', 'BULK_OPS', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, _VALUE) VALUES ('BULK_OPS_DESC', 'BULK_OPS', 'MENU_DISPLAY_NAME', 'User Bulk Operations');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('IDMAN', 'BULK_OPS');


DELIMITER $$

DROP PROCEDURE IF EXISTS ADD_MENU_ENTITLEMENTS$$
CREATE PROCEDURE ADD_MENU_ENTITLEMENTS()
	BEGIN
 		IF EXISTS (SELECT * FROM ROLE WHERE ROLE_ID='9') THEN
			IF NOT EXISTS (SELECT * FROM RESOURCE_ROLE WHERE ROLE_ID='9' and RESOURCE_ID='BULK_OPS') THEN
				INSERT INTO RESOURCE_ROLE (ROLE_ID, RESOURCE_ID) VALUES('9', 'BULK_OPS');
			END IF;
 		END IF;

	END$$
DELIMITER ;

call ADD_MENU_ENTITLEMENTS();
DROP PROCEDURE ADD_MENU_ENTITLEMENTS;

DELIMITER $$

DROP PROCEDURE IF EXISTS LOCALIZE_MENU_ITEM$$
CREATE PROCEDURE LOCALIZE_MENU_ITEM()
	BEGIN
		IF NOT EXISTS (SELECT * FROM LANGUAGE_MAPPING WHERE REFERENCE_ID='BULK_OPS') THEN
			INSERT INTO LANGUAGE_MAPPING(ID, LANGUAGE_ID, REFERENCE_TYPE, REFERENCE_ID, TEXT_VALUE) VALUES('BULK_OPS_DESC', '1', 'ResourceEntity.displayNameMap', 'BULK_OPS', 'User Bulk Operations');
		END IF;
	END$$
DELIMITER ;

call LOCALIZE_MENU_ITEM();
DROP PROCEDURE LOCALIZE_MENU_ITEM;
commit;
use openiam;

UPDATE LANGUAGE_MAPPING SET REFERENCE_TYPE='MetadataTypeEntity.displayNameMap' WHERE REFERENCE_TYPE='MetadataTypeEntity';
UPDATE LANGUAGE_MAPPING SET REFERENCE_TYPE='LanguageEntity.displayNameMap' WHERE REFERENCE_TYPE='LanguageEntity';
UPDATE LANGUAGE_MAPPING SET REFERENCE_TYPE='MetadataElementEntity.languageMap' WHERE REFERENCE_TYPE='MetadataElementEntity';
UPDATE LANGUAGE_MAPPING SET REFERENCE_TYPE='MetadataElementEntity.defaultValueLanguageMap' WHERE REFERENCE_TYPE='MetadataElementDefaultValues';
UPDATE LANGUAGE_MAPPING SET REFERENCE_TYPE='MetadataFieldTemplateXrefEntity.languageMap' WHERE REFERENCE_TYPE='MetadataFieldTemplateXrefEntity';
UPDATE LANGUAGE_MAPPING SET REFERENCE_TYPE='MetadataValidValueEntity.languageMap' WHERE REFERENCE_TYPE='MetadataValidValueEntity';
UPDATE LANGUAGE_MAPPING SET REFERENCE_TYPE='OrganizationTypeEntity.displayNameMap' WHERE REFERENCE_TYPE='OrganizationTypeEntity';
UPDATE LANGUAGE_MAPPING SET REFERENCE_TYPE='IdentityQuestionEntity.displayNameMap' WHERE REFERENCE_TYPE='IdentityQuestionEntity';
UPDATE LANGUAGE_MAPPING SET REFERENCE_TYPE='ResourceEntity.displayNameMap' WHERE REFERENCE_TYPE='ResourceEntity';
UPDATE LANGUAGE_MAPPING SET REFERENCE_TYPE='ResourceTypeEntity.displayNameMap' WHERE REFERENCE_TYPE='ResourceTypeEntity';
commit;
use openiam;

ALTER TABLE ROLE ADD COLUMN TYPE_ID VARCHAR(32);

ALTER TABLE ROLE ADD CONSTRAINT ROLE_TYPE_FK FOREIGN KEY (TYPE_ID) REFERENCES METADATA_TYPE (TYPE_ID);
commit;
use openiam;
ALTER TABLE GRP ADD COLUMN TYPE_ID VARCHAR(32);
ALTER TABLE GRP ADD CONSTRAINT GRP_TYPE_FK FOREIGN KEY (TYPE_ID) REFERENCES METADATA_TYPE (TYPE_ID);

commit;
use openiam;

DELETE FROM RESOURCE_GROUP  WHERE RESOURCE_ID IN('DIRECTORY');
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID IN('DIRECTORY');
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN('DIRECTORY');
DELETE FROM RESOURCE_USER WHERE RESOURCE_ID IN('DIRECTORY');
DELETE FROM res_to_res_membership WHERE RESOURCE_ID IN('DIRECTORY');
DELETE FROM res_to_res_membership  WHERE MEMBER_RESOURCE_ID IN('DIRECTORY');
DELETE FROM RES WHERE RESOURCE_ID IN('DIRECTORY');

UPDATE RES SET IS_PUBLIC='N' WHERE RESOURCE_ID IN ('IDMAN', 'ACC_CONTROL', 'PROVISIONING', 'SECURITY_POLICY', 'REPORT', 'WEB_REPORT', 'ADMIN', 'ACCESSCENTER', 'REQUEST_APPROVAL', 'SELFSERVICE_REPORT', 'DIR_LOOKUP_PAGE');

UPDATE RES SET IS_PUBLIC='Y' WHERE RESOURCE_ID IN ('IDM', 'SELFSERVICE', 'SELFSERVICE_MYINFO', 'SELFSERVICE_MYAPPS', 'SELFCENTER', 'CHNGPSWD', 'IDQUEST', 'PROFILE');
commit;
use openiam;

DELETE FROM RESOURCE_GROUP WHERE RESOURCE_ID = 'MNG_SYS_VIEWER';
DELETE FROM RESOURCE_USER WHERE RESOURCE_ID = 'MNG_SYS_VIEWER';
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID = 'MNG_SYS_VIEWER';
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID = 'MNG_SYS_VIEWER';
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID = 'MNG_SYS_VIEWER';
DELETE FROM RES WHERE RESOURCE_ID = 'MNG_SYS_VIEWER';
DELETE FROM LANGUAGE_MAPPING WHERE REFERENCE_ID='MNG_SYS_VIEWER';

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, DISPLAY_ORDER, IS_PUBLIC, URL) VALUES('MNG_SYS_VIEWER', 'MENU_ITEM', 'USR_MNG_SYS_VIEWER', 'Managed System Viewer', 12, 'N', '/webconsole/mngSysViewerList.html');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, _VALUE) VALUES ('MNG_SYS_VIEWER_PUB', 'MNG_SYS_VIEWER', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, _VALUE) VALUES ('MNG_SYS_VIEWER_DESC', 'MNG_SYS_VIEWER', 'MENU_DISPLAY_NAME', 'Managed System Viewer');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('USER_EDIT_MENU', 'MNG_SYS_VIEWER');


DELIMITER $$

DROP PROCEDURE IF EXISTS ADD_MENU_ENTITLEMENTS$$
CREATE PROCEDURE ADD_MENU_ENTITLEMENTS()
	BEGIN
 		IF EXISTS (SELECT * FROM ROLE WHERE ROLE_ID='9') THEN
			IF NOT EXISTS (SELECT * FROM RESOURCE_ROLE WHERE ROLE_ID='9' and RESOURCE_ID='MNG_SYS_VIEWER') THEN
				INSERT INTO RESOURCE_ROLE (ROLE_ID, RESOURCE_ID) VALUES('9', 'MNG_SYS_VIEWER');
			END IF;
 		END IF;

	END$$
DELIMITER ;

call ADD_MENU_ENTITLEMENTS();
DROP PROCEDURE ADD_MENU_ENTITLEMENTS;

DELIMITER $$

DROP PROCEDURE IF EXISTS LOCALIZE_MENU_ITEM$$
CREATE PROCEDURE LOCALIZE_MENU_ITEM()
	BEGIN
		IF NOT EXISTS (SELECT * FROM LANGUAGE_MAPPING WHERE REFERENCE_ID='MNG_SYS_VIEWER') THEN
			INSERT INTO LANGUAGE_MAPPING(ID, LANGUAGE_ID, REFERENCE_TYPE, REFERENCE_ID, TEXT_VALUE) VALUES('MNG_SYS_VIEWER_DESC', '1', 'ResourceEntity.displayNameMap', 'MNG_SYS_VIEWER', 'Managed System Viewer');
		END IF;
	END$$
DELIMITER ;

call LOCALIZE_MENU_ITEM();
DROP PROCEDURE LOCALIZE_MENU_ITEM;
commit;
use openiam;

UPDATE USERS SET TYPE_ID=NULL;

DELETE FROM METADATA_TYPE WHERE GROUPING IN('USER_OBJECT_TYPE');
DELETE FROM LANGUAGE_MAPPING WHERE ID IN('DEFAULT_USER_TYPE', 'INTERNAL_USER_TYPE');

INSERT INTO METADATA_TYPE (TYPE_ID, DESCRIPTION, ACTIVE, GROUPING, IS_BINARY) VALUES('DEFAULT_USER', 'Default User', 'Y', 'USER_OBJECT_TYPE', 'N');
INSERT INTO METADATA_TYPE (TYPE_ID, DESCRIPTION, ACTIVE, GROUPING, IS_BINARY) VALUES('INTERNAL_USER', 'Internal User', 'Y', 'USER_OBJECT_TYPE', 'N');

INSERT INTO LANGUAGE_MAPPING (ID, LANGUAGE_ID, REFERENCE_ID, REFERENCE_TYPE, TEXT_VALUE) VALUES('DEFAULT_USER_TYPE', '1', 'DEFAULT_USER', 'MetadataTypeEntity.displayNameMap', 'Default User');
INSERT INTO LANGUAGE_MAPPING (ID, LANGUAGE_ID, REFERENCE_ID, REFERENCE_TYPE, TEXT_VALUE) VALUES('INTERNAL_USER_TYPE', '1', 'INTERNAL_USER', 'MetadataTypeEntity.displayNameMap', 'Internal User');
commit;
use openiam;

UPDATE MANAGED_SYS SET ADD_HNDLR='groovy/example/AddScriptConnector.groovy', MODIFY_HNDLR='groovy/example/ModifyScriptConnector.groovy', DELETE_HNDLR='groovy/example/DeleteScriptConnector.groovy', SEARCH_HNDLR='groovy/example/SearchScriptConnector.groovy', LOOKUP_HNDLR='groovy/example/LookupScriptConnector.groovy', TEST_CONNECTION_HNDLR='groovy/example/TestScriptConnector.groovy' WHERE MANAGED_SYS_ID='104';


commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS entitleMenuToSysAdmin$$

CREATE PROCEDURE entitleMenuToSysAdmin()
	BEGIN
    IF NOT EXISTS (SELECT 1 FROM ROLE WHERE ROLE_ID = '9') THEN
      insert into ROLE(ROLE_ID, ROLE_NAME)
        VALUES ('9','Super Security Admin');
    END IF;

    IF NOT EXISTS (SELECT 1 FROM GRP WHERE GRP_ID = 'SUPER_SEC_ADMIN_GRP') THEN
      insert into GRP(GRP_ID, GRP_NAME)
      VALUES ('SUPER_SEC_ADMIN_GRP','Super Admin Group');
    END IF;

    update ROLE SET DESCRIPTION='Super Security Admin', STATUS='ACTIVE';

    delete from RESOURCE_ROLE where ROLE_ID='9' and RESOURCE_ID in (SELECT RESOURCE_ID FROM RES WHERE RESOURCE_TYPE_ID='MENU_ITEM');

    insert into RESOURCE_ROLE(RESOURCE_ID, ROLE_ID)
      select RESOURCE_ID, '9' FROM RES WHERE RESOURCE_TYPE_ID='MENU_ITEM';

    delete from GRP_ROLE WHERE GRP_ID='SUPER_SEC_ADMIN_GRP' and ROLE_ID='9';

    insert into GRP_ROLE(GRP_ID, ROLE_ID)
      values ('SUPER_SEC_ADMIN_GRP', '9');

    delete from USER_ROLE WHERE USER_ID='3000' and ROLE_ID='9';

    insert into USER_ROLE(USER_ID, ROLE_ID)
      values ('3000', '9');

	END$$
DELIMITER ;

call entitleMenuToSysAdmin();

DROP PROCEDURE entitleMenuToSysAdmin;


commit;
use openiam;

update LANGUAGE SET IS_USED='Y' WHERE ID='4';

delete from LANGUAGE_MAPPING WHERE LANGUAGE_ID in (SELECT ID FROM LANGUAGE WHERE IS_USED='N');
delete from LANGUAGE_LOCALE WHERE LANGUAGE_ID in (SELECT ID FROM LANGUAGE WHERE IS_USED='N');
delete FROM LANGUAGE WHERE IS_USED='N';

commit;
use openiam;

ALTER TABLE REQUEST_ATTRIBUTE DROP COLUMN ATTR_GROUP;

ALTER TABLE ROLE_ATTRIBUTE DROP COLUMN ATTR_GROUP;

ALTER TABLE LOGIN_ATTRIBUTE DROP COLUMN ATTR_GROUP;

ALTER TABLE USER_ATTRIBUTES DROP COLUMN ATTR_GROUP;
commit;
use openiam;
DELETE FROM res_to_res_membership where MEMBER_RESOURCE_ID="META_ADMIN";
DELETE FROM res_to_res_membership where MEMBER_RESOURCE_ID="META_SEARCH";
DELETE FROM res_to_res_membership where RESOURCE_ID="META_SUBMENU_ROOT";

DELETE FROM RES where RESOURCE_ID="META_TYPE_EDIT_RETURN";
DELETE FROM res_to_res_membership where MEMBER_RESOURCE_ID="META_TYPE_EDIT_RETURN";
DELETE FROM LANGUAGE_MAPPING where ID="META_TYPE_EDIT_RETURN_DESC";

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL, IS_PUBLIC) VALUES  ('META_TYPE_EDIT_RETURN','MENU_ITEM','metadata type edit','metadata type edit', 1, '/webconsole/metaDataTypeEdit.html', 'Y');
INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID, CREATE_DATE, UPDATE_DATE) VALUES ('META_SUBMENU_ROOT','META_TYPE_EDIT_RETURN',CURDATE(),CURDATE());
INSERT INTO LANGUAGE_MAPPING(ID, LANGUAGE_ID, REFERENCE_TYPE, REFERENCE_ID, TEXT_VALUE) VALUES('META_TYPE_EDIT_RETURN_DESC', '1', 'ResourceEntity.displayNameMap', 'META_TYPE_EDIT_RETURN', 'Return to Metadata type');


commit;
use openiam;

UPDATE UI_TEMPLATE_FIELDS SET NAME='Metadata Type' WHERE UI_FIELD_ID='USER_OBJECT_TYPE';
commit;
use openiam;

/*
 * This Script should be called by an external source to initialize the content providers.
 * The Installer calls this.  Do NOT delete.
 */

DELETE FROM METADATA_URI_XREF WHERE TEMPLATE_ID IN('NEW_USER_TEMPLATE');
DELETE FROM CONTENT_PROVIDER_SERVER WHERE CONTENT_PROVIDER_ID IN('DEFAULT_CP');
DELETE FROM CP_AUTH_LEVEL_GRP_XREF WHERE CONTENT_PROVIDER_ID IN('DEFAULT_CP');


DELETE FROM URI_AUTH_LEVEL_GRP_XREF WHERE URI_PATTERN_ID IN(
		'SELFREG_PATTERN', 
		'UI_STATIC', 
		'CHANGE_PASSWORD', 
		'UNLOCK_PASSWORD', 
		'LOGOUT_PATTERN', 
		'SAML_LOGIN_PATTERN', 
		'SAML_METADATA_PATTERN', 
		'UNLOCK_PASSWORD_QUESTIONS', 
		'UNLOCK_USER_RESET_FORM', 
		'WEBCONSOLE_CLEAR_CNTX',
		'WEBCONSOLE_AM_CLEAR_CNTX', 
		'WEBCONSOLE_IDM_CLEAR_CNTX', 
		'SELFSERVICE_CLEAR_CNTX', 
		'SEARCH_ORG_PATTERN', 
		'REPORTVIEWER_PATTERN',
		'LANGUAGE_SUPPORT_PATTERN',
		'SELFSERVICE_EXT_CLEAR_CNTX',
		'ROLE_METADATA_PATTERN',
		'SEARCH_ROLES_PATTERN',
		'GROUP_METADATA_PATTERN',
		'SEARCH_GROUPS_PATTERN',
		'ORG_METADATA_PATTERN',
		'FORGOT_USERNAME'
	);
DELETE FROM URI_PATTERN WHERE URI_PATTERN_ID IN(
	'DEF_CP_SELSERVICE_SLASH', 
	'DEF_CP_WEBCONSOLE_AM_SLASH', 
	'DEF_CP_WEBCONSOLE_IDM_SLASH', 
	'DEF_CP_WEBCONSOLE_SLASH', 
	'SELFREG_PATTERN', 
	'UI_STATIC', 
	'CHANGE_PASSWORD', 
	'UNLOCK_PASSWORD', 
	'LOGOUT_PATTERN', 
	'SAML_LOGIN_PATTERN', 
	'SAML_METADATA_PATTERN', 
	'UNLOCK_PASSWORD_QUESTIONS', 
	'UNLOCK_USER_RESET_FORM', 
	'WEBCONSOLE_CLEAR_CNTX',
	'WEBCONSOLE_AM_CLEAR_CNTX', 
	'WEBCONSOLE_IDM_CLEAR_CNTX', 
	'SELFSERVICE_CLEAR_CNTX', 
	'SEARCH_ORG_PATTERN', 
	'REPORTVIEWER_PATTERN', 
	'LANGUAGE_SUPPORT_PATTERN',
	'SELFSERVICE_EXT_CLEAR_CNTX',
	'ROLE_METADATA_PATTERN',
	'SEARCH_ROLES_PATTERN',
	'GROUP_METADATA_PATTERN',
	'SEARCH_GROUPS_PATTERN',
	'ORG_METADATA_PATTERN',
	'FORGOT_USERNAME'
);
DELETE FROM CONTENT_PROVIDER WHERE CONTENT_PROVIDER_ID IN('DEFAULT_CP');
DELETE FROM METADATA_ELEMENT_PAGE_TEMPLATE WHERE ID IN('NEW_USER_TEMPLATE');
DELETE FROM RES WHERE RESOURCE_ID IN(
	'DEFAULT_CP', 
	'DEF_CP_SELSERVICE_SLASH', 
	'DEF_CP_WEBCONSOLE_AM_SLASH', 
	'DEF_CP_WEBCONSOLE_IDM_SLASH', 
	'DEF_CP_WEBCONSOLE_SLASH', 
	'NEW_USER_TEMPLATE', 
	'SELFREG_PATTERN', 
	'UI_STATIC', 
	'CHANGE_PASSWORD', 
	'UNLOCK_PASSWORD', 
	'LOGOUT_PATTERN', 
	'SAML_LOGIN_PATTERN', 
	'SAML_METADATA_PATTERN', 
	'UNLOCK_PASSWORD_QUESTIONS', 
	'UNLOCK_USER_RESET_FORM', 
	'WEBCONSOLE_CLEAR_CNTX',
	'WEBCONSOLE_AM_CLEAR_CNTX', 
	'WEBCONSOLE_IDM_CLEAR_CNTX', 
	'SELFSERVICE_CLEAR_CNTX', 
	'SEARCH_ORG_PATTERN', 
	'REPORTVIEWER_PATTERN', 
	'LANGUAGE_SUPPORT_PATTERN',
	'SELFSERVICE_EXT_CLEAR_CNTX',
	'ROLE_METADATA_PATTERN',
	'SEARCH_ROLES_PATTERN',
	'GROUP_METADATA_PATTERN',
	'SEARCH_GROUPS_PATTERN',
	'ORG_METADATA_PATTERN',
	'FORGOT_USERNAME'
);

DELIMITER $$

DROP PROCEDURE IF EXISTS SETUP_CONTENT_PROVIDERS$$
CREATE PROCEDURE SETUP_CONTENT_PROVIDERS(IN cpDomain VARCHAR(255), IN serverDomain VARCHAR(255))
	BEGIN
 		IF NOT EXISTS (SELECT * FROM CONTENT_PROVIDER) THEN
 			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC, URL) VALUES('DEFAULT_CP', 'CONTENT_PROVIDER', 'Default Content Provider', 'Y', cpDomain);
			INSERT INTO CONTENT_PROVIDER (CONTENT_PROVIDER_ID, CONTENT_PROVIDER_NAME, IS_PUBLIC, DOMAIN_PATTERN, IS_SSL, RESOURCE_ID, MANAGED_SYS_ID) 
								   VALUES('DEFAULT_CP', 'Default Content Provider', 'Y', cpDomain, NULL, 'DEFAULT_CP', '0');
			INSERT INTO CP_AUTH_LEVEL_GRP_XREF (CONTENT_PROVIDER_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES ('DEFAULT_CP', 'PASSWORD_AUTH', 0);
			INSERT INTO CONTENT_PROVIDER_SERVER (CONTENT_PROVIDER_SERVER_ID, CONTENT_PROVIDER_ID, SERVER_URL) VALUES ('DEFAULT_CP', 'DEFAULT_CP', serverDomain);					   
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('DEF_CP_SELSERVICE_SLASH', 'URL_PATTERN', 'Default Content Provider /selfservice/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('DEF_CP_SELSERVICE_SLASH', 'DEFAULT_CP', '/selfservice/*', 'Y', 'DEF_CP_SELSERVICE_SLASH');
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('DEF_CP_WEBCONSOLE_AM_SLASH', 'URL_PATTERN', 'Default Content Provider /webconsole-am/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('DEF_CP_WEBCONSOLE_AM_SLASH', 'DEFAULT_CP', '/webconsole-am/*', 'Y', 'DEF_CP_WEBCONSOLE_AM_SLASH');
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('DEF_CP_WEBCONSOLE_IDM_SLASH', 'URL_PATTERN', 'Default Content Provider /webconsole-idm/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('DEF_CP_WEBCONSOLE_IDM_SLASH', 'DEFAULT_CP', '/webconsole-idm/*', 'Y', 'DEF_CP_WEBCONSOLE_IDM_SLASH');
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('DEF_CP_WEBCONSOLE_SLASH', 'URL_PATTERN', 'Default Content Provider /webconsole/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('DEF_CP_WEBCONSOLE_SLASH', 'DEFAULT_CP', '/webconsole/*', 'Y', 'DEF_CP_WEBCONSOLE_SLASH');
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('NEW_USER_TEMPLATE', 'UI_TEMPLATE', 'New User Template', 'Y');
			INSERT INTO METADATA_ELEMENT_PAGE_TEMPLATE (ID, NAME, RESOURCE_ID, IS_PUBLIC, TEMPLATE_TYPE_ID) VALUES('NEW_USER_TEMPLATE', 'New User Template', 'NEW_USER_TEMPLATE', 'Y', 'USER_TEMPLATE');
			INSERT INTO METADATA_URI_XREF (TEMPLATE_ID, URI_PATTERN_ID) VALUES('NEW_USER_TEMPLATE', 'DEF_CP_SELSERVICE_SLASH');
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SELFREG_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/selfRegistration.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SELFREG_PATTERN', 'DEFAULT_CP', '/selfservice/selfRegistration.html', 'Y', 'SELFREG_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SELFREG_PATTERN', 'NONE', 0);
			INSERT INTO METADATA_URI_XREF (TEMPLATE_ID, URI_PATTERN_ID) VALUES('NEW_USER_TEMPLATE', 'SELFREG_PATTERN');
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('UI_STATIC', 'URL_PATTERN', 'Default Content Provider /openiam-ui-static/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('UI_STATIC', 'DEFAULT_CP', '/openiam-ui-static/*', 'Y', 'UI_STATIC');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('UI_STATIC', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('FORGOT_USERNAME', 'URL_PATTERN', 'Default Content Provider /idp/forgotUsername.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('FORGOT_USERNAME', 'DEFAULT_CP', '/idp/forgotUsername.html', 'Y', 'FORGOT_USERNAME');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('FORGOT_USERNAME', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('CHANGE_PASSWORD', 'URL_PATTERN', 'Default Content Provider /idp/changePassword.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('CHANGE_PASSWORD', 'DEFAULT_CP', '/idp/changePassword.html', 'Y', 'CHANGE_PASSWORD');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('CHANGE_PASSWORD', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('UNLOCK_PASSWORD', 'URL_PATTERN', 'Default Content Provider /idp/unlockPassword.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('UNLOCK_PASSWORD', 'DEFAULT_CP', '/idp/unlockPassword.html', 'Y', 'UNLOCK_PASSWORD');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('UNLOCK_PASSWORD', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('LOGOUT_PATTERN', 'URL_PATTERN', 'Default Content Provider /idp/logout.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('LOGOUT_PATTERN', 'DEFAULT_CP', '/idp/logout.html', 'Y', 'LOGOUT_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('LOGOUT_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SAML_LOGIN_PATTERN', 'URL_PATTERN', 'Default Content Provider /idp/SAMLLogin.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SAML_LOGIN_PATTERN', 'DEFAULT_CP', '/idp/SAMLLogin.html', 'Y', 'SAML_LOGIN_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SAML_LOGIN_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SAML_METADATA_PATTERN', 'URL_PATTERN', 'Default Content Provider /idp/SAMLMetadata.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SAML_METADATA_PATTERN', 'DEFAULT_CP', '/idp/SAMLMetadata.html', 'Y', 'SAML_METADATA_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SAML_METADATA_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('UNLOCK_PASSWORD_QUESTIONS', 'URL_PATTERN', 'Default Content Provider /idp/unlockPasswordQuestions.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('UNLOCK_PASSWORD_QUESTIONS', 'DEFAULT_CP', '/idp/unlockPasswordQuestions.html', 'Y', 'UNLOCK_PASSWORD_QUESTIONS');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('UNLOCK_PASSWORD_QUESTIONS', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('UNLOCK_USER_RESET_FORM', 'URL_PATTERN', 'Default Content Provider /idp/unlockUserResetPasswordForm.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('UNLOCK_USER_RESET_FORM', 'DEFAULT_CP', '/idp/unlockUserResetPasswordForm.html', 'Y', 'UNLOCK_USER_RESET_FORM');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('UNLOCK_USER_RESET_FORM', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('WEBCONSOLE_CLEAR_CNTX', 'URL_PATTERN', 'Default Content Provider /webconsole/clearContext.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('WEBCONSOLE_CLEAR_CNTX', 'DEFAULT_CP', '/webconsole/clearContext.html', 'Y', 'WEBCONSOLE_CLEAR_CNTX');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('WEBCONSOLE_CLEAR_CNTX', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('WEBCONSOLE_AM_CLEAR_CNTX', 'URL_PATTERN', 'Default Content Provider /webconsole-am/clearContext.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('WEBCONSOLE_AM_CLEAR_CNTX', 'DEFAULT_CP', '/webconsole-am/clearContext.html', 'Y', 'WEBCONSOLE_AM_CLEAR_CNTX');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('WEBCONSOLE_AM_CLEAR_CNTX', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('WEBCONSOLE_IDM_CLEAR_CNTX', 'URL_PATTERN', 'Default Content Provider /webconsole-idm/clearContext.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('WEBCONSOLE_IDM_CLEAR_CNTX', 'DEFAULT_CP', '/webconsole-idm/clearContext.html', 'Y', 'WEBCONSOLE_IDM_CLEAR_CNTX');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('WEBCONSOLE_IDM_CLEAR_CNTX', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SELFSERVICE_CLEAR_CNTX', 'URL_PATTERN', 'Default Content Provider /selfservice/clearContext.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SELFSERVICE_CLEAR_CNTX', 'DEFAULT_CP', '/selfservice/clearContext.html', 'Y', 'SELFSERVICE_CLEAR_CNTX');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SELFSERVICE_CLEAR_CNTX', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SELFSERVICE_EXT_CLEAR_CNTX', 'URL_PATTERN', 'Default Content Provider /selfservice-ext/clearContext.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SELFSERVICE_EXT_CLEAR_CNTX', 'DEFAULT_CP', '/selfservice-ext/clearContext.html', 'Y', 'SELFSERVICE_EXT_CLEAR_CNTX');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SELFSERVICE_EXT_CLEAR_CNTX', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SEARCH_ORG_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/rest/api/entitlements/searchOrganizations', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SEARCH_ORG_PATTERN', 'DEFAULT_CP', '/selfservice/rest/api/entitlements/searchOrganizations', 'Y', 'SEARCH_ORG_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SEARCH_ORG_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('REPORTVIEWER_PATTERN', 'URL_PATTERN', 'Default Content Provider /reportviewer/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('REPORTVIEWER_PATTERN', 'DEFAULT_CP', '/reportviewer/*', 'Y', 'REPORTVIEWER_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('REPORTVIEWER_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('LANGUAGE_SUPPORT_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/language/languageSupport.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('LANGUAGE_SUPPORT_PATTERN', 'DEFAULT_CP', '/selfservice/language/languageSupport.html', 'Y', 'LANGUAGE_SUPPORT_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('LANGUAGE_SUPPORT_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('ROLE_METADATA_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/rest/api/metadata/roleMetadata', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('ROLE_METADATA_PATTERN', 'DEFAULT_CP', '/selfservice/rest/api/metadata/roleMetadata', 'Y', 'ROLE_METADATA_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('ROLE_METADATA_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SEARCH_ROLES_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/rest/api/entitlements/searchRoles', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SEARCH_ROLES_PATTERN', 'DEFAULT_CP', '/selfservice/rest/api/entitlements/searchRoles', 'Y', 'SEARCH_ROLES_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SEARCH_ROLES_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('GROUP_METADATA_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/rest/api/metadata/groupMetadata', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('GROUP_METADATA_PATTERN', 'DEFAULT_CP', '/selfservice/rest/api/metadata/groupMetadata', 'Y', 'GROUP_METADATA_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('GROUP_METADATA_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SEARCH_GROUPS_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/rest/api/entitlements/searchGroups', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SEARCH_GROUPS_PATTERN', 'DEFAULT_CP', '/selfservice/rest/api/entitlements/searchGroups', 'Y', 'SEARCH_GROUPS_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SEARCH_GROUPS_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('ORG_METADATA_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/rest/api/metadata/organizationMetadata', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('ORG_METADATA_PATTERN', 'DEFAULT_CP', '/selfservice/rest/api/metadata/organizationMetadata', 'Y', 'ORG_METADATA_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('ORG_METADATA_PATTERN', 'NONE', 0);
			
 		END IF;
	END$$
DELIMITER ;

commit;
use openiam;

UPDATE REPORT_CRITERIA_PARAMETER SET IS_REQUIRED='N' WHERE RCP_ID=1014;

commit;
use openiam;

ALTER TABLE USER_IDENTITY_ANS ADD COLUMN IS_ENCRYPTED VARCHAR(1) NOT NULL DEFAULT 'N';

commit;
use openiam;

ALTER TABLE EMAIL_ADDRESS DROP FOREIGN KEY EMAIL_ADDRESS_TYPE_FK ;
ALTER TABLE EMAIL_ADDRESS CHANGE COLUMN TYPE_ID TYPE_ID VARCHAR(32) NULL DEFAULT NULL;
ALTER TABLE EMAIL_ADDRESS ADD CONSTRAINT EMAIL_ADDRESS_TYPE_FK FOREIGN KEY (TYPE_ID) REFERENCES METADATA_TYPE (TYPE_ID);


ALTER TABLE ADDRESS DROP FOREIGN KEY ADDRESS_TYPE_FK ;
ALTER TABLE ADDRESS CHANGE COLUMN TYPE_ID TYPE_ID VARCHAR(32) NULL  DEFAULT NULL; 
ALTER TABLE ADDRESS ADD CONSTRAINT ADDRESS_TYPE_FK FOREIGN KEY (TYPE_ID) REFERENCES METADATA_TYPE (TYPE_ID);


ALTER TABLE PHONE DROP FOREIGN KEY PHONE_TYPE_FK ;
ALTER TABLE PHONE CHANGE COLUMN TYPE_ID TYPE_ID VARCHAR(32) NULL  DEFAULT NULL; 
ALTER TABLE PHONE ADD CONSTRAINT PHONE_TYPE_FK FOREIGN KEY (TYPE_ID) REFERENCES METADATA_TYPE (TYPE_ID);


commit;
use openiam;

ALTER TABLE RESOURCE_PROP CHANGE _VALUE ATTR_VALUE VARCHAR(4096);
ALTER TABLE GRP_ATTRIBUTES CHANGE _VALUE ATTR_VALUE VARCHAR(4096);
ALTER TABLE ROLE_ATTRIBUTE CHANGE _VALUE ATTR_VALUE VARCHAR(4096);
ALTER TABLE COMPANY_ATTRIBUTE CHANGE _VALUE ATTR_VALUE VARCHAR(4096);

commit;
use openiam;

update PROVISION_CONNECTOR set SERVICE_URL='localhost:9080/openiam-esb/idmsrvc/LDAPConnectorService' where CONNECTOR_ID='51';
update PROVISION_CONNECTOR set SERVICE_URL='localhost:9080/openiam-esb/idmsrvc/GoogleAppsConnectorService' where CONNECTOR_ID='54';
update PROVISION_CONNECTOR set SERVICE_URL='localhost:9080/openiam-esb/idmsrvc/ApplicationTablesConnector' where CONNECTOR_ID='61';
update PROVISION_CONNECTOR set SERVICE_URL='localhost:9080/openiam-esb/idmsrvc/ScriptConnectorService' where CONNECTOR_ID='62';
update PROVISION_CONNECTOR set SERVICE_URL='localhost:9080/openiam-esb/idmsrvc/LinuxConnectorService' where CONNECTOR_ID='63';
update PROVISION_CONNECTOR set SERVICE_URL='localhost:9080/openiam-esb/idmsrvc/MySQLConnector' where CONNECTOR_ID='64';
update PROVISION_CONNECTOR set SERVICE_URL='localhost:9080/openiam-esb/idmsrvc/OracleConnector' where CONNECTOR_ID='65';

update RECONCILIATION_SITUATION set SITUATION='IDM[exists] and Resource[not exists]' where RECON_SITUATION_ID='4028b881373b90e501373b92ec1f0002';
update RECONCILIATION_SITUATION set SITUATION_RESP='NOTHING' where RECON_SITUATION_ID='4028b881373b90e501373b92ec1f0002';
update RECONCILIATION_SITUATION set SCRIPT='recon/LDAPPopulationScript.groovy' where RECON_SITUATION_ID='4028b881373b90e501373b92ec1f0002';

update RECONCILIATION_SITUATION set SITUATION='IDM[exists] and Resource[exists]' where RECON_SITUATION_ID='4028b881373b90e501373b92ec1f0003';
update RECONCILIATION_SITUATION set SITUATION_RESP='UPDATE_IDM_FROM_RES' where RECON_SITUATION_ID='4028b881373b90e501373b92ec1f0003';
update RECONCILIATION_SITUATION set SCRIPT='recon/LDAPPopulationScript.groovy' where RECON_SITUATION_ID='4028b881373b90e501373b92ec1f0003';

update RECONCILIATION_SITUATION set SITUATION='IDM[not exists] and Resource[exists]' where RECON_SITUATION_ID='4028b881373b90e501373b92ec1f0004';
update RECONCILIATION_SITUATION set SITUATION_RESP='ADD_TO_IDM' where RECON_SITUATION_ID='4028b881373b90e501373b92ec1f0004';
update RECONCILIATION_SITUATION set SCRIPT='recon/LDAPPopulationScript.groovy' where RECON_SITUATION_ID='4028b881373b90e501373b92ec1f0004';

update RECONCILIATION_SITUATION set SITUATION='IDM[deleted] and Resource[exists]' where RECON_SITUATION_ID='4028b881373b90e501373b92ec1f0005';
update RECONCILIATION_SITUATION set SITUATION_RESP='CREATE_RES_ACCOUNT' where RECON_SITUATION_ID='4028b881373b90e501373b92ec1f0005';
update RECONCILIATION_SITUATION set SCRIPT='recon/LDAPPopulationScript.groovy' where RECON_SITUATION_ID='4028b881373b90e501373b92ec1f0005';

commit;
use openiam;

ALTER TABLE IDENTITY MODIFY IDENTITY VARCHAR(320) CHARACTER SET 'utf8' NOT NULL;
commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS ADD_PROV_STATUS$$

CREATE PROCEDURE ADD_PROV_STATUS()
	BEGIN
		IF NOT EXISTS (SELECT * FROM information_schema.columns WHERE table_schema='openiam' AND table_name = 'LOGIN' AND column_name = 'PROV_STATUS') THEN
			ALTER TABLE LOGIN ADD COLUMN PROV_STATUS VARCHAR(20) NULL;
 		END IF;
 		
	END$$
DELIMITER ;

call ADD_PROV_STATUS();
DROP PROCEDURE ADD_PROV_STATUS;

UPDATE LOGIN SET STATUS = NULL WHERE STATUS NOT IN ('ACTIVE', 'INACTIVE');
commit;
use openiam;

update openiam.LOGIN SET STATUS=null where STATUS not in ('ACTIVE','INACTIVE');
commit;
use openiam;

DELETE FROM GRP_ROLE WHERE GRP_ID = 'END_USER_GRP';
DELETE FROM GRP_ROLE WHERE GRP_ID = 'MNGR_GRP';
DELETE FROM GRP_ROLE WHERE GRP_ID = 'SEC_ADMIN_GRP';

DELETE FROM USER_GRP WHERE GRP_ID = 'END_USER_GRP';
DELETE FROM USER_GRP WHERE GRP_ID = 'MNGR_GRP';
DELETE FROM USER_GRP WHERE GRP_ID = 'SEC_ADMIN_GRP';

DELETE FROM GRP_ATTRIBUTES WHERE GRP_ID = 'END_USER_GRP';
DELETE FROM GRP_ATTRIBUTES WHERE GRP_ID = 'MNGR_GRP';
DELETE FROM GRP_ATTRIBUTES WHERE GRP_ID = 'SEC_ADMIN_GRP';

DELETE FROM grp_to_grp_membership WHERE GROUP_ID = 'END_USER_GRP' OR MEMBER_GROUP_ID = 'END_USER_GRP';
DELETE FROM grp_to_grp_membership WHERE GROUP_ID = 'MNGR_GRP' OR MEMBER_GROUP_ID = 'MNGR_GRP';
DELETE FROM grp_to_grp_membership WHERE GROUP_ID = 'SEC_ADMIN_GRP' OR MEMBER_GROUP_ID = 'SEC_ADMIN_GRP';

DELETE FROM GRP WHERE GRP_ID = 'END_USER_GRP';
DELETE FROM GRP WHERE GRP_ID = 'MNGR_GRP';
DELETE FROM GRP WHERE GRP_ID = 'SEC_ADMIN_GRP';

commit;
use openiam;

UPDATE RES SET URL='/selfservice/redirectChallengeResponse.html' WHERE RESOURCE_ID='CHNGPSWD';
commit;
use openiam;
ALTER TABLE COMPANY ADD COLUMN TYPE_ID VARCHAR(32);
ALTER TABLE COMPANY ADD CONSTRAINT COMPANY_TYPE_FK FOREIGN KEY (TYPE_ID) REFERENCES METADATA_TYPE (TYPE_ID);

commit;
use openiam;

update LANGUAGE SET IS_USED='Y' WHERE ID='4';
delete from LANGUAGE_MAPPING where LANGUAGE_ID='4';

INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESLanguageEntity1','4','1','LanguageEntity.displayNameMap','Inglés');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate101','4','101','MetadataElementEntity.languageMap','Nombre de Vista');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate104','4','104','MetadataElementEntity.languageMap','Idioma preferido');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate105','4','105','MetadataElementEntity.languageMap','VehicleLicense');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate106','4','106','MetadataElementEntity.languageMap','Nombre');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate107','4','107','MetadataElementEntity.languageMap','LabeledURI');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate108','4','108','MetadataElementEntity.languageMap','Iniciales');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate110','4','110','MetadataElementEntity.languageMap','BusinessCategory');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate131','4','131','MetadataElementEntity.languageMap','Nombre de Vista');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate134','4','134','MetadataElementEntity.languageMap','Idioma preferido');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate135','4','135','MetadataElementEntity.languageMap','VehicleLicense');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate136','4','136','MetadataElementEntity.languageMap','Nombre');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate137','4','137','MetadataElementEntity.languageMap','LabeledURI');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate138','4','138','MetadataElementEntity.languageMap','Iniciales');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate140','4','140','MetadataElementEntity.languageMap','Nombre de Vista');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate150','4','150','MetadataElementEntity.languageMap','Nombre de Vista');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate160','4','160','MetadataElementEntity.languageMap','Nombre de Vista');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ES200','4','200','IdentityQuestionEntity.displayNameMap','Cuáles son los últimos cuatro dígitos de su número de la seguridad social?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ES201','4','201','IdentityQuestionEntity.displayNameMap','Cuál es su apellido materno?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ES202','4','202','IdentityQuestionEntity.displayNameMap','Dónde estuidaste?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ES203','4','203','IdentityQuestionEntity.displayNameMap','Cuál es el nombre de tu mascota?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ES204','4','204','IdentityQuestionEntity.displayNameMap','Cuál es tu comida favorita?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ES205','4','205','IdentityQuestionEntity.displayNameMap','Cuál es tu color favorito?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ES206','4','206','IdentityQuestionEntity.displayNameMap','En qué ciudad naciste?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ES207','4','207','IdentityQuestionEntity.displayNameMap','Cual es tu deporte favorito?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ES209','4','209','IdentityQuestionEntity.displayNameMap','Cuáles son los últimos digitos de tu licencia de conducir?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ES210','4','210','IdentityQuestionEntity.displayNameMap','Cuál es el nombre de tu escuela favorita?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ES211','4','211','IdentityQuestionEntity.displayNameMap','Cuál es el nombre de tu primera mascota?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ES212','4','212','IdentityQuestionEntity.displayNameMap','Cuál es el nombre de tu película, juego o canción favorita?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ES213','4','213','IdentityQuestionEntity.displayNameMap','Cuál es el título de tu libro preferido?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ES214','4','214','IdentityQuestionEntity.displayNameMap','Cuál es el nombre de tu primer novio/a?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ES215','4','215','IdentityQuestionEntity.displayNameMap','Cuál es el nombre de tu profesor preferido?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ES216','4','216','IdentityQuestionEntity.displayNameMap','Cuál es el año y apodo de tu primer coche(Año-Nombre)?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ES217','4','217','IdentityQuestionEntity.displayNameMap','Dónde conociste a tu pareja?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ES218','4','218','IdentityQuestionEntity.displayNameMap','Cuál es el tipo y nombre de su primera mascota(Tipo-Nombre)?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate260','4','260','MetadataElementEntity.languageMap','BusinessCategory');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate261','4','261','MetadataElementEntity.languageMap','StartDate');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate262','4','262','MetadataElementEntity.languageMap','EndDate');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate300','4','300','MetadataElementEntity.languageMap','name');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate301','4','301','MetadataElementEntity.languageMap','distinguishedName');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate302','4','302','MetadataElementEntity.languageMap','objectclass');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate303','4','303','MetadataElementEntity.languageMap','aliasedObjectName');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate304','4','304','MetadataElementEntity.languageMap','cn');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate305','4','305','MetadataElementEntity.languageMap','sn');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate306','4','306','MetadataElementEntity.languageMap','serialNumber');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate307','4','307','MetadataElementEntity.languageMap','c');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate308','4','308','MetadataElementEntity.languageMap','l');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate309','4','309','MetadataElementEntity.languageMap','st');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate310','4','310','MetadataElementEntity.languageMap','street');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate311','4','311','MetadataElementEntity.languageMap','o');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate312','4','312','MetadataElementEntity.languageMap','ou');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate313','4','313','MetadataElementEntity.languageMap','title');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate314','4','314','MetadataElementEntity.languageMap','description');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate315','4','315','MetadataElementEntity.languageMap','BusinessCategory');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate316','4','316','MetadataElementEntity.languageMap','postalAddress');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate317','4','317','MetadataElementEntity.languageMap','postalCode');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate318','4','318','MetadataElementEntity.languageMap','postOficinaBox');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate319','4','319','MetadataElementEntity.languageMap','physicalDeliveryOficinaName');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate320','4','320','MetadataElementEntity.languageMap','telephoneNumber');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate321','4','321','MetadataElementEntity.languageMap','telexNumber');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate322','4','322','MetadataElementEntity.languageMap','teletexTerminalIdentifier');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate323','4','323','MetadataElementEntity.languageMap','facsimileTelephoneNumber');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate324','4','324','MetadataElementEntity.languageMap','x121Address');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate325','4','325','MetadataElementEntity.languageMap','internationaliSDNNumber');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate326','4','326','MetadataElementEntity.languageMap','registeredAddress');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate327','4','327','MetadataElementEntity.languageMap','destinationIndicator');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate328','4','328','MetadataElementEntity.languageMap','preferredDeliveryMethod');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate329','4','329','MetadataElementEntity.languageMap','presentationAddress');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate330','4','330','MetadataElementEntity.languageMap','supportedApplicationContext');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate331','4','331','MetadataElementEntity.languageMap','member');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate332','4','332','MetadataElementEntity.languageMap','owner');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate333','4','333','MetadataElementEntity.languageMap','roleOccupant');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate334','4','334','MetadataElementEntity.languageMap','seeAlso');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate335','4','335','MetadataElementEntity.languageMap','userPassword');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate336','4','336','MetadataElementEntity.languageMap','userCertificate');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate337','4','337','MetadataElementEntity.languageMap','cACertificate');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate338','4','338','MetadataElementEntity.languageMap','authorityRevocationList');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate339','4','339','MetadataElementEntity.languageMap','certificateRevocationList');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate340','4','340','MetadataElementEntity.languageMap','crossCertificatePair');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate341','4','341','MetadataElementEntity.languageMap','givenName');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate342','4','342','MetadataElementEntity.languageMap','Iniciales');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate343','4','343','MetadataElementEntity.languageMap','generationQualifier');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate344','4','344','MetadataElementEntity.languageMap','x500UniqueIdentifier');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate346','4','346','MetadataElementEntity.languageMap','uniqueMember');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate347','4','347','MetadataElementEntity.languageMap','houseIdentifier');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate348','4','348','MetadataElementEntity.languageMap','uid');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate349','4','349','MetadataElementEntity.languageMap','mail');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate350','4','350','MetadataElementEntity.languageMap','ref');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate351','4','351','MetadataElementEntity.languageMap','referral');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate352','4','352','MetadataElementEntity.languageMap','krbName');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESLanguageEntity4','4','4','LanguageEntity.displayNameMap','Español');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate401','4','401','MetadataElementEntity.languageMap','SUBMIT_USER_TO_CONNECTOR');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate402','4','402','MetadataElementEntity.languageMap','INCLUDE_IN_PASSWORD_SYNC');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate405','4','405','MetadataElementEntity.languageMap','INCLUDE_IN_SYNC');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate406','4','406','MetadataElementEntity.languageMap','TABLE_NAME');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate407','4','407','MetadataElementEntity.languageMap','GROUP_MEMBERSHIP_ENABLED');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate408','4','408','MetadataElementEntity.languageMap','ON_DELETE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate409','4','409','MetadataElementEntity.languageMap','PRE_PROCESS');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate410','4','410','MetadataElementEntity.languageMap','POST_PROCESS');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate411','4','411','MetadataElementEntity.languageMap','HOST_URL');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate412','4','412','MetadataElementEntity.languageMap','BASE_DN');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate413','4','413','MetadataElementEntity.languageMap','HOST_LOGIN ID');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate415','4','415','MetadataElementEntity.languageMap','COMMUNICATION_PROTOCOL');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate416','4','416','MetadataElementEntity.languageMap','OBJECT_CLASS');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate418','4','418','MetadataElementEntity.languageMap','SEARCH_ATTRIBUTE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate419','4','419','MetadataElementEntity.languageMap','MANAGED_SYS_ID');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate420','4','420','MetadataElementEntity.languageMap','DN_ATTRIBUTE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate421','4','421','MetadataElementEntity.languageMap','PASSWORD');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate430','4','430','MetadataElementEntity.languageMap','END_POINT');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate440','4','440','MetadataElementEntity.languageMap','OPERATION_NAME');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESElementMigrate450','4','450','MetadataElementEntity.languageMap','URL');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESLanguageEntity7','4','8','LanguageEntity.displayNameMap','Ruso');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESABOUT_DESC','4','ABOUT','ResourceEntity.displayNameMap','Acerca de OpenIAM');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESABOUT_ROOT_MENU_DESC','4','ABOUT_ROOT_MENU','ResourceEntity.displayNameMap','Acerca de OpenIAM');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESACCESSCENTER_MENU_DISPLAY','4','ACCESSCENTER','ResourceEntity.displayNameMap','Gestión de Acceso');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity1','4','ACCNT','MetadataTypeEntity.displayNameMap','Cuenta');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESACC_CONTROL_MENU_DISPLAY','4','ACC_CONTROL','ResourceEntity.displayNameMap','Control de Acceso');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity2','4','ACTIVE','MetadataTypeEntity.displayNameMap','ACTIVO');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity3','4','ADGroup','MetadataTypeEntity.displayNameMap','Tipo de uario AD');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity4','4','ADMGP','MetadataTypeEntity.displayNameMap','Grupo Admin');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity5','4','ADMIN','MetadataTypeEntity.displayNameMap','Administrador');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESADMIN_MENU_DISPLAY','4','ADMIN','ResourceEntity.displayNameMap','Administración');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESADMIN_BATCH_TASKS_DESC','4','ADMIN_BATCH_TASKS','ResourceEntity.displayNameMap','Tareas Programadas');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity6','4','ADMIN_RESOURCE','MetadataTypeEntity.displayNameMap','Recurso Admin');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESADMIN_RESOURCE','4','ADMIN_RESOURCE','ResourceTypeEntity.displayNameMap','Recurso Admin');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity7','4','ADUser','MetadataTypeEntity.displayNameMap','Tipo de usuario AD');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity8','4','AD_Connector','MetadataTypeEntity.displayNameMap','Conector Active Directorio');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity9','4','AD_GROUP_TYPE','MetadataTypeEntity.displayNameMap','TIPO DE GRUPO AD');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity10','4','AFFILIATE','MetadataTypeEntity.displayNameMap','AFILIADO');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESAM_PROV_AM_ATTR_DESC','4','AM_PROV_AM_ATTR','ResourceEntity.displayNameMap','Solicitud de Atributos');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESAM_PROV_EDIT_DESC','4','AM_PROV_EDIT','ResourceEntity.displayNameMap','Proveedor de autenticación de edición de Menu');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESAM_PROV_EDIT_CURRENT_DESC','4','AM_PROV_EDIT_CURRENT','ResourceEntity.displayNameMap','Editar Proveedor');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESAM_PROV_EDIT_SEARCH_DESC','4','AM_PROV_EDIT_SEARCH','ResourceEntity.displayNameMap','Volver a buscar');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESAM_PROV_NEW_DSC','4','AM_PROV_NEW','ResourceEntity.displayNameMap','Crear Nuevo Proveedor');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESAM_PROV_NEW_EDIT_PUB_DESC','4','AM_PROV_NEW_EDIT','ResourceEntity.displayNameMap','Crear Nuevo Proveedor');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESAM_PROV_ROOT_DESC','4','AM_PROV_ROOT','ResourceEntity.displayNameMap','Proveedor autenticación Menú raíz');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESAM_PROV_SEARCH_DESC','4','AM_PROV_SEARCH','ResourceEntity.displayNameMap','Buscar Proveedores');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESAM_PROV_SEARCH_CHILD_PUB_DESC','4','AM_PROV_SEARCH_CHILD','ResourceEntity.displayNameMap','Proveedor autenticación');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity11','4','APPROVAL_DECLINED','MetadataTypeEntity.displayNameMap','APPROVAL_DECLINED');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESASSOC_POLICY_DESC','4','ASSOC_POLICY','ResourceEntity.displayNameMap','Política Asociada');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity12','4','ATTR','MetadataTypeEntity.displayNameMap','Atributo');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESATTRIBUTE_POLICY_DESC','4','ATTRIBUTE_POLICY','ResourceEntity.displayNameMap','Política de Atributo');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESAUDITREPORT_MENU_DISPLAY','4','AUDITREPORT','ResourceEntity.displayNameMap','Informes de Auditoría');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESAUDIT_RPT_MENU_DISPLAY','4','AUDIT_RPT','ResourceEntity.displayNameMap','Informe de Auditoría');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESAUTH_POLICY_MENU_DESC','4','AUTHENTICATION_POLICY','ResourceEntity.displayNameMap','Política de Autenticación');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESAUTH_POLICY_ROOT_MENU_DESC','4','AUTHENTICATION_POLICY_ROOT_MENU','ResourceEntity.displayNameMap','Política autenticación Menú raíz');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity13','4','AUTHENTICATION_PROVIDER','MetadataTypeEntity.displayNameMap','Proveedor autenticación');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESAUTH_LEVEL_GRP_DN','4','AUTH_LEVEL_GRP','ResourceEntity.displayNameMap','Grupos autenticación');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESAUTH_LVL_GRP_ATTR_DN','4','AUTH_LVL_GRP_ATTR','ResourceEntity.displayNameMap','Atributo de Nivel de Agrupación de Autenticación Root');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESAUTH_LVL_GRP_EDIT_ROOT_DN','4','AUTH_LVL_GRP_EDIT_ROOT','ResourceEntity.displayNameMap','Edición de Nivel de Agrupación de Autenticación Root');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESAUTH_LVL_GRP_NEW_ROOT_DN','4','AUTH_LVL_GRP_NEW_ROOT','ResourceEntity.displayNameMap','Autenticación de Nivel de Agrupación Root');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESAUTH_PROVIDER','4','AUTH_PROVIDER','ResourceTypeEntity.displayNameMap','Proveedor autenticación');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity14','4','AUTH_REPO','MetadataTypeEntity.displayNameMap','Repositorio autenticación');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESAUTH_REPO','4','AUTH_REPO','ResourceTypeEntity.displayNameMap','Repositorio autenticación');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESBACK_TO_AUTH_LVL_DN','4','BACK_TO_AUTH_LVL','ResourceEntity.displayNameMap','Volver a la Agrupación');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESBACK_TO_AUTH_LVL_GRP_SRH_DN','4','BACK_TO_AUTH_LVL_GRP_SRH','ResourceEntity.displayNameMap','Volver a la Busqueda');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESBACK_TO_CP_DESC','4','BACK_TO_CP','ResourceEntity.displayNameMap','Volver al Proveedor de Contenido');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESBATCH_PROC_MENU_DISPLAY','4','BATCH_PROC','ResourceEntity.displayNameMap','Tareas Programadas');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESBATCH_TASK_EDIT_DESC','4','BATCH_TASK_EDIT','ResourceEntity.displayNameMap','Editar Tareas Programadas');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESBATCH_TASK_ROOT_DESC','4','BATCH_TASK_ROOT','ResourceEntity.displayNameMap','Tareas Programadas Root');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity15','4','BL','MetadataTypeEntity.displayNameMap','Desabilitado');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESBULK_OPS_DESC','4','BULK_OPS','ResourceEntity.displayNameMap','Operaciones masivas');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity16','4','CELL_PHONE','MetadataTypeEntity.displayNameMap','Móvil');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESCHALLENGE_MENU_DISPLAY','4','CHALLENGE','ResourceEntity.displayNameMap','Pregunta de Seguridad');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESCHALLENGE_RESP_QUESTION_DESC','4','CHALLENGE_RESPONSE_QUESTION','ResourceEntity.displayNameMap','Pregunta de Seguridad');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESCHALL_RESP_QUESTION_NEW_DSC','4','CHALLENGE_RESPONSE_QUESTION_NEW','ResourceEntity.displayNameMap','Crear Nueva Pregunta');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESCHALLENGE_RESP_QUEST_ROOT_DESC','4','CHALLENGE_RESPONSE_QUESTION_ROOT','ResourceEntity.displayNameMap','Menu Root de Pregunta de Seguridad');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity17','4','CHECKBOX','MetadataTypeEntity.displayNameMap','Checkbox');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESCHNGPSWD_MENU_DISPLAY','4','CHNGPSWD','ResourceEntity.displayNameMap','Cambiar Password');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESCONF_POLICY_PAGE_DIS','4','CONF_POLICY_PAGE','ResourceEntity.displayNameMap','Configurar Política TI');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity18','4','CONTENT_PROVIDER','MetadataTypeEntity.displayNameMap','Proveedor de Contenido');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESCONTENT_PROVIDER','4','CONTENT_PROVIDER','ResourceTypeEntity.displayNameMap','Proveedor de Contenido');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESCONTENT_PROV_EDIT_DESC','4','CONTENT_PROV_EDIT','ResourceEntity.displayNameMap','Edición de Menú de Proveedor de Contenido');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESCONTENT_PROV_EDIT_CURRENT_DESC','4','CONTENT_PROV_EDIT_CURRENT','ResourceEntity.displayNameMap','Editar Proveedor');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESCONTENT_PROV_EDIT_SEARCH_DESC','4','CONTENT_PROV_EDIT_SEARCH','ResourceEntity.displayNameMap','Volver a la Busqueda');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESCONTENT_PROV_NEW_DSC','4','CONTENT_PROV_NEW','ResourceEntity.displayNameMap','Crear Proveedor Nuevo');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESCONTENT_PROV_NEW_EDIT_DESC','4','CONTENT_PROV_NEW_EDIT','ResourceEntity.displayNameMap','Crear Proveedor Nuevo');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESCONTENT_PROV_ROOT_DESC','4','CONTENT_PROV_ROOT','ResourceEntity.displayNameMap','Menú Root de Proveedor de Contenido');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESCONTENT_PROV_SEARCH_DESC','4','CONTENT_PROV_SEARCH','ResourceEntity.displayNameMap','Buscar Proveedor');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESCONTENT_PROV_SEARCH_CHILD_DESC','4','CONTENT_PROV_SEARCH_CHILD','ResourceEntity.displayNameMap','Proveedor de Contenidos');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity19','4','Contractor','MetadataTypeEntity.displayNameMap','Tipo de Usario Contratista');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity20','4','CONTRACTOR TYPE','MetadataTypeEntity.displayNameMap','Contratista');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESCREATEREQ_MENU_DISPLAY','4','CREATEREQ','ResourceEntity.displayNameMap','Crear Solicitud');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESCR_RES_DISP_NAME','4','CREATE_RESOURCE_MENU','ResourceEntity.displayNameMap','Crear Recurso Nuevo');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESCUSTOM_FIELD_EDIT_DESC','4','CUSTOM_FIELD_EDIT','ResourceEntity.displayNameMap','Menú de Edición de Campo Personalizado');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESCUSTOM_FIELD_EDIT_NEW_DESC','4','CUSTOM_FIELD_EDIT_NEW','ResourceEntity.displayNameMap','Crear Campo Pers.');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESCUSTOM_FIELD_EDIT_SEARCH_DESC','4','CUSTOM_FIELD_EDIT_SEARCH','ResourceEntity.displayNameMap','Volver a la Busqueda');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESCUSTOM_FIELD_NEW_DSC','4','CUSTOM_FIELD_NEW','ResourceEntity.displayNameMap','Crear Campo Pers.');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESCUSTOM_FIELD_ROOT_DESC','4','CUSTOM_FIELD_ROOT','ResourceEntity.displayNameMap','Menú Root de Campo Personalizado');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESCUSTOM_FIELD_SEARCH_DESC','4','CUSTOM_FIELD_SEARCH','ResourceEntity.displayNameMap','Buscar Campos Pers.');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESCUSTOM_FIELD_SEARCH_CHILD_DESC','4','CUSTOM_FIELD_SEARCH_CHILD','ResourceEntity.displayNameMap','Campos Personalizados');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity21','4','DATE','MetadataTypeEntity.displayNameMap','Fecha de Campo');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity22','4','DEFAULT_GROUP','MetadataTypeEntity.displayNameMap','TIPO DE GRUPO PREDETERMINADO');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESDEFAULT_USER_TYPE','4','DEFAULT_USER','MetadataTypeEntity.displayNameMap','Usuario Predeterminado');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity23','4','DELETED','MetadataTypeEntity.displayNameMap','BORRADO');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESDELG_FILTER_MENU_DISPLAY','4','DELG_FILTER','ResourceEntity.displayNameMap','Administración delegada');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESDEPARTMENT','4','DEPARTMENT','OrganizationTypeEntity.displayNameMap','Departamento');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity24','4','departmentType','MetadataTypeEntity.displayNameMap','Departamento');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity25','4','DIRECTORY','MetadataTypeEntity.displayNameMap','Directorio');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESDIRECTORY_MENU_DISPLAY','4','DIRECTORY','ResourceEntity.displayNameMap','Busqueda en el Directorio');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESDIR_LOOKUP_PAGE_DIS','4','DIR_LOOKUP_PAGE','ResourceEntity.displayNameMap','Busqueda en el Directorio');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity26','4','DISABLED','MetadataTypeEntity.displayNameMap','Deshabilitado');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESDIVISION','4','DIVISION','OrganizationTypeEntity.displayNameMap','Division');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity27','4','divisionType','MetadataTypeEntity.displayNameMap','Division');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity28','4','DL','MetadataTypeEntity.displayNameMap','BORRAR');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESEDIT_BATCH_TASK_DESC','4','EDIT_BATCH_TASK','ResourceEntity.displayNameMap','Editar Tarea Programada');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESEDIT_GROUP_DESC','4','EDIT_GROUP','ResourceEntity.displayNameMap','Editar Grupo');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESEDIT_ORG_DESC','4','EDIT_ORG','ResourceEntity.displayNameMap','Editar Organización');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESEDIT_ORG_MEMBERSHIP_DESC','4','EDIT_ORG_MEMBERSHIP','ResourceEntity.displayNameMap','Mimembro de');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESEDIT_ORG_TYPE_DESC','4','EDIT_ORG_TYPE','ResourceEntity.displayNameMap','Editar Tipo de Organización');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESEDIT_ORG_TYPE_IDMAN_DESC','4','EDIT_ORG_TYPE_IDMAN','ResourceEntity.displayNameMap','Tipos de Organización');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESEDIT_POLICY_ATTR_SRCH_BCK_DESC','4','EDIT_POLICY_ATTR_SRCH_BCK','ResourceEntity.displayNameMap','Volver a la Busqueda');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESEDIT_RESOURCE_DIS','4','EDIT_RESOURCE','ResourceEntity.displayNameMap','Edit Resource');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESEDIT_ROLE_DESC','4','EDIT_ROLE','ResourceEntity.displayNameMap','Editar Rol');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity29','4','FILE','MetadataTypeEntity.displayNameMap','Archivo');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity30','4','GOOGLE_Connector','MetadataTypeEntity.displayNameMap','Conector GOOGLE APPS');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESGROUP_EDIT_MENU_DESC','4','GROUP_EDIT_MENU','ResourceEntity.displayNameMap','Menú Root Edición de Grupos');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESGROUP_ENTITLEMENTS_DESC','4','GROUP_ENTITLEMENTS','ResourceEntity.displayNameMap','Derechos de Grupo');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESGROUP_MENUS_DESC','4','GROUP_MENUS','ResourceEntity.displayNameMap','Menus');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESGROUP_ROOT_MENU_DESC','4','GROUP_ROOT_MENU','ResourceEntity.displayNameMap','Menu Root de Grupos');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESGROUP_SEARCH_DESC','4','GROUP_SEARCH','ResourceEntity.displayNameMap','Busqueda de Grupo');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESGRP_APROVER_ASSOC_DN','4','GRP_APROVER_ASSOC','ResourceEntity.displayNameMap','Aprobador de Asociaciones');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity31','4','HOME_ADDRESS','MetadataTypeEntity.displayNameMap','Dirección de Casa Particular');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity32','4','HOME_EMAIL','MetadataTypeEntity.displayNameMap','Email Personal');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity33','4','HOME_PHONE','MetadataTypeEntity.displayNameMap','Teléfono Personal');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESIDM_MENU_DISPLAY','4','IDM','ResourceEntity.displayNameMap','Identidad');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESIDMAN_MENU_DISPLAY','4','IDMAN','ResourceEntity.displayNameMap','Usuario Administrador');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESIDQUEST_MENU_DISPLAY','4','IDQUEST','ResourceEntity.displayNameMap','Pregunta de seguridad');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESIMPERSIONATION_MENU_DESC','4','IMPERSIONATION_MENU','ResourceEntity.displayNameMap','Suplantación');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity34','4','INACTIVE','MetadataTypeEntity.displayNameMap','INACTIVO');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity35','4','InetOrgPerson','MetadataTypeEntity.displayNameMap','InetOrgPerson Tipo de Usuario');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESINTERNAL_USER_TYPE','4','INTERNAL_USER','MetadataTypeEntity.displayNameMap','Usuario Interno');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity36','4','KERBEROS_KEYTAB_FILE','MetadataTypeEntity.displayNameMap','Archivo Keytab Kerberos');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity37','4','KERBEROS_SERVICE_NAME','MetadataTypeEntity.displayNameMap','Nombre de Servicio Kerberos');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESLANGUAGE_ADMIN1','4','LANGUAGE_ADMIN','ResourceEntity.displayNameMap','Lenguaje');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESLANGUAGE_EDIT1','4','LANGUAGE_EDIT','ResourceEntity.displayNameMap','Nuevo Lenguaje');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESLANGUAGE_SEARCH1','4','LANGUAGE_SEARCH','ResourceEntity.displayNameMap','Lenguaje');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity38','4','LdapOrgPerson','MetadataTypeEntity.displayNameMap','Tipo de Usuario LdapOrgPerson');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity39','4','LDAP_Connector','MetadataTypeEntity.displayNameMap','Conector LDAP');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity40','4','LDAP_GROUP_TYPE','MetadataTypeEntity.displayNameMap','TIPO DE GRUPO LDAP');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity41','4','LEAVE','MetadataTypeEntity.displayNameMap','DEJAR');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity42','4','LINUX_Connector','MetadataTypeEntity.displayNameMap','Conector Linux');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESLOCATION_MENU_DISPLAY','4','LOCATION','ResourceEntity.displayNameMap','Localización');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity43','4','LOCKED','MetadataTypeEntity.displayNameMap','BLOQUEADO');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity44','4','LOCKED_ADMIN','MetadataTypeEntity.displayNameMap','LOCKED_ADMIN');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity45','4','MANAGED_SYS','MetadataTypeEntity.displayNameMap','Sistema Gestionado');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMANAGED_SYS','4','MANAGED_SYS','ResourceTypeEntity.displayNameMap','Sistemas Gestionados');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity46','4','MANAGER','MetadataTypeEntity.displayNameMap','MANAGER');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMANAGEREQ_MENU_DISPLAY','4','MANAGEREQ','ResourceEntity.displayNameMap','Consulta de Historial');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMANUALRECON_DESC','4','MANUALRECON','ResourceEntity.displayNameMap','Conciliación Manual');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMENUS_SEARCH_DC','4','MENUS_SEARCH','ResourceEntity.displayNameMap','Menus');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity47','4','MENU_ITEM','MetadataTypeEntity.displayNameMap','Tipo de elemento de Menú');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMENU_ITEM','4','MENU_ITEM','ResourceTypeEntity.displayNameMap','Menus');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMETADATA_MENU_DISPLAY','4','METADATA','ResourceEntity.displayNameMap','Metadata');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMETA_ADMIN_DESC','4','META_ADMIN','ResourceEntity.displayNameMap','Elementos Metadata');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMETA_EDIT_DESC','4','META_EDIT','ResourceEntity.displayNameMap','Nuevo MetaData');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMETA_SEARCH_DESC','4','META_SEARCH','ResourceEntity.displayNameMap','Buscar MetaData');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMETA_TYPE_ADMIN_DESC','4','META_TYPE_ADMIN','ResourceEntity.displayNameMap','Tipos Metadata');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMETA_TYPE_EDIT_DESC','4','META_TYPE_EDIT','ResourceEntity.displayNameMap','Nuevo Tipo MetaData');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMETA_TYPE_EDIT_RETURN_DESC','4','META_TYPE_EDIT_RETURN','ResourceEntity.displayNameMap','Volver a Tipo Metadata');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMETA_TYPE_SEARCH_DESC','4','META_TYPE_SEARCH','ResourceEntity.displayNameMap','Buscar Tipo MetaData');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMNGSYS_MENU_DISPLAY','4','MNGSYS','ResourceEntity.displayNameMap','Sistema Gestionado');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMNGSYSRULES_DESC','4','MNGSYSRULES','ResourceEntity.displayNameMap','Reglas Sist. Gest.');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMNGSYS_EDIT_DESC','4','MNGSYS_EDIT','ResourceEntity.displayNameMap','Editar Sist. Gest.');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMNGSYS_DESC','4','MNGSYS_MENU_ITEM','ResourceEntity.displayNameMap','Sistemas Gestionados');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMNGSYS_DSC','4','MNGSYS_NEW','ResourceEntity.displayNameMap','Crear Sist. Gestionado');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMNG_SYS_VIEWER_DESC','4','MNG_SYS_VIEWER','ResourceEntity.displayNameMap','Visor sist. gestionado');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity48','4','MULTI_SELECT','MetadataTypeEntity.displayNameMap','Lista MultiSelección');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESNEWUSER_MENU_DISPLAY','4','NEWUSER','ResourceEntity.displayNameMap','Nuevo Usuario');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESNEWUSER-NOAPPRV_MENU_DISPLAY','4','NEWUSER-NOAPPRV','ResourceEntity.displayNameMap','Nuevo Usuario-NO Aprovador');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESNEW_AUTHENTICATION_POLICY_DESC','4','NEW_AUTHENTICATION_POLICY','ResourceEntity.displayNameMap','Nueva Pol. Autenticación');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESNEW_AUTH_LVL_GRP_DN','4','NEW_AUTH_LVL_GRP','ResourceEntity.displayNameMap','Crear Nueva Agrupación');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESNEW_BATCH_TASK_DESC','4','NEW_BATCH_TASK','ResourceEntity.displayNameMap','Nueva Tarea Programada');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESNEW_GROUP_DESC','4','NEW_GROUP','ResourceEntity.displayNameMap','Crear Nuevo Grupo');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESNEW_ORG_DESC','4','NEW_ORG','ResourceEntity.displayNameMap','Crear Nueva Organización');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESNEW_ORG_TYPE_DESC','4','NEW_ORG_TYPE','ResourceEntity.displayNameMap','Nuevo Tipo Org.');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESNEW_PASSWORD_POLICY_DESC','4','NEW_PASSWORD_POLICY','ResourceEntity.displayNameMap',' Nueva Pol. de Contraseñas');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESNEW_POLICY_ATTR_DESC','4','NEW_POLICY_ATTR','ResourceEntity.displayNameMap','Nueva Política de Atributos');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESNEW_ROLE_DESC','4','NEW_ROLE','ResourceEntity.displayNameMap','Crear Nuevo Rol');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESNEW_UI_THEME_DN','4','NEW_UI_THEME','ResourceEntity.displayNameMap','Nuevo Tema UI');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESNEW_USER_DESC','4','NEW_USER','ResourceEntity.displayNameMap','Crear Nuevo Usuario');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity49','4','NO-PROVISION-APP','MetadataTypeEntity.displayNameMap','Aplicacions No Provisionables');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity50','4','OFF-LINE','MetadataTypeEntity.displayNameMap','OFF-LINE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity51','4','OFFICE_ADDRESS','MetadataTypeEntity.displayNameMap','Dirección Oficina');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity52','4','OFFICE_PHONE','MetadataTypeEntity.displayNameMap','Teléfono Oficina');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESORG_MENU_DISPLAY','4','ORG','ResourceEntity.displayNameMap','Organización');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESORGANIZATION','4','ORGANIZATION','OrganizationTypeEntity.displayNameMap','Organización');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESORGANIZATION_EDIT_ID_DESC','4','ORGANIZATION_EDIT_ID','ResourceEntity.displayNameMap','Menús Edición de Organización');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESORGANIZATION_ROOT_ID_DESC','4','ORGANIZATION_ROOT_ID','ResourceEntity.displayNameMap','Menús Root de Organización');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity53','4','OrgOpenIAM','MetadataTypeEntity.displayNameMap','OpenIAM');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESORG_APROVER_ASSOC_DN','4','ORG_APROVER_ASSOC','ResourceEntity.displayNameMap','Validadores');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESORG_MEMBERSHIP_DESC','4','ORG_MEMBERSHIP','ResourceEntity.displayNameMap','Miembro de Organización');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESORG_SEARCH_DESC','4','ORG_SEARCH','ResourceEntity.displayNameMap','Buscar Organización');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESORG_TYPE_EDIT_SEARCH_DESC','4','ORG_TYPE_EDIT_SEARCH','ResourceEntity.displayNameMap','Buscar Tipos Org.');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESORG_TYPE_SEARCH_DESC','4','ORG_TYPE_SEARCH','ResourceEntity.displayNameMap','Buscar Tipos Org.');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESORG_TYPE_SUBMENU_EDIT_DESC','4','ORG_TYPE_SUBMENU_EDIT','ResourceEntity.displayNameMap','Editar Tipo de Organización');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESORG_TYPE_SUBMENU_ROOT_DESC','4','ORG_TYPE_SUBMENU_ROOT','ResourceEntity.displayNameMap','Tipo Root de Organización');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESPAGE_TEMPLATE_EDIT_DESC','4','PAGE_TEMPLATE_EDIT','ResourceEntity.displayNameMap','Menú Edición de Plantilla de Página');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESPAGE_TEMPLATE_EDIT_NEW_DESC','4','PAGE_TEMPLATE_EDIT_NEW','ResourceEntity.displayNameMap','Crear Nueva Plantilla');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESPAGE_TEMPLATE_EDIT_SEARCH_DESC','4','PAGE_TEMPLATE_EDIT_SEARCH','ResourceEntity.displayNameMap','Volver a la Busqueda');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESPAGE_TEMPLATE_NEW_DSC','4','PAGE_TEMPLATE_NEW','ResourceEntity.displayNameMap','Create New Plantilla');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESPAGE_TEMPLATE_ROOT_DESC','4','PAGE_TEMPLATE_ROOT','ResourceEntity.displayNameMap','Menu Root de Plantilla de Página');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESPAGE_TEMPLATE_SEARCH_DESC','4','PAGE_TEMPLATE_SEARCH','ResourceEntity.displayNameMap','Buscar Plantillas de Página');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity54','4','PASSWORD','MetadataTypeEntity.displayNameMap','Campo Contraseña');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESPOLICY_MENU_DESC','4','PASSWORD_POLICY','ResourceEntity.displayNameMap','Política Contraseña');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESPASSWORD_POLICY_EDIT_DESC','4','PASSWORD_POLICY_EDIT','ResourceEntity.displayNameMap','Menú Root de Asociación de Política');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESPOLICY_ROOT_MENU_DESC','4','PASSWORD_POLICY_ROOT_MENU','ResourceEntity.displayNameMap','Menú Root de Política de Contraseña');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity55','4','PENDING_APPROVAL','MetadataTypeEntity.displayNameMap','PENDING_APPROVAL');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity56','4','PENDING_INITIAL_LOGIN','MetadataTypeEntity.displayNameMap','PENDING_INITIAL_LOGIN');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity57','4','PENDING_START_DATE','MetadataTypeEntity.displayNameMap','PENDING_START_DATE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity58','4','PENDING_USER_VALIDATION','MetadataTypeEntity.displayNameMap','PENDING_USER_VALIDATION');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity59','4','PERM FULL TIME','MetadataTypeEntity.displayNameMap','TIEMPO COMPLETO PERMANENTE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity60','4','PERM PART TIME','MetadataTypeEntity.displayNameMap','TIEMPO PARCIAL PERMANENTE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESPOLICY_ATTR_EDIT_ROOTT_DESC','4','POLICY_ATTR_EDIT_ROOT','ResourceEntity.displayNameMap','Menú Root de Edición de Política de Atributo');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESPOLICY_ATTR_ROOT_DESC','4','POLICY_ATTR_ROOT','ResourceEntity.displayNameMap','Menu Root de Política de Atributo');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity61','4','PRIMARY_EMAIL','MetadataTypeEntity.displayNameMap','Email Primario');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESPROFILE_MENU_DISPLAY','4','PROFILE','ResourceEntity.displayNameMap','Editar su Perfil');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESPROVCONNECT_MENU_DISPLAY','4','PROVCONNECT','ResourceEntity.displayNameMap','Conectores');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESPROVCONNECT_DESC','4','PROVCONNECT_MENU_ITEM','ResourceEntity.displayNameMap','Aprovisionamiento de Conectores');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESPROVISIONING_MENU_DISPLAY','4','PROVISIONING','ResourceEntity.displayNameMap','Aprovisionamiento');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESPROV_CONNECTOR_DSC','4','PROV_CONNECTOR_NEW','ResourceEntity.displayNameMap','Crear Nuevo Conector');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity62','4','RADIO','MetadataTypeEntity.displayNameMap','Botón Radio');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity63','4','RDBMS_Connector','MetadataTypeEntity.displayNameMap','Conector RDBMS');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity64','4','READY','MetadataTypeEntity.displayNameMap','LISTO');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESREPORT_MENU_DISPLAY','4','REPORT','ResourceEntity.displayNameMap','Administrar Informes');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESREQINBOX_MENU_DISPLAY','4','REQINBOX','ResourceEntity.displayNameMap','In-Box');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESREQUEST_APPROVAL_DESC','4','REQUEST_APPROVAL','ResourceEntity.displayNameMap','Solicitud de Aprovación');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESRESOURCE_EDIT_PAGE_ROOT_DIS','4','RESOURCE_EDIT_PAGE_ROOT','ResourceEntity.displayNameMap','Recurso de Edción de Página Root');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESRESPOLICYMAP_MENU_DISPLAY','4','RESPOLICYMAP','ResourceEntity.displayNameMap','Mapa de Política');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESRESRECONCILE_MENU_DISPLAY','4','RESRECONCILE','ResourceEntity.displayNameMap','Reconciliación');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESRESSUMMARY_MENU_DISPLAY','4','RESSUMMARY','ResourceEntity.displayNameMap','Buscar Recurso');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESRES_APROVER_ASSOC_DN','4','RES_APROVER_ASSOC','ResourceEntity.displayNameMap','Validadores');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESRES_ENT_SUB_DIS','4','RES_ENT_SUB','ResourceEntity.displayNameMap','Derechos');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESRES_TYPE_DESC','4','RES_TYPE_ITEM','ResourceEntity.displayNameMap','Tipos de Recurso');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESRES_TYPE_NEW_DESC','4','RES_TYPE_NEW','ResourceEntity.displayNameMap','Nuevo Tipo de Recurso');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity65','4','RETIRED','MetadataTypeEntity.displayNameMap','RETIRADO');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity66','4','RJ','MetadataTypeEntity.displayNameMap','RECHAZADO');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESROLE_APROVER_ASSOC_DN','4','ROLE_APROVER_ASSOC','ResourceEntity.displayNameMap','Validadores');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESROLE_EDIT_MENU_DESC','4','ROLE_EDIT_MENU','ResourceEntity.displayNameMap','Menú Edición de Rol Root');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESROLE_ENTITLEMENTS_DESC','4','ROLE_ENTITLEMENTS','ResourceEntity.displayNameMap','Derechos de Rol');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESROLE_MENUS_DESC','4','ROLE_MENUS','ResourceEntity.displayNameMap','Menús');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESROLE_ROOT_MENU_DESC','4','ROLE_ROOT_MENU','ResourceEntity.displayNameMap','Menú Root de Rol');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESROLE_SEARCH_DESC','4','ROLE_SEARCH','ResourceEntity.displayNameMap','Busqueda de Rol');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity67','4','SALES REP','MetadataTypeEntity.displayNameMap','Representante de Ventas');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity68','4','SCRIPT_Connector','MetadataTypeEntity.displayNameMap','Conector de Script');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSEARCH_BATCH_EDIT_DESC','4','SEARCH_BATCH_EDIT','ResourceEntity.displayNameMap','Buscar Tareas Prog.');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSEARCH_BATCH_NEW_DESC','4','SEARCH_BATCH_NEW','ResourceEntity.displayNameMap','Buscar Tareas Prog.');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity69','4','SECURITY MANAGER','MetadataTypeEntity.displayNameMap','GESTOR DE SEGURIDAD');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSECURITY_GROUP_MENU_DISPLAY','4','SECURITY_GROUP','ResourceEntity.displayNameMap','Grupo');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSECURITY_POLICY_MENU_DISPLAY','4','SECURITY_POLICY','ResourceEntity.displayNameMap','Política');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSECURITY_RES_MENU_DISPLAY','4','SECURITY_RES','ResourceEntity.displayNameMap','Recurso');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSECURITY_ROLE_MENU_DISPLAY','4','SECURITY_ROLE','ResourceEntity.displayNameMap','Rol');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity70','4','SELECT','MetadataTypeEntity.displayNameMap','Combo box');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFCENTER_MENU_DISPLAY','4','SELFCENTER','ResourceEntity.displayNameMap','Centro de AutoServicio');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSERVE_SUP_SUB_DESC','4','SELFSERVE_SUP_SUB','ResourceEntity.displayNameMap','Superiores y Subordinados');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSERVICE_MENU_DISPLAY','4','SELFSERVICE','ResourceEntity.displayNameMap','AUTO SERVICIO');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSERVICE_EXT_DN','4','SELFSERVICE_EXT','ResourceEntity.displayNameMap','Extension Root De AutoServicio');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSERVICE_GROUPS_DN','4','SELFSERVICE_GROUPS','ResourceEntity.displayNameMap','Grupos');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSERVICE_MYAPPS_DESC','4','SELFSERVICE_MYAPPS','ResourceEntity.displayNameMap','Mis Aplicaciones');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSERVICE_MYINFO_DESC','4','SELFSERVICE_MYINFO','ResourceEntity.displayNameMap','Mi Información');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSERVICE_REPORT_DESC','4','SELFSERVICE_REPORT','ResourceEntity.displayNameMap','Informe');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSERVICE_RESOURCES_DN','4','SELFSERVICE_RESOURCES','ResourceEntity.displayNameMap','Recruso');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSERVICE_ROLES_DN','4','SELFSERVICE_ROLES','ResourceEntity.displayNameMap','Roles');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSS_ACCESS_REVIEW_DESC','4','SELFSERV_ACCESS_REVIEW','ResourceEntity.displayNameMap','Revisión de Acceso');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSERV_GRP_BACK_SRCH_DN','4','SELFSERV_GRP_BACK_SRCH','ResourceEntity.displayNameMap','Volver a la Busqueda');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSERV_GRP_EDIT_DN','4','SELFSERV_GRP_EDIT','ResourceEntity.displayNameMap','Edit Grupo');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSERV_GRP_NEW_DN','4','SELFSERV_GRP_NEW','ResourceEntity.displayNameMap','Create Nuevo Grupo');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSERV_ROLE_NEW_DN','4','SELFSERV_ROLE_NEW','ResourceEntity.displayNameMap','Crear Nuevo Rol');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSERV_USER_EDIT_DESC','4','SELFSERV_USER_EDIT','ResourceEntity.displayNameMap','Edit User');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSS_USR_EDIT_RT_DESC','4','SELFSERV_USER_EDIT_ROOT','ResourceEntity.displayNameMap','Editar Usuario Root de AutoServicio');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSERV_USER_MEMSHP_DES','4','SELFSERV_USER_MEMSHP','ResourceEntity.displayNameMap','Derechos de Usuario');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSER_USER_LOGIN_DESC','4','SELFSER_USER_LOGIN','ResourceEntity.displayNameMap','Identidades');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSER_USER_NEW_LOGIN_DESC','4','SELFSER_USER_NEW_LOGIN','ResourceEntity.displayNameMap','Crear Nueva Identidad');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSRVS_ACCESS_MNG_ORG_DESC','4','SELFSRVS_ACCESS_MNGMNT_ORG','ResourceEntity.displayNameMap','Organizaciones');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSRV_EXAMPLE_DN','4','SELFSRV_EXAMPLE','ResourceEntity.displayNameMap','Ejemplo');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSRV_GRP_EDIT_ROOT_DESC','4','SELFSRV_GRP_EDIT_ROOT','ResourceEntity.displayNameMap','Edición Grupo AutoServicio Root');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSRV_GRP_SRCH_ROOT_DESC','4','SELFSRV_GRP_SRCH_ROOT','ResourceEntity.displayNameMap','Grupo AutoServicio Root');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSRV_RES_BACK_SRCH_DN','4','SELFSRV_RES_BACK_SRCH','ResourceEntity.displayNameMap','Volver a la Busqueda');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSRV_RES_EDIT_DN','4','SELFSRV_RES_EDIT','ResourceEntity.displayNameMap','Edit Recurso');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSRV_RES_EDIT_ROOT_DESC','4','SELFSRV_RES_EDIT_ROOT','ResourceEntity.displayNameMap','Edición de AutoServicio de Recursos Root');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSRV_RES_NEW_DN','4','SELFSRV_RES_NEW','ResourceEntity.displayNameMap','Crear Recurso Nuevo');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSRV_RES_SRCH_ROOT_DN','4','SELFSRV_RES_SRCH_ROOT','ResourceEntity.displayNameMap','Recurso de AutoServicio Root');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSRV_ROLE_BACK_SRCH_DN','4','SELFSRV_ROLE_BACK_SRCH','ResourceEntity.displayNameMap','Volver a la Busqueda');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSRV_ROLE_EDIT_DN','4','SELFSRV_ROLE_EDIT','ResourceEntity.displayNameMap','Editar Rol');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSRV_ROLE_EDIT_ROOT_DESC','4','SELFSRV_ROLE_EDIT_ROOT','ResourceEntity.displayNameMap','Editar Rol de AutoServicio Root');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELFSRV_ROLE_SRCH_ROOT_DN','4','SELFSRV_ROLE_SRCH_ROOT','ResourceEntity.displayNameMap','Rol AutoServicio Root');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELF_QUERYUSER_MENU_DISPLAY','4','SELF_QUERYUSER','ResourceEntity.displayNameMap','Administrar Usuaruio');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELF_SUB_ORGS_EDIT_DESC','4','SELF_SUB_ORGS_EDIT','ResourceEntity.displayNameMap','Editar Organización');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELF_SUB_ORGS_NEW_DESC','4','SELF_SUB_ORGS_NEW','ResourceEntity.displayNameMap','Nueva Organización');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELF_SUB_ORGS_SEARCH_DESC','4','SELF_SUB_ORGS_SEARCH','ResourceEntity.displayNameMap','Buscar Organización');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELF_SUB_REPORT_NEW_DSC','4','SELF_SUB_REPORT_NEW','ResourceEntity.displayNameMap','Subscribirse al Informe');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELF_SUB_REPORT_ROOT_DESC','4','SELF_SUB_REPORT_ROOT','ResourceEntity.displayNameMap','Menú Root Subscribirse al Informe');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELF_VIEW_REPORT_NEW_DSC','4','SELF_VIEW_REPORT_NEW','ResourceEntity.displayNameMap','Crear Nueva Vista de Informe');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSELF_VIEW_REPORT_ROOT_DESC','4','SELF_VIEW_REPORT_ROOT','ResourceEntity.displayNameMap','Menú Root Ver Informe');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity71','4','SERVICE REP','MetadataTypeEntity.displayNameMap','REPRESENTANTE DE SERVICIO');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity72','4','SOAP_Connector','MetadataTypeEntity.displayNameMap','Conector SOAP');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSS_GRP_ENT_DN','4','SS_GRP_ENT','ResourceEntity.displayNameMap','Derechos');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSS_ORG_BACK_SEARCH_DN','4','SS_ORG_BACK_SEARCH','ResourceEntity.displayNameMap','Volver a la Busqueda');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSS_RES_ENT_DN','4','SS_RES_ENT','ResourceEntity.displayNameMap','Derechos');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSS_ROLE_ENT_DN','4','SS_ROLE_ENT','ResourceEntity.displayNameMap','Derechos');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSUBSCRIBE_MENU_DESC','4','SUBSCRIBE','ResourceEntity.displayNameMap','Subscribirse');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSUBSIDIARY','4','SUBSIDIARY','OrganizationTypeEntity.displayNameMap','Subsidiario');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSUP_SUB_PAGE_DIS','4','SUP_SUB_PAGE','ResourceEntity.displayNameMap','Superiores y Subordinados');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSYNCLOG_ADMIN_DESC','4','SYNCLOG','ResourceEntity.displayNameMap','Visor de Log');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSYNCLOG_DESC','4','SYNCLOG_MENU_ITEM','ResourceEntity.displayNameMap','Transacción de Sincronización de Visor de Log');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSYNCUSER_MENU_DISPLAY','4','SYNCUSER','ResourceEntity.displayNameMap','Sincronización');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSYNCUSER_EDIT_DESC','4','SYNCUSER_EDIT','ResourceEntity.displayNameMap','Editar Sincronización');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSYNCUSER_DESC','4','SYNCUSER_MENU_ITEM','ResourceEntity.displayNameMap','Sincronización');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSYNCUSER_NEW_DESC','4','SYNCUSER_NEW','ResourceEntity.displayNameMap','Crear Sincronización');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSYNCUSER_POLICYMAP_DESC','4','SYNCUSER_POLICYMAP','ResourceEntity.displayNameMap','Mapa de Política');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity73','4','SYS ACCOUNT','MetadataTypeEntity.displayNameMap','CUENTA DE SISTEMA');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity74','4','SystemAccount','MetadataTypeEntity.displayNameMap','Tipo de Cuenta de Sistema');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity75','4','SYS_ACTION','MetadataTypeEntity.displayNameMap','Acciones de Sistema');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESSYS_ACTION','4','SYS_ACTION','ResourceTypeEntity.displayNameMap','Acción de Sistema');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESTEMPLATE_SEARCH_CHILD_DESC','4','TEMPLATE_SEARCH_CHILD','ResourceEntity.displayNameMap','Plantilla de página');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity76','4','TERMINATE','MetadataTypeEntity.displayNameMap','FINALIZAR');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity77','4','TEXT','MetadataTypeEntity.displayNameMap','Campo Texto');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity78','4','TEXTAREA','MetadataTypeEntity.displayNameMap','Campo Multilinea de Texto');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity79','4','UB','MetadataTypeEntity.displayNameMap','NO-DESHABILITADO');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity80','4','UI_TEMPLATE','MetadataTypeEntity.displayNameMap','UI_Plantilla');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESUI_TEMPLATE','4','UI_TEMPLATE','ResourceTypeEntity.displayNameMap','UI Plantilla');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESUI_THEMES_DN','4','UI_THEMES','ResourceEntity.displayNameMap','UI Temas');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESUI_THEME_BACK_SRCH_DN','4','UI_THEME_BACK_SRCH','ResourceEntity.displayNameMap','Volver a la Busqueda');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESUI_THEME_EDIT_DN','4','UI_THEME_EDIT','ResourceEntity.displayNameMap','Editar Tema UI');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESUI_THEME_EDIT_MODIFY_DN','4','UI_THEME_EDIT_MODIFY','ResourceEntity.displayNameMap','Editar Tema UI');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESUI_THEME_ROOT_DN','4','UI_THEME_ROOT','ResourceEntity.displayNameMap','Tema Root UI');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESUI_THEME_ROOT_SRCH_DN','4','UI_THEME_ROOT_SRCH','ResourceEntity.displayNameMap','Buscar Tema UI');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity81','4','UI_WIDGET','MetadataTypeEntity.displayNameMap','UI_WIDGET');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESUI_WIDGET','4','UI_WIDGET','ResourceTypeEntity.displayNameMap','UI Widget');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESUPLOAD_CUST_PSWD_POLICY_DESC','4','UPLOAD_CUST_PSWD_POLICY','ResourceEntity.displayNameMap','Config. Pol. de Contraseña');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESURI_META_BACK_DESC','4','URI_META_BACK','ResourceEntity.displayNameMap','Volver al Patrón');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESURI_META_EDIT_DESC','4','URI_META_EDIT','ResourceEntity.displayNameMap','URI Meta Root Item');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESURI_PATTERN_EDIT_DESC','4','URI_PATTERN_EDIT','ResourceEntity.displayNameMap','URI Ptrón de Edición Menú');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESURI_PATTERN_EDNW_PATTERN_DESC','4','URI_PATTERN_EDIT_NEW_PATTERN','ResourceEntity.displayNameMap','Crear Patrón URI');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESURI_PATTERN_EDIT_PATTERN_DESC','4','URI_PATTERN_EDIT_PATTERN','ResourceEntity.displayNameMap','Editar Patrón URI');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESURI_PATRN_EDT_PROV_SEARCH_DESC','4','URI_PATTERN_EDT_PROV_SEARCH','ResourceEntity.displayNameMap','Buscar Proveedor');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity82','4','URL','MetadataTypeEntity.displayNameMap','URL');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity83','4','URL_PATTERN','MetadataTypeEntity.displayNameMap','Patrón Url');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESURL_PATTERN','4','URL_PATTERN','ResourceTypeEntity.displayNameMap','Patrón Url');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESUSER_MENU_DESC','4','USER','ResourceEntity.displayNameMap','Usuario');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESUSER_ATTRIBUTES_DESC','4','USER_ATTRIBUTES','ResourceEntity.displayNameMap','Atributos de Usuario');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESUSER_BULK_MENU_DISPLAY','4','USER_BULK','ResourceEntity.displayNameMap','Operaciones masivas');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESUSER_DELEGATION_DESC','4','USER_DELEGATION','ResourceEntity.displayNameMap','Administración delegada');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESUSER_EDIT_CONTACT_INFO_DESC','4','USER_EDIT_CONTACT_INFO','ResourceEntity.displayNameMap','Información de Contacto');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESUSER_EDIT_INFO_DESC','4','USER_EDIT_INFO','ResourceEntity.displayNameMap','Información de Usuario');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESUSER_EDIT_MENU_DESC','4','USER_EDIT_MENU','ResourceEntity.displayNameMap','Menú Root Edición de Usuario');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESUSER_ENTITLEMENTS_DESC','4','USER_ENTITLEMENTS','ResourceEntity.displayNameMap','Derechos de Usuario');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESUSER_HISTORY_DESC','4','USER_HISTORY','ResourceEntity.displayNameMap','Historial de Usuario');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESUSER_IDENTITY_DESC','4','USER_IDENTITY','ResourceEntity.displayNameMap','Identidades de Usuario');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESUSER_MENUS_DESC','4','USER_MENUS','ResourceEntity.displayNameMap','Menús');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESUSER_RESET_PASSWORD_DESC','4','USER_RESET_PASSWORD','ResourceEntity.displayNameMap','Resetear Contraseña');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESUSER_ROOT_MENU_DESC','4','USER_ROOT_MENU','ResourceEntity.displayNameMap','Menú Root de Usuario');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESUSER_SEARCH_DESC','4','USER_SEARCH','ResourceEntity.displayNameMap','Buscar Usuario');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity84','4','VENDOR','MetadataTypeEntity.displayNameMap','VENDEDOR');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESVIEW_MENU_DESC','4','VIEW','ResourceEntity.displayNameMap','Vista');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity85','4','WEBSERVICE','MetadataTypeEntity.displayNameMap','Servicio Web');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity86','4','WEBSERVICE_OP','MetadataTypeEntity.displayNameMap','Operación de Servicio Web');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESWEB_REPORT_DESC','4','WEB_REPORT','ResourceEntity.displayNameMap','Informe');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESWEB_REPORT_NEW_DSC','4','WEB_REPORT_NEW','ResourceEntity.displayNameMap','Crear Nuevo Informe');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESWEB_REPORT_ROOT_DESC','4','WEB_REPORT_ROOT','ResourceEntity.displayNameMap','Menú Root de Informe');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESMetadataTypeEntity87','4','WORK_EMAIL','MetadataTypeEntity.displayNameMap','Email de Trabajo');

commit;
use openiam;

delete from RESOURCE_GROUP where RESOURCE_ID='UPLOAD_CUST_PSWD_POLICY';
delete from RESOURCE_ROLE where RESOURCE_ID='UPLOAD_CUST_PSWD_POLICY';
delete from RESOURCE_USER where RESOURCE_ID='UPLOAD_CUST_PSWD_POLICY';
delete from RESOURCE_PROP where RESOURCE_ID='UPLOAD_CUST_PSWD_POLICY';
delete from res_to_res_membership where MEMBER_RESOURCE_ID='UPLOAD_CUST_PSWD_POLICY' or RESOURCE_ID='UPLOAD_CUST_PSWD_POLICY';
delete from RES where RESOURCE_ID='UPLOAD_CUST_PSWD_POLICY';


commit;
use openiam;
ALTER TABLE USERS CHANGE COLUMN TYPE_ID TYPE_ID VARCHAR(32) NULL DEFAULT NULL;
ALTER TABLE USERS ADD CONSTRAINT USER_TYPE_FK FOREIGN KEY (TYPE_ID) REFERENCES METADATA_TYPE (TYPE_ID);

commit;
use openiam;

insert into POLICY_ATTRIBUTE(POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, REQUIRED) VALUES('PWD_EQ_PWD', '138', '4000', 'PWD_EQ_PWD', 'Y'); 

insert into POLICY_ATTRIBUTE(POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, REQUIRED) VALUES('PWD_PASSWORD', '183', '4000', 'PWD_PASSWORD', 'Y'); 

insert into POLICY_ATTRIBUTE(POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, NAME, REQUIRED) VALUES('RESET_BY_USER', '139', '4000', 'RESET_BY_USER', 'Y'); 

commit;
use openiam;

delete from LANGUAGE_LOCALE where LANGUAGE_ID='2';
delete from LANGUAGE_MAPPING where LANGUAGE_ID='2';
delete from LANGUAGE_MAPPING where LANGUAGE_ID in ('1','4') AND REFERENCE_ID='2' AND REFERENCE_TYPE like 'Language%';
delete from LANGUAGE where ID='2';


insert into LANGUAGE(ID, LANGUAGE,  IS_USED, LANGUAGE_CODE, IS_DEFAULT)
values ('2', 'German', 'Y', 'de', 'N');

insert into LANGUAGE_LOCALE(ID, LANGUAGE_ID,  LOCALE)
values ('11', '2', 'de_DE');

INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DELanguageEntity1','2','1','LanguageEntity.displayNameMap','Englisch');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DELanguageEntity2','2','2','LanguageEntity.displayNameMap','Deutsch');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate101','2','101','MetadataElementEntity.languageMap','Anzeigename');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate104','2','104','MetadataElementEntity.languageMap','Sprache');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate105','2','105','MetadataElementEntity.languageMap','Kraftfahrzeugzulassung');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate106','2','106','MetadataElementEntity.languageMap','Vorname');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate107','2','107','MetadataElementEntity.languageMap','LabeledURI');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate108','2','108','MetadataElementEntity.languageMap','Initialen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate110','2','110','MetadataElementEntity.languageMap','Geschaftskategorie');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate131','2','131','MetadataElementEntity.languageMap','Anzeigename');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate134','2','134','MetadataElementEntity.languageMap','Sprache');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate135','2','135','MetadataElementEntity.languageMap','Kraftfahrzeugzulassung');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate136','2','136','MetadataElementEntity.languageMap','Vorname');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate137','2','137','MetadataElementEntity.languageMap','+++LabeledURI');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate138','2','138','MetadataElementEntity.languageMap','Initialen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate140','2','140','MetadataElementEntity.languageMap','Anzeigename');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate150','2','150','MetadataElementEntity.languageMap','Anzeigename');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate160','2','160','MetadataElementEntity.languageMap','Anzeigename');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DE200','2','200','IdentityQuestionEntity.displayNameMap','Welches sind die letzten vier Zahlen Ihrer Reisepass-Nummer?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DE201','2','201','IdentityQuestionEntity.displayNameMap','Wie ist der Mädchenname Ihrer Mutter?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DE202','2','202','IdentityQuestionEntity.displayNameMap','Wo gingen Sie zur Schule?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DE203','2','203','IdentityQuestionEntity.displayNameMap','Wie ist der name Ihres Haustiers?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DE204','2','204','IdentityQuestionEntity.displayNameMap','Was ist Ihr Lieblingsessen?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DE205','2','205','IdentityQuestionEntity.displayNameMap','Welches ist Ihre Lieblingsfarbe?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DE206','2','206','IdentityQuestionEntity.displayNameMap','Wo ist Ihr Geburtsort?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DE207','2','207','IdentityQuestionEntity.displayNameMap','Welches ist Ihre Lieblingssportart?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DE209','2','209','IdentityQuestionEntity.displayNameMap','Welches sind die letzten vier Zahlen Ihrer Fahrerlaubnis-Nummer?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DE210','2','210','IdentityQuestionEntity.displayNameMap','Wie ist der Name Ihrer Lieblingsschule?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DE211','2','211','IdentityQuestionEntity.displayNameMap','Wie ist der Name Ihres Lieblingshaustiers?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DE212','2','212','IdentityQuestionEntity.displayNameMap','Wie ist der Name Ihres Lieblingsfilm, -theaterstück oder -lied?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DE213','2','213','IdentityQuestionEntity.displayNameMap','Wie ist der Titel Ihres Lieblingsbuch?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DE214','2','214','IdentityQuestionEntity.displayNameMap','Wie ist der Name Ihrer(s) ersten Freundin(es)?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DE215','2','215','IdentityQuestionEntity.displayNameMap','Wie ist der Name Ihres Lieblingslehrers während der Schulzeit?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DE216','2','216','IdentityQuestionEntity.displayNameMap','Wie war der Spitzname Ihres ersten Fahrzeuges?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DE217','2','217','IdentityQuestionEntity.displayNameMap','Wo traffen Sie Ihre bessere Hälfte?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DE218','2','218','IdentityQuestionEntity.displayNameMap','Welcher Art war Ihr erstes Haustier?');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate260','2','260','MetadataElementEntity.languageMap','BusinessCategory');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate261','2','261','MetadataElementEntity.languageMap','StartDate');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate262','2','262','MetadataElementEntity.languageMap','EndDate');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate300','2','300','MetadataElementEntity.languageMap','name');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate301','2','301','MetadataElementEntity.languageMap','distinguishedName');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate302','2','302','MetadataElementEntity.languageMap','objectclass');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate303','2','303','MetadataElementEntity.languageMap','aliasedObjectName');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate304','2','304','MetadataElementEntity.languageMap','cn');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate305','2','305','MetadataElementEntity.languageMap','sn');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate306','2','306','MetadataElementEntity.languageMap','serialNumber');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate307','2','307','MetadataElementEntity.languageMap','c');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate308','2','308','MetadataElementEntity.languageMap','l');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate309','2','309','MetadataElementEntity.languageMap','st');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate310','2','310','MetadataElementEntity.languageMap','street');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate311','2','311','MetadataElementEntity.languageMap','o');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate312','2','312','MetadataElementEntity.languageMap','ou');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate313','2','313','MetadataElementEntity.languageMap','title');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate314','2','314','MetadataElementEntity.languageMap','description');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate315','2','315','MetadataElementEntity.languageMap','businessCategory');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate316','2','316','MetadataElementEntity.languageMap','postalAddress');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate317','2','317','MetadataElementEntity.languageMap','postalCode');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate318','2','318','MetadataElementEntity.languageMap','postOfficeBox');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate319','2','319','MetadataElementEntity.languageMap','physicalDeliveryOfficeName');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate320','2','320','MetadataElementEntity.languageMap','telephoneNumber');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate321','2','321','MetadataElementEntity.languageMap','telexNumber');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate322','2','322','MetadataElementEntity.languageMap','teletexTerminalIdentifier');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate323','2','323','MetadataElementEntity.languageMap','facsimileTelephoneNumber');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate324','2','324','MetadataElementEntity.languageMap','x121Address');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate325','2','325','MetadataElementEntity.languageMap','internationaliSDNNumber');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate326','2','326','MetadataElementEntity.languageMap','registeredAddress');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate327','2','327','MetadataElementEntity.languageMap','destinationIndicator');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate328','2','328','MetadataElementEntity.languageMap','preferredDeliveryMethod');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate329','2','329','MetadataElementEntity.languageMap','presentationAddress');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate330','2','330','MetadataElementEntity.languageMap','supportedApplicationContext');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate331','2','331','MetadataElementEntity.languageMap','member');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate332','2','332','MetadataElementEntity.languageMap','owner');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate333','2','333','MetadataElementEntity.languageMap','roleOccupant');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate334','2','334','MetadataElementEntity.languageMap','seeAlso');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate335','2','335','MetadataElementEntity.languageMap','userPassword');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate336','2','336','MetadataElementEntity.languageMap','userCertificate');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate337','2','337','MetadataElementEntity.languageMap','cACertificate');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate338','2','338','MetadataElementEntity.languageMap','authorityRevocationList');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate339','2','339','MetadataElementEntity.languageMap','certificateRevocationList');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate340','2','340','MetadataElementEntity.languageMap','crossCertificatePair');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate341','2','341','MetadataElementEntity.languageMap','givenName');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate342','2','342','MetadataElementEntity.languageMap','initials');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate343','2','343','MetadataElementEntity.languageMap','generationQualifier');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate344','2','344','MetadataElementEntity.languageMap','x500UniqueIdentifier');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate346','2','346','MetadataElementEntity.languageMap','uniqueMember');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate347','2','347','MetadataElementEntity.languageMap','houseIdentifier');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate348','2','348','MetadataElementEntity.languageMap','uid');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate349','2','349','MetadataElementEntity.languageMap','mail');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate350','2','350','MetadataElementEntity.languageMap','ref');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate351','2','351','MetadataElementEntity.languageMap','referral');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate352','2','352','MetadataElementEntity.languageMap','krbName');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DELanguageEntity4','2','4','LanguageEntity.displayNameMap','Spanisch');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate401','2','401','MetadataElementEntity.languageMap','SUBMIT_USER_TO_CONNECTOR');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate402','2','402','MetadataElementEntity.languageMap','INCLUDE_IN_PASSWORD_SYNC');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate405','2','405','MetadataElementEntity.languageMap','INCLUDE_IN_SYNC');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate406','2','406','MetadataElementEntity.languageMap','TABLE_NAME');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate407','2','407','MetadataElementEntity.languageMap','GROUP_MEMBERSHIP_ENABLED');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate408','2','408','MetadataElementEntity.languageMap','ON_DELETE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate409','2','409','MetadataElementEntity.languageMap','PRE_PROCESS');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate410','2','410','MetadataElementEntity.languageMap','POST_PROCESS');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate411','2','411','MetadataElementEntity.languageMap','HOST_URL');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate412','2','412','MetadataElementEntity.languageMap','BASE_DN');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate413','2','413','MetadataElementEntity.languageMap','HOST_LOGIN ID');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate415','2','415','MetadataElementEntity.languageMap','COMMUNICATION_PROTOCOL');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate416','2','416','MetadataElementEntity.languageMap','OBJECT_CLASS');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate418','2','418','MetadataElementEntity.languageMap','SEARCH_ATTRIBUTE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate419','2','419','MetadataElementEntity.languageMap','MANAGED_SYS_ID');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate420','2','420','MetadataElementEntity.languageMap','DN_ATTRIBUTE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate421','2','421','MetadataElementEntity.languageMap','PASSWORD');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate430','2','430','MetadataElementEntity.languageMap','END_POINT');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate440','2','440','MetadataElementEntity.languageMap','OPERATION_NAME');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEElementMigrate450','2','450','MetadataElementEntity.languageMap','URL');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DELanguageEntity7','2','8','LanguageEntity.displayNameMap','Russisch');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEABOUT_DESC','2','ABOUT','ResourceEntity.displayNameMap','Über OpenIAM');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEABOUT_ROOT_MENU_DESC','2','ABOUT_ROOT_MENU','ResourceEntity.displayNameMap','Über OpenIAM');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEACCESSCENTER_MENU_DISPLAY','2','ACCESSCENTER','ResourceEntity.displayNameMap','Zugriffs-Verwaltung');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity1','2','ACCNT','MetadataTypeEntity.displayNameMap','Konto');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEACC_CONTROL_MENU_DISPLAY','2','ACC_CONTROL','ResourceEntity.displayNameMap','Zugriffs-Kontrolle');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity2','2','ACTIVE','MetadataTypeEntity.displayNameMap','AKTIV');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity3','2','ADGroup','MetadataTypeEntity.displayNameMap','AD Benutzertyp');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity4','2','ADMGP','MetadataTypeEntity.displayNameMap','Admin Gruppe');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity5','2','ADMIN','MetadataTypeEntity.displayNameMap','Administrator');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEADMIN_MENU_DISPLAY','2','ADMIN','ResourceEntity.displayNameMap','Administration');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEADMIN_BATCH_TASKS_DESC','2','ADMIN_BATCH_TASKS','ResourceEntity.displayNameMap','Stapelverarbeitungsaufgaben');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity6','2','ADMIN_RESOURCE','MetadataTypeEntity.displayNameMap','Admin Ressource');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEADMIN_RESOURCE','2','ADMIN_RESOURCE','ResourceTypeEntity.displayNameMap','Admin Ressource');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity7','2','ADUser','MetadataTypeEntity.displayNameMap','AD Benutzertyp');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity8','2','AD_Connector','MetadataTypeEntity.displayNameMap','Active Directory Konnektor');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity9','2','AD_GROUP_TYPE','MetadataTypeEntity.displayNameMap','AD GRUPPEN TYP');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity10','2','','MetadataTypeEntity.displayNameMap','PARTNER');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEAM_PROV_AM_ATTR_DESC','2','AM_PROV_AM_ATTR','ResourceEntity.displayNameMap','Anfrageattributes');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEAM_PROV_EDIT_DESC','2','AM_PROV_EDIT','ResourceEntity.displayNameMap','Authentication Provider Menu editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEAM_PROV_EDIT_CURRENT_DESC','2','AM_PROV_EDIT_CURRENT','ResourceEntity.displayNameMap','Provider editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEAM_PROV_EDIT_SEARCH_DESC','2','AM_PROV_EDIT_SEARCH','ResourceEntity.displayNameMap','Zurück zur Suche');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEAM_PROV_NEW_DSC','2','AM_PROV_NEW','ResourceEntity.displayNameMap','Neuer Provider erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEAM_PROV_NEW_EDIT_PUB_DESC','2','AM_PROV_NEW_EDIT','ResourceEntity.displayNameMap','Neuer Provider erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEAM_PROV_ROOT_DESC','2','AM_PROV_ROOT','ResourceEntity.displayNameMap','Authentication Provider Root Menu');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEAM_PROV_SEARCH_DESC','2','AM_PROV_SEARCH','ResourceEntity.displayNameMap','Suche Provider');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEAM_PROV_SEARCH_CHILD_PUB_DESC','2','AM_PROV_SEARCH_CHILD','ResourceEntity.displayNameMap','Authentication Provider');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity11','2','APPROVAL_DECLINED','MetadataTypeEntity.displayNameMap','GENEHMIGUNG_ABGELEHNT');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEASSOC_POLICY_DESC','2','ASSOC_POLICY','ResourceEntity.displayNameMap','ZUordnungsrichtlinien');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity12','2','ATTR','MetadataTypeEntity.displayNameMap','Attribute');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEATTRIBUTE_POLICY_DESC','2','ATTRIBUTE_POLICY','ResourceEntity.displayNameMap','Richtlinie für Attribute');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEAUDITREPORT_MENU_DISPLAY','2','AUDITREPORT','ResourceEntity.displayNameMap','Audit Berichte');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEAUDIT_RPT_MENU_DISPLAY','2','AUDIT_RPT','ResourceEntity.displayNameMap','Audit Report');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEAUTH_POLICY_MENU_DESC','2','AUTHENTICATION_POLICY','ResourceEntity.displayNameMap','Richtlinie für Authentifizierung
');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEAUTH_POLICY_ROOT_MENU_DESC','2','AUTHENTICATION_POLICY_ROOT_MENU','ResourceEntity.displayNameMap','Authentifizierung Richtlinien Root Menu');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity13','2','AUTHENTICATION_PROVIDER','MetadataTypeEntity.displayNameMap','Authentication Provider');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEAUTH_LEVEL_GRP_DN','2','AUTH_LEVEL_GRP','ResourceEntity.displayNameMap','Authentifizierungsgruppierung');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEAUTH_LVL_GRP_ATTR_DN','2','AUTH_LVL_GRP_ATTR','ResourceEntity.displayNameMap','Auth Level Gruppierung Attribut Root');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEAUTH_LVL_GRP_EDIT_ROOT_DN','2','AUTH_LVL_GRP_EDIT_ROOT','ResourceEntity.displayNameMap','Auth Level Gruppierung Root editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEAUTH_LVL_GRP_NEW_ROOT_DN','2','AUTH_LVL_GRP_NEW_ROOT','ResourceEntity.displayNameMap','Auth Level Gruppierung Root');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEAUTH_PROVIDER','2','AUTH_PROVIDER','ResourceTypeEntity.displayNameMap','Authentication Provider');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity14','2','AUTH_REPO','MetadataTypeEntity.displayNameMap','Authentication Repository');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEAUTH_REPO','2','AUTH_REPO','ResourceTypeEntity.displayNameMap','Authentication Repository');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEBACK_TO_AUTH_LVL_DN','2','BACK_TO_AUTH_LVL','ResourceEntity.displayNameMap','Zurück zur Gruppierung');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEBACK_TO_AUTH_LVL_GRP_SRH_DN','2','BACK_TO_AUTH_LVL_GRP_SRH','ResourceEntity.displayNameMap','Zurück zur Suche');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEBACK_TO_CP_DESC','2','BACK_TO_CP','ResourceEntity.displayNameMap','Zurück zum Content Provider');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEBATCH_PROC_MENU_DISPLAY','2','BATCH_PROC','ResourceEntity.displayNameMap','Stapelverarbeitung Prozesse');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEBATCH_TASK_EDIT_DESC','2','BATCH_TASK_EDIT','ResourceEntity.displayNameMap','Stapelverarbeitungaufgaben editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEBATCH_TASK_ROOT_DESC','2','BATCH_TASK_ROOT','ResourceEntity.displayNameMap','Stapelverarbeitungsaufgaben Root');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity15','2','BL','MetadataTypeEntity.displayNameMap','DEAKTIVIEREN');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEBULK_OPS_DESC','2','BULK_OPS','ResourceEntity.displayNameMap','Benutzer Stapeloeration');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity16','2','CELL_PHONE','MetadataTypeEntity.displayNameMap','Mobile');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DECH_MENU_DISPLAY','2','CHALLENGE','ResourceEntity.displayNameMap','Anfrage/Antwort');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DECH_RESPONSE_QUESTION_DESC','2','CHALLENGE_RESPONSE_QUESTION','ResourceEntity.displayNameMap','Anfrage/Antworten Fragen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DECH_RESP_QUESTION_NEW_DSC','2','CHALLENGE_RESPONSE_QUESTION_NEW','ResourceEntity.displayNameMap','Neue Fragen erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DECH_RESP_QUEST_ROOT_DESC','2','CHALLENGE_RESPONSE_QUESTION_ROOT','ResourceEntity.displayNameMap','Anfrage/Antworten Fragen Root Menu');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity17','2','CHECKBOX','MetadataTypeEntity.displayNameMap','Checkbox');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DECHNGPSWD_MENU_DISPLAY','2','CHNGPSWD','ResourceEntity.displayNameMap','Passwort ändern');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DECONF_POLICY_PAGE_DIS','2','CONF_POLICY_PAGE','ResourceEntity.displayNameMap','IT Richtlinien erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity18','2','CONTENT_PROVIDER','MetadataTypeEntity.displayNameMap','Content Provider');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DECONTENT_PROVIDER','2','CONTENT_PROVIDER','ResourceTypeEntity.displayNameMap','Content Provider');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DECONTENT_PROV_EDIT_DESC','2','CONTENT_PROV_EDIT','ResourceEntity.displayNameMap','Content Provider Menu editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DECPROV_EDIT_CURRENT_DESC','2','CONTENT_PROV_EDIT_CURRENT','ResourceEntity.displayNameMap','Provider editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DECPROV_EDIT_SEARCH_DESC','2','CONTENT_PROV_EDIT_SEARCH','ResourceEntity.displayNameMap','Zurück zur Suche');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DECONTENT_PROV_NEW_DSC','2','CONTENT_PROV_NEW','ResourceEntity.displayNameMap','Neuen Provider erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DECONTENT_PROV_NEW_EDIT_DESC','2','CONTENT_PROV_NEW_EDIT','ResourceEntity.displayNameMap','Neuen Provider erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DECONTENT_PROV_ROOT_DESC','2','CONTENT_PROV_ROOT','ResourceEntity.displayNameMap','Content Provider Root Menu');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DECONTENT_PROV_SEARCH_DESC','2','CONTENT_PROV_SEARCH','ResourceEntity.displayNameMap','Content Providers suchen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DECPROV_SEARCH_CHILD_DESC','2','CONTENT_PROV_SEARCH_CHILD','ResourceEntity.displayNameMap','Content Providers');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity19','2','Contractor','MetadataTypeEntity.displayNameMap','Externer Mitarbeiter Benutzertyp');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity20','2','CONTRACTOR TYPE','MetadataTypeEntity.displayNameMap','EXTERNE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DECREATEREQ_MENU_DISPLAY','2','CREATEREQ','ResourceEntity.displayNameMap','Anfrage erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DECR_RES_DISP_NAME','2','CREATE_RESOURCE_MENU','ResourceEntity.displayNameMap','Neue Ressource erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DECUSTOM_FIELD_EDIT_DESC','2','CUSTOM_FIELD_EDIT','ResourceEntity.displayNameMap','Benutzerdefiniertes Feld Menu editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DECUSTOM_FIELD_EDIT_NEW_DESC','2','CUSTOM_FIELD_EDIT_NEW','ResourceEntity.displayNameMap','Neues benuzerdefiniertes Feld erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DECUSTOM_FIELD_EDIT_SEARCH_DESC','2','CUSTOM_FIELD_EDIT_SEARCH','ResourceEntity.displayNameMap','Zurück zur Suche');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DECUSTOM_FIELD_NEW_DSC','2','CUSTOM_FIELD_NEW','ResourceEntity.displayNameMap','Neues benuzerdefiniertes Feld erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DECUSTOM_FIELD_ROOT_DESC','2','CUSTOM_FIELD_ROOT','ResourceEntity.displayNameMap','Benutzerdefiniertes Feld Root Menu');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DECUSTOM_FIELD_SEARCH_DESC','2','CUSTOM_FIELD_SEARCH','ResourceEntity.displayNameMap','Benutzerdefinierte Felder suchen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DECUSTOM_FLD_SEARCH_CHILD_DESC','2','CUSTOM_FIELD_SEARCH_CHILD','ResourceEntity.displayNameMap','Benutzerdefinierte Felder');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity21','2','DATE','MetadataTypeEntity.displayNameMap','Datumsfeld');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity22','2','DEFAULT_GROUP','MetadataTypeEntity.displayNameMap','DEFAULT GROUP TYPE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEDEFAULT_USER_TYPE','2','DEFAULT_USER','MetadataTypeEntity.displayNameMap','Standardbenutzer');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity23','2','DELETED','MetadataTypeEntity.displayNameMap','GELÖSCHT');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEDELG_FILTER_MENU_DISPLAY','2','DELG_FILTER','ResourceEntity.displayNameMap','Delegation Filter');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEDEPARTMENT','2','DEPARTMENT','OrganizationTypeEntity.displayNameMap','Abteilung');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity24','2','departmentType','MetadataTypeEntity.displayNameMap','Abteilung');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity25','2','DIRECTORY','MetadataTypeEntity.displayNameMap','Directory');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEDIRECTORY_MENU_DISPLAY','2','DIRECTORY','ResourceEntity.displayNameMap','Directory Suche');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEDIR_LOOKUP_PAGE_DIS','2','DIR_LOOKUP_PAGE','ResourceEntity.displayNameMap','Directory Suche');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity26','2','DISABLED','MetadataTypeEntity.displayNameMap','DEAKTIVIERT');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEDIVISION','2','DIVISION','OrganizationTypeEntity.displayNameMap','Division');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity27','2','divisionType','MetadataTypeEntity.displayNameMap','Division');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity28','2','DL','MetadataTypeEntity.displayNameMap','LÖSCHEN');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEEDIT_BATCH_TASK_DESC','2','EDIT_BATCH_TASK','ResourceEntity.displayNameMap','Stapelverarbeitungsaufgaben editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEEDIT_GROUP_DESC','2','EDIT_GROUP','ResourceEntity.displayNameMap','Gruppe editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEEDIT_ORG_DESC','2','EDIT_ORG','ResourceEntity.displayNameMap','Organisation editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEEDIT_ORG_MEMBERSHIP_DESC','2','EDIT_ORG_MEMBERSHIP','ResourceEntity.displayNameMap','Mitglieder');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEEDIT_ORG_TYPE_DESC','2','EDIT_ORG_TYPE','ResourceEntity.displayNameMap','Organisationstyp editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEEDIT_ORG_TYPE_IDMAN_DESC','2','EDIT_ORG_TYPE_IDMAN','ResourceEntity.displayNameMap','Organisationstypen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEEDIT_POL_ATTR_SRCH_BCK_DESC','2','EDIT_POLICY_ATTR_SRCH_BCK','ResourceEntity.displayNameMap','Zurück zur Suche');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEEDIT_RESOURCE_DIS','2','EDIT_RESOURCE','ResourceEntity.displayNameMap','Ressourcen editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEEDIT_ROLE_DESC','2','EDIT_ROLE','ResourceEntity.displayNameMap','Rolle editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity29','2','FILE','MetadataTypeEntity.displayNameMap','Datei');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity30','2','GOOGLE_Connector','MetadataTypeEntity.displayNameMap','GOOGLE APPS Connector');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEGROUP_EDIT_MENU_DESC','2','GROUP_EDIT_MENU','ResourceEntity.displayNameMap','Gruppen Root Menu editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEGROUP_ENTITLEMENTS_DESC','2','GROUP_ENTITLEMENTS','ResourceEntity.displayNameMap','Gruppenberechtigungen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEGROUP_MENUS_DESC','2','GROUP_MENUS','ResourceEntity.displayNameMap','Menus');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEGROUP_ROOT_MENU_DESC','2','GROUP_ROOT_MENU','ResourceEntity.displayNameMap','Gruppen Root Menu');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEGROUP_SEARCH_DESC','2','GROUP_SEARCH','ResourceEntity.displayNameMap','Gruppen Suche');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEGRP_APROVER_ASSOC_DN','2','GRP_APROVER_ASSOC','ResourceEntity.displayNameMap','++++Zuordnung zu Genehmigende');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity31','2','HOME_ADDRESS','MetadataTypeEntity.displayNameMap','Adresse privat');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity32','2','HOME_EMAIL','MetadataTypeEntity.displayNameMap','E-Mail privat');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity33','2','HOME_PHONE','MetadataTypeEntity.displayNameMap','Telefon privat');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEIDM_MENU_DISPLAY','2','IDM','ResourceEntity.displayNameMap','Identität');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEIDMAN_MENU_DISPLAY','2','IDMAN','ResourceEntity.displayNameMap','Benutzer Admin');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEIDQUEST_MENU_DISPLAY','2','IDQUEST','ResourceEntity.displayNameMap','Anfrage/Antwort');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEIMPERSIONATION_MENU_DESC','2','IMPERSIONATION_MENU','ResourceEntity.displayNameMap','Als anderen Benutzer ausgeben');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity34','2','INACTIVE','MetadataTypeEntity.displayNameMap','INAKTIV');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity35','2','InetOrgPerson','MetadataTypeEntity.displayNameMap','InetOrgPerson Benutzertyp');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEINTERNAL_USER_TYPE','2','INTERNAL_USER','MetadataTypeEntity.displayNameMap','Interner Benutzer');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity36','2','KERBEROS_KEYTAB_FILE','MetadataTypeEntity.displayNameMap','Kerberos Keytab File');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity37','2','KERBEROS_SERVICE_NAME','MetadataTypeEntity.displayNameMap','Kerberos Service Name');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DELANGUAGE_ADMIN1','2','LANGUAGE_ADMIN','ResourceEntity.displayNameMap','Sprachen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DELANGUAGE_EDIT1','2','LANGUAGE_EDIT','ResourceEntity.displayNameMap','Neue Sprache');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DELANGUAGE_SEARCH1','2','LANGUAGE_SEARCH','ResourceEntity.displayNameMap','Sprachen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity38','2','LdapOrgPerson','MetadataTypeEntity.displayNameMap','LdapOrgPerson Benutzertyp');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity39','2','LDAP_Connector','MetadataTypeEntity.displayNameMap','LDAP Konnektor');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity40','2','LDAP_GROUP_TYPE','MetadataTypeEntity.displayNameMap','LDAP GROUP TYPE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity41','2','LEAVE','MetadataTypeEntity.displayNameMap','LEAVE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity42','2','LINUX_Connector','MetadataTypeEntity.displayNameMap','Linux Konnektor');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DELOCATION_MENU_DISPLAY','2','LOCATION','ResourceEntity.displayNameMap','Ort');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity43','2','LOCKED','MetadataTypeEntity.displayNameMap','LOCKED');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity44','2','LOCKED_ADMIN','MetadataTypeEntity.displayNameMap','LOCKED_ADMIN');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity45','2','MANAGED_SYS','MetadataTypeEntity.displayNameMap','Verwaltetes System');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMANAGED_SYS','2','MANAGED_SYS','ResourceTypeEntity.displayNameMap','Verwaltetes System');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity46','2','MANAGER','MetadataTypeEntity.displayNameMap','MANAGER');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMANAGEREQ_MENU_DISPLAY','2','MANAGEREQ','ResourceEntity.displayNameMap','Verlauf der Anforderungen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMANUALRECON_DESC','2','MANUALRECON','ResourceEntity.displayNameMap','Manuelle Reconciliation');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMENUS_SEARCH_DC','2','MENUS_SEARCH','ResourceEntity.displayNameMap','Menus');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity47','2','MENU_ITEM','MetadataTypeEntity.displayNameMap','Menu Element Type');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMENU_ITEM','2','MENU_ITEM','ResourceTypeEntity.displayNameMap','Menus');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMETADATA_MENU_DISPLAY','2','METADATA','ResourceEntity.displayNameMap','Metadaten');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMETA_ADMIN_DESC','2','META_ADMIN','ResourceEntity.displayNameMap','Metadatenelemente');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMETA_EDIT_DESC','2','META_EDIT','ResourceEntity.displayNameMap','Neue Metadaten');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMETA_SEARCH_DESC','2','META_SEARCH','ResourceEntity.displayNameMap','Metadaten Suche');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMETA_TYPE_ADMIN_DESC','2','META_TYPE_ADMIN','ResourceEntity.displayNameMap','Metadatentypen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMETA_TYPE_EDIT_DESC','2','META_TYPE_EDIT','ResourceEntity.displayNameMap','Neuer Metadatentyp');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMETA_TYPE_EDIT_RETURN_DESC','2','META_TYPE_EDIT_RETURN','ResourceEntity.displayNameMap','Zurück zu den Metadatentypen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMETA_TYPE_SEARCH_DESC','2','META_TYPE_SEARCH','ResourceEntity.displayNameMap','Metadatentypen suche');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMNGSYS_MENU_DISPLAY','2','MNGSYS','ResourceEntity.displayNameMap','Verwaltetes System');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMNGSYSRULES_DESC','2','MNGSYSRULES','ResourceEntity.displayNameMap','Reglement des verwalteten Systems');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMNGSYS_EDIT_DESC','2','MNGSYS_EDIT','ResourceEntity.displayNameMap','Verwaltetes System editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMNGSYS_DESC','2','MNGSYS_MENU_ITEM','ResourceEntity.displayNameMap','Verwaltete Systeme');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMNGSYS_DSC','2','MNGSYS_NEW','ResourceEntity.displayNameMap','Verwaltetes System erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMNG_SYS_VIEWER_DESC','2','MNG_SYS_VIEWER','ResourceEntity.displayNameMap','Ansicht der verwalteten Systeme');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity48','2','MULTI_SELECT','MetadataTypeEntity.displayNameMap','Mehrfachauswahl Liste');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DENEWUSER_MENU_DISPLAY','2','NEWUSER','ResourceEntity.displayNameMap','Neuer Benutzer');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DENEWUSER-NOAPPRV_MENU_DISPLAY','2','NEWUSER-NOAPPRV','ResourceEntity.displayNameMap','Neuer Benutzer ohne Bewilligungsverfahren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DENEW_AUTH_POLICY_DESC','2','NEW_AUTHENTICATION_POLICY','ResourceEntity.displayNameMap','Neue Auth Richtline erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DENEW_AUTH_LVL_GRP_DN','2','NEW_AUTH_LVL_GRP','ResourceEntity.displayNameMap','Neue Gruppierung erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DENEW_BATCH_TASK_DESC','2','NEW_BATCH_TASK','ResourceEntity.displayNameMap','Neue Stapelverarbeitungsaufgabe');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DENEW_GROUP_DESC','2','NEW_GROUP','ResourceEntity.displayNameMap','Neue Gruppe erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DENEW_ORG_DESC','2','NEW_ORG','ResourceEntity.displayNameMap','Neue Organisation erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DENEW_ORG_TYPE_DESC','2','NEW_ORG_TYPE','ResourceEntity.displayNameMap','Neuer Organisationstyp');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DENEW_PASSWORD_POLICY_DESC','2','NEW_PASSWORD_POLICY','ResourceEntity.displayNameMap','Neue Passwortrichtline erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DENEW_POLICY_ATTR_DESC','2','NEW_POLICY_ATTR','ResourceEntity.displayNameMap','Neue Attributrichtlinie');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DENEW_ROLE_DESC','2','NEW_ROLE','ResourceEntity.displayNameMap','Neue Rolle erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DENEW_UI_THEME_DN','2','NEW_UI_THEME','ResourceEntity.displayNameMap','Neues UI Thema');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DENEW_USER_DESC','2','NEW_USER','ResourceEntity.displayNameMap','Neuer Benutzer erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity49','2','NO-PROVISION-APP','MetadataTypeEntity.displayNameMap','Nicht provisionierbare Apps');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity50','2','OFF-LINE','MetadataTypeEntity.displayNameMap','OFF-LINE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity51','2','OFFICE_ADDRESS','MetadataTypeEntity.displayNameMap','Adresse Geschäft');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity52','2','OFFICE_PHONE','MetadataTypeEntity.displayNameMap','Telefon Geschäft');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEORG_MENU_DISPLAY','2','ORG','ResourceEntity.displayNameMap','Organisation');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEORGANIZATION','2','ORGANIZATION','OrganizationTypeEntity.displayNameMap','Organisation');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEORGANIZATION_EDIT_ID_DESC','2','ORGANIZATION_EDIT_ID','ResourceEntity.displayNameMap','Organisation Menus editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEORGANIZATION_ROOT_ID_DESC','2','ORGANIZATION_ROOT_ID','ResourceEntity.displayNameMap','Organisation Root Menus');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity53','2','OrgOpenIAM','MetadataTypeEntity.displayNameMap','OpenIAM');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEORG_APROVER_ASSOC_DN','2','ORG_APROVER_ASSOC','ResourceEntity.displayNameMap','Zuordnungsfreigebender');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEORG_MEMBERSHIP_DESC','2','ORG_MEMBERSHIP','ResourceEntity.displayNameMap','Organisation Mitglieder');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEORG_SEARCH_DESC','2','ORG_SEARCH','ResourceEntity.displayNameMap','Organisation Suche');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEORG_TYPE_EDIT_SEARCH_DESC','2','ORG_TYPE_EDIT_SEARCH','ResourceEntity.displayNameMap','Organisationtypen Suchen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEORG_TYPE_SEARCH_DESC','2','ORG_TYPE_SEARCH','ResourceEntity.displayNameMap','Organisationtypen Suchen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEORG_TYPE_SUBMENU_EDIT_DESC','2','ORG_TYPE_SUBMENU_EDIT','ResourceEntity.displayNameMap','Organisationtypen Suchen editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEORG_TYPE_SUBMENU_ROOT_DESC','2','ORG_TYPE_SUBMENU_ROOT','ResourceEntity.displayNameMap','Organisationtypen Suchen Root');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEPAGE_TEMPLATE_EDIT_DESC','2','PAGE_TEMPLATE_EDIT','ResourceEntity.displayNameMap','Seitentemplate Menu editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEPAGE_TEMPLATE_EDIT_NEW_DESC','2','PAGE_TEMPLATE_EDIT_NEW','ResourceEntity.displayNameMap','Neues Template erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEPAGE_TMP_EDIT_SEARCH_DESC','2','PAGE_TEMPLATE_EDIT_SEARCH','ResourceEntity.displayNameMap','Zurück zur Suche');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEPAGE_TEMPLATE_NEW_DSC','2','PAGE_TEMPLATE_NEW','ResourceEntity.displayNameMap','Neues Template erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEPAGE_TEMPLATE_ROOT_DESC','2','PAGE_TEMPLATE_ROOT','ResourceEntity.displayNameMap','Seitentemplate Root Menu');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEPAGE_TEMPLATE_SEARCH_DESC','2','PAGE_TEMPLATE_SEARCH','ResourceEntity.displayNameMap','Seitentemplate Suche');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity54','2','PASSWORD','MetadataTypeEntity.displayNameMap','Passwort Feld');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEPOLICY_MENU_DESC','2','PASSWORD_POLICY','ResourceEntity.displayNameMap','Passwortrichtlinie');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEPASSWORD_POLICY_EDIT_DESC','2','PASSWORD_POLICY_EDIT','ResourceEntity.displayNameMap','Zuordnugsrichtlinie Root Menu');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEPOLICY_ROOT_MENU_DESC','2','PASSWORD_POLICY_ROOT_MENU','ResourceEntity.displayNameMap','Passwort Richtlinie Root Menu');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity55','2','PENDING_APPROVAL','MetadataTypeEntity.displayNameMap','HÄNGIGE_FREIGABE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity56','2','PENDING_INITIAL_LOGIN','MetadataTypeEntity.displayNameMap','HÄNGIGES_ERSTES_LOGIN');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity57','2','PENDING_START_DATE','MetadataTypeEntity.displayNameMap','HÄNGIGES_START_DATUM');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity58','2','PENDING_USER_VALIDATION','MetadataTypeEntity.displayNameMap','HÄNGIGE_BENUTZER_VALIDIERUNG');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity59','2','PERM FULL TIME','MetadataTypeEntity.displayNameMap','VOLLZEIT_ANGESTELLT');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity60','2','PERM PART TIME','MetadataTypeEntity.displayNameMap','TEILZEIT_ANGESTELLT');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEPOLICY_ATTR_EDIT_ROOTT_DESC','2','POLICY_ATTR_EDIT_ROOT','ResourceEntity.displayNameMap','Attribut Richtlinien Root Menu editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEPOLICY_ATTR_ROOT_DESC','2','POLICY_ATTR_ROOT','ResourceEntity.displayNameMap','Attribut Richtlinien Root Menu');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity61','2','PRIMARY_EMAIL','MetadataTypeEntity.displayNameMap','E.-Mail');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEPROFILE_MENU_DISPLAY','2','PROFILE','ResourceEntity.displayNameMap','Profil editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEPROVCONNECT_MENU_DISPLAY','2','PROVCONNECT','ResourceEntity.displayNameMap','Konnektoren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEPROVCONNECT_DESC','2','PROVCONNECT_MENU_ITEM','ResourceEntity.displayNameMap','Provisionierungskonnektoren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEPROVISIONING_MENU_DISPLAY','2','PROVISIONING','ResourceEntity.displayNameMap','Provisionierung');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEPROV_CONNECTOR_DSC','2','PROV_CONNECTOR_NEW','ResourceEntity.displayNameMap','Neuer Konnektor erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity62','2','RADIO','MetadataTypeEntity.displayNameMap','Radio Knopf');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity63','2','RDBMS_Connector','MetadataTypeEntity.displayNameMap','RDBMS Konnektor');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity64','2','READY','MetadataTypeEntity.displayNameMap','BEREIT');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEREPORT_MENU_DISPLAY','2','REPORT','ResourceEntity.displayNameMap','Berichte verwalten');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEREQINBOX_MENU_DISPLAY','2','REQINBOX','ResourceEntity.displayNameMap','Posteingang');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEREQUEST_APPROVAL_DESC','2','REQUEST_APPROVAL','ResourceEntity.displayNameMap','Anforderungsfreigabe');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DERESOURCE_EDIT_PAGE_ROOT_DIS','2','RESOURCE_EDIT_PAGE_ROOT','ResourceEntity.displayNameMap','Ressource Seite Root editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DERESPOLICYMAP_MENU_DISPLAY','2','RESPOLICYMAP','ResourceEntity.displayNameMap','Zuordnungsrichtlinien');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DERESRECONCILE_MENU_DISPLAY','2','RESRECONCILE','ResourceEntity.displayNameMap','Reconciliation');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DERESSUMMARY_MENU_DISPLAY','2','RESSUMMARY','ResourceEntity.displayNameMap','Ressourcendetails');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DERES_APROVER_ASSOC_DN','2','RES_APROVER_ASSOC','ResourceEntity.displayNameMap','Genehmigendenzuordnungen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DERES_ENT_SUB_DIS','2','RES_ENT_SUB','ResourceEntity.displayNameMap','Berechtigungen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DERES_TYPE_DESC','2','RES_TYPE_ITEM','ResourceEntity.displayNameMap','Ressourcetypen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DERES_TYPE_NEW_DESC','2','RES_TYPE_NEW','ResourceEntity.displayNameMap','Neuer Ressourcetyp');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity65','2','RETIRED','MetadataTypeEntity.displayNameMap','PENSIONIERT');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity66','2','RJ','MetadataTypeEntity.displayNameMap','ABGEWIESEN');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEROLE_APROVER_ASSOC_DN','2','ROLE_APROVER_ASSOC','ResourceEntity.displayNameMap','Genehmigendenzuordnungen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEROLE_EDIT_MENU_DESC','2','ROLE_EDIT_MENU','ResourceEntity.displayNameMap','Rollen Root Menu editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEROLE_ENTITLEMENTS_DESC','2','ROLE_ENTITLEMENTS','ResourceEntity.displayNameMap','Rollenberechtigungen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEROLE_MENUS_DESC','2','ROLE_MENUS','ResourceEntity.displayNameMap','Menus');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEROLE_ROOT_MENU_DESC','2','ROLE_ROOT_MENU','ResourceEntity.displayNameMap','Rollen Root Menu');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEROLE_SEARCH_DESC','2','ROLE_SEARCH','ResourceEntity.displayNameMap','Rolle suchen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity67','2','SALES REP','MetadataTypeEntity.displayNameMap','VERKAUF');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity68','2','SCRIPT_Connector','MetadataTypeEntity.displayNameMap','Skript Konnektor');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESEARCH_BATCH_EDIT_DESC','2','SEARCH_BATCH_EDIT','ResourceEntity.displayNameMap','Stapelverarbeitungen suchen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESEARCH_BATCH_NEW_DESC','2','SEARCH_BATCH_NEW','ResourceEntity.displayNameMap','Stapelverarbeitungen ssuchen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity69','2','SECURITY MANAGER','MetadataTypeEntity.displayNameMap','SECURITY MANAGER');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESECURITY_GROUP_MENU_DISPLAY','2','SECURITY_GROUP','ResourceEntity.displayNameMap','Gruppe');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESECURITY_POLICY_MENU_DISPLAY','2','SECURITY_POLICY','ResourceEntity.displayNameMap','Richtlinien');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESECURITY_RES_MENU_DISPLAY','2','SECURITY_RES','ResourceEntity.displayNameMap','Ressource');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESECURITY_ROLE_MENU_DISPLAY','2','SECURITY_ROLE','ResourceEntity.displayNameMap','Rolle');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity70','2','SELECT','MetadataTypeEntity.displayNameMap','Combo box');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFCENTER_MENU_DISPLAY','2','SELFCENTER','ResourceEntity.displayNameMap','Self-Service Center');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSERVE_SUP_SUB_DESC','2','SELFSERVE_SUP_SUB','ResourceEntity.displayNameMap','Vorgesetzte & Mitarbeiter');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSERVICE_MENU_DISPLAY','2','SELFSERVICE','ResourceEntity.displayNameMap','SELF-SERVICE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSERVICE_EXT_DN','2','SELFSERVICE_EXT','ResourceEntity.displayNameMap','Self-Service Extension Root');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSERVICE_GROUPS_DN','2','SELFSERVICE_GROUPS','ResourceEntity.displayNameMap','Gruppen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSERVICE_MYAPPS_DESC','2','SELFSERVICE_MYAPPS','ResourceEntity.displayNameMap','Meine Applikationen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSERVICE_MYINFO_DESC','2','SELFSERVICE_MYINFO','ResourceEntity.displayNameMap','Meine Informationen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSERVICE_REPORT_DESC','2','SELFSERVICE_REPORT','ResourceEntity.displayNameMap','Bericht');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSERVICE_RESOURCES_DN','2','SELFSERVICE_RESOURCES','ResourceEntity.displayNameMap','Ressourcen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSERVICE_ROLES_DN','2','SELFSERVICE_ROLES','ResourceEntity.displayNameMap','Rollen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESS_ACCESS_REVIEW_DESC','2','SELFSERV_ACCESS_REVIEW','ResourceEntity.displayNameMap','Zugriffsüberprüfung');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSERV_GRP_BACK_SRCH_DN','2','SELFSERV_GRP_BACK_SRCH','ResourceEntity.displayNameMap','Zurück zur Suche');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSERV_GRP_EDIT_DN','2','SELFSERV_GRP_EDIT','ResourceEntity.displayNameMap','Gruppe editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSERV_GRP_NEW_DN','2','SELFSERV_GRP_NEW','ResourceEntity.displayNameMap','Neue Gruppe erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSERV_ROLE_NEW_DN','2','SELFSERV_ROLE_NEW','ResourceEntity.displayNameMap','Neue Rolle erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSERV_USER_EDIT_DESC','2','SELFSERV_USER_EDIT','ResourceEntity.displayNameMap','Benutzer editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESS_USR_EDIT_RT_DESC','2','SELFSERV_USER_EDIT_ROOT','ResourceEntity.displayNameMap','Self-Service Benutzer Root editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSERV_USER_MEMSHP_DES','2','SELFSERV_USER_MEMSHP','ResourceEntity.displayNameMap','Benutzerberechtigungen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSER_USER_LOGIN_DESC','2','SELFSER_USER_LOGIN','ResourceEntity.displayNameMap','Identitäten');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSER_USER_NEW_LOGIN_DESC','2','SELFSER_USER_NEW_LOGIN','ResourceEntity.displayNameMap','Neue Identität erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESS_ACCESS_MNGMNT_ORG_DESC','2','SELFSRVS_ACCESS_MNGMNT_ORG','ResourceEntity.displayNameMap','Organisationen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSRV_EXAMPLE_DN','2','SELFSRV_EXAMPLE','ResourceEntity.displayNameMap','Beispiel');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSRV_GRP_EDIT_ROOT_DESC','2','SELFSRV_GRP_EDIT_ROOT','ResourceEntity.displayNameMap','Self-Service Gruppe Root editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSRV_GRP_SRCH_ROOT_DESC','2','SELFSRV_GRP_SRCH_ROOT','ResourceEntity.displayNameMap','Self-Service Gruppe Root');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSRV_RES_BACK_SRCH_DN','2','SELFSRV_RES_BACK_SRCH','ResourceEntity.displayNameMap','Zurück zur Suche');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSRV_RES_EDIT_DN','2','SELFSRV_RES_EDIT','ResourceEntity.displayNameMap','Ressourcen editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSRV_RES_EDIT_ROOT_DESC','2','SELFSRV_RES_EDIT_ROOT','ResourceEntity.displayNameMap','Self-Service Gruppe Root editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSRV_RES_NEW_DN','2','SELFSRV_RES_NEW','ResourceEntity.displayNameMap','Neue Ressource erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSRV_RES_SRCH_ROOT_DN','2','SELFSRV_RES_SRCH_ROOT','ResourceEntity.displayNameMap','Self-Service Ressource Root');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSRV_ROLE_BACK_SRCH_DN','2','SELFSRV_ROLE_BACK_SRCH','ResourceEntity.displayNameMap','Zurück zur Suche');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSRV_ROLE_EDIT_DN','2','SELFSRV_ROLE_EDIT','ResourceEntity.displayNameMap','Rolle editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSRV_ROLE_EDIT_ROOT_DESC','2','SELFSRV_ROLE_EDIT_ROOT','ResourceEntity.displayNameMap','Self-Service Rolle Root editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELFSRV_ROLE_SRCH_ROOT_DN','2','SELFSRV_ROLE_SRCH_ROOT','ResourceEntity.displayNameMap','Self-Service Rolle Root');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELF_QUERYUSER_MENU_DISPLAY','2','SELF_QUERYUSER','ResourceEntity.displayNameMap','Benutzer verwalten');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELF_SUB_ORGS_EDIT_DESC','2','SELF_SUB_ORGS_EDIT','ResourceEntity.displayNameMap','Organisation editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELF_SUB_ORGS_NEW_DESC','2','SELF_SUB_ORGS_NEW','ResourceEntity.displayNameMap','Neue Organisation');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELF_SUB_ORGS_SEARCH_DESC','2','SELF_SUB_ORGS_SEARCH','ResourceEntity.displayNameMap','Organisation suchen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELF_SUB_REPORT_NEW_DSC','2','SELF_SUB_REPORT_NEW','ResourceEntity.displayNameMap','Bericht abonnieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELF_SUB_REPORT_ROOT_DESC','2','SELF_SUB_REPORT_ROOT','ResourceEntity.displayNameMap','Abonnierung Bericht Root Menu');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELF_VIEW_REPORT_NEW_DSC','2','SELF_VIEW_REPORT_NEW','ResourceEntity.displayNameMap','Neue Berichtsanzeige erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESELF_VIEW_REPORT_ROOT_DESC','2','SELF_VIEW_REPORT_ROOT','ResourceEntity.displayNameMap','Bericht Anzeige Root Menu');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity71','2','SERVICE REP','MetadataTypeEntity.displayNameMap','SERVICE REP');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity72','2','SOAP_Connector','MetadataTypeEntity.displayNameMap','SOAP Konnektor');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESS_GRP_ENT_DN','2','SS_GRP_ENT','ResourceEntity.displayNameMap','Berechtigungen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESS_ORG_BACK_SEARCH_DN','2','SS_ORG_BACK_SEARCH','ResourceEntity.displayNameMap','Zurück zur Suche');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESS_RES_ENT_DN','2','SS_RES_ENT','ResourceEntity.displayNameMap','Berechtigungen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESS_ROLE_ENT_DN','2','SS_ROLE_ENT','ResourceEntity.displayNameMap','Berechtigungen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESUBSCRIBE_MENU_DESC','2','SUBSCRIBE','ResourceEntity.displayNameMap','Abonnieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESUBSIDIARY','2','SUBSIDIARY','OrganizationTypeEntity.displayNameMap','FILIALE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESUP_SUB_PAGE_DIS','2','SUP_SUB_PAGE','ResourceEntity.displayNameMap','Vorgesetze & Mitarbeiter');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESYNCLOG_ADMIN_DESC','2','SYNCLOG','ResourceEntity.displayNameMap','Ansicht Protokolldatei');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESYNCLOG_DESC','2','SYNCLOG_MENU_ITEM','ResourceEntity.displayNameMap','Synchronisationtransaktionsprotokoll Ansicht');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESYNCUSER_MENU_DISPLAY','2','SYNCUSER','ResourceEntity.displayNameMap','Synchronisation');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESYNCUSER_EDIT_DESC','2','SYNCUSER_EDIT','ResourceEntity.displayNameMap','Synchronisation editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESYNCUSER_DESC','2','SYNCUSER_MENU_ITEM','ResourceEntity.displayNameMap','Synchronisation');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESYNCUSER_NEW_DESC','2','SYNCUSER_NEW','ResourceEntity.displayNameMap','Synchronisation erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESYNCUSER_POLICYMAP_DESC','2','SYNCUSER_POLICYMAP','ResourceEntity.displayNameMap','Zuordnungsrichtlinien');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity73','2','SYS ACCOUNT','MetadataTypeEntity.displayNameMap','SYSTEMKONTO');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity74','2','SystemAccount','MetadataTypeEntity.displayNameMap','Systemkontotyp');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity75','2','SYS_ACTION','MetadataTypeEntity.displayNameMap','Systemaktionen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DESYS_ACTION','2','SYS_ACTION','ResourceTypeEntity.displayNameMap','Systemaktion');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DETEMPLATE_SEARCH_CHILD_DESC','2','TEMPLATE_SEARCH_CHILD','ResourceEntity.displayNameMap','Seitentemplate');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity76','2','TERMINATE','MetadataTypeEntity.displayNameMap','TERMINATE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity77','2','TEXT','MetadataTypeEntity.displayNameMap','Text Feld');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity78','2','TEXTAREA','MetadataTypeEntity.displayNameMap','Mehrzeiliges Text Feld');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity79','2','UB','MetadataTypeEntity.displayNameMap','UN-DISABLE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity80','2','UI_TEMPLATE','MetadataTypeEntity.displayNameMap','UI_TEMPLATE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEUI_TEMPLATE','2','UI_TEMPLATE','ResourceTypeEntity.displayNameMap','UI Template');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEUI_THEMES_DN','2','UI_THEMES','ResourceEntity.displayNameMap','UI Themen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEUI_THEME_BACK_SRCH_DN','2','UI_THEME_BACK_SRCH','ResourceEntity.displayNameMap','Zurück zur Suche');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEUI_THEME_EDIT_DN','2','UI_THEME_EDIT','ResourceEntity.displayNameMap','UI Thema editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEUI_THEME_EDIT_MODIFY_DN','2','UI_THEME_EDIT_MODIFY','ResourceEntity.displayNameMap','UI Thema editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEUI_THEME_ROOT_DN','2','UI_THEME_ROOT','ResourceEntity.displayNameMap','UI Thema Root');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEUI_THEME_ROOT_SRCH_DN','2','UI_THEME_ROOT_SRCH','ResourceEntity.displayNameMap','UI Themen suchen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity81','2','UI_WIDGET','MetadataTypeEntity.displayNameMap','UI_WIDGET');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEUI_WIDGET','2','UI_WIDGET','ResourceTypeEntity.displayNameMap','UI Widget');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEUPLOAD_CUST_PSWD_POLICY_DESC','2','UPLOAD_CUST_PSWD_POLICY','ResourceEntity.displayNameMap','Benutzerdefinierte Passwort Richtlinien');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEURI_META_BACK_DESC','2','URI_META_BACK','ResourceEntity.displayNameMap','Zurüch zu den Pattern');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEURI_META_EDIT_DESC','2','URI_META_EDIT','ResourceEntity.displayNameMap','URI Meta Root Einheit');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEURI_PATTERN_EDIT_DESC','2','URI_PATTERN_EDIT','ResourceEntity.displayNameMap','URI Pattern Menu editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEURI_PATTERN_EDNW_PATTERN_DESC','2','URI_PATTERN_EDIT_NEW_PATTERN','ResourceEntity.displayNameMap','URI Pattern erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEURI_PATTERN_EDIT_PATTERN_DESC','2','URI_PATTERN_EDIT_PATTERN','ResourceEntity.displayNameMap','URI Pattern editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEURI_PTRN_EDT_PROV_SEARCH_DESC','2','URI_PATTERN_EDT_PROV_SEARCH','ResourceEntity.displayNameMap','Content Provider Suche');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity82','2','URL','MetadataTypeEntity.displayNameMap','URL');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity83','2','URL_PATTERN','MetadataTypeEntity.displayNameMap','Url Pattern');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEURL_PATTERN','2','URL_PATTERN','ResourceTypeEntity.displayNameMap','Url Pattern');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEUSER_MENU_DESC','2','USER','ResourceEntity.displayNameMap','Benutzer');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEUSER_ATTRIBUTES_DESC','2','USER_ATTRIBUTES','ResourceEntity.displayNameMap','Benutzer Attribute');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEUSER_BULK_MENU_DISPLAY','2','USER_BULK','ResourceEntity.displayNameMap','Benutzer Stapeloperationen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEUSER_DELEGATION_DESC','2','USER_DELEGATION','ResourceEntity.displayNameMap','Benutzer Delegation Filter');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEUSER_EDIT_CONTACT_INFO_DESC','2','USER_EDIT_CONTACT_INFO','ResourceEntity.displayNameMap','Kontakt Info');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEUSER_EDIT_INFO_DESC','2','USER_EDIT_INFO','ResourceEntity.displayNameMap','Benutzer Info');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEUSER_EDIT_MENU_DESC','2','USER_EDIT_MENU','ResourceEntity.displayNameMap','Benutzer Root Menu editieren');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEUSER_ENTITLEMENTS_DESC','2','USER_ENTITLEMENTS','ResourceEntity.displayNameMap','Benutzer Berechtigungen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEUSER_HISTORY_DESC','2','USER_HISTORY','ResourceEntity.displayNameMap','Benutzer Historie');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEUSER_IDENTITY_DESC','2','USER_IDENTITY','ResourceEntity.displayNameMap','Benutzer Identitäten');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEUSER_MENUS_DESC','2','USER_MENUS','ResourceEntity.displayNameMap','Menus');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEUSER_RESET_PASSWORD_DESC','2','USER_RESET_PASSWORD','ResourceEntity.displayNameMap','Passwort zurücksetzen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEUSER_ROOT_MENU_DESC','2','USER_ROOT_MENU','ResourceEntity.displayNameMap','Benutzer Root Menu');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEUSER_SEARCH_DESC','2','USER_SEARCH','ResourceEntity.displayNameMap','Benutzersuche');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity84','2','VENDOR','MetadataTypeEntity.displayNameMap','VENDOR');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEVIEW_MENU_DESC','2','VIEW','ResourceEntity.displayNameMap','Ansicht');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity85','2','WEBSERVICE','MetadataTypeEntity.displayNameMap','Web Service');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity86','2','WEBSERVICE_OP','MetadataTypeEntity.displayNameMap','Web Service Operation');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEWEB_REPORT_DESC','2','WEB_REPORT','ResourceEntity.displayNameMap','Bericht');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEWEB_REPORT_NEW_DSC','2','WEB_REPORT_NEW','ResourceEntity.displayNameMap','Neuen Bericht erstellen');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEWEB_REPORT_ROOT_DESC','2','WEB_REPORT_ROOT','ResourceEntity.displayNameMap','Bericht Root Menu');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DEMetadataTypeEntity87','2','WORK_EMAIL','MetadataTypeEntity.displayNameMap','Email Geschäft');

INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('LanguageEntity2','1','2','LanguageEntity.displayNameMap','German');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESLanguageEntity2','4','2','LanguageEntity.displayNameMap','Alemán');
commit;
use openiam;

delete from LANGUAGE_LOCALE where LANGUAGE_ID='8';
delete from LANGUAGE_MAPPING where LANGUAGE_ID='8';
delete from LANGUAGE_MAPPING where LANGUAGE_ID in ('1','4','2') AND REFERENCE_ID='8' AND REFERENCE_TYPE like 'Language%';
delete from LANGUAGE where ID='8';


insert into LANGUAGE(ID, LANGUAGE,  IS_USED, LANGUAGE_CODE, IS_DEFAULT)
values ('8', 'Russian', 'Y', 'ru', 'N');

insert into LANGUAGE_LOCALE(ID, LANGUAGE_ID,  LOCALE)
values ('10', '8', 'ru_RU');

Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate326','8','326','MetadataElementEntity.languageMap','registeredAddress');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate327','8','327','MetadataElementEntity.languageMap','destinationIndicator');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate328','8','328','MetadataElementEntity.languageMap','preferredDeliveryMethod');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate329','8','329','MetadataElementEntity.languageMap','presentationAddress');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate330','8','330','MetadataElementEntity.languageMap','supportedApplicationContext');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate331','8','331','MetadataElementEntity.languageMap','member');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate332','8','332','MetadataElementEntity.languageMap','owner');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate333','8','333','MetadataElementEntity.languageMap','roleOccupant');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate334','8','334','MetadataElementEntity.languageMap','seeAlso');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate335','8','335','MetadataElementEntity.languageMap','userPassword');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate336','8','336','MetadataElementEntity.languageMap','userCertificate');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate337','8','337','MetadataElementEntity.languageMap','cACertificate');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate338','8','338','MetadataElementEntity.languageMap','authorityRevocationList');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate339','8','339','MetadataElementEntity.languageMap','certificateRevocationList');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate340','8','340','MetadataElementEntity.languageMap','crossCertificatePair');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate341','8','341','MetadataElementEntity.languageMap','givenName');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate342','8','342','MetadataElementEntity.languageMap','initials');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate343','8','343','MetadataElementEntity.languageMap','generationQualifier');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate344','8','344','MetadataElementEntity.languageMap','x500UniqueIdentifier');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate346','8','346','MetadataElementEntity.languageMap','uniqueMember');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate347','8','347','MetadataElementEntity.languageMap','houseIdentifier');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate348','8','348','MetadataElementEntity.languageMap','uid');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate349','8','349','MetadataElementEntity.languageMap','mail');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate350','8','350','MetadataElementEntity.languageMap','ref');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate351','8','351','MetadataElementEntity.languageMap','referral');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate352','8','352','MetadataElementEntity.languageMap','krbName');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate401','8','401','MetadataElementEntity.languageMap','SUBMIT_USER_TO_CONNECTOR');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate402','8','402','MetadataElementEntity.languageMap','INCLUDE_IN_PASSWORD_SYNC');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate405','8','405','MetadataElementEntity.languageMap','INCLUDE_IN_SYNC');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate406','8','406','MetadataElementEntity.languageMap','TABLE_NAME');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate407','8','407','MetadataElementEntity.languageMap','GROUP_MEMBERSHIP_ENABLED');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate408','8','408','MetadataElementEntity.languageMap','ON_DELETE');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate409','8','409','MetadataElementEntity.languageMap','PRE_PROCESS');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate410','8','410','MetadataElementEntity.languageMap','POST_PROCESS');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate411','8','411','MetadataElementEntity.languageMap','HOST_URL');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate412','8','412','MetadataElementEntity.languageMap','BASE_DN');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate413','8','413','MetadataElementEntity.languageMap','HOST_LOGIN ID');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate415','8','415','MetadataElementEntity.languageMap','COMMUNICATION_PROTOCOL');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate416','8','416','MetadataElementEntity.languageMap','OBJECT_CLASS');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate418','8','418','MetadataElementEntity.languageMap','SEARCH_ATTRIBUTE');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate419','8','419','MetadataElementEntity.languageMap','MANAGED_SYS_ID');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate420','8','420','MetadataElementEntity.languageMap','DN_ATTRIBUTE');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate421','8','421','MetadataElementEntity.languageMap','PASSWORD');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate430','8','430','MetadataElementEntity.languageMap','END_POINT');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate440','8','440','MetadataElementEntity.languageMap','OPERATION_NAME');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate450','8','450','MetadataElementEntity.languageMap','URL');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUDEPARTMENT','8','DEPARTMENT','OrganizationTypeEntity.displayNameMap','Подразделение');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUDIVISION','8','DIVISION','OrganizationTypeEntity.displayNameMap','Филиал');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUORGANIZATION','8','ORGANIZATION','OrganizationTypeEntity.displayNameMap','Организация');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSUBSIDIARY','8','SUBSIDIARY','OrganizationTypeEntity.displayNameMap','Дочерняя компания');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSYS_ACTION','8','SYS_ACTION','ResourceTypeEntity.displayNameMap','Системное событие');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUUI_TEMPLATE','8','UI_TEMPLATE','ResourceTypeEntity.displayNameMap','UI-шаблон');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUURL_PATTERN','8','URL_PATTERN','ResourceTypeEntity.displayNameMap','Образец URL');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUAUTH_PROVIDER','8','AUTH_PROVIDER','ResourceTypeEntity.displayNameMap','Провайдер аутентификации');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUAUTH_REPO','8','AUTH_REPO','ResourceTypeEntity.displayNameMap','Репозиторий аутентификации');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUUI_WIDGET','8','UI_WIDGET','ResourceTypeEntity.displayNameMap','UI-виджет');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUADMIN_RESOURCE','8','ADMIN_RESOURCE','ResourceTypeEntity.displayNameMap','Ресурс администратора');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUCONTENT_PROVIDER','8','CONTENT_PROVIDER','ResourceTypeEntity.displayNameMap','Контент-провайдер');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMANAGED_SYS','8','MANAGED_SYS','ResourceTypeEntity.displayNameMap','Управляемые системы');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMENU_ITEM','8','MENU_ITEM','ResourceTypeEntity.displayNameMap','Меню');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RU200','8','200','IdentityQuestionEntity.displayNameMap','Назовите последние четыре цифры Вашего номера социального страхования.');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RU201','8','201','IdentityQuestionEntity.displayNameMap','Назовите девичью фамилию Вашей матери.');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RU202','8','202','IdentityQuestionEntity.displayNameMap','Где Вы ходили в школу?');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RU203','8','203','IdentityQuestionEntity.displayNameMap','Как зовут Вашего домашнего питомца?');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RU204','8','204','IdentityQuestionEntity.displayNameMap','Какое Ваше любимое блюдо?');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RU205','8','205','IdentityQuestionEntity.displayNameMap','Какой Ваш любимый цвет?');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RU206','8','206','IdentityQuestionEntity.displayNameMap','В каком городе Вы родились?');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RU207','8','207','IdentityQuestionEntity.displayNameMap','Какой вид спорта вам нравится?');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RU209','8','209','IdentityQuestionEntity.displayNameMap','Назовите последние четыре цифры номера Вашего водительского удостоверения.');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RU210','8','210','IdentityQuestionEntity.displayNameMap','Назовите Вашу любимую школу?');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RU211','8','211','IdentityQuestionEntity.displayNameMap','Назовите имя Вашего первого питомца.');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RU212','8','212','IdentityQuestionEntity.displayNameMap','Назовите Ваш любимый фильм, игру или песню.');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RU213','8','213','IdentityQuestionEntity.displayNameMap','Как называется Ваша любимая книга?');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RU214','8','214','IdentityQuestionEntity.displayNameMap','Назовите имя Вашего первого парня / девушки.');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RU215','8','215','IdentityQuestionEntity.displayNameMap','Назовите имя Вашего любимого школьного учителя.');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RU216','8','216','IdentityQuestionEntity.displayNameMap','Назовите год выпуска и модель Вашего первого автомобиля (Год-Модель).');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RU217','8','217','IdentityQuestionEntity.displayNameMap','Где вы встретили Вашу «вторую половинку»?');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RU218','8','218','IdentityQuestionEntity.displayNameMap','Кто был Вашим первым питомцем и как его звали (Вид питомца-Имя)?');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RULANGUAGE_ADMIN1','8','LANGUAGE_ADMIN','ResourceEntity.displayNameMap','Языки');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RULANGUAGE_EDIT1','8','LANGUAGE_EDIT','ResourceEntity.displayNameMap','Новый язык');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RULANGUAGE_SEARCH1','8','LANGUAGE_SEARCH','ResourceEntity.displayNameMap','Языки');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUBULK_OPS_DESC','8','BULK_OPS','ResourceEntity.displayNameMap','Групповые задачи с пользователями');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity56','8','SECURITY MANAGER','MetadataTypeEntity.displayNameMap','Администратор безопасности');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity61','8','ATTR','MetadataTypeEntity.displayNameMap','Атрибут');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity66','8','OFF-LINE','MetadataTypeEntity.displayNameMap','Офлайн');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity70','8','DELETED','MetadataTypeEntity.displayNameMap','УДАЛЕНО');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity75','8','PENDING_START_DATE','MetadataTypeEntity.displayNameMap','Ожидаемая дата начала');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity81','8','LOCKED_ADMIN','MetadataTypeEntity.displayNameMap','Заблокировано администратором');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity86','8','SYS ACCOUNT','MetadataTypeEntity.displayNameMap','Системная учетная запись');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMETA_ADMIN_DESC','8','META_ADMIN','ResourceEntity.displayNameMap','Элементы метаданных');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMETA_TYPE_ADMIN_DESC','8','META_TYPE_ADMIN','ResourceEntity.displayNameMap','Типы метаданных');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMETA_TYPE_EDIT_DESC','8','META_TYPE_EDIT','ResourceEntity.displayNameMap','Новый тип метаданных');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMETA_EDIT_DESC','8','META_EDIT','ResourceEntity.displayNameMap','Новый элемент метаданных');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMETA_SEARCH_DESC','8','META_SEARCH','ResourceEntity.displayNameMap','Поиск метаданных');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RURES_TYPE_DESC','8','RES_TYPE_ITEM','ResourceEntity.displayNameMap','Тип ресурса');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RURES_TYPE_NEW_DESC','8','RES_TYPE_NEW','ResourceEntity.displayNameMap','Новый тип ресурса');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUAUTH_LVL_GRP_NEW_ROOT_DN','8','AUTH_LVL_GRP_NEW_ROOT','ResourceEntity.displayNameMap','Группировка по уровню аутентификации');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUAUTH_LVL_GRP_EDIT_ROOT_DN','8','AUTH_LVL_GRP_EDIT_ROOT','ResourceEntity.displayNameMap','Редактирование группировки по уровню аутентификации');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUBACK_TO_AUTH_LVL_GRP_SRH_DN','8','BACK_TO_AUTH_LVL_GRP_SRH','ResourceEntity.displayNameMap','Вернуться к поиску');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUAUTH_LVL_GRP_ATTR_DN','8','AUTH_LVL_GRP_ATTR','ResourceEntity.displayNameMap','Атрибуты группировки по уровню аутентификации - корневой элемент');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUBACK_TO_AUTH_LVL_DN','8','BACK_TO_AUTH_LVL','ResourceEntity.displayNameMap','Вернуться к группам');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUAUTH_LEVEL_GRP_DN','8','AUTH_LEVEL_GRP','ResourceEntity.displayNameMap','Группы аутентификации');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSERVICE_EXT_DN','8','SELFSERVICE_EXT','ResourceEntity.displayNameMap','Расширения SelfService - Корневой элемент');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSRV_EXAMPLE_DN','8','SELFSRV_EXAMPLE','ResourceEntity.displayNameMap','Пример');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUGROUP_ROOT_MENU_DESC','8','GROUP_ROOT_MENU','ResourceEntity.displayNameMap','Группы');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUGROUP_SEARCH_DESC','8','GROUP_SEARCH','ResourceEntity.displayNameMap','Поиск групп');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUIDM_MENU_DISPLAY','8','IDM','ResourceEntity.displayNameMap','Идентификатор');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUIDQUEST_MENU_DISPLAY','8','IDQUEST','ResourceEntity.displayNameMap','Ответ на запрос');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RULOCATION_MENU_DISPLAY','8','LOCATION','ResourceEntity.displayNameMap','Расположение');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMANAGEREQ_MENU_DISPLAY','8','MANAGEREQ','ResourceEntity.displayNameMap','История запросов');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMETADATA_MENU_DISPLAY','8','METADATA','ResourceEntity.displayNameMap','Метаданные');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMNGSYS_DESC','8','MNGSYS_MENU_ITEM','ResourceEntity.displayNameMap','Управляемые системы');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMNGSYS_DSC','8','MNGSYS_NEW','ResourceEntity.displayNameMap','Создать управляемую систему');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMNGSYS_MENU_DISPLAY','8','MNGSYS','ResourceEntity.displayNameMap','Управляемая система');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUNEWUSER-NOAPPRV_MENU_DISPLAY','8','NEWUSER-NOAPPRV','ResourceEntity.displayNameMap','Создать пользователя без подтверждения');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUNEWUSER_MENU_DISPLAY','8','NEWUSER','ResourceEntity.displayNameMap','Новый пользователь');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUNEW_GROUP_DESC','8','NEW_GROUP','ResourceEntity.displayNameMap','Создать новую группу');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUNEW_ORG_DESC','8','NEW_ORG','ResourceEntity.displayNameMap','Создать новую организацию');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUNEW_ROLE_DESC','8','NEW_ROLE','ResourceEntity.displayNameMap','Создать новую роль');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUNEW_USER_DESC','8','NEW_USER','ResourceEntity.displayNameMap','Создать нового пользователя');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUORGANIZATION_EDIT_ID_DESC','8','ORGANIZATION_EDIT_ID','ResourceEntity.displayNameMap','Меню редактирования организаций');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUORGANIZATION_ROOT_ID_DESC','8','ORGANIZATION_ROOT_ID','ResourceEntity.displayNameMap','Организации');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUORG_MEMBERSHIP_DESC','8','ORG_MEMBERSHIP','ResourceEntity.displayNameMap','Подразделения организации');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUORG_MENU_DISPLAY','8','ORG','ResourceEntity.displayNameMap','Организация');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUORG_SEARCH_DESC','8','ORG_SEARCH','ResourceEntity.displayNameMap','Поиск организации');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUPAGE_TMPLT_EDIT_DESC','8','PAGE_TEMPLATE_EDIT','ResourceEntity.displayNameMap','Меню редактирования шаблона страницы');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUPAGE_TMPLT_EDIT_NEW_DESC','8','PAGE_TEMPLATE_EDIT_NEW','ResourceEntity.displayNameMap','Редактировать шаблон');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUPAGE_TMPLT_EDIT_SEARCH_DESC','8','PAGE_TEMPLATE_EDIT_SEARCH','ResourceEntity.displayNameMap','Вернуться к поиску');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUPAGE_TMPLT_NEW_DSC','8','PAGE_TEMPLATE_NEW','ResourceEntity.displayNameMap','Создать новый шаблон');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUPAGE_TMPLT_ROOT_DESC','8','PAGE_TEMPLATE_ROOT','ResourceEntity.displayNameMap','Шаблоны страниц');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUPAGE_TMPLT_SEARCH_DESC','8','PAGE_TEMPLATE_SEARCH','ResourceEntity.displayNameMap','Поиск шаблонов страниц');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUPROFILE_MENU_DISPLAY','8','PROFILE','ResourceEntity.displayNameMap','Редактировать ваш профиль');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUPROVCONNECT_DESC','8','PROVCONNECT_MENU_ITEM','ResourceEntity.displayNameMap','Инициализация коннекторов');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUPROVCONNECT_MENU_DISPLAY','8','PROVCONNECT','ResourceEntity.displayNameMap','Коннекторы');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUPROVISIONING_MENU_DISPLAY','8','PROVISIONING','ResourceEntity.displayNameMap','Инициализация');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUPROV_CONNECTOR_DSC','8','PROV_CONNECTOR_NEW','ResourceEntity.displayNameMap','Создать новый коннектор');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUREPORT_MENU_DISPLAY','8','REPORT','ResourceEntity.displayNameMap','Управление отчетами');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUREQINBOX_MENU_DISPLAY','8','REQINBOX','ResourceEntity.displayNameMap','Входящие');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RURESOURCE_EDIT_PAGE_ROOT_DIS','8','RESOURCE_EDIT_PAGE_ROOT','ResourceEntity.displayNameMap','Редактирование ресурса');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RURESPOLICYMAP_MENU_DISPLAY','8','RESPOLICYMAP','ResourceEntity.displayNameMap','Карта политик');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RURESRECONCILE_MENU_DISPLAY','8','RESRECONCILE','ResourceEntity.displayNameMap','Реконсиляция');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RURESSUMMARY_MENU_DISPLAY','8','RESSUMMARY','ResourceEntity.displayNameMap','Детализация ресурсов');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RURES_ENT_SUB_DIS','8','RES_ENT_SUB','ResourceEntity.displayNameMap','Разрешения');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUROLE_EDIT_MENU_DESC','8','ROLE_EDIT_MENU','ResourceEntity.displayNameMap','Редактирование роли - главное меню');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUROLE_ENTITLEMENTS_DESC','8','ROLE_ENTITLEMENTS','ResourceEntity.displayNameMap','Разрешения ролей');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUROLE_MENUS_DESC','8','ROLE_MENUS','ResourceEntity.displayNameMap','Меню');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUROLE_ROOT_MENU_DESC','8','ROLE_ROOT_MENU','ResourceEntity.displayNameMap','Роли');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUROLE_SEARCH_DESC','8','ROLE_SEARCH','ResourceEntity.displayNameMap','Поиск роли');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSECURITY_GROUP_MENU_DISPLAY','8','SECURITY_GROUP','ResourceEntity.displayNameMap','Группа');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSECURITY_POLICY_MENU_DISPLAY','8','SECURITY_POLICY','ResourceEntity.displayNameMap','Политика');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSECURITY_RES_MENU_DISPLAY','8','SECURITY_RES','ResourceEntity.displayNameMap','Ресурс');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSECURITY_ROLE_MENU_DISPLAY','8','SECURITY_ROLE','ResourceEntity.displayNameMap','Роль');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFCENTER_MENU_DISPLAY','8','SELFCENTER','ResourceEntity.displayNameMap','Центр самообслуживания');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSERVICE_MENU_DISPLAY','8','SELFSERVICE','ResourceEntity.displayNameMap','САМООБСЛУЖИВАНИЕ');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSERVICE_MYAPPS_DESC','8','SELFSERVICE_MYAPPS','ResourceEntity.displayNameMap','Мои приложения');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSERVICE_MYINFO_DESC','8','SELFSERVICE_MYINFO','ResourceEntity.displayNameMap','Моя информация');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELF_QUERYUSER_MENU_DISPLAY','8','SELF_QUERYUSER','ResourceEntity.displayNameMap','Управление пользователем');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSYNCUSER_MENU_DISPLAY','8','SYNCUSER','ResourceEntity.displayNameMap','Синхронизация');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUTEMPLATE_SEARCH_CHILD_DESC','8','TEMPLATE_SEARCH_CHILD','ResourceEntity.displayNameMap','Страница шаблонов');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUURI_META_BACK_DESC','8','URI_META_BACK','ResourceEntity.displayNameMap','Вернуться к шаблонам');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUURI_META_EDIT_DESC','8','URI_META_EDIT','ResourceEntity.displayNameMap','URI Meta меню');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUURI_PTRN_EDIT_DESC','8','URI_PATTERN_EDIT','ResourceEntity.displayNameMap','Меню редактирования URI-шаблонов');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUURI_PTRN_EDIT_NEW_PATTERN_DES','8','URI_PATTERN_EDIT_NEW_PATTERN','ResourceEntity.displayNameMap','Создать URI-шаблон');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUURI_PTRN_EDIT_PATTERN_DESC','8','URI_PATTERN_EDIT_PATTERN','ResourceEntity.displayNameMap','Редактировать URI-шаблон');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUUSER_ATTRIBUTES_DESC','8','USER_ATTRIBUTES','ResourceEntity.displayNameMap','Атрибуты пользователя');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUUSER_BULK_MENU_DISPLAY','8','USER_BULK','ResourceEntity.displayNameMap','Операции над группой пользователей');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUUSER_DELEGATION_DESC','8','USER_DELEGATION','ResourceEntity.displayNameMap','Фильтр полномочий пользователя');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUUSER_EDIT_CONTACT_INFO_DESC','8','USER_EDIT_CONTACT_INFO','ResourceEntity.displayNameMap','Контактная информация');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RULanguageEntity4','8','4','LanguageEntity.displayNameMap','Испанский');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUEDIT_ORG_TYPE_DESC','8','EDIT_ORG_TYPE','ResourceEntity.displayNameMap','Редактирование типа организации');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUBATCH_TASK_ROOT_DESC','8','BATCH_TASK_ROOT','ResourceEntity.displayNameMap','Групповые задачи');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUEDIT_BATCH_TASK_DESC','8','EDIT_BATCH_TASK','ResourceEntity.displayNameMap','Редактирование групповых задач');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity1','8','ADGroup','MetadataTypeEntity.displayNameMap','AD-тип пользователя');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity2','8','ADUser','MetadataTypeEntity.displayNameMap','AD-тип пользователя');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity3','8','AD_Connector','MetadataTypeEntity.displayNameMap','AD-коннектор');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity4','8','AD_GROUP_TYPE','MetadataTypeEntity.displayNameMap','AD-тип группы');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity5','8','AUTHENTICATION_PROVIDER','MetadataTypeEntity.displayNameMap','Аутентификация провайдера');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity6','8','AUTH_REPO','MetadataTypeEntity.displayNameMap','Аутентификация репозитория');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity7','8','CHECKBOX','MetadataTypeEntity.displayNameMap','Флажок');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity8','8','CONTENT_PROVIDER','MetadataTypeEntity.displayNameMap','Контент-провайдер');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity9','8','Contractor','MetadataTypeEntity.displayNameMap','Тип контрактника');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity10','8','DATE','MetadataTypeEntity.displayNameMap','Поле типа «дата»');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity11','8','DEFAULT_GROUP','MetadataTypeEntity.displayNameMap','Тип группы по умолчанию');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity12','8','departmentType','MetadataTypeEntity.displayNameMap','Подразделение');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity13','8','DIRECTORY','MetadataTypeEntity.displayNameMap','Каталог');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity14','8','divisionType','MetadataTypeEntity.displayNameMap','Филиал');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity15','8','FILE','MetadataTypeEntity.displayNameMap','Файл');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity16','8','GOOGLE_Connector','MetadataTypeEntity.displayNameMap','Google Apps-коннектор');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity17','8','InetOrgPerson','MetadataTypeEntity.displayNameMap','Тип пользователя InetOrgPerson');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity18','8','LdapOrgPerson','MetadataTypeEntity.displayNameMap','Тип пользователя LdapOrgPerson');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity19','8','LDAP_Connector','MetadataTypeEntity.displayNameMap','LDAP-коннектор');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity20','8','LDAP_GROUP_TYPE','MetadataTypeEntity.displayNameMap','Тип группы LDAP');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity21','8','LINUX_Connector','MetadataTypeEntity.displayNameMap','Linux-коннектор');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity22','8','MANAGED_SYS','MetadataTypeEntity.displayNameMap','Управляемая система');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity23','8','MENU_ITEM','MetadataTypeEntity.displayNameMap','Тип элемента меню');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity24','8','MULTI_SELECT','MetadataTypeEntity.displayNameMap','Список мультивыбора');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity25','8','NO-PROVISION-APP','MetadataTypeEntity.displayNameMap','Приложения, не используемые для провижн');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity26','8','OrgOpenIAM','MetadataTypeEntity.displayNameMap','OpenIAM');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity27','8','PASSWORD','MetadataTypeEntity.displayNameMap','Поле для ввода пароля');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity28','8','RADIO','MetadataTypeEntity.displayNameMap','Переключатель');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity29','8','RDBMS_Connector','MetadataTypeEntity.displayNameMap','RDBMS-коннектор');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity30','8','SCRIPT_Connector','MetadataTypeEntity.displayNameMap','Script-коннектор');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity31','8','SELECT','MetadataTypeEntity.displayNameMap','Поле со списком');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity32','8','SOAP_Connector','MetadataTypeEntity.displayNameMap','SOAP-коннектор');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity33','8','SystemAccount','MetadataTypeEntity.displayNameMap','Тип системного аккаунта');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity34','8','SYS_ACTION','MetadataTypeEntity.displayNameMap','Системные события');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity35','8','TEXT','MetadataTypeEntity.displayNameMap','Текстовое поле');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity36','8','TEXTAREA','MetadataTypeEntity.displayNameMap','Многострочное поле ввода');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity37','8','UI_TEMPLATE','MetadataTypeEntity.displayNameMap','UI-шаблон');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity38','8','UI_WIDGET','MetadataTypeEntity.displayNameMap','UI-виджет');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity39','8','URL','MetadataTypeEntity.displayNameMap','URL');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity40','8','URL_PATTERN','MetadataTypeEntity.displayNameMap','Пример URL');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity41','8','WEBSERVICE','MetadataTypeEntity.displayNameMap','Веб-сервис');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity42','8','WEBSERVICE_OP','MetadataTypeEntity.displayNameMap','Операция веб-сервиса');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity43','8','WORK_EMAIL','MetadataTypeEntity.displayNameMap','Рабочий email');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity44','8','PRIMARY_EMAIL','MetadataTypeEntity.displayNameMap','Основной email');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity45','8','HOME_EMAIL','MetadataTypeEntity.displayNameMap','Домашний email');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity46','8','OFFICE_PHONE','MetadataTypeEntity.displayNameMap','Рабочий телефон');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity47','8','CELL_PHONE','MetadataTypeEntity.displayNameMap','Сотовый телефон');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity48','8','HOME_PHONE','MetadataTypeEntity.displayNameMap','Домашний телефон');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity49','8','OFFICE_ADDRESS','MetadataTypeEntity.displayNameMap','Рабочий адрес');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity50','8','HOME_ADDRESS','MetadataTypeEntity.displayNameMap','Домашний адрес');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity51','8','ADMIN_RESOURCE','MetadataTypeEntity.displayNameMap','Ресурс администратора');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity52','8','KERBEROS_SERVICE_NAME','MetadataTypeEntity.displayNameMap','Имя сервиса Kerberos');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity53','8','KERBEROS_KEYTAB_FILE','MetadataTypeEntity.displayNameMap','Файл Kerberos Keytab');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity54','8','MANAGER','MetadataTypeEntity.displayNameMap','Менеджер');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity55','8','SALES REP','MetadataTypeEntity.displayNameMap','Торговый представитель');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity57','8','SERVICE REP','MetadataTypeEntity.displayNameMap','Представитель сервисной службы');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity58','8','ACCNT','MetadataTypeEntity.displayNameMap','Аккаунт');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity59','8','ADMGP','MetadataTypeEntity.displayNameMap','Группа администратора');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity60','8','ADMIN','MetadataTypeEntity.displayNameMap','Администратор');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity62','8','BL','MetadataTypeEntity.displayNameMap','Заблокировать');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity63','8','DL','MetadataTypeEntity.displayNameMap','Удалить');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity64','8','RJ','MetadataTypeEntity.displayNameMap','Отклонить');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity65','8','UB','MetadataTypeEntity.displayNameMap','Разблокировать');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity67','8','READY','MetadataTypeEntity.displayNameMap','Готовый к работе');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity68','8','ACTIVE','MetadataTypeEntity.displayNameMap','Активный');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity69','8','APPROVAL_DECLINED','MetadataTypeEntity.displayNameMap','Утверждение отклонено');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity71','8','INACTIVE','MetadataTypeEntity.displayNameMap','Неактивный');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity72','8','LEAVE','MetadataTypeEntity.displayNameMap','Отпуск');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity73','8','PENDING_APPROVAL','MetadataTypeEntity.displayNameMap','В ожидании утверждения');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity74','8','PENDING_INITIAL_LOGIN','MetadataTypeEntity.displayNameMap','В ожидании первого входа');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity76','8','PENDING_USER_VALIDATION','MetadataTypeEntity.displayNameMap','В ожидании аттестации');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity77','8','RETIRED','MetadataTypeEntity.displayNameMap','На пенсии');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity78','8','TERMINATE','MetadataTypeEntity.displayNameMap','Прервать');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity79','8','DISABLED','MetadataTypeEntity.displayNameMap','Выключенный');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity80','8','LOCKED','MetadataTypeEntity.displayNameMap','Заблокированный');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity82','8','AFFILIATE','MetadataTypeEntity.displayNameMap','Филиал');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity83','8','CONTRACTOR TYPE','MetadataTypeEntity.displayNameMap','Контрактор');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity84','8','PERM FULL TIME','MetadataTypeEntity.displayNameMap','Постоянная полная занятость');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity85','8','PERM PART TIME','MetadataTypeEntity.displayNameMap','Постоянная частичная занятость');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMetadataTypeEntity87','8','VENDOR','MetadataTypeEntity.displayNameMap','Поставщик');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RULanguageEntity1','8','1','LanguageEntity.displayNameMap','Английский');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RULanguageEntity7','8','8','LanguageEntity.displayNameMap','Русский');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUCNT_PROV_NEW_EDIT_PUB_DESC','8','CONTENT_PROV_NEW_EDIT','ResourceEntity.displayNameMap','Создать нового провайдера');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUAM_PROV_AM_ATTR_DESC','8','AM_PROV_AM_ATTR','ResourceEntity.displayNameMap','Атрибуты запроса');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUAM_PROV_EDIT_CURRENT_DESC','8','AM_PROV_EDIT_CURRENT','ResourceEntity.displayNameMap','Редактировать провайдера');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUAM_PROV_EDIT_DESC','8','AM_PROV_EDIT','ResourceEntity.displayNameMap','Меню редактирования провайдера аутентификации');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUAM_PROV_NEW_DSC','8','AM_PROV_NEW','ResourceEntity.displayNameMap','Создать нового провайдера');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUAM_PROV_NEW_EDIT_PUB_DESC','8','AM_PROV_NEW_EDIT','ResourceEntity.displayNameMap','Создать нового провайдера');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUAM_PROV_ROOT_DESC','8','AM_PROV_ROOT','ResourceEntity.displayNameMap','Провайтеры аутентификации');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUAM_PROV_SEARCH_CHILD_PUB_DESC','8','AM_PROV_SEARCH_CHILD','ResourceEntity.displayNameMap','Поставщики проверки подлинности');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUAM_PROV_SEARCH_DESC','8','AM_PROV_SEARCH','ResourceEntity.displayNameMap','Поиск провайдера');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUAUDITREPORT_MENU_DISPLAY','8','AUDITREPORT','ResourceEntity.displayNameMap','Отчеты проверки');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUAUDIT_RPT_MENU_DISPLAY','8','AUDIT_RPT','ResourceEntity.displayNameMap','Отчет проверки');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUBACK_TO_CP_DESC','8','BACK_TO_CP','ResourceEntity.displayNameMap','Вернуться к контент-провайдеру');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUBATCH_PROC_MENU_DISPLAY','8','BATCH_PROC','ResourceEntity.displayNameMap','Групповые процессы');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUCHALLENGE_MENU_DISPLAY','8','CHALLENGE','ResourceEntity.displayNameMap','Вопросы для напоминания пароля');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUCHNGPSWD_MENU_DISPLAY','8','CHNGPSWD','ResourceEntity.displayNameMap','Изменить пароль');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUCNT_PROV_EDIT_CURRENT_DESC','8','CONTENT_PROV_EDIT_CURRENT','ResourceEntity.displayNameMap','Редактировать провайдера');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUCNT_PROV_EDIT_DESC','8','CONTENT_PROV_EDIT','ResourceEntity.displayNameMap','Меню редактирования контент-провайдера');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUCNT_PROV_EDIT_SEARCH_DESC','8','CONTENT_PROV_EDIT_SEARCH','ResourceEntity.displayNameMap','Вернуться к поиску');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUCNT_PROV_NEW_DSC','8','CONTENT_PROV_NEW','ResourceEntity.displayNameMap','Создать нового провайдера');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUCNT_PROV_ROOT_DESC','8','CONTENT_PROV_ROOT','ResourceEntity.displayNameMap','Контент-провайдеры');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUCNT_PROV_SEARCH_CHILD_PUB_DE','8','CONTENT_PROV_SEARCH_CHILD','ResourceEntity.displayNameMap','Контент-провайдеры');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUCNT_PROV_SEARCH_DESC','8','CONTENT_PROV_SEARCH','ResourceEntity.displayNameMap','Поиск контент-провайдеров');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUCREATEREQ_MENU_DISPLAY','8','CREATEREQ','ResourceEntity.displayNameMap','Создать запрос');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUCR_RES_DISP_NAME','8','CREATE_RESOURCE_MENU','ResourceEntity.displayNameMap','Создать новый ресурс');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUCUST_FIELD_EDIT_DESC','8','CUSTOM_FIELD_EDIT','ResourceEntity.displayNameMap','Меню редактирования настраиваемых полей');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUCUST_FIELD_EDIT_NEW_DESC','8','CUSTOM_FIELD_EDIT_NEW','ResourceEntity.displayNameMap','Создать новое настраиваемое поле');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUCUST_FIELD_EDIT_SEARCH_DESC','8','CUSTOM_FIELD_EDIT_SEARCH','ResourceEntity.displayNameMap','Вернуться к поиску');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUCUST_FIELD_NEW_DSC','8','CUSTOM_FIELD_NEW','ResourceEntity.displayNameMap','Создать новое настраиваемое поле');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUCUST_FIELD_ROOT_DESC','8','CUSTOM_FIELD_ROOT','ResourceEntity.displayNameMap','Настраиваемые поля');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUCUST_FIELD_SEARCH_CHILD_DESC','8','CUSTOM_FIELD_SEARCH_CHILD','ResourceEntity.displayNameMap','Настраиваемые поля');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUCUST_FIELD_SEARCH_DESC','8','CUSTOM_FIELD_SEARCH','ResourceEntity.displayNameMap','Поиск настраиваемых полей');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUDELG_FILTER_MENU_DISPLAY','8','DELG_FILTER','ResourceEntity.displayNameMap','Фильтр делегирования');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUDIRECTORY_MENU_DISPLAY','8','DIRECTORY','ResourceEntity.displayNameMap','Поиск в справочнике');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUEDIT_GROUP_DESC','8','EDIT_GROUP','ResourceEntity.displayNameMap','Редактирование группы');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUEDIT_ORG_DESC','8','EDIT_ORG','ResourceEntity.displayNameMap','Редактирование организации');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUEDIT_RESOURCE_DIS','8','EDIT_RESOURCE','ResourceEntity.displayNameMap','Редактирование ресурса');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUEDIT_ROLE_DESC','8','EDIT_ROLE','ResourceEntity.displayNameMap','Редактирование роли');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUGROUP_EDIT_MENU_DESC','8','GROUP_EDIT_MENU','ResourceEntity.displayNameMap','Главное меню редактирования группы');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUGROUP_ENTITLEMENTS_DESC','8','GROUP_ENTITLEMENTS','ResourceEntity.displayNameMap','Разрешения групп');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUGROUP_MENUS_DESC','8','GROUP_MENUS','ResourceEntity.displayNameMap','Меню');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSS_ACCESS_REVIEW_DESC','8','SELFSERV_ACCESS_REVIEW','ResourceEntity.displayNameMap','Проверка доступа');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUREQUEST_APPROVAL_DESC','8','REQUEST_APPROVAL','ResourceEntity.displayNameMap','Подтверждение запроса');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSERVICE_GROUPS_DN','8','SELFSERVICE_GROUPS','ResourceEntity.displayNameMap','Группы');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSERVICE_ROLES_DN','8','SELFSERVICE_ROLES','ResourceEntity.displayNameMap','Роли');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSERVICE_RESOURCES_DN','8','SELFSERVICE_RESOURCES','ResourceEntity.displayNameMap','Ресурсы');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSS_ORG_BACK_SEARCH_DN','8','SS_ORG_BACK_SEARCH','ResourceEntity.displayNameMap','Вернуться к поиску');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSRV_GRP_SRCH_ROOT_DESC','8','SELFSRV_GRP_SRCH_ROOT','ResourceEntity.displayNameMap','Группы');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSERV_GRP_NEW_DN','8','SELFSERV_GRP_NEW','ResourceEntity.displayNameMap','Создать новую группу');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSRV_GRP_EDIT_ROOT_DESC','8','SELFSRV_GRP_EDIT_ROOT','ResourceEntity.displayNameMap','Редактирование группы');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSERV_GRP_EDIT_DN','8','SELFSERV_GRP_EDIT','ResourceEntity.displayNameMap','Редактировать группу');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSERV_GRP_BACK_SRCH_DN','8','SELFSERV_GRP_BACK_SRCH','ResourceEntity.displayNameMap','Вернуться к поиску');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSRV_ROLE_SRCH_ROOT_DN','8','SELFSRV_ROLE_SRCH_ROOT','ResourceEntity.displayNameMap','Роли');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSERV_ROLE_NEW_DN','8','SELFSERV_ROLE_NEW','ResourceEntity.displayNameMap','Создать новую роль');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSRV_ROLE_EDIT_ROOT_DESC','8','SELFSRV_ROLE_EDIT_ROOT','ResourceEntity.displayNameMap','Редактирование роли');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSRV_ROLE_EDIT_DN','8','SELFSRV_ROLE_EDIT','ResourceEntity.displayNameMap','Редактировать роль');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSRV_ROLE_BACK_SRCH_DN','8','SELFSRV_ROLE_BACK_SRCH','ResourceEntity.displayNameMap','Вернуться к поиску');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSRV_RES_SRCH_ROOT_DN','8','SELFSRV_RES_SRCH_ROOT','ResourceEntity.displayNameMap','Ресурсы');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSRV_RES_NEW_DN','8','SELFSRV_RES_NEW','ResourceEntity.displayNameMap','Создать новый ресурс');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSRV_RES_EDIT_ROOT_DESC','8','SELFSRV_RES_EDIT_ROOT','ResourceEntity.displayNameMap','Редактирование ресурса');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSRV_RES_EDIT_DN','8','SELFSRV_RES_EDIT','ResourceEntity.displayNameMap','Редактировать ресурс');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSRV_RES_BACK_SRCH_DN','8','SELFSRV_RES_BACK_SRCH','ResourceEntity.displayNameMap','Вернуться к поиску');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMENUS_SEARCH_DC','8','MENUS_SEARCH','ResourceEntity.displayNameMap','Меню');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUUI_THEME_ROOT_DN','8','UI_THEME_ROOT','ResourceEntity.displayNameMap','Основная тема пользовательского интерфейса');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUUI_THEME_ROOT_SRCH_DN','8','UI_THEME_ROOT_SRCH','ResourceEntity.displayNameMap','Поиск тем пользовательского интерфейса');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUNEW_UI_THEME_DN','8','NEW_UI_THEME','ResourceEntity.displayNameMap','Новая тема пользовательского интерфейса');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUUI_THEME_EDIT_DN','8','UI_THEME_EDIT','ResourceEntity.displayNameMap','Редактировать тему пользовательского интерфейса');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUUI_THEME_EDIT_MODIFY_DN','8','UI_THEME_EDIT_MODIFY','ResourceEntity.displayNameMap','Редактировать тему пользовательского интерфейса');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUUI_THEMES_DN','8','UI_THEMES','ResourceEntity.displayNameMap','Темы пользовательского интерфейса');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSS_GRP_ENT_DN','8','SS_GRP_ENT','ResourceEntity.displayNameMap','Разрешения');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSS_ROLE_ENT_DN','8','SS_ROLE_ENT','ResourceEntity.displayNameMap','Разрешения');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSERV_USER_EDIT_DESC','8','SELFSERV_USER_EDIT','ResourceEntity.displayNameMap','Редактировать пользователя');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSERV_USER_MEMSHP_DES','8','SELFSERV_USER_MEMSHP','ResourceEntity.displayNameMap','Разрешения пользователя');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUCHLLNG_RESP_QUESTION_DESC','8','CHALLENGE_RESPONSE_QUESTION','ResourceEntity.displayNameMap','Вопрос для восстановления пароля');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUCHLLNG_RESP_QUEST_ROOT_DESC','8','CHALLENGE_RESPONSE_QUESTION_ROOT','ResourceEntity.displayNameMap','Вопросы для восстановления пароля');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUCHLLNG_RESP_QUESTION_NEW_DSC','8','CHALLENGE_RESPONSE_QUESTION_NEW','ResourceEntity.displayNameMap','Создать новый вопрос');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSYNCUSER_EDIT_DESC','8','SYNCUSER_EDIT','ResourceEntity.displayNameMap','Редактировать синхронизацию');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSYNCUSER_POLICYMAP_DESC','8','SYNCUSER_POLICYMAP','ResourceEntity.displayNameMap','Карта политик');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUWEB_REPORT_ROOT_DESC','8','WEB_REPORT_ROOT','ResourceEntity.displayNameMap','Отчеты');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUWEB_REPORT_NEW_DSC','8','WEB_REPORT_NEW','ResourceEntity.displayNameMap','Создать новый отчет');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUCONF_POLICY_PAGE_DIS','8','CONF_POLICY_PAGE','ResourceEntity.displayNameMap','Настройка IT-политики');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUORG_TYPE_SUBMENU_ROOT_DESC','8','ORG_TYPE_SUBMENU_ROOT','ResourceEntity.displayNameMap','Типы организации');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUORG_TYPE_SUBMENU_EDIT_DESC','8','ORG_TYPE_SUBMENU_EDIT','ResourceEntity.displayNameMap','Редактирование типа организации');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUORG_TYPE_SEARCH_DESC','8','ORG_TYPE_SEARCH','ResourceEntity.displayNameMap','Поиск типов организаций');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUNEW_ORG_TYPE_DESC','8','NEW_ORG_TYPE','ResourceEntity.displayNameMap','Новый тип организации');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUEDIT_ORG_MEMBERSHIP_DESC','8','EDIT_ORG_MEMBERSHIP','ResourceEntity.displayNameMap','Состав организации');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUORG_TYPE_EDIT_SEARCH_DESC','8','ORG_TYPE_EDIT_SEARCH','ResourceEntity.displayNameMap','Поиск типов организаций');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUEDIT_ORG_TYPE_IDMAN_DESC','8','EDIT_ORG_TYPE_IDMAN','ResourceEntity.displayNameMap','Типы организаций');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSUP_SUB_PAGE_DIS','8','SUP_SUB_PAGE','ResourceEntity.displayNameMap','Начальники и подчиненные');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSEARCH_BATCH_NEW_DESC','8','SEARCH_BATCH_NEW','ResourceEntity.displayNameMap','Поиск групповых задач');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUNEW_BATCH_TASK_DESC','8','NEW_BATCH_TASK','ResourceEntity.displayNameMap','Новая групповая задача');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUBATCH_TASK_EDIT_DESC','8','BATCH_TASK_EDIT','ResourceEntity.displayNameMap','Редактирование групповой задачи');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSEARCH_BATCH_EDIT_DESC','8','SEARCH_BATCH_EDIT','ResourceEntity.displayNameMap','Поиск групповых задач');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUADMIN_BATCH_TASKS_DESC','8','ADMIN_BATCH_TASKS','ResourceEntity.displayNameMap','Групповые задачи');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUDIR_LOOKUP_PAGE_DIS','8','DIR_LOOKUP_PAGE','ResourceEntity.displayNameMap','Поиск в справочнике');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMANUALRECON_DESC','8','MANUALRECON','ResourceEntity.displayNameMap','Reconciliation вручную');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSUBSCRIBE_MENU_DESC','8','SUBSCRIBE','ResourceEntity.displayNameMap','Подписка');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUVIEW_MENU_DESC','8','VIEW','ResourceEntity.displayNameMap','Просмотр');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELF_SUB_REPORT_NEW_DSC','8','SELF_SUB_REPORT_NEW','ResourceEntity.displayNameMap','Подписаться на отчет');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELF_VIEW_REPORT_ROOT_DESC','8','SELF_VIEW_REPORT_ROOT','ResourceEntity.displayNameMap','Просмотр отчета');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELF_VIEW_REPORT_NEW_DSC','8','SELF_VIEW_REPORT_NEW','ResourceEntity.displayNameMap','Создать новый вид отчета');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSERVE_SUP_SUB_DESC','8','SELFSERVE_SUP_SUB','ResourceEntity.displayNameMap','Начальники и подчиненные');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSER_USER_LOGIN_DESC','8','SELFSER_USER_LOGIN','ResourceEntity.displayNameMap','Личности');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUACCESSCENTER_MENU_DISPLAY','8','ACCESSCENTER','ResourceEntity.displayNameMap','Управление доступом');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUWEB_REPORT_DESC','8','WEB_REPORT','ResourceEntity.displayNameMap','Отчет');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSERVICE_REPORT_DESC','8','SELFSERVICE_REPORT','ResourceEntity.displayNameMap','Отчет');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSS_ACC_MNGMNT_ORG_DESC','8','SELFSRVS_ACCESS_MNGMNT_ORG','ResourceEntity.displayNameMap','Организации');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSS_ACC_MNGMNT_ORG_NEW_DESC','8','SELF_SUB_ORGS_NEW','ResourceEntity.displayNameMap','Новая организация');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSS_ACC_MG_ORG_SEARCH_DESC','8','SELF_SUB_ORGS_SEARCH','ResourceEntity.displayNameMap','Поиск организации');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSYNCLOG_ADMIN_DESC','8','SYNCLOG','ResourceEntity.displayNameMap','Просмотр логов');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUACC_CONTROL_MENU_DISPLAY','8','ACC_CONTROL','ResourceEntity.displayNameMap','Контроль доступа');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate101','8','101','MetadataElementEntity.languageMap','Display Name');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate104','8','104','MetadataElementEntity.languageMap','Preferred Language');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate105','8','105','MetadataElementEntity.languageMap','VehicleLicense');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate106','8','106','MetadataElementEntity.languageMap','Given Name');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate107','8','107','MetadataElementEntity.languageMap','LabeledURI');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate108','8','108','MetadataElementEntity.languageMap','Initials');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate110','8','110','MetadataElementEntity.languageMap','BusinessCategory');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate131','8','131','MetadataElementEntity.languageMap','Display Name');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate134','8','134','MetadataElementEntity.languageMap','Preferred Language');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate135','8','135','MetadataElementEntity.languageMap','VehicleLicense');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate136','8','136','MetadataElementEntity.languageMap','Given Name');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate137','8','137','MetadataElementEntity.languageMap','LabeledURI');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate138','8','138','MetadataElementEntity.languageMap','Initials');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate140','8','140','MetadataElementEntity.languageMap','Display Name');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate150','8','150','MetadataElementEntity.languageMap','Display Name');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate160','8','160','MetadataElementEntity.languageMap','Display Name');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate260','8','260','MetadataElementEntity.languageMap','BusinessCategory');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate261','8','261','MetadataElementEntity.languageMap','StartDate');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate262','8','262','MetadataElementEntity.languageMap','EndDate');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate300','8','300','MetadataElementEntity.languageMap','name');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate301','8','301','MetadataElementEntity.languageMap','distinguishedName');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate302','8','302','MetadataElementEntity.languageMap','objectclass');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate303','8','303','MetadataElementEntity.languageMap','aliasedObjectName');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate304','8','304','MetadataElementEntity.languageMap','cn');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate305','8','305','MetadataElementEntity.languageMap','sn');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate306','8','306','MetadataElementEntity.languageMap','serialNumber');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate307','8','307','MetadataElementEntity.languageMap','c');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate308','8','308','MetadataElementEntity.languageMap','l');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate309','8','309','MetadataElementEntity.languageMap','st');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate310','8','310','MetadataElementEntity.languageMap','street');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate311','8','311','MetadataElementEntity.languageMap','o');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate312','8','312','MetadataElementEntity.languageMap','ou');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate313','8','313','MetadataElementEntity.languageMap','title');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate314','8','314','MetadataElementEntity.languageMap','description');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate315','8','315','MetadataElementEntity.languageMap','businessCategory');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate316','8','316','MetadataElementEntity.languageMap','postalAddress');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate317','8','317','MetadataElementEntity.languageMap','postalCode');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate318','8','318','MetadataElementEntity.languageMap','postOfficeBox');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate319','8','319','MetadataElementEntity.languageMap','physicalDeliveryOfficeName');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate320','8','320','MetadataElementEntity.languageMap','telephoneNumber');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate321','8','321','MetadataElementEntity.languageMap','telexNumber');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate322','8','322','MetadataElementEntity.languageMap','teletexTerminalIdentifier');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate323','8','323','MetadataElementEntity.languageMap','facsimileTelephoneNumber');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate324','8','324','MetadataElementEntity.languageMap','x121Address');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUElementMigrate325','8','325','MetadataElementEntity.languageMap','internationaliSDNNumber');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUUSER_EDIT_INFO_DESC','8','USER_EDIT_INFO','ResourceEntity.displayNameMap','Информация о пользователе');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUUSER_EDIT_MENU_DESC','8','USER_EDIT_MENU','ResourceEntity.displayNameMap','Редактирование пользователя - корневое меню');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUUSER_ENTITLEMENTS_DESC','8','USER_ENTITLEMENTS','ResourceEntity.displayNameMap','Разрешения пользователя');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUUSER_IDENTITY_DESC','8','USER_IDENTITY','ResourceEntity.displayNameMap','Пользовательские идентичности');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUUSER_MENUS_DESC','8','USER_MENUS','ResourceEntity.displayNameMap','Меню');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUUSER_MENU_DESC','8','USER','ResourceEntity.displayNameMap','Пользователь');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUUSER_ROOT_MENU_DESC','8','USER_ROOT_MENU','ResourceEntity.displayNameMap','Пользователи');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUUSER_SEARCH_DESC','8','USER_SEARCH','ResourceEntity.displayNameMap','Поиск пользователя');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSYNCUSER_DESC','8','SYNCUSER_MENU_ITEM','ResourceEntity.displayNameMap','Синхронизация');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSYNCUSER_NEW_DESC','8','SYNCUSER_NEW','ResourceEntity.displayNameMap','Создать синхронизацию');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMNGSYS_EDIT_DESC','8','MNGSYS_EDIT','ResourceEntity.displayNameMap','Редактировать управляемые системы');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUPOLICY_ROOT_MENU_DESC','8','PASSWORD_POLICY_ROOT_MENU','ResourceEntity.displayNameMap','Политики паролей');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUNEW_PASSWORD_POLICY_DESC','8','NEW_PASSWORD_POLICY','ResourceEntity.displayNameMap','Создать новую политику паролей');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUAUTH_POLICY_MENU_DESC','8','AUTHENTICATION_POLICY','ResourceEntity.displayNameMap','Политика аутентификации');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUAUTH_POLICY_ROOT_MENU_DESC','8','AUTHENTICATION_POLICY_ROOT_MENU','ResourceEntity.displayNameMap','Политики аутентификации');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUASSOC_POLICY_DESC','8','ASSOC_POLICY','ResourceEntity.displayNameMap','Ассоциирование политики');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUPASSWORD_POLICY_EDIT_DESC','8','PASSWORD_POLICY_EDIT','ResourceEntity.displayNameMap','Ассоциирование политики - корневое меню');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUUPLOAD_CUST_PSWD_POLICY_DESC','8','UPLOAD_CUST_PSWD_POLICY','ResourceEntity.displayNameMap','Загрузить политику паролей');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUATTRIBUTE_POLICY_DESC','8','ATTRIBUTE_POLICY','ResourceEntity.displayNameMap','Атрибутивная политика');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUPOLICY_ATTR_ROOT_DESC','8','POLICY_ATTR_ROOT','ResourceEntity.displayNameMap','Атрибутивные политики');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUNEW_POLICY_ATTR_DESC','8','NEW_POLICY_ATTR','ResourceEntity.displayNameMap','Новая атрибутивная политика');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUEDIT_POL_ATTR_SRCH_BCK_DESC','8','EDIT_POLICY_ATTR_SRCH_BCK','ResourceEntity.displayNameMap','Вернуться к поиску');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RURES_APROVER_ASSOC_DN','8','RES_APROVER_ASSOC','ResourceEntity.displayNameMap','Цепочки для утверждения');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUGRP_APROVER_ASSOC_DN','8','GRP_APROVER_ASSOC','ResourceEntity.displayNameMap','Цепочки для утверждения');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUROLE_APROVER_ASSOC_DN','8','ROLE_APROVER_ASSOC','ResourceEntity.displayNameMap','Цепочки для утверждения');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSYNCLOG_DESC','8','SYNCLOG_MENU_ITEM','ResourceEntity.displayNameMap','Просмотрщик логов синхронизационных транзакций');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMNGSYSRULES_DESC','8','MNGSYSRULES','ResourceEntity.displayNameMap','Правила управляемых систем');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELF_SUB_REPORT_ROOT_DESC','8','SELF_SUB_REPORT_ROOT','ResourceEntity.displayNameMap','Подписаться на отчет');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSELFSER_USER_NEW_LOGIN_DESC','8','SELFSER_USER_NEW_LOGIN','ResourceEntity.displayNameMap','Создать новый идентификатор');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSS_ACC_MNGMNT_ORG_EDIT_DESC','8','SELF_SUB_ORGS_EDIT','ResourceEntity.displayNameMap','Редактировать организацию');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUADMIN_MENU_DISPLAY','8','ADMIN','ResourceEntity.displayNameMap','Администрирование');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUAM_PROV_EDIT_SEARCH_DESC','8','AM_PROV_EDIT_SEARCH','ResourceEntity.displayNameMap','Вернуться к поиску');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUORG_APROVER_ASSOC_DN','8','ORG_APROVER_ASSOC','ResourceEntity.displayNameMap','Цепочки для утверждения');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUUI_THEME_BACK_SRCH_DN','8','UI_THEME_BACK_SRCH','ResourceEntity.displayNameMap','Вернуться к поиску');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSS_RES_ENT_DN','8','SS_RES_ENT','ResourceEntity.displayNameMap','Разрешения');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMETA_TYPE_SEARCH_DESC','8','META_TYPE_SEARCH','ResourceEntity.displayNameMap','Поиск типов метаданных');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUNEW_AUTH_LVL_GRP_DN','8','NEW_AUTH_LVL_GRP','ResourceEntity.displayNameMap','Создать новую группировку');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUIMPERSIONATION_MENU_DESC','8','IMPERSIONATION_MENU','ResourceEntity.displayNameMap','Персонация');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUIDMAN_MENU_DISPLAY','8','IDMAN','ResourceEntity.displayNameMap','Пользователь-администратор');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUURI_PATTERN_EDTPROVSEARCHDESC','8','URI_PATTERN_EDT_PROV_SEARCH','ResourceEntity.displayNameMap','Поиск контент-провайдера');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUUSER_HISTORY_DESC','8','USER_HISTORY','ResourceEntity.displayNameMap','История пользователя');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUUSER_RESET_PASSWORD_DESC','8','USER_RESET_PASSWORD','ResourceEntity.displayNameMap','Сброс пароля');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUPOLICY_MENU_DESC','8','PASSWORD_POLICY','ResourceEntity.displayNameMap','Политика паролей');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUNEW_AUTH_POLICY_DESC','8','NEW_AUTHENTICATION_POLICY','ResourceEntity.displayNameMap','Создать новую политику установления подлинности');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUPOLICY_ATTR_EDIT_ROOT_DESC','8','POLICY_ATTR_EDIT_ROOT','ResourceEntity.displayNameMap','Редактирование атрибутивной политики');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUSS_USR_EDIT_RT_DESC','8','SELFSERV_USER_EDIT_ROOT','ResourceEntity.displayNameMap','Редактирование пользователя');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMNG_SYS_VIEWER_DESC','8','MNG_SYS_VIEWER','ResourceEntity.displayNameMap','Просмотр управляемых систем');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUDEFAULT_USER_TYPE','8','DEFAULT_USER','MetadataTypeEntity.displayNameMap','Пользователь по умолчанию');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUINTERNAL_USER_TYPE','8','INTERNAL_USER','MetadataTypeEntity.displayNameMap','Внутренний пользователь');
Insert into LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) values ('RUMETA_TYPE_EDIT_RETURN_DESC','8','META_TYPE_EDIT_RETURN','ResourceEntity.displayNameMap','Вернуться к типам метаданных');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('RULanguageEntity2','8','2','LanguageEntity.displayNameMap','Немецкий');

INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('LanguageEntity8','1','8','LanguageEntity.displayNameMap','Russian');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESLanguageEntity8','4','8','LanguageEntity.displayNameMap','Ruso');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DELanguageEntity8','2','8','LanguageEntity.displayNameMap','Russisch');





commit;
use openiam;

DELETE FROM LANGUAGE_LOCALE WHERE LOCALE='en_GB';


commit;
use openiam;

UPDATE ATTRIBUTE_MAP SET ATTRIBUTE_NAME = 'objectClass'
 WHERE ATTRIBUTE_NAME = 'objectclass'
   AND MANAGED_SYS_ID IN (SELECT MANAGED_SYS_ID FROM MANAGED_SYS WHERE CONNECTOR_ID = 51 OR CONNECTOR_ID IN 
       (SELECT CONNECTOR_ID FROM PROVISION_CONNECTOR WHERE SERVICE_PORT = 'LDAPConnectorServicePort')
   );
commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS SETUP_CONTENT_PROVIDERS$$
CREATE PROCEDURE SETUP_CONTENT_PROVIDERS(IN cpDomain VARCHAR(255), IN serverDomain VARCHAR(255))
	BEGIN
 		IF NOT EXISTS (SELECT * FROM CONTENT_PROVIDER) THEN
 			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC, URL) VALUES('DEFAULT_CP', 'CONTENT_PROVIDER', 'Default Content Provider', 'Y', CONCAT('http://', cpDomain, '/selfservice'));
			INSERT INTO CONTENT_PROVIDER (CONTENT_PROVIDER_ID, CONTENT_PROVIDER_NAME, IS_PUBLIC, DOMAIN_PATTERN, IS_SSL, RESOURCE_ID, MANAGED_SYS_ID) 
								   VALUES('DEFAULT_CP', 'Default Content Provider', 'Y', cpDomain, NULL, 'DEFAULT_CP', '0');
			INSERT INTO CP_AUTH_LEVEL_GRP_XREF (CONTENT_PROVIDER_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES ('DEFAULT_CP', 'PASSWORD_AUTH', 0);
			INSERT INTO CONTENT_PROVIDER_SERVER (CONTENT_PROVIDER_SERVER_ID, CONTENT_PROVIDER_ID, SERVER_URL) VALUES ('DEFAULT_CP', 'DEFAULT_CP', serverDomain);					   
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('DEF_CP_SELSERVICE_SLASH', 'URL_PATTERN', 'Default Content Provider /selfservice/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('DEF_CP_SELSERVICE_SLASH', 'DEFAULT_CP', '/selfservice/*', 'Y', 'DEF_CP_SELSERVICE_SLASH');
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('DEF_CP_WEBCONSOLE_AM_SLASH', 'URL_PATTERN', 'Default Content Provider /webconsole-am/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('DEF_CP_WEBCONSOLE_AM_SLASH', 'DEFAULT_CP', '/webconsole-am/*', 'Y', 'DEF_CP_WEBCONSOLE_AM_SLASH');
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('DEF_CP_WEBCONSOLE_IDM_SLASH', 'URL_PATTERN', 'Default Content Provider /webconsole-idm/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('DEF_CP_WEBCONSOLE_IDM_SLASH', 'DEFAULT_CP', '/webconsole-idm/*', 'Y', 'DEF_CP_WEBCONSOLE_IDM_SLASH');
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('DEF_CP_WEBCONSOLE_SLASH', 'URL_PATTERN', 'Default Content Provider /webconsole/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('DEF_CP_WEBCONSOLE_SLASH', 'DEFAULT_CP', '/webconsole/*', 'Y', 'DEF_CP_WEBCONSOLE_SLASH');
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('NEW_USER_TEMPLATE', 'UI_TEMPLATE', 'New User Template', 'Y');
			INSERT INTO METADATA_ELEMENT_PAGE_TEMPLATE (ID, NAME, RESOURCE_ID, IS_PUBLIC, TEMPLATE_TYPE_ID) VALUES('NEW_USER_TEMPLATE', 'New User Template', 'NEW_USER_TEMPLATE', 'Y', 'USER_TEMPLATE');
			INSERT INTO METADATA_URI_XREF (TEMPLATE_ID, URI_PATTERN_ID) VALUES('NEW_USER_TEMPLATE', 'DEF_CP_SELSERVICE_SLASH');
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SELFREG_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/selfRegistration.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SELFREG_PATTERN', 'DEFAULT_CP', '/selfservice/selfRegistration.html', 'Y', 'SELFREG_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SELFREG_PATTERN', 'NONE', 0);
			INSERT INTO METADATA_URI_XREF (TEMPLATE_ID, URI_PATTERN_ID) VALUES('NEW_USER_TEMPLATE', 'SELFREG_PATTERN');
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('UI_STATIC', 'URL_PATTERN', 'Default Content Provider /openiam-ui-static/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('UI_STATIC', 'DEFAULT_CP', '/openiam-ui-static/*', 'Y', 'UI_STATIC');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('UI_STATIC', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('CHANGE_PASSWORD', 'URL_PATTERN', 'Default Content Provider /idp/changePassword.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('CHANGE_PASSWORD', 'DEFAULT_CP', '/idp/changePassword.html', 'Y', 'CHANGE_PASSWORD');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('CHANGE_PASSWORD', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('UNLOCK_PASSWORD', 'URL_PATTERN', 'Default Content Provider /idp/unlockPassword.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('UNLOCK_PASSWORD', 'DEFAULT_CP', '/idp/unlockPassword.html', 'Y', 'UNLOCK_PASSWORD');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('UNLOCK_PASSWORD', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('LOGOUT_PATTERN', 'URL_PATTERN', 'Default Content Provider /idp/logout.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('LOGOUT_PATTERN', 'DEFAULT_CP', '/idp/logout.html', 'Y', 'LOGOUT_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('LOGOUT_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SAML_LOGIN_PATTERN', 'URL_PATTERN', 'Default Content Provider /idp/SAMLLogin.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SAML_LOGIN_PATTERN', 'DEFAULT_CP', '/idp/SAMLLogin.html', 'Y', 'SAML_LOGIN_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SAML_LOGIN_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SAML_METADATA_PATTERN', 'URL_PATTERN', 'Default Content Provider /idp/SAMLMetadata.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SAML_METADATA_PATTERN', 'DEFAULT_CP', '/idp/SAMLMetadata.html', 'Y', 'SAML_METADATA_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SAML_METADATA_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('UNLOCK_PASSWORD_QUESTIONS', 'URL_PATTERN', 'Default Content Provider /idp/unlockPasswordQuestions.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('UNLOCK_PASSWORD_QUESTIONS', 'DEFAULT_CP', '/idp/unlockPasswordQuestions.html', 'Y', 'UNLOCK_PASSWORD_QUESTIONS');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('UNLOCK_PASSWORD_QUESTIONS', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('UNLOCK_USER_RESET_FORM', 'URL_PATTERN', 'Default Content Provider /idp/unlockUserResetPasswordForm.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('UNLOCK_USER_RESET_FORM', 'DEFAULT_CP', '/idp/unlockUserResetPasswordForm.html', 'Y', 'UNLOCK_USER_RESET_FORM');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('UNLOCK_USER_RESET_FORM', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('WEBCONSOLE_CLEAR_CNTX', 'URL_PATTERN', 'Default Content Provider /webconsole/clearContext.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('WEBCONSOLE_CLEAR_CNTX', 'DEFAULT_CP', '/webconsole/clearContext.html', 'Y', 'WEBCONSOLE_CLEAR_CNTX');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('WEBCONSOLE_CLEAR_CNTX', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('WEBCONSOLE_AM_CLEAR_CNTX', 'URL_PATTERN', 'Default Content Provider /webconsole-am/clearContext.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('WEBCONSOLE_AM_CLEAR_CNTX', 'DEFAULT_CP', '/webconsole-am/clearContext.html', 'Y', 'WEBCONSOLE_AM_CLEAR_CNTX');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('WEBCONSOLE_AM_CLEAR_CNTX', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('WEBCONSOLE_IDM_CLEAR_CNTX', 'URL_PATTERN', 'Default Content Provider /webconsole-idm/clearContext.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('WEBCONSOLE_IDM_CLEAR_CNTX', 'DEFAULT_CP', '/webconsole-idm/clearContext.html', 'Y', 'WEBCONSOLE_IDM_CLEAR_CNTX');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('WEBCONSOLE_IDM_CLEAR_CNTX', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SELFSERVICE_CLEAR_CNTX', 'URL_PATTERN', 'Default Content Provider /selfservice/clearContext.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SELFSERVICE_CLEAR_CNTX', 'DEFAULT_CP', '/selfservice/clearContext.html', 'Y', 'SELFSERVICE_CLEAR_CNTX');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SELFSERVICE_CLEAR_CNTX', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SELFSERVICE_EXT_CLEAR_CNTX', 'URL_PATTERN', 'Default Content Provider /selfservice-ext/clearContext.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SELFSERVICE_EXT_CLEAR_CNTX', 'DEFAULT_CP', '/selfservice-ext/clearContext.html', 'Y', 'SELFSERVICE_EXT_CLEAR_CNTX');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SELFSERVICE_EXT_CLEAR_CNTX', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SEARCH_ORG_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/rest/api/entitlements/searchOrganizations', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SEARCH_ORG_PATTERN', 'DEFAULT_CP', '/selfservice/rest/api/entitlements/searchOrganizations', 'Y', 'SEARCH_ORG_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SEARCH_ORG_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('REPORTVIEWER_PATTERN', 'URL_PATTERN', 'Default Content Provider /reportviewer/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('REPORTVIEWER_PATTERN', 'DEFAULT_CP', '/reportviewer/*', 'Y', 'REPORTVIEWER_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('REPORTVIEWER_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('LANGUAGE_SUPPORT_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/language/languageSupport.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('LANGUAGE_SUPPORT_PATTERN', 'DEFAULT_CP', '/selfservice/language/languageSupport.html', 'Y', 'LANGUAGE_SUPPORT_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('LANGUAGE_SUPPORT_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('ROLE_METADATA_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/rest/api/metadata/roleMetadata', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('ROLE_METADATA_PATTERN', 'DEFAULT_CP', '/selfservice/rest/api/metadata/roleMetadata', 'Y', 'ROLE_METADATA_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('ROLE_METADATA_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SEARCH_ROLES_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/rest/api/entitlements/searchRoles', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SEARCH_ROLES_PATTERN', 'DEFAULT_CP', '/selfservice/rest/api/entitlements/searchRoles', 'Y', 'SEARCH_ROLES_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SEARCH_ROLES_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('GROUP_METADATA_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/rest/api/metadata/groupMetadata', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('GROUP_METADATA_PATTERN', 'DEFAULT_CP', '/selfservice/rest/api/metadata/groupMetadata', 'Y', 'GROUP_METADATA_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('GROUP_METADATA_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SEARCH_GROUPS_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/rest/api/entitlements/searchGroups', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SEARCH_GROUPS_PATTERN', 'DEFAULT_CP', '/selfservice/rest/api/entitlements/searchGroups', 'Y', 'SEARCH_GROUPS_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SEARCH_GROUPS_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('ORG_METADATA_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/rest/api/metadata/organizationMetadata', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('ORG_METADATA_PATTERN', 'DEFAULT_CP', '/selfservice/rest/api/metadata/organizationMetadata', 'Y', 'ORG_METADATA_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('ORG_METADATA_PATTERN', 'NONE', 0);
			
 		END IF;
	END$$
DELIMITER ;
commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS ADD_CLAIM_DATE$$

CREATE PROCEDURE ADD_CLAIM_DATE()
	BEGIN
		IF NOT EXISTS (SELECT * FROM information_schema.columns WHERE table_schema='openiam' AND table_name = 'USERS' AND column_name = 'CLAIM_DATE') THEN
			ALTER TABLE USERS ADD COLUMN CLAIM_DATE DATE NULL;
 		END IF;
 		
	END$$
DELIMITER ;

call ADD_CLAIM_DATE();
DROP PROCEDURE ADD_CLAIM_DATE;

commit;
use openiam;

ALTER TABLE USERS CHANGE COLUMN MAIL_CODE MAIL_CODE VARCHAR(100) NULL DEFAULT NULL;


commit;
use openiam;

delete from LANGUAGE_LOCALE where LANGUAGE_ID='9';
delete from LANGUAGE_MAPPING where LANGUAGE_ID='9';
delete from LANGUAGE_MAPPING where LANGUAGE_ID in ('1','4','2','8') AND REFERENCE_ID='9' AND REFERENCE_TYPE like 'Language%';
delete from LANGUAGE where ID='9';

INSERT INTO LANGUAGE (ID, LANGUAGE, IS_USED, LANGUAGE_CODE, IS_DEFAULT) VALUES ('9', 'Japanese', 'Y', 'ja', 'N');
INSERT INTO LANGUAGE_LOCALE (ID, LANGUAGE_ID, LOCALE) VALUES ('12', '9', 'ja_JP');

INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPLanguageEntity1','9','1','LanguageEntity.displayNameMap','英語');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate101','9','101','MetadataElementEntity.languageMap','表示名');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate104','9','104','MetadataElementEntity.languageMap','優先言語');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate105','9','105','MetadataElementEntity.languageMap','運転免許証');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate106','9','106','MetadataElementEntity.languageMap','名前');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate107','9','107','MetadataElementEntity.languageMap','ラベル付けされたURI');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate108','9','108','MetadataElementEntity.languageMap','イニシャル');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate110','9','110','MetadataElementEntity.languageMap','業態');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate131','9','131','MetadataElementEntity.languageMap','表示名');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate134','9','134','MetadataElementEntity.languageMap','優先言語');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate135','9','135','MetadataElementEntity.languageMap','運転免許証');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate136','9','136','MetadataElementEntity.languageMap','名前');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate137','9','137','MetadataElementEntity.languageMap','ラベル付けされたURI');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate138','9','138','MetadataElementEntity.languageMap','イニシャル');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate140','9','140','MetadataElementEntity.languageMap','表示名');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate150','9','150','MetadataElementEntity.languageMap','表示名');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate160','9','160','MetadataElementEntity.languageMap','表示名');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPLanguageEntity2','9','2','LanguageEntity.displayNameMap','ドイツ語');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JP200','9','200','IdentityQuestionEntity.displayNameMap','社会保障番号の最後の4桁の数字を教えてください。');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JP201','9','201','IdentityQuestionEntity.displayNameMap','母親は旧姓は何ですか？');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JP202','9','202','IdentityQuestionEntity.displayNameMap','どの学校に通いましたか？');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JP203','9','203','IdentityQuestionEntity.displayNameMap','ペットの名前は何ですか？');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JP204','9','204','IdentityQuestionEntity.displayNameMap','好きな食べ物は何ですか？');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JP205','9','205','IdentityQuestionEntity.displayNameMap','好きな色は何ですか？');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JP206','9','206','IdentityQuestionEntity.displayNameMap','生まれた都市はどこですか？');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JP207','9','207','IdentityQuestionEntity.displayNameMap','好きなスポーツは何ですか？');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JP209','9','209','IdentityQuestionEntity.displayNameMap','運転免許証の最後の4桁の数字を教えてください。');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JP210','9','210','IdentityQuestionEntity.displayNameMap','好きな学校の名前を教えてください。');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JP211','9','211','IdentityQuestionEntity.displayNameMap','初めて飼ったペットの名前は何ですか？');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JP212','9','212','IdentityQuestionEntity.displayNameMap','好きな映画、演劇、歌の題名は何ですか？');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JP213','9','213','IdentityQuestionEntity.displayNameMap','好きな本の題名は何ですか？');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JP214','9','214','IdentityQuestionEntity.displayNameMap','初めてのボーイフレンド/ガールフレンドの名前は何ですか？');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JP215','9','215','IdentityQuestionEntity.displayNameMap','好きな学校の先生の名前は何ですか？');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JP216','9','216','IdentityQuestionEntity.displayNameMap','最初の車の年代とニックネームは何ですか？（年代-名前）');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JP217','9','217','IdentityQuestionEntity.displayNameMap','大切な人と出会ったのはどこですか？');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JP218','9','218','IdentityQuestionEntity.displayNameMap','最初のペットの種類と名前は何ですか？（種類-名前）');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate260','9','260','MetadataElementEntity.languageMap','業態');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate261','9','261','MetadataElementEntity.languageMap','開始日');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate262','9','262','MetadataElementEntity.languageMap','終了日');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate300','9','300','MetadataElementEntity.languageMap','名前');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate301','9','301','MetadataElementEntity.languageMap','識別名');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate302','9','302','MetadataElementEntity.languageMap','オブジェクトクラス');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate303','9','303','MetadataElementEntity.languageMap','エイリアスオブジェクト名');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate304','9','304','MetadataElementEntity.languageMap','cn');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate305','9','305','MetadataElementEntity.languageMap','sn');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate306','9','306','MetadataElementEntity.languageMap','シリアル番号');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate307','9','307','MetadataElementEntity.languageMap','c');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate308','9','308','MetadataElementEntity.languageMap','l');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate309','9','309','MetadataElementEntity.languageMap','st');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate310','9','310','MetadataElementEntity.languageMap','通り');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate311','9','311','MetadataElementEntity.languageMap','o');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate312','9','312','MetadataElementEntity.languageMap','ou');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate313','9','313','MetadataElementEntity.languageMap','タイトル');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate314','9','314','MetadataElementEntity.languageMap','ディスクリプション');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate315','9','315','MetadataElementEntity.languageMap','業態');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate316','9','316','MetadataElementEntity.languageMap','住所');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate317','9','317','MetadataElementEntity.languageMap','郵便番号');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate318','9','318','MetadataElementEntity.languageMap','私書箱');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate319','9','319','MetadataElementEntity.languageMap','現物引き渡しオフィス名');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate320','9','320','MetadataElementEntity.languageMap','電話番号');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate321','9','321','MetadataElementEntity.languageMap','テレックス番号');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate322','9','322','MetadataElementEntity.languageMap','テレテックス端末識別子');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate323','9','323','MetadataElementEntity.languageMap','ファクシミリ番号');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate324','9','324','MetadataElementEntity.languageMap','x121アドレス');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate325','9','325','MetadataElementEntity.languageMap','国際ISDN番号');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate326','9','326','MetadataElementEntity.languageMap','登録住所');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate327','9','327','MetadataElementEntity.languageMap','行先表示');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate328','9','328','MetadataElementEntity.languageMap','希望の配布方法');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate329','9','329','MetadataElementEntity.languageMap','プレゼンテーションアドレス');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate330','9','330','MetadataElementEntity.languageMap','サポートされているアプリケーション・コンテキスト');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate331','9','331','MetadataElementEntity.languageMap','メンバー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate332','9','332','MetadataElementEntity.languageMap','オーナー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate333','9','333','MetadataElementEntity.languageMap','ロール居住者');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate334','9','334','MetadataElementEntity.languageMap','参照');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate335','9','335','MetadataElementEntity.languageMap','ユーザーパスワード');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate336','9','336','MetadataElementEntity.languageMap','ユーザー証明書');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate337','9','337','MetadataElementEntity.languageMap','CA証明書 ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate338','9','338','MetadataElementEntity.languageMap','権限失効リスト');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate339','9','339','MetadataElementEntity.languageMap','証明書失効リスト');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate340','9','340','MetadataElementEntity.languageMap','クロス証明書のペア');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate341','9','341','MetadataElementEntity.languageMap','名前');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate342','9','342','MetadataElementEntity.languageMap','イニシャル');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate343','9','343','MetadataElementEntity.languageMap','世代修飾子');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate344','9','344','MetadataElementEntity.languageMap','x500一意識別子');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate346','9','346','MetadataElementEntity.languageMap','一意番号');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate347','9','347','MetadataElementEntity.languageMap','家識別子');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate348','9','348','MetadataElementEntity.languageMap','uid');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate349','9','349','MetadataElementEntity.languageMap','メール');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate350','9','350','MetadataElementEntity.languageMap','参照');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate351','9','351','MetadataElementEntity.languageMap','照会');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate352','9','352','MetadataElementEntity.languageMap','krb名');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPLanguageEntity4','9','4','LanguageEntity.displayNameMap','スペイン語');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate401','9','401','MetadataElementEntity.languageMap','SUBMIT_USER_TO_CONNECTOR');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate402','9','402','MetadataElementEntity.languageMap','INCLUDE_IN_PASSWORD_SYNC');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate405','9','405','MetadataElementEntity.languageMap','INCLUDE_IN_SYNC');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate406','9','406','MetadataElementEntity.languageMap','TABLE_NAME');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate407','9','407','MetadataElementEntity.languageMap','GROUP_MEMBERSHIP_ENABLED');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate408','9','408','MetadataElementEntity.languageMap','ON_DELETE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate409','9','409','MetadataElementEntity.languageMap','PRE_PROCESS');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate410','9','410','MetadataElementEntity.languageMap','POST_PROCESS');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate411','9','411','MetadataElementEntity.languageMap','HOST_URL');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate412','9','412','MetadataElementEntity.languageMap','BASE_DN');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate413','9','413','MetadataElementEntity.languageMap','HOST_LOGIN ID');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate415','9','415','MetadataElementEntity.languageMap','COMMUNICATION_PROTOCOL');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate416','9','416','MetadataElementEntity.languageMap','OBJECT_CLASS');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate418','9','418','MetadataElementEntity.languageMap','SEARCH_ATTRIBUTE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate419','9','419','MetadataElementEntity.languageMap','MANAGED_SYS_ID');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate420','9','420','MetadataElementEntity.languageMap','DN_ATTRIBUTE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate421','9','421','MetadataElementEntity.languageMap','PASSWORD');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate430','9','430','MetadataElementEntity.languageMap','END_POINT');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate440','9','440','MetadataElementEntity.languageMap','OPERATION_NAME');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPElementMigrate450','9','450','MetadataElementEntity.languageMap','URL');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPLanguageEntity8','9','8','LanguageEntity.displayNameMap','ロシア語');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPABOUT_DESC','9','ABOUT','ResourceEntity.displayNameMap','OpenIAMについて');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPABOUT_ROOT_MENU_DESC','9','ABOUT_ROOT_MENU','ResourceEntity.displayNameMap','OpenIAMについて');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPACCESSCENTER_MENU_DISPLAY','9','ACCESSCENTER','ResourceEntity.displayNameMap','アクセス管理');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity1','9','ACCNT','MetadataTypeEntity.displayNameMap','アカウント');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPACC_CONTROL_MENU_DISPLAY','9','ACC_CONTROL','ResourceEntity.displayNameMap','アクセスコントロール');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity2','9','ACTIVE','MetadataTypeEntity.displayNameMap','ACTIVE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity3','9','ADGroup','MetadataTypeEntity.displayNameMap','ADユーザータイプ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity4','9','ADMGP','MetadataTypeEntity.displayNameMap','管理グループ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity5','9','ADMIN','MetadataTypeEntity.displayNameMap','管理者');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPADMIN_MENU_DISPLAY','9','ADMIN','ResourceEntity.displayNameMap','管理');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPADMIN_BATCH_TASKS_DESC','9','ADMIN_BATCH_TASKS','ResourceEntity.displayNameMap','バッチタスク');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity6','9','ADMIN_RESOURCE','MetadataTypeEntity.displayNameMap','管理リソース');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPADMIN_RESOURCE','9','ADMIN_RESOURCE','ResourceTypeEntity.displayNameMap','管理リソース');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity7','9','ADUser','MetadataTypeEntity.displayNameMap','ADユーザータイプ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity8','9','AD_Connector','MetadataTypeEntity.displayNameMap','アクティブ・ディレクトリ・コネクタ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity9','9','AD_GROUP_TYPE','MetadataTypeEntity.displayNameMap','ADグループタイプ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPAM_PROV_AM_ATTR_DESC','9','AM_PROV_AM_ATTR','ResourceEntity.displayNameMap','リクエスト属性');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPAM_PROV_EDIT_DESC','9','AM_PROV_EDIT','ResourceEntity.displayNameMap','認証プロバイダ編集メニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPAM_PROV_EDIT_CURRENT_DESC','9','AM_PROV_EDIT_CURRENT','ResourceEntity.displayNameMap','プロバイダを編集');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPAM_PROV_EDIT_SEARCH_DESC','9','AM_PROV_EDIT_SEARCH','ResourceEntity.displayNameMap','検索に戻る');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPAM_PROV_NEW_DSC','9','AM_PROV_NEW','ResourceEntity.displayNameMap','新しいプロバイダを作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPAM_PROV_NEW_EDIT_PUB_DESC','9','AM_PROV_NEW_EDIT','ResourceEntity.displayNameMap','新しいプロバイダを作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPAM_PROV_ROOT_DESC','9','AM_PROV_ROOT','ResourceEntity.displayNameMap','認証プロバイダのルートメニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPAM_PROV_SEARCH_DESC','9','AM_PROV_SEARCH','ResourceEntity.displayNameMap','プロバイダを検索');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPAM_PROV_SEARCH_CHILD_PUB_DESC','9','AM_PROV_SEARCH_CHILD','ResourceEntity.displayNameMap','認証プロバイダ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity10','9','APPROVAL_DECLINED','MetadataTypeEntity.displayNameMap','APPROVAL_DECLINED');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPASSOC_POLICY_DESC','9','ASSOC_POLICY','ResourceEntity.displayNameMap','提携ポリシー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity11','9','ATTR','MetadataTypeEntity.displayNameMap','属性');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPATTRIBUTE_POLICY_DESC','9','ATTRIBUTE_POLICY','ResourceEntity.displayNameMap','属性ポリシー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPAUDITREPORT_MENU_DISPLAY','9','AUDITREPORT','ResourceEntity.displayNameMap','監査レポート');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPAUDIT_RPT_MENU_DISPLAY','9','AUDIT_RPT','ResourceEntity.displayNameMap','監査レポート');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPAUTH_POLICY_MENU_DESC','9','AUTHENTICATION_POLICY','ResourceEntity.displayNameMap','認証ポリシー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPAUTH_POLICY_ROOT_MENU_DESC','9','AUTHENTICATION_POLICY_ROOT_MENU','ResourceEntity.displayNameMap','認証ポリシーのルートメニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity12','9','AUTHENTICATION_PROVIDER','MetadataTypeEntity.displayNameMap','認証プロバイダ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPAUTH_LEVEL_GRP_DN','9','AUTH_LEVEL_GRP','ResourceEntity.displayNameMap','認証のグループ化');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPAUTH_LVL_GRP_ATTR_DN','9','AUTH_LVL_GRP_ATTR','ResourceEntity.displayNameMap','認証レベルのグループ化ルート属性');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPAUTH_LVL_GRP_EDIT_ROOT_DN','9','AUTH_LVL_GRP_EDIT_ROOT','ResourceEntity.displayNameMap','認証レベルのグループ化ルート編集');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPAUTH_LVL_GRP_NEW_ROOT_DN','9','AUTH_LVL_GRP_NEW_ROOT','ResourceEntity.displayNameMap','認証レベルのグループ化ルート');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPAUTH_PROVIDER','9','AUTH_PROVIDER','ResourceTypeEntity.displayNameMap','認証プロバイダ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity13','9','AUTH_REPO','MetadataTypeEntity.displayNameMap','認証リポジトリ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPAUTH_REPO','9','AUTH_REPO','ResourceTypeEntity.displayNameMap','認証リポジトリ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPBACK_TO_AUTH_LVL_DN','9','BACK_TO_AUTH_LVL','ResourceEntity.displayNameMap','グループ化に戻る');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPBACK_TO_AUTH_LVL_GRP_SRH_DN','9','BACK_TO_AUTH_LVL_GRP_SRH','ResourceEntity.displayNameMap','検索に戻る');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPBACK_TO_CP_DESC','9','BACK_TO_CP','ResourceEntity.displayNameMap','コンテンツプロバイダに戻る');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPBATCH_PROC_MENU_DISPLAY','9','BATCH_PROC','ResourceEntity.displayNameMap','バッチ処理');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPBATCH_TASK_EDIT_DESC','9','BATCH_TASK_EDIT','ResourceEntity.displayNameMap','バッチタスクの編集');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPBATCH_TASK_ROOT_DESC','9','BATCH_TASK_ROOT','ResourceEntity.displayNameMap','バッチタスクのルート');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity14','9','BL','MetadataTypeEntity.displayNameMap','無効');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPBULK_OPS_DESC','9','BULK_OPS','ResourceEntity.displayNameMap','ユーザーの一括操作');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity15','9','CELL_PHONE','MetadataTypeEntity.displayNameMap','携帯電話');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPCHAL_MENU_DISPLAY','9','CHALLENGE','ResourceEntity.displayNameMap','チャレンジクエスト');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPCHAL_RESP_QUESTION_DESC','9','CHALLENGE_RESPONSE_QUESTION','ResourceEntity.displayNameMap','チャレンジレスポンス質問');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPCHAL_RESP_QUESTION_NEW_DSC','9','CHALLENGE_RESPONSE_QUESTION_NEW','ResourceEntity.displayNameMap','新しい質問を作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPCHAL_RESP_QUEST_ROOT_DESC','9','CHALLENGE_RESPONSE_QUESTION_ROOT','ResourceEntity.displayNameMap','チャレンジレスポンス質問のルートメニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity16','9','CHECKBOX','MetadataTypeEntity.displayNameMap','チェックボックス');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPCHNGPSWD_MENU_DISPLAY','9','CHNGPSWD','ResourceEntity.displayNameMap','パスワードを変更');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPCONF_POLICY_PAGE_DIS','9','CONF_POLICY_PAGE','ResourceEntity.displayNameMap','ITポリシーを設定');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity17','9','CONTENT_PROVIDER','MetadataTypeEntity.displayNameMap','コンテンツプロバイダ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPCONTENT_PROVIDER','9','CONTENT_PROVIDER','ResourceTypeEntity.displayNameMap','コンテンツプロバイダ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPCPROV_EDIT_DESC','9','CONTENT_PROV_EDIT','ResourceEntity.displayNameMap','コンテンツプロバイダの編集メニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPCPROV_EDIT_CURRENT_DESC','9','CONTENT_PROV_EDIT_CURRENT','ResourceEntity.displayNameMap','プロバイダを編集');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPCPROV_EDIT_SEARCH_DESC','9','CONTENT_PROV_EDIT_SEARCH','ResourceEntity.displayNameMap','検索に戻る');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPCPROV_NEW_DSC','9','CONTENT_PROV_NEW','ResourceEntity.displayNameMap','新しいプロバイダを作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPCPROV_NEW_EDIT_DESC','9','CONTENT_PROV_NEW_EDIT','ResourceEntity.displayNameMap','新しいプロバイダを作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPCPROV_ROOT_DESC','9','CONTENT_PROV_ROOT','ResourceEntity.displayNameMap','コンテンツプロバイダのルートメニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPCPROV_SEARCH_DESC','9','CONTENT_PROV_SEARCH','ResourceEntity.displayNameMap','コンテンツプロバイダを検索');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPCPROV_SEARCH_CHILD_DESC','9','CONTENT_PROV_SEARCH_CHILD','ResourceEntity.displayNameMap','コンテンツプロバイダ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity18','9','Contractor','MetadataTypeEntity.displayNameMap','契約者のユーザタイプ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPCREATEREQ_MENU_DISPLAY','9','CREATEREQ','ResourceEntity.displayNameMap','リクエストを作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPCR_RES_DISP_NAME','9','CREATE_RESOURCE_MENU','ResourceEntity.displayNameMap','新しいリソースを作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPCUST_FIELD_EDIT_DESC','9','CUSTOM_FIELD_EDIT','ResourceEntity.displayNameMap','カスタムフィールドの編集メニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPCUST_FIELD_EDIT_NEW_DESC','9','CUSTOM_FIELD_EDIT_NEW','ResourceEntity.displayNameMap','新しいカスタムフィールドを作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPCUST_FIELD_EDIT_SEARCH_DESC','9','CUSTOM_FIELD_EDIT_SEARCH','ResourceEntity.displayNameMap','検索に戻る');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPCUST_FIELD_NEW_DSC','9','CUSTOM_FIELD_NEW','ResourceEntity.displayNameMap','新しいカスタムフィールドを作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPCUST_FIELD_ROOT_DESC','9','CUSTOM_FIELD_ROOT','ResourceEntity.displayNameMap','カスタムフィールドのルートメニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPCUST_FIELD_SEARCH_DESC','9','CUSTOM_FIELD_SEARCH','ResourceEntity.displayNameMap','カスタムフィールドを検索');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPCUST_FIELD_SEARCH_CHILD_DESC','9','CUSTOM_FIELD_SEARCH_CHILD','ResourceEntity.displayNameMap','カスタムフィールド');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity19','9','DATE','MetadataTypeEntity.displayNameMap','日付フィールド');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity20','9','DEFAULT_GROUP','MetadataTypeEntity.displayNameMap','DEFAULT GROUP TYPE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPDEFAULT_USER_TYPE','9','DEFAULT_USER','MetadataTypeEntity.displayNameMap','デフォルトユーザー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity21','9','DELETED','MetadataTypeEntity.displayNameMap','DELETED');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPDELG_FILTER_MENU_DISPLAY','9','DELG_FILTER','ResourceEntity.displayNameMap','委任フィルター');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPDEPARTMENT','9','DEPARTMENT','OrganizationTypeEntity.displayNameMap','部門');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity22','9','departmentType','MetadataTypeEntity.displayNameMap','部門');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity23','9','DIRECTORY','MetadataTypeEntity.displayNameMap','ディレクトリ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPDIRECTORY_MENU_DISPLAY','9','DIRECTORY','ResourceEntity.displayNameMap','ディレクトリ検索');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPDIR_LOOKUP_PAGE_DIS','9','DIR_LOOKUP_PAGE','ResourceEntity.displayNameMap','ディレクトリ検索');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity24','9','DISABLED','MetadataTypeEntity.displayNameMap','無効');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPDIVISION','9','DIVISION','OrganizationTypeEntity.displayNameMap','分割');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity25','9','divisionType','MetadataTypeEntity.displayNameMap','分割');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity26','9','DL','MetadataTypeEntity.displayNameMap','削除');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPEDIT_BATCH_TASK_DESC','9','EDIT_BATCH_TASK','ResourceEntity.displayNameMap','バッチタスクを編集');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPEDIT_GROUP_DESC','9','EDIT_GROUP','ResourceEntity.displayNameMap','グループを編集');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPEDIT_ORG_DESC','9','EDIT_ORG','ResourceEntity.displayNameMap','組織を編集');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPEDIT_ORG_MEMBERSHIP_DESC','9','EDIT_ORG_MEMBERSHIP','ResourceEntity.displayNameMap','メンバーシップ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPEDIT_ORG_TYPE_DESC','9','EDIT_ORG_TYPE','ResourceEntity.displayNameMap','組織タイプを編集');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPEDIT_ORG_TYPE_IDMAN_DESC','9','EDIT_ORG_TYPE_IDMAN','ResourceEntity.displayNameMap','組織タイプ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPEDIT_POL_ATTR_SRCH_BCK_DESC','9','EDIT_POLICY_ATTR_SRCH_BCK','ResourceEntity.displayNameMap','検索に戻る');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPEDIT_RESOURCE_DIS','9','EDIT_RESOURCE','ResourceEntity.displayNameMap','リソースを編集');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPEDIT_ROLE_DESC','9','EDIT_ROLE','ResourceEntity.displayNameMap','ロールを編集');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity27','9','FILE','MetadataTypeEntity.displayNameMap','ファイル');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity28','9','GOOGLE_Connector','MetadataTypeEntity.displayNameMap','GOOGLE APPS コネクタ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPGROUP_EDIT_MENU_DESC','9','GROUP_EDIT_MENU','ResourceEntity.displayNameMap','グループルートの編集メニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPGROUP_ENTITLEMENTS_DESC','9','GROUP_ENTITLEMENTS','ResourceEntity.displayNameMap','グループの権限');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPGROUP_MENUS_DESC','9','GROUP_MENUS','ResourceEntity.displayNameMap','メニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPGROUP_ROOT_MENU_DESC','9','GROUP_ROOT_MENU','ResourceEntity.displayNameMap','グループのルートメニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPGROUP_SEARCH_DESC','9','GROUP_SEARCH','ResourceEntity.displayNameMap','グループ検索');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPGRP_APROVER_ASSOC_DN','9','GRP_APROVER_ASSOC','ResourceEntity.displayNameMap','承認者提携');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity29','9','HOME_ADDRESS','MetadataTypeEntity.displayNameMap','自宅の住所');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity30','9','HOME_EMAIL','MetadataTypeEntity.displayNameMap','自宅のメールアドレス');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity31','9','HOME_PHONE','MetadataTypeEntity.displayNameMap','自宅の電話番号');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPIDM_MENU_DISPLAY','9','IDM','ResourceEntity.displayNameMap','アイデンティティ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPIDMAN_MENU_DISPLAY','9','IDMAN','ResourceEntity.displayNameMap','ユーザー管理');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPIDQUEST_MENU_DISPLAY','9','IDQUEST','ResourceEntity.displayNameMap','チャレンジレスポンス');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPIMPERSIONATION_MENU_DESC','9','IMPERSIONATION_MENU','ResourceEntity.displayNameMap','偽装');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity32','9','INACTIVE','MetadataTypeEntity.displayNameMap','INACTIVE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity33','9','InetOrgPerson','MetadataTypeEntity.displayNameMap','InetOrgPersonのユーザータイプ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPINTERNAL_USER_TYPE','9','INTERNAL_USER','MetadataTypeEntity.displayNameMap','内部ユーザー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity34','9','KERBEROS_KEYTAB_FILE','MetadataTypeEntity.displayNameMap','Kerberos Keytabファイル');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity35','9','KERBEROS_SERVICE_NAME','MetadataTypeEntity.displayNameMap','Kerberosサービス名');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPLANGUAGE_ADMIN1','9','LANGUAGE_ADMIN','ResourceEntity.displayNameMap','言語');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPLANGUAGE_EDIT1','9','LANGUAGE_EDIT','ResourceEntity.displayNameMap','新しい言語');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPLANGUAGE_SEARCH1','9','LANGUAGE_SEARCH','ResourceEntity.displayNameMap','言語');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity36','9','LdapOrgPerson','MetadataTypeEntity.displayNameMap','LdapOrgPersonのユーザータイプ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity37','9','LDAP_Connector','MetadataTypeEntity.displayNameMap','LDAPコネクタ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity38','9','LDAP_GROUP_TYPE','MetadataTypeEntity.displayNameMap','LDAP GROUP TYPE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity39','9','LEAVE','MetadataTypeEntity.displayNameMap','LEAVE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity40','9','LINUX_Connector','MetadataTypeEntity.displayNameMap','Linuxコネクタ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPLOCATION_MENU_DISPLAY','9','LOCATION','ResourceEntity.displayNameMap','ロケーション');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity41','9','LOCKED','MetadataTypeEntity.displayNameMap','LOCKED');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity42','9','LOCKED_ADMIN','MetadataTypeEntity.displayNameMap','LOCKED_ADMIN');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity43','9','MANAGED_SYS','MetadataTypeEntity.displayNameMap','管理対象システム');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMANAGED_SYS','9','MANAGED_SYS','ResourceTypeEntity.displayNameMap','管理対象システム');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity44','9','MANAGER','MetadataTypeEntity.displayNameMap','マネージャー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMANAGEREQ_MENU_DISPLAY','9','MANAGEREQ','ResourceEntity.displayNameMap','履歴をリクエスト');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMANUALRECON_DESC','9','MANUALRECON','ResourceEntity.displayNameMap','手動調整');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMENUS_SEARCH_DC','9','MENUS_SEARCH','ResourceEntity.displayNameMap','メニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity45','9','MENU_ITEM','MetadataTypeEntity.displayNameMap','メニューアイテム・タイプ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMENU_ITEM','9','MENU_ITEM','ResourceTypeEntity.displayNameMap','メニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMETADATA_MENU_DISPLAY','9','METADATA','ResourceEntity.displayNameMap','メタデータ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMETA_ADMIN_DESC','9','META_ADMIN','ResourceEntity.displayNameMap','メタデータ要素');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMETA_EDIT_DESC','9','META_EDIT','ResourceEntity.displayNameMap','新しいメタデータ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMETA_SEARCH_DESC','9','META_SEARCH','ResourceEntity.displayNameMap','メタデータ検索');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMETA_TYPE_ADMIN_DESC','9','META_TYPE_ADMIN','ResourceEntity.displayNameMap','メタデータ・タイプ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMETA_TYPE_EDIT_DESC','9','META_TYPE_EDIT','ResourceEntity.displayNameMap','新しいメタデータ・タイプ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMETA_TYPE_EDIT_RETURN_DESC','9','META_TYPE_EDIT_RETURN','ResourceEntity.displayNameMap','メタデータ・タイプへ戻る');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMETA_TYPE_SEARCH_DESC','9','META_TYPE_SEARCH','ResourceEntity.displayNameMap','メタデータ・タイプの検索');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMNGSYS_MENU_DISPLAY','9','MNGSYS','ResourceEntity.displayNameMap','管理対象システム');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMNGSYSRULES_DESC','9','MNGSYSRULES','ResourceEntity.displayNameMap','管理対象システムのルール');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMNGSYS_EDIT_DESC','9','MNGSYS_EDIT','ResourceEntity.displayNameMap','管理対象システムを編集');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMNGSYS_DESC','9','MNGSYS_MENU_ITEM','ResourceEntity.displayNameMap','管理対象システム');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMNGSYS_DSC','9','MNGSYS_NEW','ResourceEntity.displayNameMap','管理対象システムを作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMNG_SYS_VIEWER_DESC','9','MNG_SYS_VIEWER','ResourceEntity.displayNameMap','管理対象システムのビューア');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity46','9','MULTI_SELECT','MetadataTypeEntity.displayNameMap','複数選択リスト');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPNEWUSER_MENU_DISPLAY','9','NEWUSER','ResourceEntity.displayNameMap','新規ユーザー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPNEWUSER-NOAPPRV_MENU_DISPLAY','9','NEWUSER-NOAPPRV','ResourceEntity.displayNameMap','新規ユーザー-承認者以外');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPNEW_AUTH_POLICY_DESC','9','NEW_AUTHENTICATION_POLICY','ResourceEntity.displayNameMap','新しい認証ポリシーを作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPNEW_AUTH_LVL_GRP_DN','9','NEW_AUTH_LVL_GRP','ResourceEntity.displayNameMap','新しいグループを作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPNEW_BATCH_TASK_DESC','9','NEW_BATCH_TASK','ResourceEntity.displayNameMap','新しいバッチタスク');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPNEW_GROUP_DESC','9','NEW_GROUP','ResourceEntity.displayNameMap','新しいグループを作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPNEW_ORG_DESC','9','NEW_ORG','ResourceEntity.displayNameMap','新しい組織を作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPNEW_ORG_TYPE_DESC','9','NEW_ORG_TYPE','ResourceEntity.displayNameMap','新しい組織タイプ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPNEW_PASSWORD_POLICY_DESC','9','NEW_PASSWORD_POLICY','ResourceEntity.displayNameMap','新しいパスワードポリシーを作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPNEW_POLICY_ATTR_DESC','9','NEW_POLICY_ATTR','ResourceEntity.displayNameMap','新しい属性ポリシー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPNEW_ROLE_DESC','9','NEW_ROLE','ResourceEntity.displayNameMap','新しいロールを作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPNEW_UI_THEME_DN','9','NEW_UI_THEME','ResourceEntity.displayNameMap','新しいUIのテーマ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPNEW_USER_DESC','9','NEW_USER','ResourceEntity.displayNameMap','新規ユーザーを作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity47','9','NO-PROVISION-APP','MetadataTypeEntity.displayNameMap','配信不能アプリ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity48','9','OFF-LINE','MetadataTypeEntity.displayNameMap','OFF-LINE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity49','9','OFFICE_ADDRESS','MetadataTypeEntity.displayNameMap','会社の住所');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity50','9','OFFICE_PHONE','MetadataTypeEntity.displayNameMap','会社の電話番号');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPORG_MENU_DISPLAY','9','ORG','ResourceEntity.displayNameMap','組織');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPORGANIZATION','9','ORGANIZATION','OrganizationTypeEntity.displayNameMap','組織');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPORGANIZATION_EDIT_ID_DESC','9','ORGANIZATION_EDIT_ID','ResourceEntity.displayNameMap','組織の編集メニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPORGANIZATION_ROOT_ID_DESC','9','ORGANIZATION_ROOT_ID','ResourceEntity.displayNameMap','組織のルートメニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity51','9','OrgOpenIAM','MetadataTypeEntity.displayNameMap','OpenIAM');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPORG_APROVER_ASSOC_DN','9','ORG_APROVER_ASSOC','ResourceEntity.displayNameMap','承認者提携');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPORG_MEMBERSHIP_DESC','9','ORG_MEMBERSHIP','ResourceEntity.displayNameMap','組織メンバーシップ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPORG_SEARCH_DESC','9','ORG_SEARCH','ResourceEntity.displayNameMap','組織の検索');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPORG_TYPE_EDIT_SEARCH_DESC','9','ORG_TYPE_EDIT_SEARCH','ResourceEntity.displayNameMap','組織タイプを検索');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPORG_TYPE_SEARCH_DESC','9','ORG_TYPE_SEARCH','ResourceEntity.displayNameMap','組織タイプを検索');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPORG_TYPE_SUBMENU_EDIT_DESC','9','ORG_TYPE_SUBMENU_EDIT','ResourceEntity.displayNameMap','組織タイプの編集');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPORG_TYPE_SUBMENU_ROOT_DESC','9','ORG_TYPE_SUBMENU_ROOT','ResourceEntity.displayNameMap','組織タイプのルート');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPPAGE_TEMPL_EDIT_DESC','9','PAGE_TEMPLATE_EDIT','ResourceEntity.displayNameMap','ページテンプレートの編集メニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPPAGE_TEMPL_EDIT_NEW_DESC','9','PAGE_TEMPLATE_EDIT_NEW','ResourceEntity.displayNameMap','新しいテンプレートを作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPPAGE_TEMPL_EDIT_SEARCH_DESC','9','PAGE_TEMPLATE_EDIT_SEARCH','ResourceEntity.displayNameMap','検索に戻る');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPPAGE_TEMPL_NEW_DSC','9','PAGE_TEMPLATE_NEW','ResourceEntity.displayNameMap','新しいテンプレートを作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPPAGE_TEMPL_ROOT_DESC','9','PAGE_TEMPLATE_ROOT','ResourceEntity.displayNameMap','ページテンプレートのルートメニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPPAGE_TEMPL_SEARCH_DESC','9','PAGE_TEMPLATE_SEARCH','ResourceEntity.displayNameMap','ページテンプレートを検索');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity52','9','PASSWORD','MetadataTypeEntity.displayNameMap','パスワードフィールド');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPPOLICY_MENU_DESC','9','PASSWORD_POLICY','ResourceEntity.displayNameMap','パスワードポリシー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPPASSWORD_POLICY_EDIT_DESC','9','PASSWORD_POLICY_EDIT','ResourceEntity.displayNameMap','提携ポリシーのルートメニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPPOLICY_ROOT_MENU_DESC','9','PASSWORD_POLICY_ROOT_MENU','ResourceEntity.displayNameMap','パスワードポリシーのルートメニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity53','9','PENDING_APPROVAL','MetadataTypeEntity.displayNameMap','PENDING_APPROVAL');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity54','9','PENDING_INITIAL_LOGIN','MetadataTypeEntity.displayNameMap','PENDING_INITIAL_LOGIN');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity55','9','PENDING_START_DATE','MetadataTypeEntity.displayNameMap','PENDING_START_DATE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity56','9','PENDING_USER_VALIDATION','MetadataTypeEntity.displayNameMap','PENDING_USER_VALIDATION');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPPOLICY_ATTR_EDIT_ROOTT_DESC','9','POLICY_ATTR_EDIT_ROOT','ResourceEntity.displayNameMap','属性ポリシー編集のルートメニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPPOLICY_ATTR_ROOT_DESC','9','POLICY_ATTR_ROOT','ResourceEntity.displayNameMap','属性ポリシーのルートメニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity57','9','PRIMARY_EMAIL','MetadataTypeEntity.displayNameMap','プライマリメール');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPPROFILE_MENU_DISPLAY','9','PROFILE','ResourceEntity.displayNameMap','プロファイルを編集');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPPROVCONNECT_MENU_DISPLAY','9','PROVCONNECT','ResourceEntity.displayNameMap','コネクタ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPPROVCONNECT_DESC','9','PROVCONNECT_MENU_ITEM','ResourceEntity.displayNameMap','プロビジョニングコネクタ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPPROVISIONING_MENU_DISPLAY','9','PROVISIONING','ResourceEntity.displayNameMap','プロビジョニング');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPPROV_CONNECTOR_DSC','9','PROV_CONNECTOR_NEW','ResourceEntity.displayNameMap','新しいコネクタを作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity58','9','RADIO','MetadataTypeEntity.displayNameMap','ラジオボタン');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity59','9','RDBMS_Connector','MetadataTypeEntity.displayNameMap','RDBMSコネクタ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity60','9','READY','MetadataTypeEntity.displayNameMap','READY');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPREPORT_MENU_DISPLAY','9','REPORT','ResourceEntity.displayNameMap','管理レポート');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPREQINBOX_MENU_DISPLAY','9','REQINBOX','ResourceEntity.displayNameMap','受信箱');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPREQUEST_APPROVAL_DESC','9','REQUEST_APPROVAL','ResourceEntity.displayNameMap','承認をリクエスト');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPRESOURCE_EDIT_PAGE_ROOT_DIS','9','RESOURCE_EDIT_PAGE_ROOT','ResourceEntity.displayNameMap','リソース編集ページルート');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPRESPOLICYMAP_MENU_DISPLAY','9','RESPOLICYMAP','ResourceEntity.displayNameMap','ポリシーマップ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPRESRECONCILE_MENU_DISPLAY','9','RESRECONCILE','ResourceEntity.displayNameMap','調整');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPRESSUMMARY_MENU_DISPLAY','9','RESSUMMARY','ResourceEntity.displayNameMap','リソース詳細');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPRES_APROVER_ASSOC_DN','9','RES_APROVER_ASSOC','ResourceEntity.displayNameMap','承認者提携');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPRES_ENT_SUB_DIS','9','RES_ENT_SUB','ResourceEntity.displayNameMap','権限');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPRES_TYPE_DESC','9','RES_TYPE_ITEM','ResourceEntity.displayNameMap','リソース・タイプ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPRES_TYPE_NEW_DESC','9','RES_TYPE_NEW','ResourceEntity.displayNameMap','新しいリソース・タイプ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity61','9','RETIRED','MetadataTypeEntity.displayNameMap','ETIRED');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity62','9','RJ','MetadataTypeEntity.displayNameMap','REJECT');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPROLE_APROVER_ASSOC_DN','9','ROLE_APROVER_ASSOC','ResourceEntity.displayNameMap','承認者提携');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPROLE_EDIT_MENU_DESC','9','ROLE_EDIT_MENU','ResourceEntity.displayNameMap','ロールルートの編集メニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPROLE_ENTITLEMENTS_DESC','9','ROLE_ENTITLEMENTS','ResourceEntity.displayNameMap','ロールの権限');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPROLE_MENUS_DESC','9','ROLE_MENUS','ResourceEntity.displayNameMap','メニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPROLE_ROOT_MENU_DESC','9','ROLE_ROOT_MENU','ResourceEntity.displayNameMap','ロールのルートメニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPROLE_SEARCH_DESC','9','ROLE_SEARCH','ResourceEntity.displayNameMap','ロール検索');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity63','9','SALES REP','MetadataTypeEntity.displayNameMap','SALES REP');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity64','9','SCRIPT_Connector','MetadataTypeEntity.displayNameMap','スクリプトコネクタ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSEARCH_BATCH_EDIT_DESC','9','SEARCH_BATCH_EDIT','ResourceEntity.displayNameMap','バッチタスクを検索');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSEARCH_BATCH_NEW_DESC','9','SEARCH_BATCH_NEW','ResourceEntity.displayNameMap','バッチタスクを検索');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity65','9','SECURITY MANAGER','MetadataTypeEntity.displayNameMap','SECURITY MANAGER');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSECURITY_GROUP_MENU_DISPLAY','9','SECURITY_GROUP','ResourceEntity.displayNameMap','グループ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSECURITY_POLICY_MENU_DISPLAY','9','SECURITY_POLICY','ResourceEntity.displayNameMap','ポリシー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSECURITY_RES_MENU_DISPLAY','9','SECURITY_RES','ResourceEntity.displayNameMap','リソース');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSECURITY_ROLE_MENU_DISPLAY','9','SECURITY_ROLE','ResourceEntity.displayNameMap','ロール');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity66','9','SELECT','MetadataTypeEntity.displayNameMap','コンボボックス');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSELFCENTER_MENU_DISPLAY','9','SELFCENTER','ResourceEntity.displayNameMap','セルフサービスセンター');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSELFSERVE_SUP_SUB_DESC','9','SELFSERVE_SUP_SUB','ResourceEntity.displayNameMap','上司 & 部下');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSELFSERVICE_MENU_DISPLAY','9','SELFSERVICE','ResourceEntity.displayNameMap','SELF SERVICE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSELFSERVICE_EXT_DN','9','SELFSERVICE_EXT','ResourceEntity.displayNameMap','SelfServiceの拡張機能ルート');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSELFSERVICE_GROUPS_DN','9','SELFSERVICE_GROUPS','ResourceEntity.displayNameMap','グループ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSELFSERVICE_MYAPPS_DESC','9','SELFSERVICE_MYAPPS','ResourceEntity.displayNameMap','マイアプリケーション');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSELFSERVICE_MYINFO_DESC','9','SELFSERVICE_MYINFO','ResourceEntity.displayNameMap','私の情報');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSELFSERVICE_REPORT_DESC','9','SELFSERVICE_REPORT','ResourceEntity.displayNameMap','レポート');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSELFSERVICE_RESOURCES_DN','9','SELFSERVICE_RESOURCES','ResourceEntity.displayNameMap','リソース');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSELFSERVICE_ROLES_DN','9','SELFSERVICE_ROLES','ResourceEntity.displayNameMap','ロール');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSS_ACCESS_REVIEW_DESC','9','SELFSERV_ACCESS_REVIEW','ResourceEntity.displayNameMap','アクセスレビュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSELFSERV_GRP_BACK_SRCH_DN','9','SELFSERV_GRP_BACK_SRCH','ResourceEntity.displayNameMap','検索に戻る');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSELFSERV_GRP_EDIT_DN','9','SELFSERV_GRP_EDIT','ResourceEntity.displayNameMap','グループを編集');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSELFSERV_GRP_NEW_DN','9','SELFSERV_GRP_NEW','ResourceEntity.displayNameMap','新しいグループを作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSELFSERV_ROLE_NEW_DN','9','SELFSERV_ROLE_NEW','ResourceEntity.displayNameMap','新しいロールを作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSELFSERV_USER_EDIT_DESC','9','SELFSERV_USER_EDIT','ResourceEntity.displayNameMap','ユーザーを編集');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSS_USR_EDIT_RT_DESC','9','SELFSERV_USER_EDIT_ROOT','ResourceEntity.displayNameMap','SelfServiceのユーザー編集ルート');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSS_USER_MEMSHP_DES','9','SELFSERV_USER_MEMSHP','ResourceEntity.displayNameMap','ユーザーの権限');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSS_USER_LOGIN_DESC','9','SELFSER_USER_LOGIN','ResourceEntity.displayNameMap','アイデンティティ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSS_USER_NEW_LOGIN_DESC','9','SELFSER_USER_NEW_LOGIN','ResourceEntity.displayNameMap','新しいアイデンティティを作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSS_ACCESS_MNGMNT_ORG_DESC','9','SELFSRVS_ACCESS_MNGMNT_ORG','ResourceEntity.displayNameMap','組織');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSS_EXAMPLE_DN','9','SELFSRV_EXAMPLE','ResourceEntity.displayNameMap','例');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSS_GRP_EDIT_ROOT_DESC','9','SELFSRV_GRP_EDIT_ROOT','ResourceEntity.displayNameMap','SelfServiceのグループ編集ルート');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSS_GRP_SRCH_ROOT_DESC','9','SELFSRV_GRP_SRCH_ROOT','ResourceEntity.displayNameMap','SelfServiceのグループルート');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSS_RES_BACK_SRCH_DN','9','SELFSRV_RES_BACK_SRCH','ResourceEntity.displayNameMap','検索に戻る');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSS_RES_EDIT_DN','9','SELFSRV_RES_EDIT','ResourceEntity.displayNameMap','リソースを編集');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSS_RES_EDIT_ROOT_DESC','9','SELFSRV_RES_EDIT_ROOT','ResourceEntity.displayNameMap','SelfServiceのルソース編集ルート');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSS_RES_NEW_DN','9','SELFSRV_RES_NEW','ResourceEntity.displayNameMap','新しいリソースを作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSS_RES_SRCH_ROOT_DN','9','SELFSRV_RES_SRCH_ROOT','ResourceEntity.displayNameMap','SelfServiceのリソースルート');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSS_ROLE_BACK_SRCH_DN','9','SELFSRV_ROLE_BACK_SRCH','ResourceEntity.displayNameMap','検索に戻る');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSS_ROLE_EDIT_DN','9','SELFSRV_ROLE_EDIT','ResourceEntity.displayNameMap','ロールを編集');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSS_ROLE_EDIT_ROOT_DESC','9','SELFSRV_ROLE_EDIT_ROOT','ResourceEntity.displayNameMap','SelfServiceのロール編集ルート');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSS_ROLE_SRCH_ROOT_DN','9','SELFSRV_ROLE_SRCH_ROOT','ResourceEntity.displayNameMap','SelfServiceのロールルート');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSELF_QUERYUSER_MENU_DISPLAY','9','SELF_QUERYUSER','ResourceEntity.displayNameMap','ユーザーを管理');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSELF_SUB_ORGS_EDIT_DESC','9','SELF_SUB_ORGS_EDIT','ResourceEntity.displayNameMap','組織を編集');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSELF_SUB_ORGS_NEW_DESC','9','SELF_SUB_ORGS_NEW','ResourceEntity.displayNameMap','新しい組織');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSELF_SUB_ORGS_SEARCH_DESC','9','SELF_SUB_ORGS_SEARCH','ResourceEntity.displayNameMap','組織を検索');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSELF_SUB_REPORT_NEW_DSC','9','SELF_SUB_REPORT_NEW','ResourceEntity.displayNameMap','レポートをサブスクライブ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSELF_SUB_REPORT_ROOT_DESC','9','SELF_SUB_REPORT_ROOT','ResourceEntity.displayNameMap','レポートのルーをメニューをサブスクライブ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSELF_VIEW_REPORT_NEW_DSC','9','SELF_VIEW_REPORT_NEW','ResourceEntity.displayNameMap','新しい表示レポートを作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSELF_VIEW_REPORT_ROOT_DESC','9','SELF_VIEW_REPORT_ROOT','ResourceEntity.displayNameMap','表示レポートのルートメニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity67','9','SERVICE REP','MetadataTypeEntity.displayNameMap','SERVICE REP');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity68','9','SOAP_Connector','MetadataTypeEntity.displayNameMap','SOAPコネクタ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSS_GRP_ENT_DN','9','SS_GRP_ENT','ResourceEntity.displayNameMap','権限');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSS_ORG_BACK_SEARCH_DN','9','SS_ORG_BACK_SEARCH','ResourceEntity.displayNameMap','検索に戻る');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSS_RES_ENT_DN','9','SS_RES_ENT','ResourceEntity.displayNameMap','権限');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSS_ROLE_ENT_DN','9','SS_ROLE_ENT','ResourceEntity.displayNameMap','権限');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSUBSCRIBE_MENU_DESC','9','SUBSCRIBE','ResourceEntity.displayNameMap','サブスクライブ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSUBSIDIARY','9','SUBSIDIARY','OrganizationTypeEntity.displayNameMap','子会社');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSUP_SUB_PAGE_DIS','9','SUP_SUB_PAGE','ResourceEntity.displayNameMap','上司 & 部下');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSYNCLOG_ADMIN_DESC','9','SYNCLOG','ResourceEntity.displayNameMap','ログビューア');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSYNCLOG_DESC','9','SYNCLOG_MENU_ITEM','ResourceEntity.displayNameMap','同期トランザクションのログビューア');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSYNCUSER_MENU_DISPLAY','9','SYNCUSER','ResourceEntity.displayNameMap','同期');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSYNCUSER_EDIT_DESC','9','SYNCUSER_EDIT','ResourceEntity.displayNameMap','同期を編集');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSYNCUSER_DESC','9','SYNCUSER_MENU_ITEM','ResourceEntity.displayNameMap','同期');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSYNCUSER_NEW_DESC','9','SYNCUSER_NEW','ResourceEntity.displayNameMap','同期を作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSYNCUSER_POLICYMAP_DESC','9','SYNCUSER_POLICYMAP','ResourceEntity.displayNameMap','ポリシーマップ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity69','9','SYS ACCOUNT','MetadataTypeEntity.displayNameMap','SYSTEM ACCOUNT');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity70','9','SystemAccount','MetadataTypeEntity.displayNameMap','システムアカウント・タイプ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity71','9','SYS_ACTION','MetadataTypeEntity.displayNameMap','システムアクション');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPSYS_ACTION','9','SYS_ACTION','ResourceTypeEntity.displayNameMap','システムアクション');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPTEMPLATE_SEARCH_CHILD_DESC','9','TEMPLATE_SEARCH_CHILD','ResourceEntity.displayNameMap','ページテンプレート');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity72','9','TERMINATE','MetadataTypeEntity.displayNameMap','TERMINATE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity73','9','TEXT','MetadataTypeEntity.displayNameMap','テキストフィールド');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity74','9','TEXTAREA','MetadataTypeEntity.displayNameMap','複数行のテキストフィールド');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity75','9','UB','MetadataTypeEntity.displayNameMap','UN-DISABLE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity76','9','UI_TEMPLATE','MetadataTypeEntity.displayNameMap','UI_TEMPLATE');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUI_TEMPLATE','9','UI_TEMPLATE','ResourceTypeEntity.displayNameMap','UIのテンプレート');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUI_THEMES_DN','9','UI_THEMES','ResourceEntity.displayNameMap','UIのテーマ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUI_THEME_BACK_SRCH_DN','9','UI_THEME_BACK_SRCH','ResourceEntity.displayNameMap','検索に戻る');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUI_THEME_EDIT_DN','9','UI_THEME_EDIT','ResourceEntity.displayNameMap','UIのテーマ編集');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUI_THEME_EDIT_MODIFY_DN','9','UI_THEME_EDIT_MODIFY','ResourceEntity.displayNameMap','UIのテーマを編集');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUI_THEME_ROOT_DN','9','UI_THEME_ROOT','ResourceEntity.displayNameMap','UIのテーマルート');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUI_THEME_ROOT_SRCH_DN','9','UI_THEME_ROOT_SRCH','ResourceEntity.displayNameMap','UIのテーマを検索');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity77','9','UI_WIDGET','MetadataTypeEntity.displayNameMap','UI_WIDGET');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUI_WIDGET','9','UI_WIDGET','ResourceTypeEntity.displayNameMap','UIのウィジェット');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUPLOAD_CUST_PSWD_POLICY_DESC','9','UPLOAD_CUST_PSWD_POLICY','ResourceEntity.displayNameMap','カスタムパスワード・ポリシー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPURI_META_BACK_DESC','9','URI_META_BACK','ResourceEntity.displayNameMap','パターンに戻る');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPURI_META_EDIT_DESC','9','URI_META_EDIT','ResourceEntity.displayNameMap','URIのメタルート・アイテム');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUP_EDIT_DESC','9','URI_PATTERN_EDIT','ResourceEntity.displayNameMap','URIのパターン編集メニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUP_EDNW_PATTERN_DESC','9','URI_PATTERN_EDIT_NEW_PATTERN','ResourceEntity.displayNameMap','URIのパターンを作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUP_EDIT_PATTERN_DESC','9','URI_PATTERN_EDIT_PATTERN','ResourceEntity.displayNameMap','URIのパターンを編集');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUP_EDT_PROV_SEARCH_DESC','9','URI_PATTERN_EDT_PROV_SEARCH','ResourceEntity.displayNameMap','コンテンツプロバイダの検索');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity78','9','URL','MetadataTypeEntity.displayNameMap','URL');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity79','9','URL_PATTERN','MetadataTypeEntity.displayNameMap','Urlのパターン');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPURL_PATTERN','9','URL_PATTERN','ResourceTypeEntity.displayNameMap','Urlのパターン');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUSER_MENU_DESC','9','USER','ResourceEntity.displayNameMap','ユーザー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUSER_ATTRIBUTES_DESC','9','USER_ATTRIBUTES','ResourceEntity.displayNameMap','ユーザー属性');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUSER_BULK_MENU_DISPLAY','9','USER_BULK','ResourceEntity.displayNameMap','ユーザーバルクオプス');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUSER_DELEGATION_DESC','9','USER_DELEGATION','ResourceEntity.displayNameMap','ユーザーの委任フィルター');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUSER_EDIT_CONTACT_INFO_DESC','9','USER_EDIT_CONTACT_INFO','ResourceEntity.displayNameMap','連絡先情報');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUSER_EDIT_INFO_DESC','9','USER_EDIT_INFO','ResourceEntity.displayNameMap','ユーザー情報');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUSER_EDIT_MENU_DESC','9','USER_EDIT_MENU','ResourceEntity.displayNameMap','ユーザーのルート編集メニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUSER_ENTITLEMENTS_DESC','9','USER_ENTITLEMENTS','ResourceEntity.displayNameMap','ユーザーの権限');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUSER_HISTORY_DESC','9','USER_HISTORY','ResourceEntity.displayNameMap','ユーザーの履歴');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUSER_IDENTITY_DESC','9','USER_IDENTITY','ResourceEntity.displayNameMap','ユーザーのアイデンティティ');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUSER_MENUS_DESC','9','USER_MENUS','ResourceEntity.displayNameMap','メニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUSER_RESET_PASSWORD_DESC','9','USER_RESET_PASSWORD','ResourceEntity.displayNameMap','パスワードをリセット');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUSER_ROOT_MENU_DESC','9','USER_ROOT_MENU','ResourceEntity.displayNameMap','ユーザーのルートメニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPUSER_SEARCH_DESC','9','USER_SEARCH','ResourceEntity.displayNameMap','ユーザー検索');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPVIEW_MENU_DESC','9','VIEW','ResourceEntity.displayNameMap','表示');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity80','9','WEBSERVICE','MetadataTypeEntity.displayNameMap','Webサービス');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity81','9','WEBSERVICE_OP','MetadataTypeEntity.displayNameMap','Webサービス操作');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPWEB_REPORT_DESC','9','WEB_REPORT','ResourceEntity.displayNameMap','レポート');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPWEB_REPORT_NEW_DSC','9','WEB_REPORT_NEW','ResourceEntity.displayNameMap','新しいレポートを作成');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPWEB_REPORT_ROOT_DESC','9','WEB_REPORT_ROOT','ResourceEntity.displayNameMap','レポートのルートメニュー');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPMetadataTypeEntity82','9','WORK_EMAIL','MetadataTypeEntity.displayNameMap','会社のメール');

INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('LanguageEntity9','1','9','LanguageEntity.displayNameMap','Japanese');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('ESLanguageEntity9','4','9','LanguageEntity.displayNameMap','Japonés');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('DELanguageEntity9','2','9','LanguageEntity.displayNameMap','Japanisch');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('RULanguageEntity9','8','9','LanguageEntity.displayNameMap','Японский');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('JPLanguageEntity9','9','9','LanguageEntity.displayNameMap','日本の');


commit;
use openiam;


DROP TABLE IF EXISTS SYNCH_REVIEW_RECORD_VALUE;
DROP TABLE IF EXISTS SYNCH_REVIEW_RECORD;
DROP TABLE IF EXISTS SYNCH_REVIEW;

CREATE TABLE SYNCH_REVIEW (
	SYNCH_REVIEW_ID VARCHAR(32) NOT NULL,
	SYNCH_CONFIG_ID VARCHAR(32) NOT NULL,
	SRC_REJECTED VARCHAR(1) NOT NULL DEFAULT 'N',
	SKIP_SRC_VALID VARCHAR(1) NOT NULL DEFAULT 'N',
	SKIP_REC_VALID VARCHAR(1) NOT NULL DEFAULT 'N',
	CREATE_TIME DATETIME NOT NULL,
	MODIFY_TIME DATETIME NULL,
	EXEC_TIME DATETIME NULL,
	PRIMARY KEY (SYNCH_REVIEW_ID),
	CONSTRAINT SYNCH_CONFIG_FK FOREIGN KEY (SYNCH_CONFIG_ID) REFERENCES SYNCH_CONFIG(SYNCH_CONFIG_ID) ON DELETE CASCADE)
ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE SYNCH_REVIEW_RECORD (
	SYNCH_REVIEW_RECORD_ID VARCHAR(32) NOT NULL,
	SYNCH_REVIEW_ID VARCHAR(32) NOT NULL,
	HEADER VARCHAR(1) NOT NULL DEFAULT 'N',
	PRIMARY KEY (SYNCH_REVIEW_RECORD_ID),
	CONSTRAINT SYNCH_REVIEW_FK FOREIGN KEY (SYNCH_REVIEW_ID) REFERENCES SYNCH_REVIEW(SYNCH_REVIEW_ID) ON DELETE CASCADE)
ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE SYNCH_REVIEW_RECORD_VALUE (
	SYNCH_REVIEW_RECORD_VALUE_ID VARCHAR(32) NOT NULL,
	SYNCH_REVIEW_RECORD_ID VARCHAR(32) NOT NULL,
	VALUE VARCHAR(4096) NULL,
	PRIMARY KEY (SYNCH_REVIEW_RECORD_VALUE_ID),
	CONSTRAINT SYNCH_REVIEW_RECORD_FK FOREIGN KEY (SYNCH_REVIEW_RECORD_ID) REFERENCES SYNCH_REVIEW_RECORD(SYNCH_REVIEW_RECORD_ID) ON DELETE CASCADE)
ENGINE=InnoDB DEFAULT CHARSET=utf8;

ALTER TABLE SYNCH_REVIEW ADD INDEX SYNCH_CONFIG_IDX (SYNCH_CONFIG_ID);
ALTER TABLE SYNCH_REVIEW_RECORD ADD INDEX SYNCH_REVIEW_IDX (SYNCH_REVIEW_ID);
ALTER TABLE SYNCH_REVIEW_RECORD_VALUE ADD INDEX SYNCH_REVIEW_RECORD_IDX (SYNCH_REVIEW_RECORD_ID);
commit;
use openiam;


DELETE FROM RESOURCE_GROUP WHERE RESOURCE_ID = 'SYNCUSER_REVIEW';
DELETE FROM RESOURCE_USER WHERE RESOURCE_ID = 'SYNCUSER_REVIEW';
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID = 'SYNCUSER_REVIEW';
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID = 'SYNCUSER_REVIEW';
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID = 'SYNCUSER_REVIEW';
DELETE FROM RES WHERE RESOURCE_ID = 'SYNCUSER_REVIEW';
DELETE FROM LANGUAGE_MAPPING WHERE REFERENCE_ID='SYNCUSER_REVIEW';

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, DISPLAY_ORDER, IS_PUBLIC, URL) VALUES('SYNCUSER_REVIEW', 'MENU_ITEM', 'SYNCUSER_REVIEW', 'Synchronization Review', 10, 'N', '/webconsole-idm/provisioning/synchReviewList.html');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, ATTR_VALUE) VALUES ('SYNCUSER_REVIEW_PUB', 'SYNCUSER_REVIEW', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, ATTR_VALUE) VALUES ('SYNCUSER_REVIEW_DESC', 'SYNCUSER_REVIEW', 'MENU_DISPLAY_NAME', 'Synchronization Review');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('SYNCUSER_EDIT_MENU_ROOT', 'SYNCUSER_REVIEW');


DELIMITER $$

DROP PROCEDURE IF EXISTS ADD_MENU_ENTITLEMENTS$$
CREATE PROCEDURE ADD_MENU_ENTITLEMENTS()
	BEGIN
 		IF EXISTS (SELECT * FROM ROLE WHERE ROLE_ID='9') THEN
			IF NOT EXISTS (SELECT * FROM RESOURCE_ROLE WHERE ROLE_ID='9' and RESOURCE_ID='SYNCUSER_REVIEW') THEN
				INSERT INTO RESOURCE_ROLE (ROLE_ID, RESOURCE_ID) VALUES('9', 'SYNCUSER_REVIEW');
			END IF;
 		END IF;

	END$$
DELIMITER ;

call ADD_MENU_ENTITLEMENTS();
DROP PROCEDURE ADD_MENU_ENTITLEMENTS;

DELIMITER $$

DROP PROCEDURE IF EXISTS LOCALIZE_MENU_ITEM$$
CREATE PROCEDURE LOCALIZE_MENU_ITEM()
	BEGIN
		IF NOT EXISTS (SELECT * FROM LANGUAGE_MAPPING WHERE REFERENCE_ID='SYNCUSER_REVIEW') THEN
			INSERT INTO LANGUAGE_MAPPING(ID, LANGUAGE_ID, REFERENCE_TYPE, REFERENCE_ID, TEXT_VALUE) VALUES('SYNCUSER_REVIEW_DESC', '1', 'ResourceEntity.displayNameMap', 'SYNCUSER_REVIEW', 'Synchronization Review');
		END IF;
	END$$
DELIMITER ;

call LOCALIZE_MENU_ITEM();
DROP PROCEDURE LOCALIZE_MENU_ITEM;
commit;
use openiam;

DELETE FROM AUTH_ATTRIBUTE WHERE PROVIDER_TYPE IN('SAML_SP_PROVIDER');
DELETE FROM AUTH_PROVIDER_TYPE WHERE PROVIDER_TYPE IN('SAML_SP_PROVIDER');

INSERT INTO AUTH_PROVIDER_TYPE (PROVIDER_TYPE, DESCRIPTION, ACTIVE) VALUES('SAML_SP_PROVIDER', 'SAML Service Provider', 'Y');
UPDATE AUTH_PROVIDER_TYPE SET DESCRIPTION='SAML IDP Provider' WHERE PROVIDER_TYPE='SAML_PROVIDER';


INSERT INTO AUTH_ATTRIBUTE (AUTH_ATTRIBUTE_ID, ATTRIBUTE_NAME, PROVIDER_TYPE, DESCRIPTION, REQUIRED, DATA_TYPE)
	VALUES('SamlSPLoginURL', 'Sign-in page URL', 'SAML_SP_PROVIDER', 'URL for signing in to your system', 'Y', 'singleValue');
	

INSERT INTO AUTH_ATTRIBUTE (AUTH_ATTRIBUTE_ID, ATTRIBUTE_NAME, PROVIDER_TYPE, DESCRIPTION, REQUIRED, DATA_TYPE)
	VALUES('SamlSPLogoutURL', 'Sign-out page URL', 'SAML_SP_PROVIDER', 'URL to redirect users to when they sign out', 'Y', 'singleValue');
	

INSERT INTO AUTH_ATTRIBUTE (AUTH_ATTRIBUTE_ID, ATTRIBUTE_NAME, PROVIDER_TYPE, DESCRIPTION, REQUIRED, DATA_TYPE)
	VALUES('SamlSPIssuerName', 'SAML Issuer Name', 'SAML_SP_PROVIDER', 'The Issuer to use.  This will be the Request Issuer in the IDP', 'Y', 'singleValue');
	
ALTER TABLE AUTH_PROVIDER_TYPE ADD COLUMN HAS_PUBLIC_KEY CHAR(1) NOT NULL DEFAULT 'Y';
ALTER TABLE AUTH_PROVIDER_TYPE ADD COLUMN HAS_PRIVATE_KEY CHAR(1) NOT NULL DEFAULT 'Y';

UPDATE AUTH_PROVIDER_TYPE SET HAS_PRIVATE_KEY='N' WHERE PROVIDER_TYPE='SAML_SP_PROVIDER';
commit;
use openiam;

ALTER TABLE RECONCILIATION_CONFIG ADD COLUMN RECON_CUSTOM_PROCESSOR VARCHAR(255);
ALTER TABLE RECONCILIATION_CONFIG ADD COLUMN RECON_TYPE VARCHAR(32) NOT NULL DEFAULT 'USER';
commit;
use openiam;

ALTER TABLE AUTH_STATE DROP FOREIGN KEY FK_AUTH_STATE_USERS;

ALTER TABLE AUTH_STATE DROP PRIMARY KEY;

ALTER TABLE AUTH_STATE ADD COLUMN TOKEN_TYPE VARCHAR(32);

UPDATE AUTH_STATE SET TOKEN_TYPE='OPENIAM';

ALTER TABLE AUTH_STATE MODIFY COLUMN TOKEN_TYPE VARCHAR(32) NOT NULL; 

ALTER TABLE AUTH_STATE ADD PRIMARY KEY(USER_ID, TOKEN_TYPE);
commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS SETUP_CONTENT_PROVIDERS$$
CREATE PROCEDURE SETUP_CONTENT_PROVIDERS(IN cpDomain VARCHAR(255), IN serverDomain VARCHAR(255))
	BEGIN
 		IF NOT EXISTS (SELECT * FROM CONTENT_PROVIDER) THEN
 			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC, URL) VALUES('DEFAULT_CP', 'CONTENT_PROVIDER', 'Default Content Provider', 'Y', CONCAT('http://', cpDomain, '/selfservice'));
			INSERT INTO CONTENT_PROVIDER (CONTENT_PROVIDER_ID, CONTENT_PROVIDER_NAME, IS_PUBLIC, DOMAIN_PATTERN, IS_SSL, RESOURCE_ID, MANAGED_SYS_ID) 
								   VALUES('DEFAULT_CP', 'Default Content Provider', 'Y', cpDomain, NULL, 'DEFAULT_CP', '0');
			INSERT INTO CP_AUTH_LEVEL_GRP_XREF (CONTENT_PROVIDER_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES ('DEFAULT_CP', 'PASSWORD_AUTH', 0);
			INSERT INTO CONTENT_PROVIDER_SERVER (CONTENT_PROVIDER_SERVER_ID, CONTENT_PROVIDER_ID, SERVER_URL) VALUES ('DEFAULT_CP', 'DEFAULT_CP', serverDomain);					   
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('DEF_CP_SELSERVICE_SLASH', 'URL_PATTERN', 'Default Content Provider /selfservice/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('DEF_CP_SELSERVICE_SLASH', 'DEFAULT_CP', '/selfservice/*', 'Y', 'DEF_CP_SELSERVICE_SLASH');
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('DEF_CP_WEBCONSOLE_AM_SLASH', 'URL_PATTERN', 'Default Content Provider /webconsole-am/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('DEF_CP_WEBCONSOLE_AM_SLASH', 'DEFAULT_CP', '/webconsole-am/*', 'Y', 'DEF_CP_WEBCONSOLE_AM_SLASH');
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('DEF_CP_WEBCONSOLE_IDM_SLASH', 'URL_PATTERN', 'Default Content Provider /webconsole-idm/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('DEF_CP_WEBCONSOLE_IDM_SLASH', 'DEFAULT_CP', '/webconsole-idm/*', 'Y', 'DEF_CP_WEBCONSOLE_IDM_SLASH');
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('DEF_CP_WEBCONSOLE_SLASH', 'URL_PATTERN', 'Default Content Provider /webconsole/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('DEF_CP_WEBCONSOLE_SLASH', 'DEFAULT_CP', '/webconsole/*', 'Y', 'DEF_CP_WEBCONSOLE_SLASH');
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('NEW_USER_TEMPLATE', 'UI_TEMPLATE', 'New User Template', 'Y');
			INSERT INTO METADATA_ELEMENT_PAGE_TEMPLATE (ID, NAME, RESOURCE_ID, IS_PUBLIC, TEMPLATE_TYPE_ID) VALUES('NEW_USER_TEMPLATE', 'New User Template', 'NEW_USER_TEMPLATE', 'Y', 'USER_TEMPLATE');
			INSERT INTO METADATA_URI_XREF (TEMPLATE_ID, URI_PATTERN_ID) VALUES('NEW_USER_TEMPLATE', 'DEF_CP_SELSERVICE_SLASH');
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SELFREG_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/selfRegistration.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SELFREG_PATTERN', 'DEFAULT_CP', '/selfservice/selfRegistration.html', 'Y', 'SELFREG_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SELFREG_PATTERN', 'NONE', 0);
			INSERT INTO METADATA_URI_XREF (TEMPLATE_ID, URI_PATTERN_ID) VALUES('NEW_USER_TEMPLATE', 'SELFREG_PATTERN');
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('UI_STATIC', 'URL_PATTERN', 'Default Content Provider /openiam-ui-static/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('UI_STATIC', 'DEFAULT_CP', '/openiam-ui-static/*', 'Y', 'UI_STATIC');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('UI_STATIC', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('CHANGE_PASSWORD', 'URL_PATTERN', 'Default Content Provider /idp/changePassword.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('CHANGE_PASSWORD', 'DEFAULT_CP', '/idp/changePassword.html', 'Y', 'CHANGE_PASSWORD');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('CHANGE_PASSWORD', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('UNLOCK_PASSWORD', 'URL_PATTERN', 'Default Content Provider /idp/unlockPassword.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('UNLOCK_PASSWORD', 'DEFAULT_CP', '/idp/unlockPassword.html', 'Y', 'UNLOCK_PASSWORD');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('UNLOCK_PASSWORD', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('LOGOUT_PATTERN', 'URL_PATTERN', 'Default Content Provider /idp/logout.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('LOGOUT_PATTERN', 'DEFAULT_CP', '/idp/logout.html', 'Y', 'LOGOUT_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('LOGOUT_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SAML_LOGIN_PATTERN', 'URL_PATTERN', 'Default Content Provider /idp/SAMLLogin.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SAML_LOGIN_PATTERN', 'DEFAULT_CP', '/idp/SAMLLogin.html', 'Y', 'SAML_LOGIN_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SAML_LOGIN_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SAML_METADATA_PATTERN', 'URL_PATTERN', 'Default Content Provider /idp/SAMLMetadata.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SAML_METADATA_PATTERN', 'DEFAULT_CP', '/idp/SAMLMetadata.html', 'Y', 'SAML_METADATA_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SAML_METADATA_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('UNLOCK_PASSWORD_QUESTIONS', 'URL_PATTERN', 'Default Content Provider /idp/unlockPasswordQuestions.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('UNLOCK_PASSWORD_QUESTIONS', 'DEFAULT_CP', '/idp/unlockPasswordQuestions.html', 'Y', 'UNLOCK_PASSWORD_QUESTIONS');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('UNLOCK_PASSWORD_QUESTIONS', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('UNLOCK_USER_RESET_FORM', 'URL_PATTERN', 'Default Content Provider /idp/unlockUserResetPasswordForm.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('UNLOCK_USER_RESET_FORM', 'DEFAULT_CP', '/idp/unlockUserResetPasswordForm.html', 'Y', 'UNLOCK_USER_RESET_FORM');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('UNLOCK_USER_RESET_FORM', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('WEBCONSOLE_CLEAR_CNTX', 'URL_PATTERN', 'Default Content Provider /webconsole/clearContext.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('WEBCONSOLE_CLEAR_CNTX', 'DEFAULT_CP', '/webconsole/clearContext.html', 'Y', 'WEBCONSOLE_CLEAR_CNTX');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('WEBCONSOLE_CLEAR_CNTX', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('WEBCONSOLE_AM_CLEAR_CNTX', 'URL_PATTERN', 'Default Content Provider /webconsole-am/clearContext.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('WEBCONSOLE_AM_CLEAR_CNTX', 'DEFAULT_CP', '/webconsole-am/clearContext.html', 'Y', 'WEBCONSOLE_AM_CLEAR_CNTX');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('WEBCONSOLE_AM_CLEAR_CNTX', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('WEBCONSOLE_IDM_CLEAR_CNTX', 'URL_PATTERN', 'Default Content Provider /webconsole-idm/clearContext.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('WEBCONSOLE_IDM_CLEAR_CNTX', 'DEFAULT_CP', '/webconsole-idm/clearContext.html', 'Y', 'WEBCONSOLE_IDM_CLEAR_CNTX');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('WEBCONSOLE_IDM_CLEAR_CNTX', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SELFSERVICE_CLEAR_CNTX', 'URL_PATTERN', 'Default Content Provider /selfservice/clearContext.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SELFSERVICE_CLEAR_CNTX', 'DEFAULT_CP', '/selfservice/clearContext.html', 'Y', 'SELFSERVICE_CLEAR_CNTX');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SELFSERVICE_CLEAR_CNTX', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SELFSERVICE_EXT_CLEAR_CNTX', 'URL_PATTERN', 'Default Content Provider /selfservice-ext/clearContext.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SELFSERVICE_EXT_CLEAR_CNTX', 'DEFAULT_CP', '/selfservice-ext/clearContext.html', 'Y', 'SELFSERVICE_EXT_CLEAR_CNTX');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SELFSERVICE_EXT_CLEAR_CNTX', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SEARCH_ORG_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/rest/api/entitlements/searchOrganizations', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SEARCH_ORG_PATTERN', 'DEFAULT_CP', '/selfservice/rest/api/entitlements/searchOrganizations', 'Y', 'SEARCH_ORG_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SEARCH_ORG_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('REPORTVIEWER_PATTERN', 'URL_PATTERN', 'Default Content Provider /reportviewer/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('REPORTVIEWER_PATTERN', 'DEFAULT_CP', '/reportviewer/*', 'Y', 'REPORTVIEWER_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('REPORTVIEWER_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('LANGUAGE_SUPPORT_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/language/languageSupport.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('LANGUAGE_SUPPORT_PATTERN', 'DEFAULT_CP', '/selfservice/language/languageSupport.html', 'Y', 'LANGUAGE_SUPPORT_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('LANGUAGE_SUPPORT_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('ROLE_METADATA_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/rest/api/metadata/roleMetadata', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('ROLE_METADATA_PATTERN', 'DEFAULT_CP', '/selfservice/rest/api/metadata/roleMetadata', 'Y', 'ROLE_METADATA_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('ROLE_METADATA_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SEARCH_ROLES_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/rest/api/entitlements/searchRoles', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SEARCH_ROLES_PATTERN', 'DEFAULT_CP', '/selfservice/rest/api/entitlements/searchRoles', 'Y', 'SEARCH_ROLES_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SEARCH_ROLES_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('GROUP_METADATA_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/rest/api/metadata/groupMetadata', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('GROUP_METADATA_PATTERN', 'DEFAULT_CP', '/selfservice/rest/api/metadata/groupMetadata', 'Y', 'GROUP_METADATA_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('GROUP_METADATA_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SEARCH_GROUPS_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/rest/api/entitlements/searchGroups', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SEARCH_GROUPS_PATTERN', 'DEFAULT_CP', '/selfservice/rest/api/entitlements/searchGroups', 'Y', 'SEARCH_GROUPS_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SEARCH_GROUPS_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('ORG_METADATA_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/rest/api/metadata/organizationMetadata', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('ORG_METADATA_PATTERN', 'DEFAULT_CP', '/selfservice/rest/api/metadata/organizationMetadata', 'Y', 'ORG_METADATA_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('ORG_METADATA_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SP_PATTERN', 'URL_PATTERN', 'Default Content Provider /idp/sp/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SP_PATTERN', 'DEFAULT_CP', '/idp/sp/*', 'Y', 'SP_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SP_PATTERN', 'NONE', 0);
 		END IF;
	END$$
DELIMITER ;
commit;
use openiam;

UPDATE POLICY SET RULE_SRC_URL ='provision/ad/isEnabled.groovy' WHERE POLICY_ID = '4547';
commit;
use openiam;

UPDATE RES SET URL='/webconsole/newUser.html' WHERE RESOURCE_ID='NEW_USER';
commit;
use openiam;

ALTER TABLE CONTENT_PROVIDER ADD COLUMN SHOW_ON_APP_PAGE CHAR(1) NOT NULL DEFAULT 'Y';
commit;
use openiam;

ALTER TABLE RECONCILIATION_CONFIG ADD COLUMN NAME VARCHAR(40);
UPDATE RES SET URL='/webconsole/reconciliations.html' WHERE RESOURCE_ID = 'RESRECONCILE';
commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS ADD_MENU_ENTITLEMENTS$$
CREATE PROCEDURE ADD_MENU_ENTITLEMENTS()
	BEGIN
		IF EXISTS (SELECT * FROM ROLE WHERE ROLE_ID='2') THEN
			DELETE FROM RESOURCE_ROLE WHERE (RESOURCE_ID, ROLE_ID) IN (('USER_EDIT_MENU', '2'), ('SUP_SUB_PAGE', '2'), ('USER_ATTRIBUTES', '2'), ('USER_EDIT_CONTACT_INFO', '2'), ('USER_EDIT_INFO', '2'), ('USER_ENTITLEMENTS', '2'), ('USER_HISTORY', '2'), ('USER_IDENTITY', '2'), ('USER_SEARCH', '2'));
			INSERT INTO RESOURCE_ROLE (RESOURCE_ID, ROLE_ID) VALUES ('USER_EDIT_MENU', '2'), ('SUP_SUB_PAGE', '2'), ('USER_ATTRIBUTES', '2'), ('USER_EDIT_CONTACT_INFO', '2'), ('USER_EDIT_INFO', '2'), ('USER_ENTITLEMENTS', '2'), ('USER_HISTORY', '2'), ('USER_IDENTITY', '2'), ('USER_SEARCH', '2');
 		END IF;

	END$$
DELIMITER ;

call ADD_MENU_ENTITLEMENTS();
DROP PROCEDURE ADD_MENU_ENTITLEMENTS;
		

commit;
use openiam;

ALTER TABLE RECONCILIATION_SITUATION ADD COLUMN CUSTOM_COMMAND_SCRIPT VARCHAR(255) NULL DEFAULT NULL; 
		

commit;
use openiam;

ALTER TABLE RES ADD COLUMN COORELATED_NAME VARCHAR(250) NULL;
commit;
use openiam;


DELIMITER $$

DROP PROCEDURE IF EXISTS MIGRATE_COORELATED_NAME$$

CREATE PROCEDURE MIGRATE_COORELATED_NAME() 
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE theId VARCHAR(32);
		DECLARE theName VARCHAR(250);
		DECLARE cur1 CURSOR FOR (SELECT RESOURCE_ID, NAME FROM AUTH_PROVIDER WHERE RESOURCE_ID IS NOT NULL);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
		
		REPEAT 
			FETCH cur1 INTO theId, theName;
			IF (theId IS NOT NULL AND theName IS NOT NULL) THEN
				UPDATE RES SET COORELATED_NAME=theName WHERE RESOURCE_ID=theId;
			END IF;
		UNTIL done END REPEAT; 
		
		CLOSE cur1;
	END$$

call MIGRATE_COORELATED_NAME()$$


DROP PROCEDURE IF EXISTS MIGRATE_COORELATED_NAME$$

CREATE PROCEDURE MIGRATE_COORELATED_NAME() 
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE theId VARCHAR(32);
		DECLARE theName VARCHAR(250);
		DECLARE cur1 CURSOR FOR (SELECT ADMIN_RESOURCE_ID, COMPANY_NAME FROM COMPANY WHERE ADMIN_RESOURCE_ID IS NOT NULL);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
		
		REPEAT 
			FETCH cur1 INTO theId, theName;
			IF (theId IS NOT NULL AND theName IS NOT NULL) THEN
				UPDATE RES SET COORELATED_NAME=theName WHERE RESOURCE_ID=theId;
			END IF;
		UNTIL done END REPEAT; 
		
		CLOSE cur1;
	END$$
	
call MIGRATE_COORELATED_NAME()$$

DROP PROCEDURE IF EXISTS MIGRATE_COORELATED_NAME$$

CREATE PROCEDURE MIGRATE_COORELATED_NAME() 
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE theId VARCHAR(32);
		DECLARE theName VARCHAR(250);
		DECLARE cur1 CURSOR FOR (SELECT RESOURCE_ID, CONTENT_PROVIDER_NAME FROM CONTENT_PROVIDER WHERE RESOURCE_ID IS NOT NULL);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
		
		REPEAT 
			FETCH cur1 INTO theId, theName;
			IF (theId IS NOT NULL AND theName IS NOT NULL) THEN
				UPDATE RES SET COORELATED_NAME=theName WHERE RESOURCE_ID=theId;
			END IF;
		UNTIL done END REPEAT; 
		
		CLOSE cur1;
	END$$
	
call MIGRATE_COORELATED_NAME()$$

DROP PROCEDURE IF EXISTS MIGRATE_COORELATED_NAME$$

CREATE PROCEDURE MIGRATE_COORELATED_NAME() 
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE theId VARCHAR(32);
		DECLARE theName VARCHAR(250);
		DECLARE cur1 CURSOR FOR (SELECT ADMIN_RESOURCE_ID, GRP_NAME FROM GRP WHERE ADMIN_RESOURCE_ID IS NOT NULL);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
		
		REPEAT 
			FETCH cur1 INTO theId, theName;
			IF (theId IS NOT NULL AND theName IS NOT NULL) THEN
				UPDATE RES SET COORELATED_NAME=theName WHERE RESOURCE_ID=theId;
			END IF;
		UNTIL done END REPEAT; 
		
		CLOSE cur1;
	END$$
	
call MIGRATE_COORELATED_NAME()$$

DROP PROCEDURE IF EXISTS MIGRATE_COORELATED_NAME$$

CREATE PROCEDURE MIGRATE_COORELATED_NAME() 
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE theId VARCHAR(32);
		DECLARE theName VARCHAR(250);
		DECLARE cur1 CURSOR FOR (SELECT RESOURCE_ID, ATTRIBUTE_NAME FROM METADATA_ELEMENT WHERE RESOURCE_ID IS NOT NULL);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
		
		REPEAT 
			FETCH cur1 INTO theId, theName;
			IF (theId IS NOT NULL AND theName IS NOT NULL) THEN
				UPDATE RES SET COORELATED_NAME=theName WHERE RESOURCE_ID=theId;
			END IF;
		UNTIL done END REPEAT; 
		
		CLOSE cur1;
	END$$
	
call MIGRATE_COORELATED_NAME()$$

DROP PROCEDURE IF EXISTS MIGRATE_COORELATED_NAME$$

CREATE PROCEDURE MIGRATE_COORELATED_NAME() 
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE theId VARCHAR(32);
		DECLARE theName VARCHAR(250);
		DECLARE cur1 CURSOR FOR (SELECT RESOURCE_ID, NAME FROM METADATA_ELEMENT_PAGE_TEMPLATE WHERE RESOURCE_ID IS NOT NULL);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
		
		REPEAT 
			FETCH cur1 INTO theId, theName;
			IF (theId IS NOT NULL AND theName IS NOT NULL) THEN
				UPDATE RES SET COORELATED_NAME=theName WHERE RESOURCE_ID=theId;
			END IF;
		UNTIL done END REPEAT; 
		
		CLOSE cur1;
	END$$
	
call MIGRATE_COORELATED_NAME()$$

DROP PROCEDURE IF EXISTS MIGRATE_COORELATED_NAME$$

CREATE PROCEDURE MIGRATE_COORELATED_NAME() 
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE theId VARCHAR(32);
		DECLARE theName VARCHAR(250);
		DECLARE cur1 CURSOR FOR (SELECT ADMIN_RESOURCE_ID, ROLE_NAME FROM ROLE WHERE ADMIN_RESOURCE_ID IS NOT NULL);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
		
		REPEAT 
			FETCH cur1 INTO theId, theName;
			IF (theId IS NOT NULL AND theName IS NOT NULL) THEN
				UPDATE RES SET COORELATED_NAME=theName WHERE RESOURCE_ID=theId;
			END IF;
		UNTIL done END REPEAT; 
		
		CLOSE cur1;
	END$$
	
call MIGRATE_COORELATED_NAME()$$

DROP PROCEDURE IF EXISTS MIGRATE_COORELATED_NAME$$

CREATE PROCEDURE MIGRATE_COORELATED_NAME() 
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE theId VARCHAR(32);
		DECLARE theName VARCHAR(250);
		DECLARE cur1 CURSOR FOR (SELECT RESOURCE_ID, PATTERN FROM URI_PATTERN WHERE RESOURCE_ID IS NOT NULL);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
		
		REPEAT 
			FETCH cur1 INTO theId, theName;
			IF (theId IS NOT NULL AND theName IS NOT NULL) THEN
				UPDATE RES SET COORELATED_NAME=theName WHERE RESOURCE_ID=theId;
			END IF;
		UNTIL done END REPEAT; 
		
		CLOSE cur1;
	END$$
	
call MIGRATE_COORELATED_NAME()$$


DELIMITER ;

DROP PROCEDURE MIGRATE_COORELATED_NAME;

COMMIT;
commit;
use openiam;
ALTER TABLE RECONCILIATION_CONFIG ADD COLUMN PRE_PROCESSOR VARCHAR(255) NULL DEFAULT NULL; 
ALTER TABLE RECONCILIATION_CONFIG ADD COLUMN POST_PROCESSOR VARCHAR(255) NULL DEFAULT NULL; 
		

commit;
use openiam;


DELIMITER $$

DROP PROCEDURE IF EXISTS MIGRATE_COORELATED_NAME$$

CREATE PROCEDURE MIGRATE_COORELATED_NAME() 
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE theId VARCHAR(32);
		DECLARE theName VARCHAR(250);
		DECLARE cur1 CURSOR FOR (SELECT RESOURCE_ID, NAME FROM MANAGED_SYS WHERE RESOURCE_ID IS NOT NULL);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
		
		REPEAT 
			FETCH cur1 INTO theId, theName;
			IF (theId IS NOT NULL AND theName IS NOT NULL) THEN
				UPDATE RES SET COORELATED_NAME=theName WHERE RESOURCE_ID=theId;
			END IF;
		UNTIL done END REPEAT; 
		
		CLOSE cur1;
	END$$

call MIGRATE_COORELATED_NAME()$$


DELIMITER ;

DROP PROCEDURE MIGRATE_COORELATED_NAME;

COMMIT;
commit;
use openiam;

insert into METADATA_TYPE(TYPE_ID, DESCRIPTION,ACTIVE, SYNC_MANAGED_SYS,GROUPING) values('PRIMARY_LOCATION','Primary Location','Y','N','ADDRESS');
commit;
use openiam;

UPDATE BATCH_CONFIG SET TASK_NAME='Re-Certification' WHERE TASK_ID='ATTESTATION';

DELETE FROM BATCH_CONFIG WHERE TASK_ID='TASK_EMAIL_NOTIFICATION';

INSERT INTO BATCH_CONFIG (TASK_ID, TASK_NAME, CRON_EXPRESSION, SPRING_BEAN, SPRING_BEAN_METHOD) VALUES('TASK_EMAIL_NOTIFICATION', 'Task Email Notification', '0 0 0 1 1/3 ?', 'taskEmailNotifier', 'sweep');
commit;
use openiam;

ALTER TABLE URI_PATTERN_META_VALUE ADD COLUMN PROPAGETE_THROUGH_PROXY CHAR(1) NOT NULL DEFAULT 'Y';
commit;
use openiam;

delete from LANGUAGE_MAPPING
where ID in ('DEMetadataTypeEntity10','DEMetadataTypeEntity20',
             'DEMetadataTypeEntity59','DEMetadataTypeEntity60',
			 'DEMetadataTypeEntity84',
             'ESMetadataTypeEntity10','ESMetadataTypeEntity20',
             'ESMetadataTypeEntity59','ESMetadataTypeEntity60',
			 'ESMetadataTypeEntity84',
             'RUMetadataTypeEntity82','RUMetadataTypeEntity83',
             'RUMetadataTypeEntity84','RUMetadataTypeEntity85',
             'RUMetadataTypeEntity87');

INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('RUABOUT_DESC','8','ABOUT','ResourceEntity.displayNameMap','Об OpenIAM');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('RUABOUT_ROOT_MENU_DESC','8','ABOUT_ROOT_MENU','ResourceEntity.displayNameMap','Об OpenIAM');
INSERT INTO LANGUAGE_MAPPING (ID,LANGUAGE_ID,REFERENCE_ID,REFERENCE_TYPE,TEXT_VALUE) VALUES ('RUSYNCUSER_REVIEW_DESC','8','SYNCUSER_REVIEW','ResourceEntity.displayNameMap','Проверка сихронизации');

commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS SETUP_CONTENT_PROVIDERS$$
CREATE PROCEDURE SETUP_CONTENT_PROVIDERS(IN cpDomain VARCHAR(255), IN serverDomain VARCHAR(255))
	BEGIN
 		IF NOT EXISTS (SELECT * FROM CONTENT_PROVIDER) THEN
 			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC, URL) VALUES('DEFAULT_CP', 'CONTENT_PROVIDER', 'Default Content Provider', 'Y', CONCAT('http://', cpDomain, '/selfservice'));
			INSERT INTO CONTENT_PROVIDER (CONTENT_PROVIDER_ID, CONTENT_PROVIDER_NAME, IS_PUBLIC, DOMAIN_PATTERN, IS_SSL, RESOURCE_ID, MANAGED_SYS_ID) 
								   VALUES('DEFAULT_CP', 'Default Content Provider', 'Y', cpDomain, NULL, 'DEFAULT_CP', '0');
			INSERT INTO CP_AUTH_LEVEL_GRP_XREF (CONTENT_PROVIDER_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES ('DEFAULT_CP', 'PASSWORD_AUTH', 0);
			INSERT INTO CONTENT_PROVIDER_SERVER (CONTENT_PROVIDER_SERVER_ID, CONTENT_PROVIDER_ID, SERVER_URL) VALUES ('DEFAULT_CP', 'DEFAULT_CP', serverDomain);					   
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('DEF_CP_SELSERVICE_SLASH', 'URL_PATTERN', 'Default Content Provider /selfservice/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('DEF_CP_SELSERVICE_SLASH', 'DEFAULT_CP', '/selfservice/*', 'Y', 'DEF_CP_SELSERVICE_SLASH');
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('DEF_CP_WEBCONSOLE_AM_SLASH', 'URL_PATTERN', 'Default Content Provider /webconsole-am/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('DEF_CP_WEBCONSOLE_AM_SLASH', 'DEFAULT_CP', '/webconsole-am/*', 'Y', 'DEF_CP_WEBCONSOLE_AM_SLASH');
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('DEF_CP_WEBCONSOLE_IDM_SLASH', 'URL_PATTERN', 'Default Content Provider /webconsole-idm/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('DEF_CP_WEBCONSOLE_IDM_SLASH', 'DEFAULT_CP', '/webconsole-idm/*', 'Y', 'DEF_CP_WEBCONSOLE_IDM_SLASH');
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('DEF_CP_WEBCONSOLE_SLASH', 'URL_PATTERN', 'Default Content Provider /webconsole/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('DEF_CP_WEBCONSOLE_SLASH', 'DEFAULT_CP', '/webconsole/*', 'Y', 'DEF_CP_WEBCONSOLE_SLASH');
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('NEW_USER_TEMPLATE', 'UI_TEMPLATE', 'New User Template', 'Y');
			INSERT INTO METADATA_ELEMENT_PAGE_TEMPLATE (ID, NAME, RESOURCE_ID, IS_PUBLIC, TEMPLATE_TYPE_ID) VALUES('NEW_USER_TEMPLATE', 'New User Template', 'NEW_USER_TEMPLATE', 'Y', 'USER_TEMPLATE');
			INSERT INTO METADATA_URI_XREF (TEMPLATE_ID, URI_PATTERN_ID) VALUES('NEW_USER_TEMPLATE', 'DEF_CP_SELSERVICE_SLASH');
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SELFREG_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/selfRegistration.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SELFREG_PATTERN', 'DEFAULT_CP', '/selfservice/selfRegistration.html', 'Y', 'SELFREG_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SELFREG_PATTERN', 'NONE', 0);
			INSERT INTO METADATA_URI_XREF (TEMPLATE_ID, URI_PATTERN_ID) VALUES('NEW_USER_TEMPLATE', 'SELFREG_PATTERN');
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('UI_STATIC', 'URL_PATTERN', 'Default Content Provider /openiam-ui-static/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('UI_STATIC', 'DEFAULT_CP', '/openiam-ui-static/*', 'Y', 'UI_STATIC');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('UI_STATIC', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('CHANGE_PASSWORD', 'URL_PATTERN', 'Default Content Provider /idp/changePassword.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('CHANGE_PASSWORD', 'DEFAULT_CP', '/idp/changePassword.html', 'Y', 'CHANGE_PASSWORD');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('CHANGE_PASSWORD', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('UNLOCK_PASSWORD', 'URL_PATTERN', 'Default Content Provider /idp/unlockPassword.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('UNLOCK_PASSWORD', 'DEFAULT_CP', '/idp/unlockPassword.html', 'Y', 'UNLOCK_PASSWORD');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('UNLOCK_PASSWORD', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('LOGOUT_PATTERN', 'URL_PATTERN', 'Default Content Provider /idp/logout.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('LOGOUT_PATTERN', 'DEFAULT_CP', '/idp/logout.html', 'Y', 'LOGOUT_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('LOGOUT_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SAML_LOGIN_PATTERN', 'URL_PATTERN', 'Default Content Provider /idp/SAMLLogin.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SAML_LOGIN_PATTERN', 'DEFAULT_CP', '/idp/SAMLLogin.html', 'Y', 'SAML_LOGIN_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SAML_LOGIN_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SAML_METADATA_PATTERN', 'URL_PATTERN', 'Default Content Provider /idp/SAMLMetadata.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SAML_METADATA_PATTERN', 'DEFAULT_CP', '/idp/SAMLMetadata.html', 'Y', 'SAML_METADATA_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SAML_METADATA_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('UNLOCK_PASSWORD_QUESTIONS', 'URL_PATTERN', 'Default Content Provider /idp/unlockPasswordQuestions.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('UNLOCK_PASSWORD_QUESTIONS', 'DEFAULT_CP', '/idp/unlockPasswordQuestions.html', 'Y', 'UNLOCK_PASSWORD_QUESTIONS');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('UNLOCK_PASSWORD_QUESTIONS', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('UNLOCK_USER_RESET_FORM', 'URL_PATTERN', 'Default Content Provider /idp/unlockUserResetPasswordForm.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('UNLOCK_USER_RESET_FORM', 'DEFAULT_CP', '/idp/unlockUserResetPasswordForm.html', 'Y', 'UNLOCK_USER_RESET_FORM');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('UNLOCK_USER_RESET_FORM', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('WEBCONSOLE_CLEAR_CNTX', 'URL_PATTERN', 'Default Content Provider /webconsole/clearContext.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('WEBCONSOLE_CLEAR_CNTX', 'DEFAULT_CP', '/webconsole/clearContext.html', 'Y', 'WEBCONSOLE_CLEAR_CNTX');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('WEBCONSOLE_CLEAR_CNTX', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('WEBCONSOLE_AM_CLEAR_CNTX', 'URL_PATTERN', 'Default Content Provider /webconsole-am/clearContext.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('WEBCONSOLE_AM_CLEAR_CNTX', 'DEFAULT_CP', '/webconsole-am/clearContext.html', 'Y', 'WEBCONSOLE_AM_CLEAR_CNTX');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('WEBCONSOLE_AM_CLEAR_CNTX', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('WEBCONSOLE_IDM_CLEAR_CNTX', 'URL_PATTERN', 'Default Content Provider /webconsole-idm/clearContext.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('WEBCONSOLE_IDM_CLEAR_CNTX', 'DEFAULT_CP', '/webconsole-idm/clearContext.html', 'Y', 'WEBCONSOLE_IDM_CLEAR_CNTX');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('WEBCONSOLE_IDM_CLEAR_CNTX', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SELFSERVICE_CLEAR_CNTX', 'URL_PATTERN', 'Default Content Provider /selfservice/clearContext.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SELFSERVICE_CLEAR_CNTX', 'DEFAULT_CP', '/selfservice/clearContext.html', 'Y', 'SELFSERVICE_CLEAR_CNTX');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SELFSERVICE_CLEAR_CNTX', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SELFSERVICE_EXT_CLEAR_CNTX', 'URL_PATTERN', 'Default Content Provider /selfservice-ext/clearContext.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SELFSERVICE_EXT_CLEAR_CNTX', 'DEFAULT_CP', '/selfservice-ext/clearContext.html', 'Y', 'SELFSERVICE_EXT_CLEAR_CNTX');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SELFSERVICE_EXT_CLEAR_CNTX', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SEARCH_ORG_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/rest/api/entitlements/searchOrganizations', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SEARCH_ORG_PATTERN', 'DEFAULT_CP', '/selfservice/rest/api/entitlements/searchOrganizations', 'Y', 'SEARCH_ORG_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SEARCH_ORG_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('REPORTVIEWER_PATTERN', 'URL_PATTERN', 'Default Content Provider /reportviewer/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('REPORTVIEWER_PATTERN', 'DEFAULT_CP', '/reportviewer/*', 'Y', 'REPORTVIEWER_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('REPORTVIEWER_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('LANGUAGE_SUPPORT_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/language/languageSupport.html', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('LANGUAGE_SUPPORT_PATTERN', 'DEFAULT_CP', '/selfservice/language/languageSupport.html', 'Y', 'LANGUAGE_SUPPORT_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('LANGUAGE_SUPPORT_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('ROLE_METADATA_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/rest/api/metadata/roleMetadata', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('ROLE_METADATA_PATTERN', 'DEFAULT_CP', '/selfservice/rest/api/metadata/roleMetadata', 'Y', 'ROLE_METADATA_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('ROLE_METADATA_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SEARCH_ROLES_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/rest/api/entitlements/searchRoles', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SEARCH_ROLES_PATTERN', 'DEFAULT_CP', '/selfservice/rest/api/entitlements/searchRoles', 'Y', 'SEARCH_ROLES_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SEARCH_ROLES_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('GROUP_METADATA_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/rest/api/metadata/groupMetadata', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('GROUP_METADATA_PATTERN', 'DEFAULT_CP', '/selfservice/rest/api/metadata/groupMetadata', 'Y', 'GROUP_METADATA_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('GROUP_METADATA_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SEARCH_GROUPS_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/rest/api/entitlements/searchGroups', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SEARCH_GROUPS_PATTERN', 'DEFAULT_CP', '/selfservice/rest/api/entitlements/searchGroups', 'Y', 'SEARCH_GROUPS_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SEARCH_GROUPS_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('ORG_METADATA_PATTERN', 'URL_PATTERN', 'Default Content Provider /selfservice/rest/api/metadata/organizationMetadata', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('ORG_METADATA_PATTERN', 'DEFAULT_CP', '/selfservice/rest/api/metadata/organizationMetadata', 'Y', 'ORG_METADATA_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('ORG_METADATA_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('SP_PATTERN', 'URL_PATTERN', 'Default Content Provider /idp/sp/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('SP_PATTERN', 'DEFAULT_CP', '/idp/sp/*', 'Y', 'SP_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('SP_PATTERN', 'NONE', 0);
			
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, IS_PUBLIC) VALUES('PWD_VALIDATION_PATTERN', 'URL_PATTERN', 'Default Content Provider /idp/rest/api/password/validation/*', 'Y');
			INSERT INTO URI_PATTERN (URI_PATTERN_ID, CONTENT_PROVIDER_ID, PATTERN, IS_PUBLIC, RESOURCE_ID) VALUES('PWD_VALIDATION_PATTERN', 'DEFAULT_CP', '/idp/rest/api/password/validation/*', 'Y', 'SP_PATTERN');
			INSERT INTO URI_AUTH_LEVEL_GRP_XREF (URI_PATTERN_ID, AUTH_LEVEL_GROUPING_ID, EXEC_ORDER) VALUES('PWD_VALIDATION_PATTERN', 'NONE', 0);
			
 		END IF;
	END$$
DELIMITER ;

commit;
use openiam;

DELETE FROM RESOURCE_GROUP WHERE RESOURCE_ID = 'SELF_REPORT_VIEWER';
DELETE FROM RESOURCE_USER WHERE RESOURCE_ID = 'SELF_REPORT_VIEWER';
DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID = 'SELF_REPORT_VIEWER';
DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID = 'SELF_REPORT_VIEWER';
DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID = 'SELF_REPORT_VIEWER';
DELETE FROM RES WHERE RESOURCE_ID = 'SELF_REPORT_VIEWER';
DELETE FROM LANGUAGE_MAPPING WHERE REFERENCE_ID='SELF_REPORT_VIEWER';

INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, DISPLAY_ORDER, IS_PUBLIC, URL) 
	VALUES('SELF_REPORT_VIEWER', 'MENU_ITEM', 'SELF_REPORT_VIEWER', 'Report Viewer', 10, 'N', '/selfservice/report.html');

INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, ATTR_VALUE) VALUES ('SELF_REPORT_VIEWER_PUB', 'SELF_REPORT_VIEWER', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, ATTR_VALUE) VALUES ('SELF_REPORT_VIEWER_DESC', 'SELF_REPORT_VIEWER', 'MENU_DISPLAY_NAME', 'Report Viewer');

INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('SELFSERVICE_REPORT', 'SELF_REPORT_VIEWER');

DELETE FROM RESOURCE_ROLE WHERE ROLE_ID='9' and RESOURCE_ID='SELF_REPORT_VIEWER';
INSERT INTO RESOURCE_ROLE (ROLE_ID, RESOURCE_ID) VALUES('9', 'SELF_REPORT_VIEWER');

DELETE FROM LANGUAGE_MAPPING WHERE ID IN ('SELF_REPORT_VIEWER_DESC', 'DESELF_REPORT_VIEWER_DESC',
  'ESSELF_REPORT_VIEWER_DESC', 'RUSELF_REPORT_VIEWER_DESC', 'JPSELF_REPORT_VIEWER_DESC');

INSERT INTO LANGUAGE_MAPPING(ID, LANGUAGE_ID, REFERENCE_TYPE, REFERENCE_ID, TEXT_VALUE) VALUES
  ('SELF_REPORT_VIEWER_DESC', '1', 'ResourceEntity.displayNameMap', 'SELF_REPORT_VIEWER', 'Report Viewer'),
  ('DESELF_REPORT_VIEWER_DESC', '2', 'ResourceEntity.displayNameMap', 'SELF_REPORT_VIEWER', 'Report Viewer'),
  ('ESSELF_REPORT_VIEWER_DESC', '4', 'ResourceEntity.displayNameMap', 'SELF_REPORT_VIEWER', 'Report Viewer'),
  ('RUSELF_REPORT_VIEWER_DESC', '8', 'ResourceEntity.displayNameMap', 'SELF_REPORT_VIEWER', 'Просмотрщик Отчетов'),
  ('JPSELF_REPORT_VIEWER_DESC', '9', 'ResourceEntity.displayNameMap', 'SELF_REPORT_VIEWER', 'Report Viewer');

UPDATE RES SET DISPLAY_ORDER = 20 WHERE RESOURCE_ID = 'SUBSCRIBE';
UPDATE RES SET DISPLAY_ORDER = 30, DESCRIPTION = 'View Report Files' WHERE RESOURCE_ID = 'VIEW';

UPDATE LANGUAGE_MAPPING SET TEXT_VALUE = 'View Files' WHERE ID = 'VIEW_MENU_DESC';
UPDATE LANGUAGE_MAPPING SET TEXT_VALUE = 'Dateien anzeigen' WHERE ID = 'DEVIEW_MENU_DESC';
UPDATE LANGUAGE_MAPPING SET TEXT_VALUE = 'Ver archivos' WHERE ID = 'ESVIEW_MENU_DESC';
UPDATE LANGUAGE_MAPPING SET TEXT_VALUE = 'Просмотр Файлов' WHERE ID = 'RUVIEW_MENU_DESC';
UPDATE LANGUAGE_MAPPING SET TEXT_VALUE = 'ファイルの表示' WHERE ID = 'JPVIEW_MENU_DESC';

commit;
use openiam;

ALTER TABLE REPORT_INFO ADD COLUMN RESOURCE_ID VARCHAR(32) CHARACTER SET 'utf8' NULL;
ALTER TABLE REPORT_INFO ADD CONSTRAINT REPORT_INFO_RES_FK FOREIGN KEY (RESOURCE_ID) REFERENCES RES(RESOURCE_ID);

commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS ADD_RES_REPORT$$
CREATE PROCEDURE ADD_RES_REPORT()
	BEGIN
 		IF NOT EXISTS (SELECT * FROM RESOURCE_TYPE WHERE RESOURCE_TYPE_ID = 'REPORT') THEN
			INSERT INTO RESOURCE_TYPE (RESOURCE_TYPE_ID, DESCRIPTION, PROVISION_RESOURCE, PROCESS_NAME, SUPPORTS_HIERARCHY, SEARCHABLE, URL, IMAGE_TYPE)
				VALUES ('REPORT', 'Report', NULL, NULL, 'N', 'Y', 'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAY9JREFUeNpiZC5lZgADRoY+IKnPQBy4yPCfoQjOE1NQYAitr0/7TyRgLmHeB8QMIMwINSPt7t27M+/du8cAwqmpqQz3n//AarWiFCcDazHLfiDTCUUioLIy8++/f////P2LF4PUMOcz7wdiBhDG6oLE5GSGh89/YneBNCcDez7rASDTEUXCo7Aw5xfQhh+/f+PFIDXMmcwHgJgBhLG6IDYhgeHhs19YXaAkx8XAmcl6EMh0QJFwSE8v+P7nz//PP37gxSA1TMlMB4GYAYSxuiA8Lo7hydPf2MNAnpOBN4X9MJBpB0k+UGAeG1uyZ+7c7t+/f+NNQaysrAz8iRxHgExbZANQXBAcHc3w5Mkf7GGgxMUgEItpAINuYGDFkRUr2n/+/InXBezs7AyCUZxHgUwbnC7wj4hgePrkL3YXKHMxCIdyHQMyrf+f+I+Q4NXVbf8EDOF3wJDGh0FqGO0YTzIKQuxmAWIhIJb6/POyHJ8Zyxmi8uIXhjsM7xl0gKxnIGM4QQ6AGkYKAIXyZ4AAAwDo2Ez5UkE+nAAAAABJRU5ErkJggg==', 'png');
 		END IF;

		IF NOT EXISTS (SELECT * FROM LANGUAGE_MAPPING WHERE ID = 'REPORT') THEN
			INSERT INTO LANGUAGE_MAPPING(ID, LANGUAGE_ID, REFERENCE_ID, REFERENCE_TYPE, TEXT_VALUE) VALUES
			  ('REPORT', '1', 'REPORT', 'ResourceTypeEntity.displayNameMap', 'Report'),
			  ('DEREPORT', '2', 'REPORT', 'ResourceTypeEntity.displayNameMap', 'Bericht'),
			  ('ESREPORT', '4', 'REPORT', 'ResourceTypeEntity.displayNameMap', 'Informe'),
			  ('JPREPORT', '9', 'REPORT', 'ResourceTypeEntity.displayNameMap', '報告'),
			  ('RUREPORT', '8', 'REPORT', 'ResourceTypeEntity.displayNameMap', 'Отчет');
 		END IF;

		IF NOT EXISTS (SELECT * FROM RES WHERE RESOURCE_ID = 'USER_REPORT_101') THEN
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL, MIN_AUTH_LEVEL, IS_PUBLIC,
			    ADMIN_RESOURCE_ID, RISK, TYPE_ID, COORELATED_NAME) VALUES
			  ('USER_REPORT_101', 'REPORT', NULL, 'USER_REPORT_101', NULL, NULL, NULL, 'Y', NULL, NULL, NULL, 'USER_REPORT'),
			  ('AUDIT_REPORT_102', 'REPORT', NULL, 'AUDIT_REPORT_102', NULL, NULL, NULL, 'Y', NULL, NULL, NULL, 'AUDIT_REPORT'),
			  ('RECONCILIATION_REPORT_103', 'REPORT', NULL, 'RECONCILIATION_REPORT_103', NULL, NULL, NULL, 'Y', NULL, NULL, NULL, 'RECONCILIATION_REPORT'),
			  ('SYNCHRONIZATION_REPORT_104', 'REPORT', NULL, 'SYNCHRONIZATION_REPORT_104', NULL, NULL, NULL, 'Y', NULL, NULL, NULL, 'SYNCHRONIZATION_REPORT');
 		END IF;
	END$$
DELIMITER ;

call ADD_RES_REPORT();
DROP PROCEDURE ADD_RES_REPORT;

UPDATE REPORT_INFO SET RESOURCE_ID = 'USER_REPORT_101' WHERE REPORT_INFO_ID = '101';
UPDATE REPORT_INFO SET RESOURCE_ID = 'AUDIT_REPORT_102' WHERE REPORT_INFO_ID = '102';
UPDATE REPORT_INFO SET RESOURCE_ID = 'RECONCILIATION_REPORT_103' WHERE REPORT_INFO_ID = '103';
UPDATE REPORT_INFO SET RESOURCE_ID = 'SYNCHRONIZATION_REPORT_104' WHERE REPORT_INFO_ID = '104';


commit;
use openiam;

DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID IN (
	'SELF_VIEW_REPORT_ROOT', 'VIEW', 'SELF_SUB_REPORT_NEW', 'SELF_SUB_REPORT_ROOT', 'SELF_VIEW_REPORT_NEW', 'SUBSCRIBE', 'SELF_REPORT_VIEWER');
DELETE FROM RESOURCE_GROUP WHERE RESOURCE_ID IN (
	'SELF_VIEW_REPORT_ROOT', 'VIEW', 'SELF_SUB_REPORT_NEW', 'SELF_SUB_REPORT_ROOT', 'SELF_VIEW_REPORT_NEW', 'SUBSCRIBE', 'SELF_REPORT_VIEWER');
DELETE FROM RESOURCE_USER WHERE RESOURCE_ID IN (
	'SELF_VIEW_REPORT_ROOT', 'VIEW', 'SELF_SUB_REPORT_NEW', 'SELF_SUB_REPORT_ROOT', 'SELF_VIEW_REPORT_NEW', 'SUBSCRIBE', 'SELF_REPORT_VIEWER');

UPDATE RES set IS_PUBLIC = 'N' WHERE RESOURCE_ID IN (
	'SELF_VIEW_REPORT_ROOT', 'VIEW', 'SELF_SUB_REPORT_NEW', 'SELF_SUB_REPORT_ROOT', 'SELF_VIEW_REPORT_NEW', 'SUBSCRIBE', 'SELF_REPORT_VIEWER', 'SELFSERVICE_REPORT');

UPDATE RES set URL = '/selfservice/report.html' WHERE RESOURCE_ID = 'SELFSERVICE_REPORT';

commit;
use openiam;

ALTER TABLE USER_IDENTITY_ANS CHANGE COLUMN QUESTION_ANSWER QUESTION_ANSWER VARCHAR(1024) NULL DEFAULT NULL;
ALTER TABLE MANAGED_SYS CHANGE COLUMN PSWD PSWD VARCHAR(512) NULL DEFAULT NULL;

commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS ADD_CERT_REPORT$$
CREATE PROCEDURE ADD_CERT_REPORT()
	BEGIN
		IF NOT EXISTS (SELECT * FROM RES WHERE RESOURCE_ID = 'EMPLOYEE_CERT_REPORT_105') THEN
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL, MIN_AUTH_LEVEL, IS_PUBLIC,
			  		ADMIN_RESOURCE_ID, RISK, TYPE_ID, COORELATED_NAME) VALUES
				('EMPLOYEE_CERT_REPORT_105', 'REPORT', NULL, 'EMPLOYEE_CERT_REPORT_105', NULL, NULL, NULL, 'Y', NULL, NULL, NULL, 'EMPLOYEE_CERT_REPORT');
 		END IF;

		IF NOT EXISTS (SELECT * FROM REPORT_INFO WHERE REPORT_INFO_ID = '105') THEN
			INSERT INTO REPORT_INFO (REPORT_INFO_ID, REPORT_NAME, DATASOURCE_FILE_PATH, REPORT_FILE_PATH, BUILT_IN, RESOURCE_ID) VALUES
				('105', 'EMPLOYEE_CERT_REPORT', 'EmployeeCertReport.groovy', 'EmployeeCertReport.rptdesign', 'Y', 'EMPLOYEE_CERT_REPORT_105');
 		END IF;

		IF NOT EXISTS (SELECT * FROM REPORT_CRITERIA_PARAMETER WHERE RCP_ID IN ('1051','1052','1053','1054')) THEN
			INSERT INTO REPORT_CRITERIA_PARAMETER (RCP_ID, REPORT_INFO_ID, PARAM_NAME, PARAM_VALUE, RCPT_ID, PARAM_META_TYPE_ID, 
					IS_MULTIPLE, IS_REQUIRED, CAPTION) VALUES
				('1051', '105', 'MANAGER_ID', NULL, '1', 'USER', 'N', 'N', 'MANAGER_ID'),
				('1052', '105', 'EMPLOYEE_ID', NULL, '1', 'USER', 'N', 'N', 'EMPLOYEE_ID'),
				('1053', '105', 'PERIOD_START', NULL, '2', NULL, 'N', 'Y', 'PERIOD_START'),
				('1054', '105', 'PERIOD_END', NULL, '2', NULL, 'N', 'N', 'PERIOD_END');
 		END IF;
	END$$
DELIMITER ;

call ADD_CERT_REPORT();
DROP PROCEDURE ADD_CERT_REPORT;

commit;
use openiam;
INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, NAME, DESCRIPTION, URL, DISPLAY_ORDER) VALUES('GROUP_IDENTITY', 'MENU_ITEM', 'GROUP_IDENTITY', 'Edit Identity Info','/webconsole/editGroupIdentity.html',3);
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, ATTR_VALUE) VALUES ('GROUP_IDENTITY_PUB', 'GROUP_IDENTITY', 'MENU_IS_PUBLIC', 'true');
INSERT INTO RESOURCE_PROP (RESOURCE_PROP_ID, RESOURCE_ID, NAME, ATTR_VALUE) VALUES ('GROUP_IDENTITY_DESC', 'GROUP_IDENTITY', 'MENU_DISPLAY_NAME', 'Identities');


INSERT INTO res_to_res_membership (RESOURCE_ID, MEMBER_RESOURCE_ID) VALUES('GROUP_EDIT_MENU', 'GROUP_IDENTITY');

INSERT INTO LANGUAGE_MAPPING (ID, LANGUAGE_ID, REFERENCE_ID, REFERENCE_TYPE, TEXT_VALUE) 
values ('GROUP_IDENTITY_DESC','1','GROUP_IDENTITY','ResourceEntity.displayNameMap','Identities'),
 ('ESGROUP_IDENTITY_DESC','4','GROUP_IDENTITY','ResourceEntity.displayNameMap','Identidades');

commit;
use openiam;

UPDATE POLICY_ATTRIBUTE SET VALUE1='false' WHERE (VALUE1='0' AND NAME IN('REPEAT_SAME_WORD_PASSPHRASE', 'CHNG_PSWD_ON_RESET', 'RESET_BY_USER'));

UPDATE POLICY_ATTRIBUTE SET VALUE1='true' WHERE (VALUE1='1' AND NAME IN('REPEAT_SAME_WORD_PASSPHRASE', 'CHNG_PSWD_ON_RESET', 'RESET_BY_USER'));

commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS ALTER_REPORT_CRITERIA_PARAMETER$$
CREATE PROCEDURE ALTER_REPORT_CRITERIA_PARAMETER()
	BEGIN
		IF NOT EXISTS (SELECT * FROM information_schema.columns WHERE table_name = 'REPORT_CRITERIA_PARAMETER' AND column_name = 'DISPLAY_ORDER') THEN
			ALTER TABLE REPORT_CRITERIA_PARAMETER ADD COLUMN DISPLAY_ORDER INT(11) NOT NULL;
 		END IF;
		IF NOT EXISTS (SELECT * FROM information_schema.columns WHERE table_name = 'REPORT_CRITERIA_PARAMETER' AND column_name = 'REQUEST_PARAMS') THEN
			ALTER TABLE REPORT_CRITERIA_PARAMETER ADD COLUMN REQUEST_PARAMS VARCHAR(512) NULL;
 		END IF;
	END$$
DELIMITER ;

CALL ALTER_REPORT_CRITERIA_PARAMETER();
DROP PROCEDURE ALTER_REPORT_CRITERIA_PARAMETER;


UPDATE REPORT_CRITERIA_PARAMETER SET DISPLAY_ORDER = 1 WHERE RCP_ID IN ('1011','1021','1031','1041','1051');
UPDATE REPORT_CRITERIA_PARAMETER SET DISPLAY_ORDER = 2 WHERE RCP_ID IN ('1012','1022','1042','1052');
UPDATE REPORT_CRITERIA_PARAMETER SET DISPLAY_ORDER = 3 WHERE RCP_ID IN ('1013','1023','1053');
UPDATE REPORT_CRITERIA_PARAMETER SET DISPLAY_ORDER = 4 WHERE RCP_ID IN ('1014','1024','1054');

DELIMITER $$

DROP PROCEDURE IF EXISTS ADD_PARAMETER_METATYPE$$
CREATE PROCEDURE ADD_PARAMETER_METATYPE()
	BEGIN
		IF NOT EXISTS (SELECT * FROM REPORT_PARAMETER_METATYPE WHERE PARAM_METATYPE_ID = 'RESOURCE') THEN
			INSERT INTO REPORT_PARAMETER_METATYPE (PARAM_METATYPE_ID, PARAM_METATYPE_NAME, IS_MULTIPLE) VALUES ('RESOURCE', 'Resource', 'Y');
 		END IF;
	END$$
DELIMITER ;

CALL ADD_PARAMETER_METATYPE();
DROP PROCEDURE ADD_PARAMETER_METATYPE;

commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS ADD_CERT_REPORT$$
CREATE PROCEDURE ADD_CERT_REPORT()
	BEGIN
		IF NOT EXISTS (SELECT * FROM RES WHERE RESOURCE_ID = 'RESOURCE_CERT_REPORT_106') THEN
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL, MIN_AUTH_LEVEL, IS_PUBLIC,
			  		ADMIN_RESOURCE_ID, RISK, TYPE_ID, COORELATED_NAME) VALUES
				('RESOURCE_CERT_REPORT_106', 'REPORT', NULL, 'RESOURCE_CERT_REPORT_106', NULL, NULL, NULL, 'Y', NULL, NULL, NULL, 'RESOURCE_CERT_REPORT');
 		END IF;

		IF NOT EXISTS (SELECT * FROM REPORT_INFO WHERE REPORT_INFO_ID = '106') THEN
			INSERT INTO REPORT_INFO (REPORT_INFO_ID, REPORT_NAME, DATASOURCE_FILE_PATH, REPORT_FILE_PATH, BUILT_IN, RESOURCE_ID) VALUES
				('106', 'RESOURCE_CERT_REPORT', 'ResourceCertReport.groovy', 'ResourceCertReport.rptdesign', 'Y', 'RESOURCE_CERT_REPORT_106');
 		END IF;

		IF NOT EXISTS (SELECT * FROM REPORT_CRITERIA_PARAMETER WHERE RCP_ID IN ('1061','1062','1063','1064')) THEN
			INSERT INTO REPORT_CRITERIA_PARAMETER (RCP_ID, REPORT_INFO_ID, PARAM_NAME, PARAM_VALUE, RCPT_ID, PARAM_META_TYPE_ID, 
					IS_MULTIPLE, IS_REQUIRED, CAPTION, DISPLAY_ORDER, REQUEST_PARAMS) VALUES
				('1061', '106', 'OWNER_ID', NULL, '1', 'USER', 'N', 'N', 'Owner', 1, NULL),
				('1062', '106', 'RES_ID', NULL, '1', 'RESOURCE', 'N', 'N', 'Admin Resource', 2, '{"resourceTypeId":"ADMIN_RESOURCE", "userId":"${OWNER_ID}"}'),
				('1063', '106', 'PERIOD_START', NULL, '2', NULL, 'N', 'Y', 'Period Start', 3, NULL),
				('1064', '106', 'PERIOD_END', NULL, '2', NULL, 'N', 'N', 'Period End', 4, NULL);
 		END IF;
	END$$
DELIMITER ;

call ADD_CERT_REPORT();
DROP PROCEDURE ADD_CERT_REPORT;

commit;
use openiam;

ALTER TABLE POLICY_DEF_PARAM CHANGE VALUE1 VALUE1 varchar(3072);
ALTER TABLE POLICY_DEF_PARAM CHANGE VALUE2 VALUE2 varchar(3072);
ALTER TABLE POLICY_ATTRIBUTE DROP COLUMN NAME;
ALTER TABLE POLICY_ATTRIBUTE DROP COLUMN OPERATION;
ALTER TABLE POLICY_ATTRIBUTE CHANGE VALUE1 VALUE1 varchar(3072);
ALTER TABLE POLICY_ATTRIBUTE CHANGE VALUE2 VALUE2 varchar(3072);



commit;
use openiam;

UPDATE POLICY_DEF_PARAM SET OPERATION="select" WHERE NAME="QUEST_LIST";
UPDATE POLICY_DEF_PARAM SET VALUE2="QUESTION_BANK" WHERE NAME="QUEST_LIST";
UPDATE POLICY_ATTRIBUTE SET VALUE2="QUESTION_BANK" WHERE POLICY_ATTR_ID="4015";
UPDATE POLICY_DEF_PARAM SET OPERATION="boolean" WHERE NAME = "CHNG_PSWD_ON_RESET";
UPDATE POLICY_DEF_PARAM SET OPERATION="boolean" WHERE NAME = "RESET_BY_USER" ;
UPDATE POLICY_DEF_PARAM SET OPERATION="boolean" WHERE NAME = "PWD_EQ_PWD";
UPDATE POLICY_DEF_PARAM SET OPERATION="boolean" WHERE NAME = "REPEAT_SAME_WORD_PASSPHRASE" ;
UPDATE POLICY_DEF_PARAM SET OPERATION="String" WHERE POLICY_DEF_ID = "100" AND OPERATION IS NULL;

commit;
use openiam;
insert into IDENTITY (IDENTITY_ID,MANAGED_SYS_ID, IDENTITY, REFERRED_OBJECT_ID, IDENTITY_TYPE, CREATE_DATE, CREATED_BY, STATUS) 
  select CONCAT(GRP_NAME,'_0_','GROUP'), '0', GRP_NAME, GRP_ID, 'GROUP', NOW(), '3000', 'ACTIVE' from GRP where GRP.GRP_ID not in (select REFERRED_OBJECT_ID from IDENTITY); 

commit;
use openiam;


DELETE FROM LANGUAGE_MAPPING WHERE REFERENCE_ID = 'MNGSYSRULES';

DELETE FROM res_to_res_membership WHERE MEMBER_RESOURCE_ID = 'MNGSYSRULES';

DELETE FROM RESOURCE_PROP WHERE RESOURCE_ID = 'MNGSYSRULES';

DELETE FROM RESOURCE_ROLE WHERE RESOURCE_ID = 'MNGSYSRULES';

DELETE FROM RES WHERE RESOURCE_ID = 'MNGSYSRULES';

commit;
use openiam;

DELETE FROM POLICY_ATTRIBUTE  WHERE DEF_PARAM_ID IN (183,184);
DELETE FROM POLICY_DEF_PARAM WHERE DEF_PARAM_ID  IN (183,184);

INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, VALUE1, VALUE2, REPEATS, PARAM_GROUP, HANDLER_LANGUAGE, POLICY_PARAM_HANDLER) VALUES ('184', '100', 'INITIAL_PASSWORD', 'Initial Password configuration', 'select', 'STATIC', 'STATIC,RANDOM', 0, 'PSWD_COMPOSITION', null, null);
INSERT INTO POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, VALUE1, VALUE2, RULE_TEXT, REQUIRED) VALUES ('4201', '184', '4000', 'STATIC', 'STATIC,RANDOM', null, 'Y');


commit;
use openiam;

DELETE FROM POLICY_ATTRIBUTE  WHERE DEF_PARAM_ID IN (185);
DELETE FROM POLICY_DEF_PARAM WHERE DEF_PARAM_ID  IN (185);

INSERT INTO POLICY_DEF_PARAM (DEF_PARAM_ID, POLICY_DEF_ID, NAME, DESCRIPTION, OPERATION, VALUE1, VALUE2, REPEATS, PARAM_GROUP, HANDLER_LANGUAGE, POLICY_PARAM_HANDLER) VALUES ('185', '100', 'REJECT_WORDS_IN_PSWD', 'Words not allowed in a password', 'boolean', 'false', '', 0, 'PSWD_COMPOSITION', null, 'org.openiam.idm.srvc.pswd.rule.RejectWordsRule');
INSERT INTO POLICY_ATTRIBUTE (POLICY_ATTR_ID, DEF_PARAM_ID, POLICY_ID, VALUE1, VALUE2, RULE_TEXT, REQUIRED) VALUES ('4202', '185', '4000', 'false', '', '', 'Y');


commit;
use openiam;

DELETE FROM RECONCILIATION_SITUATION WHERE RECON_CONFIG_ID IN ('1011', '4028b881373b90e501373b92ec180001');
DELETE FROM RECONCILIATION_CONFIG WHERE RECON_CONFIG_ID IN ('1011', '4028b881373b90e501373b92ec180001');

INSERT INTO RECONCILIATION_CONFIG (RECON_CONFIG_ID,RESOURCE_ID,STATUS,TARGET_SYS_MATCH_SCRIPT,MATCH_FIELD_NAME,CUSTOM_MATCH_ATTR,MANAGED_SYS_ID,SEARCH_FILTER,TARGET_SYS_SEARCH_FILTER,MATCH_SCRIPT,RECON_TYPE)
VALUES ('1011','101','ACTIVE','recon/LDAPSearchQuery.groovy','PRINCIPAL','uid','101','{"employeeId":"not_found"}','(&(objectclass=inetOrgPerson)(uid=*))','recon/UserSearchScript.groovy','USER');

INSERT INTO RECONCILIATION_SITUATION (RECON_SITUATION_ID,RECON_CONFIG_ID,SITUATION,SITUATION_RESP,SCRIPT) VALUES
('10111','1011','IDM[exists] and Resource[not exists]','DELETE_FROM_IDM','recon/LDAPPopulationScript.groovy'),
('10112','1011','IDM[not exists] and Resource[exists]','ADD_TO_IDM','recon/LDAPPopulationScript.groovy'),
('10113','1011','IDM[deleted] and Resource[exists]','NOTHING','recon/LDAPPopulationScript.groovy'),
('10114','1011','IDM[exists] and Resource[exists]','UPDATE_IDM_FROM_RES','recon/LDAPPopulationScript.groovy');

commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS ADD_TERM_REPORT$$
CREATE PROCEDURE ADD_TERM_REPORT()
	BEGIN
		IF NOT EXISTS (SELECT * FROM RES WHERE RESOURCE_ID = 'TERM_ACCOUNT_REPORT_107') THEN
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL, MIN_AUTH_LEVEL, IS_PUBLIC,
			  		ADMIN_RESOURCE_ID, RISK, TYPE_ID, COORELATED_NAME) VALUES
				('TERM_ACCOUNT_REPORT_107', 'REPORT', NULL, 'TERM_ACCOUNT_REPORT_107', NULL, NULL, NULL, 'Y', NULL, NULL, NULL, 'TERMINATING_ACCOUNTS_REPORT');
 		END IF;

		IF NOT EXISTS (SELECT * FROM REPORT_INFO WHERE REPORT_INFO_ID = '107') THEN
			INSERT INTO REPORT_INFO (REPORT_INFO_ID, REPORT_NAME, DATASOURCE_FILE_PATH, REPORT_FILE_PATH, BUILT_IN, RESOURCE_ID) VALUES
				('107', 'TERMINATING_ACCOUNTS', 'TerminatingAccountsReport.groovy', 'TerminatingAccountsReport.rptdesign', 'Y', 'TERM_ACCOUNT_REPORT_107');
 		END IF;

		IF NOT EXISTS (SELECT * FROM REPORT_CRITERIA_PARAMETER WHERE RCP_ID IN ('1071','1072','1073')) THEN
			INSERT INTO REPORT_CRITERIA_PARAMETER (RCP_ID, REPORT_INFO_ID, PARAM_NAME, PARAM_VALUE, RCPT_ID, PARAM_META_TYPE_ID, 
					IS_MULTIPLE, IS_REQUIRED, CAPTION, DISPLAY_ORDER, REQUEST_PARAMS) VALUES
				('1071', '107', 'ORG_ID', NULL, '1', 'ORGANIZATION', 'N', 'N', 'Organization', 1, NULL),
				('1072', '107', 'PERIOD_START', NULL, '2', NULL, 'N', 'Y', 'Period Start', 2, NULL),
				('1073', '107', 'PERIOD_END', NULL, '2', NULL, 'N', 'N', 'Period End', 3, NULL);
 		END IF;
	END$$
DELIMITER ;

call ADD_TERM_REPORT();
DROP PROCEDURE ADD_TERM_REPORT;

commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS ADD_TOP_REPORT$$
CREATE PROCEDURE ADD_TOP_REPORT()
	BEGIN
		IF NOT EXISTS (SELECT * FROM RES WHERE RESOURCE_ID = 'TOP_ACTIVE_USERS_REPORT_108') THEN
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL, MIN_AUTH_LEVEL, IS_PUBLIC,
			  		ADMIN_RESOURCE_ID, RISK, TYPE_ID, COORELATED_NAME) VALUES
				('TOP_ACTIVE_USERS_REPORT_108', 'REPORT', NULL, 'TOP_ACTIVE_USERS_REPORT_108', NULL, NULL, NULL, 'Y', NULL, NULL, NULL, 'TOP_ACTIVE_USERS_REPORT');
 		END IF;

		IF NOT EXISTS (SELECT * FROM REPORT_INFO WHERE REPORT_INFO_ID = '108') THEN
			INSERT INTO REPORT_INFO (REPORT_INFO_ID, REPORT_NAME, DATASOURCE_FILE_PATH, REPORT_FILE_PATH, BUILT_IN, RESOURCE_ID) VALUES
				('108', 'TOP_ACTIVE_USERS', 'TopActiveUsersReport.groovy', 'TopActiveUsersReport.rptdesign', 'Y', 'TOP_ACTIVE_USERS_REPORT_108');
 		END IF;

		IF NOT EXISTS (SELECT * FROM REPORT_CRITERIA_PARAMETER WHERE RCP_ID IN ('1081','1082','1083','1084','1085')) THEN
			INSERT INTO REPORT_CRITERIA_PARAMETER (RCP_ID, REPORT_INFO_ID, PARAM_NAME, PARAM_VALUE, RCPT_ID, PARAM_META_TYPE_ID, 
					IS_MULTIPLE, IS_REQUIRED, CAPTION, DISPLAY_ORDER, REQUEST_PARAMS) VALUES
				('1081', '108', 'ORG_ID', NULL, '1', 'ORGANIZATION', 'N', 'N', 'Organization', 1, NULL),
				('1082', '108', 'ROLE_ID', NULL, '1', 'ROLE', 'N', 'N', 'Role', 2, NULL),
				('1083', '108', 'PERIOD_START', NULL, '2', NULL, 'N', 'Y', 'Period Start', 3, NULL),
				('1084', '108', 'PERIOD_END', NULL, '2', NULL, 'N', 'N', 'Period End', 4, NULL),
				('1085', '108', 'RECORDS', NULL, '3', NULL, 'N', 'N', 'Total records', 5, NULL);
 		END IF;
	END$$
DELIMITER ;

call ADD_TOP_REPORT();
DROP PROCEDURE ADD_TOP_REPORT;

commit;
use openiam;

UPDATE POLICY_DEF_PARAM SET OPERATION = "RANGE" WHERE DEF_PARAM_ID="129";
UPDATE POLICY_DEF_PARAM SET VALUE1 = "1" WHERE DEF_PARAM_ID="129";
UPDATE POLICY_DEF_PARAM SET VALUE2 = "5" WHERE DEF_PARAM_ID="129";
UPDATE POLICY_ATTRIBUTE SET VALUE1 = "1" WHERE DEF_PARAM_ID="129";
UPDATE POLICY_ATTRIBUTE SET VALUE2 = "5" WHERE DEF_PARAM_ID="129";
UPDATE POLICY_ATTRIBUTE SET REQUIRED = "N" WHERE DEF_PARAM_ID="129";

commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS ADD_USER_ACCESS_REPORT$$
CREATE PROCEDURE ADD_USER_ACCESS_REPORT()
	BEGIN

    IF NOT EXISTS (SELECT * FROM REPORT_PARAMETER_METATYPE WHERE PARAM_METATYPE_ID = 'RISK') THEN
      INSERT INTO REPORT_PARAMETER_METATYPE (PARAM_METATYPE_ID, PARAM_METATYPE_NAME, IS_MULTIPLE) VALUES ('RISK', 'Risk', 'N');
    END IF;

		IF NOT EXISTS (SELECT * FROM RES WHERE RESOURCE_ID = 'USER_ACCESS_REPORT_109') THEN
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL, MIN_AUTH_LEVEL, IS_PUBLIC,
			  		ADMIN_RESOURCE_ID, RISK, TYPE_ID, COORELATED_NAME) VALUES
				('USER_ACCESS_REPORT_109', 'REPORT', NULL, 'USER_ACCESS_REPORT_109', NULL, NULL, NULL, 'Y', NULL, NULL, NULL, 'USER_ACCESS_REPORT');
 		END IF;

		IF NOT EXISTS (SELECT * FROM REPORT_INFO WHERE REPORT_INFO_ID = '109') THEN
			INSERT INTO REPORT_INFO (REPORT_INFO_ID, REPORT_NAME, DATASOURCE_FILE_PATH, REPORT_FILE_PATH, BUILT_IN, RESOURCE_ID) VALUES
				('109', 'USER_ACCESS_REPORT', 'UserAccessReport.groovy', 'UserAccessReport.rptdesign', 'Y', 'USER_ACCESS_REPORT_109');
 		END IF;

		IF NOT EXISTS (SELECT * FROM REPORT_CRITERIA_PARAMETER WHERE RCP_ID IN ('1091','1092','1093','1094','1095')) THEN
			INSERT INTO REPORT_CRITERIA_PARAMETER (RCP_ID, REPORT_INFO_ID, PARAM_NAME, PARAM_VALUE, RCPT_ID, PARAM_META_TYPE_ID, 
					IS_MULTIPLE, IS_REQUIRED, CAPTION, DISPLAY_ORDER, REQUEST_PARAMS) VALUES
				('1091', '109', 'ORG_ID', NULL, '1', 'ORGANIZATION', 'N', 'N', 'Organization', 1, NULL),
				('1092', '109', 'ROLE_ID', NULL, '1', 'ROLE', 'N', 'N', 'Role', 2, NULL),
				('1093', '109', 'RISK', NULL, '1', 'RISK', 'N', 'N', 'Risk', 3, NULL),
				('1094', '109', 'MANAGED_SYS_ID', NULL, '1', 'MANAGED_SYSTEM', 'N', 'N', 'Managed System', 4, NULL),
				('1095', '109', 'USER_ID', NULL, '1', 'USER', 'N', 'N', 'User', 5, NULL);
 		END IF;
	END$$
DELIMITER ;

call ADD_USER_ACCESS_REPORT();
DROP PROCEDURE ADD_USER_ACCESS_REPORT;

commit;
use openiam;

INSERT INTO REPORT_CRITERIA_PARAMETER (RCP_ID, REPORT_INFO_ID, PARAM_NAME, PARAM_VALUE, RCPT_ID, PARAM_META_TYPE_ID, 
		IS_MULTIPLE, IS_REQUIRED, CAPTION, DISPLAY_ORDER, REQUEST_PARAMS)
VALUES ('1025', '102', 'ORG_ID', NULL, '1', 'ORGANIZATION', 'N', 'N', 'Organization', '5', NULL);

commit;
use openiam;

DELIMITER $$

DROP PROCEDURE IF EXISTS ADD_PASS_CHANGES_REPORT$$
CREATE PROCEDURE ADD_PASS_CHANGES_REPORT()
	BEGIN
		IF NOT EXISTS (SELECT * FROM RES WHERE RESOURCE_ID = 'PASSWORD_CHANGES_REPORT_110') THEN
			INSERT INTO RES (RESOURCE_ID, RESOURCE_TYPE_ID, DESCRIPTION, NAME, DISPLAY_ORDER, URL, MIN_AUTH_LEVEL, IS_PUBLIC,
			  		ADMIN_RESOURCE_ID, RISK, TYPE_ID, COORELATED_NAME) VALUES
				('PASSWORD_CHANGES_REPORT_110', 'REPORT', NULL, 'PASSWORD_CHANGES_REPORT_110', NULL, NULL, NULL, 'Y', NULL, NULL, NULL, 'PASSWORD_CHANGES_REPORT');
 		END IF;

		IF NOT EXISTS (SELECT * FROM REPORT_INFO WHERE REPORT_INFO_ID = '110') THEN
			INSERT INTO REPORT_INFO (REPORT_INFO_ID, REPORT_NAME, DATASOURCE_FILE_PATH, REPORT_FILE_PATH, BUILT_IN, RESOURCE_ID) VALUES
				('110', 'PASSWORD_CHANGES_REPORT', 'PasswordChangesReport.groovy', 'PasswordChangesReport.rptdesign', 'Y', 'PASSWORD_CHANGES_REPORT_110');
 		END IF;

		IF NOT EXISTS (SELECT * FROM REPORT_CRITERIA_PARAMETER WHERE RCP_ID IN ('1101','1102','1103')) THEN
			INSERT INTO REPORT_CRITERIA_PARAMETER (RCP_ID, REPORT_INFO_ID, PARAM_NAME, PARAM_VALUE, RCPT_ID, PARAM_META_TYPE_ID, 
					IS_MULTIPLE, IS_REQUIRED, CAPTION, DISPLAY_ORDER, REQUEST_PARAMS) VALUES
				('1101', '110', 'ORG_ID', NULL, '1', 'ORGANIZATION', 'N', 'N', 'Organization', 1, NULL),
				('1102', '110', 'PERIOD_START', NULL, '2', NULL, 'N', 'Y', 'Period Start', 2, NULL),
				('1103', '110', 'PERIOD_END', NULL, '2', NULL, 'N', 'N', 'Period End', 3, NULL);
 		END IF;
	END$$
DELIMITER ;

call ADD_PASS_CHANGES_REPORT();
DROP PROCEDURE ADD_PASS_CHANGES_REPORT;

commit;
use openiam;

insert into SYNCH_CONFIG(SYNCH_CONFIG_ID,NAME,STATUS,SYNCH_SRC,FILE_NAME,MANAGED_SYS_ID,SYNCH_TYPE,PROCESS_RULE,VALIDATION_RULE,TRANSFORMATION_RULE,MATCH_FIELD_NAME,CUSTOM_MATCH_ATTR,USE_POLICY_MAP,USE_TRANSFORM_SCRIPT,POLICY_MAP_BEFORE_TRANSFORM,USE_SYSTEM_PATH,SEARCH_SCOPE) 
 values('csv_users_sample_id','CSV to IDM Users Sample','ACTIVE','CSV','test-user.csv','0','FULL','USER','sync/idmapps/csv/CSVSampleValidationScript.groovy','sync/idmapps/csv/CSVSampleTransformationScript.groovy','EMPLOYEE_ID','EMPLOYEE_ID','N','Y','Y','Y','2'); 

commit;
use openiam;
-- add WIN02-POWERSHELL-AD connector
insert into PROVISION_CONNECTOR(CONNECTOR_ID,NAME,METADATA_TYPE_ID,STD_COMPLIANCE_LEVEL,CLIENT_COMM_PROTOCOL,SERVICE_URL,SERVICE_NAMESPACE,SERVICE_PORT,SERVICE_WSDL,CLASS_NAME,HOST,PORT,CONNECTOR_INTERFACE)
values('powershell_ad_rem_connector_id','AD Win02 Remote','RemoteConnector',null,'CLEAR','win02.openiamdemo.com/PowershellConnectorAD/PowershellConnector.svc','urn:idm.openiam.org/spml2/service','443',null,null,null,null,'REMOTE');

insert into MANAGED_SYS(MANAGED_SYS_ID,NAME,DESCRIPTION,STATUS,CONNECTOR_ID,HOST_URL,APPL_URL,PORT,COMM_PROTOCOL,USER_ID, PSWD,START_DATE,END_DATE, RESOURCE_ID,PRIMARY_REPOSITORY,SECONDARY_REPOSITORY_ID,ALWAYS_UPDATE_SECONDARY,RES_DEPENDENCY, ADD_HNDLR, MODIFY_HNDLR, DELETE_HNDLR, SETPASS_HNDLR, SUSPEND_HNDLR,SEARCH_HNDLR,LOOKUP_HNDLR,TEST_CONNECTION_HNDLR,RECONCILE_RESOURCE_HNDLR,HNDLR_5,DRIVER_URL,CONNECTION_STRING,SEARCH_SCOPE)
values('active_dir_win02_managed_sys_id','AD Win02 [Remote Connector]','','ACTIVE','powershell_ad_rem_connector_id', 'LDAP://win02.ad.openiamdemo.info', NULL, NULL, '', 'AD\\Administrator', NULL, NULL, NULL, 'active_dir_win02_mng_sys_res_id', NULL, '', NULL, NULL, 'ADPowershell.ps1', 'ADPowershell.ps1','ADPowershell.ps1', 'ADPowershell.ps1', 'ADPowershell.ps1', 'ADPowershell.ps1', 'ADPowershell.ps1', 'ADPowershell.ps1', 'ADPowershell.ps1', '', '', '','2');

insert into MANAGED_SYS_RULE(MANAGED_SYS_RULE_ID,MANAGED_SYS_ID,MANAGED_SYS_RULE_NAME,MANAGED_SYS_RULE_VALUE)
values('ad_win02_managed_sys_rule_id', 'active_dir_win02_managed_sys_id', 'SamAccountName', 'provision/ad/sAMAccount.groovy');

insert into MNG_SYS_OBJECT_MATCH(OBJECT_SEARCH_ID,MANAGED_SYS_ID,OBJECT_TYPE,MATCH_METHOD,BASE_DN,SEARCH_BASE_DN,SEARCH_FILTER,KEY_FIELD)
values('ad_win02_mng_sys_obj_match_0_id', 'active_dir_win02_managed_sys_id', 'USER', NULL, 'ou=idm-test,dc=ad,dc=openiamdemo,dc=info', 'ou=idm-test,dc=ad,dc=openiamdemo,dc=info', '', 'sAMAccountName');

insert into MNG_SYS_OBJECT_MATCH(OBJECT_SEARCH_ID,MANAGED_SYS_ID,OBJECT_TYPE,MATCH_METHOD,BASE_DN,SEARCH_BASE_DN,SEARCH_FILTER,KEY_FIELD)
values('ad_win02_mng_sys_obj_match_1_id', 'active_dir_win02_managed_sys_id', 'GROUP', NULL, 'ou=idm-test,dc=ad,dc=openiamdemo,dc=info', 'ou=idm-test,dc=ad,dc=openiamdemo,dc=info', '', 'sAMAccountName');

insert into RES(RESOURCE_ID,RESOURCE_TYPE_ID,DESCRIPTION,NAME,DISPLAY_ORDER,URL,MIN_AUTH_LEVEL,IS_PUBLIC)
values('active_dir_win02_mng_sys_res_id', 'MANAGED_SYS', NULL, 'RES_AD_WIN02_REMOTE', '0', NULL, NULL, 'Y');


insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f13d3e2013f13ecc1d40005', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'PRINCIPAL', 'sAMAccountName', NULL, NULL, '8a70a63f3f13d3e2013f13ecc1cc0004', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f13d3e2013f13ecf5f8000b', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'USER', 'SamAccountName', NULL, NULL, '8a70a63f3f13d3e2013f13ecf5f1000a', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f1c34b4013f1eb31c14002a', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'USER', 'Surname', NULL, NULL, '8a70a63f3f1c34b4013f1eb31bf20029', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f1c34b4013f1eb432220034', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'USER', 'GivenName', NULL, NULL, '8a70a63f3f1c34b4013f1eb432050033', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f1c34b4013f1eb4f2470040', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'USER', 'DisplayName', NULL, NULL, '8a70a63f3f1c34b4013f1eb4f22a003f', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f1c34b4013f1eb5a40e004e', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'USER', 'HomeDirectory', NULL, NULL, '8a70a63f3f1c34b4013f1eb5a3ec004d', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f1c34b4013f1eb6ee5e006a', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'USER', 'Path', NULL, NULL, '8a70a63f3f1c34b4013f1eb6ee580069', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f1c34b4013f1eb7babd007c', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'USER', 'ProfilePath', NULL, NULL, '8a70a63f3f1c34b4013f1eb7bab7007b', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f1c34b4013f1ebd84a10090', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'USER', 'HomeDrive', NULL, NULL, '8a70a63f3f1c34b4013f1ebd849b008f', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f1c34b4013f1ebe819b00a6', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'USER', 'ScriptPath', NULL, NULL, '8a70a63f3f1c34b4013f1ebe819500a5', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f1c34b4013f1ebed6df00be', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'USER', 'Company', NULL, NULL, '8a70a63f3f1c34b4013f1ebed6d800bd', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f1c34b4013f1ebf472300d8', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'USER', 'Initials', NULL, NULL, '8a70a63f3f1c34b4013f1ebf471e00d7', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f1c34b4013f1ebf984b00f4', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'USER', 'Department', NULL, NULL, '8a70a63f3f1c34b4013f1ebf984500f3', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f1c34b4013f1ec143510112', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'USER', 'Title', NULL, NULL, '8a70a63f3f1c34b4013f1ec1434c0111', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f1c34b4013f1ec2f0730132', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'USER', 'UserPrincipalName', NULL, NULL, '8a70a63f3f1c34b4013f1ec2f06e0131', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f1c34b4013f1ec6c7a70154', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'USER', 'StreetAddress', NULL, NULL, '8a70a63f3f1c34b4013f1ec6c7a30153', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f1c34b4013f1ec7fa1b0178', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'USER', 'City', NULL, NULL, '8a70a63f3f1c34b4013f1ec7fa170177', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f1c34b4013f1ec88057019e', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'USER', 'State', NULL, NULL, '8a70a63f3f1c34b4013f1ec8803d019d', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f1c34b4013f1ec996af01c6', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'USER', 'PostalCode', NULL, NULL, '8a70a63f3f1c34b4013f1ec996a001c5', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f1c34b4013f1eca30fb01f0', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'USER', 'OfficePhone', NULL, NULL, '8a70a63f3f1c34b4013f1eca30f601ef', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f1c34b4013f1eca8128021c', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'USER', 'Name', NULL, NULL, '8a70a63f3f1c34b4013f1eca8122021b', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f1c34b4013f1eccbd77024a', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'USER', 'AccountPassword', NULL, NULL, '8a70a63f3f1c34b4013f1eccbd720249', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f1c34b4013f1ecd3a2c027a', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'USER', 'EmployeeID', NULL, NULL, '8a70a63f3f1c34b4013f1ecd3a280279', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f1c34b4013f1ecf05b002ac', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'USER', 'Manager', NULL, NULL, '8a70a63f3f1c34b4013f1ecf05ac02ab', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f1c34b4013f1ecf6bce02e0', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'USER', 'Office', NULL, NULL, '8a70a63f3f1c34b4013f1ecf6bc902df', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f1c34b4013f1ed092a80348', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'USER', 'EmailAddress', NULL, NULL, '8a70a63f3f1c34b4013f1ed0926e0347', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);
insert into ATTRIBUTE_MAP(ATTRIBUTE_MAP_ID,MANAGED_SYS_ID,RESOURCE_ID,MAP_FOR_OBJECT_TYPE,ATTRIBUTE_NAME,TARGET_ATTRIBUTE_NAME,AUTHORITATIVE_SRC,ATTRIBUTE_POLICY_ID,RULE_TEXT,STATUS,START_DATE,END_DATE,STORE_IN_IAMDB,DATA_TYPE,DEFAULT_VALUE,SYNCH_CONFIG_ID)
values('8a70a63f3f5841b5013f587586110023', 'active_dir_win02_managed_sys_id', 'active_dir_win02_mng_sys_res_id', 'EMAIL', 'Enabled', NULL, NULL, '8a70a63f3f5841b5013f5875860a0022', NULL, 'ACTIVE', NULL, NULL, NULL, 'STRING', NULL, NULL);


INSERT INTO RECON_RES_ATTR_MAP VALUES ('8a70a63f3f13d3e2013f13ecc1cc0004','4630',NULL),('8a70a63f3f13d3e2013f13ecf5f1000a','8a70a63f3f5841b5013f585def970003',NULL),('8a70a63f3f1c34b4013f1eb31bf20029','4506',NULL),('8a70a63f3f1c34b4013f1eb432050033','4631',NULL),('8a70a63f3f1c34b4013f1eb4f22a003f','4517',NULL),('8a70a63f3f1c34b4013f1eb5a3ec004d','4636',NULL),('8a70a63f3f1c34b4013f1eb6ee580069','4633',NULL),('8a70a63f3f1c34b4013f1eb7bab7007b','4635',NULL),('8a70a63f3f1c34b4013f1ebd849b008f','4637',NULL),('8a70a63f3f1c34b4013f1ebe819500a5','4639',NULL),('8a70a63f3f1c34b4013f1ebed6d800bd','4640',NULL),('8a70a63f3f1c34b4013f1ebf471e00d7','4642',NULL),('8a70a63f3f1c34b4013f1ebf984500f3','4643',NULL),('8a70a63f3f1c34b4013f1ec1434c0111','4645',NULL),('8a70a63f3f1c34b4013f1ec2f06e0131','297ec33c3ced62d2013ced83e3640086',NULL),('8a70a63f3f1c34b4013f1ec6c7a30153','297ec33c3ced62d2013ced8547880097',NULL),('8a70a63f3f1c34b4013f1ec7fa170177','297ec33c3ced62d2013ced8647c100a9',NULL),('8a70a63f3f1c34b4013f1ec8803d019d','297ec33c3ced62d2013ced87182100bc',NULL),('8a70a63f3f1c34b4013f1ec996a001c5','297ec33c3ced62d2013ced883c3e00d0',NULL),('8a70a63f3f1c34b4013f1eca30f601ef','4511',NULL),('8a70a63f3f1c34b4013f1eca8122021b','4501',NULL),('8a70a63f3f1c34b4013f1eccbd720249','4563',NULL),('8a70a63f3f1c34b4013f1ecd3a280279','4543',NULL),('8a70a63f3f1c34b4013f1ecf05ac02ab','297ec33c3ced62d2013ced883c3f00e0',NULL),('8a70a63f3f1c34b4013f1ecf6bc902df','4503',NULL),('8a70a63f3f1c34b4013f1ed0926e0347','4540',NULL),('8a70a63f3f5841b5013f5875860a0022','8a70a63f3f5841b5013f586a9743001d',NULL);

INSERT INTO POLICY VALUES ('297ec33c3ced62d2013ced83e3640086','104','ad-userPrincipalName','User principal name',1,NULL,NULL,NULL,NULL,'provision/ad/userPrincipalName.groovy',NULL,1),('297ec33c3ced62d2013ced8547880097','104','ad-streetAddress','Street Address',1,'2013-02-18 17:36:40','3000','2013-02-18 17:39:54',NULL,'provision/ad/street.groovy',NULL,1),('297ec33c3ced62d2013ced8647c100a9','104','ad-city','City',1,'2013-02-18 17:36:40','3000','2013-02-18 17:39:54',NULL,'provision/ad/city.groovy',NULL,1),('297ec33c3ced62d2013ced87182100bc','104','ad-state','State',1,'2013-02-18 17:38:39','3000','2013-02-18 17:39:54',NULL,'provision/ad/state.groovy',NULL,1),('297ec33c3ced62d2013ced883c3e00d0','104','ad-zip','Postal code',1,'2013-02-18 17:39:54','3000','2013-02-18 17:39:54',NULL,'provision/ad/zip.groovy',NULL,1),('297ec33c3ced62d2013ced883c3f00e0','104','ad-manager','Manager',1,'2013-02-18 17:39:54','3000','2013-02-18 17:39:54',NULL,'provision/ad/manager.groovy',NULL,1),('8a70a63f3f5841b5013f586a9743001d','104','ad-status','Status',1,NULL,NULL,NULL,NULL,'provision/ad/adStatus.groovy',NULL,NULL);
INSERT INTO POLICY VALUES ('8a70a63f3f5841b5013f585def970003','104','ad-sAMAccountName-NP','ad-sAMAccountName-NoPrincipal',1,NULL,NULL,NULL,NULL,'provision/ad/win02/sAMAccountName-NP.groovy',NULL,NULL);

-- Reconciliation config
insert into RECONCILIATION_CONFIG(RECON_CONFIG_ID, RESOURCE_ID, STATUS, TARGET_SYS_MATCH_SCRIPT, MANUAL_RECONCILIATION_FLAG, MATCH_FIELD_NAME, CUSTOM_MATCH_ATTR, MANAGED_SYS_ID, SEARCH_FILTER, TARGET_SYS_SEARCH_FILTER, MATCH_SCRIPT, RECON_CUSTOM_PROCESSOR, RECON_TYPE) 
values('297e25c047cf76fc0147cfb2874c0002', 'active_dir_win02_mng_sys_res_id', 'ACTIVE', '', 'N', 'PRINCIPAL', 'cn', 'active_dir_win02_managed_sys_id', '', '(objectClass=group)', 'recon/GroupSearchScript.groovy', 'recon/GroupProcessor.groovy', 'GROUP');
insert into RECONCILIATION_SITUATION(RECON_SITUATION_ID,RECON_CONFIG_ID,SITUATION,SITUATION_RESP) 
values('297e25c047cf76fc0147cfb2874f0003','297e25c047cf76fc0147cfb2874c0002','IDM[deleted] and Resource[exists]','NOTHING');
insert into RECONCILIATION_SITUATION(RECON_SITUATION_ID,RECON_CONFIG_ID,SITUATION,SITUATION_RESP) 
values('297e25c047cf76fc0147cfb287510004','297e25c047cf76fc0147cfb2874c0002','IDM[exists] and Resource[exists]','NOTHING');
insert into RECONCILIATION_SITUATION(RECON_SITUATION_ID,RECON_CONFIG_ID,SITUATION,SITUATION_RESP) 
values('297e25c047cf76fc0147cfb287510005','297e25c047cf76fc0147cfb2874c0002','IDM[not exists] and Resource[exists]','ADD_TO_IDM');
insert into RECONCILIATION_SITUATION(RECON_SITUATION_ID,RECON_CONFIG_ID,SITUATION,SITUATION_RESP) 
values('297e25c047cf76fc0147cfb287510006','297e25c047cf76fc0147cfb2874c0002','IDM[exists] and Resource[not exists]','ADD_TO_RES');

insert into RECONCILIATION_CONFIG(RECON_CONFIG_ID, RESOURCE_ID, STATUS, TARGET_SYS_MATCH_SCRIPT, MANUAL_RECONCILIATION_FLAG, MATCH_FIELD_NAME, CUSTOM_MATCH_ATTR, MANAGED_SYS_ID, SEARCH_FILTER, TARGET_SYS_SEARCH_FILTER, MATCH_SCRIPT, RECON_CUSTOM_PROCESSOR, RECON_TYPE) 
values('0000000043567beb014358f5c604028f', 'active_dir_win02_mng_sys_res_id', 'ACTIVE', 'recon/PowershellADSearchQuery.groovy', 'N', 'PRINCIPAL', 'SamAccountName', 'active_dir_win02_managed_sys_id', '{"employeeId": "notexists"}', '(&(objectCategory=person)(objectClass=user)(SamAccountName=*))', 'recon/UserSearchScript.groovy', null, 'USER');
insert into RECONCILIATION_SITUATION(RECON_SITUATION_ID,RECON_CONFIG_ID,SITUATION,SITUATION_RESP,SCRIPT) 
values('0000000043567beb014358f5c6140290','0000000043567beb014358f5c604028f','IDM[deleted] and Resource[exists]','ADD_TO_IDM','recon/PowershellADPopulationScript.groovy');
insert into RECONCILIATION_SITUATION(RECON_SITUATION_ID,RECON_CONFIG_ID,SITUATION,SITUATION_RESP,SCRIPT) 
values('0000000043567beb014358f5c62c0291','0000000043567beb014358f5c604028f','IDM[exists] and Resource[not exists]','DELETE_FROM_IDM','recon/PowershellADPopulationScript.groovy');
insert into RECONCILIATION_SITUATION(RECON_SITUATION_ID,RECON_CONFIG_ID,SITUATION,SITUATION_RESP,SCRIPT) 
values('0000000043567beb014358f5c6360292','0000000043567beb014358f5c604028f','IDM[not exists] and Resource[exists]','ADD_TO_IDM','recon/PowershellADPopulationScript.groovy');
insert into RECONCILIATION_SITUATION(RECON_SITUATION_ID,RECON_CONFIG_ID,SITUATION,SITUATION_RESP,SCRIPT) 
values('0000000043567beb014358f5c6d60293','0000000043567beb014358f5c604028f','IDM[exists] and Resource[exists]','UPDATE_IDM_FROM_RES','recon/PowershellADPopulationScript.groovy');






commit;
use openiam;

UPDATE USERS SET STATUS='TERMINATED' WHERE STATUS='TERMINATE';
UPDATE USERS SET SECONDARY_STATUS='TERMINATED' WHERE SECONDARY_STATUS='TERMINATE';
commit;
use openiam;

ALTER TABLE URI_PATTERN_META_VALUE ADD COLUMN IS_EMPTY_VALUE CHAR(1) NOT NULL DEFAULT 'N';

commit;
use openiam;

-- Reconciliation config
insert into RECONCILIATION_CONFIG(RECON_CONFIG_ID, RESOURCE_ID, STATUS, TARGET_SYS_MATCH_SCRIPT, MANUAL_RECONCILIATION_FLAG, MATCH_FIELD_NAME, CUSTOM_MATCH_ATTR, MANAGED_SYS_ID, SEARCH_FILTER, TARGET_SYS_SEARCH_FILTER, MATCH_SCRIPT, RECON_CUSTOM_PROCESSOR, RECON_TYPE) 
values('110grouptype', '110', 'ACTIVE', 'recon/LDAPSearchQuery.groovy', 'N', 'PRINCIPAL', 'cn', '110', '', '(objectClass=group)', 'recon/GroupSearchScript.groovy', 'recon/GroupProcessor.groovy', 'GROUP');

insert into RECONCILIATION_SITUATION(RECON_SITUATION_ID,RECON_CONFIG_ID,SITUATION,SITUATION_RESP,SCRIPT) 
values('110grouptype0003','110grouptype','IDM[deleted] and Resource[exists]','ADD_TO_IDM','recon/ADPopulationScript.groovy');
insert into RECONCILIATION_SITUATION(RECON_SITUATION_ID,RECON_CONFIG_ID,SITUATION,SITUATION_RESP,SCRIPT) 
values('110grouptype0004','110grouptype','IDM[exists] and Resource[not exists]','DELETE_FROM_IDM','recon/ADPopulationScript.groovy');
insert into RECONCILIATION_SITUATION(RECON_SITUATION_ID,RECON_CONFIG_ID,SITUATION,SITUATION_RESP,SCRIPT) 
values('110grouptype0005','110grouptype','IDM[not exists] and Resource[exists]','ADD_TO_IDM','recon/ADPopulationScript.groovy');
insert into RECONCILIATION_SITUATION(RECON_SITUATION_ID,RECON_CONFIG_ID,SITUATION,SITUATION_RESP,SCRIPT) 
values('110grouptype0006','110grouptype','IDM[exists] and Resource[exists]','UPDATE_IDM_FROM_RES','recon/ADPopulationScript.groovy');

insert into RECONCILIATION_CONFIG(RECON_CONFIG_ID, RESOURCE_ID, STATUS, TARGET_SYS_MATCH_SCRIPT, MANUAL_RECONCILIATION_FLAG, MATCH_FIELD_NAME, CUSTOM_MATCH_ATTR, MANAGED_SYS_ID, SEARCH_FILTER, TARGET_SYS_SEARCH_FILTER, MATCH_SCRIPT, RECON_CUSTOM_PROCESSOR, RECON_TYPE) 
values('110usertype', '110', 'ACTIVE', 'recon/LDAPSearchQuery.groovy', 'N', 'PRINCIPAL', 'sAMAccountName', '110', '{"employeeId": "notexists"}', '(&(objectClass=user)(cn=*))', 'recon/UserSearchScript.groovy', null, 'USER');
insert into RECONCILIATION_SITUATION(RECON_SITUATION_ID,RECON_CONFIG_ID,SITUATION,SITUATION_RESP,SCRIPT) 
values('110usertype290','110usertype','IDM[deleted] and Resource[exists]','ADD_TO_IDM','recon/ADPopulationScript.groovy');
insert into RECONCILIATION_SITUATION(RECON_SITUATION_ID,RECON_CONFIG_ID,SITUATION,SITUATION_RESP,SCRIPT) 
values('110usertype291','110usertype','IDM[exists] and Resource[not exists]','DELETE_FROM_IDM','recon/ADPopulationScript.groovy');
insert into RECONCILIATION_SITUATION(RECON_SITUATION_ID,RECON_CONFIG_ID,SITUATION,SITUATION_RESP,SCRIPT) 
values('110usertype292','110usertype','IDM[not exists] and Resource[exists]','ADD_TO_IDM','recon/ADPopulationScript.groovy');
insert into RECONCILIATION_SITUATION(RECON_SITUATION_ID,RECON_CONFIG_ID,SITUATION,SITUATION_RESP,SCRIPT) 
values('110usertype293','110usertype','IDM[exists] and Resource[exists]','UPDATE_IDM_FROM_RES','recon/ADPopulationScript.groovy');



commit;
