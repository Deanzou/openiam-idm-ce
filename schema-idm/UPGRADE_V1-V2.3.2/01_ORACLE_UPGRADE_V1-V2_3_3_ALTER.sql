ALTER TABLE openiam.SECURITY_DOMAIN
MODIFY
   (
  AUTH_SYS_ID			      VARCHAR2(32),
  PASSWORD_POLICY	    	VARCHAR2(32),
  AUTHENTICATION_POLICY	VARCHAR2(32),
  AUDIT_POLICY	    		VARCHAR2(32)
);

ALTER TABLE openiam.BATCH_CONFIG
ADD
   (
 STATUS 							VARCHAR2(20) NULL,
 PARAM1 							VARCHAR2(255) NULL,
 PARAM2 							VARCHAR2(255) NULL,
 PARAM3 							VARCHAR2(255) NULL,
 PARAM4 							VARCHAR2(255) NULL, 
 RULE_TYPE						VARCHAR2(20) DEFAULT 'GROOVY'
);


ALTER TABLE openiam.METADATA_TYPE
MODIFY
   (
   SYNC_MANAGED_SYS		INTEGER DEFAULT (0)
);


ALTER TABLE openiam.COMPANY
MODIFY
   (
   ALIAS				VARCHAR2(200),
   DESCRIPTION			VARCHAR2(200),
   INTERNAL_COMPANY_ID	VARCHAR2(200)
   
);

ALTER TABLE openiam.COMPANY
ADD
   (
 INTERNAL_COMPANY_NAME  VARCHAR(200) NULL
);


DROP INDEX openiam.IDX_USER_FIRSTNAME_UPPER;
DROP INDEX openiam.IDX_USER_LASTNAME_UPPER;

ALTER TABLE openiam.USERS
MODIFY
   (
   FIRST_NAME           VARCHAR2(100),
   LAST_NAME            VARCHAR2(100),
   TITLE                VARCHAR2(100),
   ADDRESS1             VARCHAR2(255),
   ADDRESS2             VARCHAR2(255),
	 ADDRESS3             VARCHAR2(255),
	 ADDRESS4             VARCHAR2(255),
	 ADDRESS5             VARCHAR2(255),
	 ADDRESS6             VARCHAR2(255),
	 ADDRESS7             VARCHAR2(255),
   CITY                 VARCHAR2(45),
   STATE                VARCHAR2(45)
);


ALTER TABLE openiam.USERS
ADD
   (
 DEL_ADMIN							INTEGER NULL,
 USER_OWNER_ID					VARCHAR2(32) NULL,
 DATE_PASSWORD_CHANGED	DATE NULL,
 DATE_CHALLENGE_RESP_CHANGED	DATE NULL
);


CREATE INDEX openiam.IDX_USER_FIRSTNAME_UPPER ON openiam.USERS
(UPPER(FIRST_NAME))
LOGGING
NOPARALLEL;

CREATE INDEX openiam.IDX_USER_LASTNAME_UPPER ON openiam.USERS
(UPPER(LAST_NAME))
LOGGING
NOPARALLEL;

ALTER TABLE openiam.USER_ATTRIBUTES
ADD
   (
 VALUE_AS_BYTE_ARRAY  BLOB NULL
);

DROP INDEX openiam.IDX_UA_NAME_UPPER;
DROP INDEX openiam.IDX_UA_VALUE_UPPER;


ALTER TABLE openiam.USER_ATTRIBUTES
MODIFY
   (
   NAME                 VARCHAR2(50),
   VALUE                VARCHAR2(1000),
   ATTR_GROUP			VARCHAR2(20)
);

CREATE INDEX openiam.IDX_UA_NAME_UPPER ON openiam.USER_ATTRIBUTES
(UPPER(NAME))
LOGGING
NOPARALLEL;


CREATE INDEX openiam.IDX_UA_VALUE_UPPER ON openiam.USER_ATTRIBUTES
(UPPER(VALUE))
LOGGING
NOPARALLEL;


CREATE TABLE openiam.USER_DELEGATION_ATTRIBUTE (
       ID                   varchar2(32) NOT NULL,
       USER_ID              varchar2(32) NULL,
       OBJ_TYPE             varchar2(50) NULL,	/*USER, ORG, ETC */
       NAME                 varchar2(50) NULL,
       VALUE                varchar2(255) NULL,
       PRIMARY KEY (ID),
       FOREIGN KEY (USER_ID)
                             REFERENCES openiam.USERS(USER_ID)
);

 CREATE TABLE openiam.USER_AFFILIATION (
		USER_AFFILIATION_ID		VARCHAR2(32) NOT NULL,
        COMPANY_ID  VARCHAR2(32) NOT NULL,
        USER_ID     VARCHAR2(32) NOT NULL,
		STATUS				VARCHAR2(20) NULL,
        CREATE_DATE			DATE NULL,
        START_DATE			DATE NULL,
        END_DATE			DATE NULL,
        CREATED_BY			VARCHAR2(32) NULL,
	PRIMARY KEY (USER_AFFILIATION_ID),
	   CONSTRAINT FK_USR_ORG_AFFL
        FOREIGN KEY (COMPANY_ID) REFERENCES openiam.COMPANY(COMPANY_ID),
       CONSTRAINT FK_USR_USER_AFFIL
		FOREIGN KEY (USER_ID) REFERENCES openiam.USERS(USER_ID)
);


ALTER TABLE openiam.GRP
MODIFY
   (
   INHERIT_FROM_PARENT	INTEGER DEFAULT (0)   
);

ALTER TABLE openiam.GRP
ADD
   (
 	   EXTERNAL_GRP_NAME	VARCHAR2(200) NULL,
	   GROUP_APPROVER_ID	VARCHAR2(32) NULL
);


ALTER TABLE openiam.USER_GRP
ADD
   (
   	START_DATE			DATE NULL,
   	END_DATE				DATE NULL

);


ALTER TABLE openiam.PERMISSIONS
ADD
   (
   	SERVICE_ID           varchar2(20) NOT NULL

);

ALTER TABLE openiam.LOCATION
MODIFY
   (
   ADDRESS1             VARCHAR2(512),
   ADDRESS2         VARCHAR2(512)
);


ALTER TABLE openiam.ADDRESS
MODIFY
   (
   ADDRESS1             VARCHAR2(512),
   ADDRESS2         VARCHAR2(512)
);

ALTER TABLE openiam.ROLE
ADD
   (
	   ROLE_APPROVER_ID	VARCHAR2(32) NULL,
	   ROLE_END_DATE			DATE NULL


);

CREATE TABLE openiam.ROLE_POLICY (
   ROLE_POLICY_ID VARCHAR2(32) NOT NULL,
   ROLE_ID 				VARCHAR2(32) NULL,
   SERVICE_ID 		VARCHAR2(20) NULL,
   ACTION 				VARCHAR2(20) NULL,
   NAME 					VARCHAR2(40) NULL,
   VALUE1 				VARCHAR2(40) NULL,
   VALUE2 				VARCHAR2(40) NULL,
   ACTION_QUALIFIER		VARCHAR2(20)	 NULL,
   POLICY_SCRIPT 		VARCHAR2(100) NULL,
   EXECUTION_ORDER INT,
   PRIMARY KEY (ROLE_POLICY_ID),
   CONSTRAINT FK_ROLE_ROLE_POLICY
  		FOREIGN KEY (ROLE_ID, SERVICE_ID) REFERENCES openiam.ROLE(ROLE_ID, SERVICE_ID)
);

ALTER TABLE openiam.ROLE
ADD
   (
	   	START_DATE			DATE NULL,
    	END_DATE			DATE NULL
);

ALTER TABLE openiam.RES
ADD
   (
     URL	VARCHAR2(255) NULL,
	   RES_OWNER_GROUP_ID   VARCHAR(32) NULL,
	   RES_OWNER_USER_ID    VARCHAR(32) NULL
);

ALTER TABLE openiam.PRIVILEGE
ADD
   (
    RESOURCE_ID			VARCHAR2(32) NOT NULL,
	  ABBRV		    VARCHAR2(3) NOT NULL
);

DROP TABLE openiam.RESOURCE_USER;

CREATE TABLE openiam.RESOURCE_USER(
 	   RESOURCE_USER_ID    	VARCHAR2(32) NOT NULL,
       RESOURCE_ID          VARCHAR2(32) NOT NULL,
       USER_ID              VARCHAR2(32) NOT NULL,
       PRIVILEGE_LIST       VARCHAR2(100) NULL,
	   OP_AGAINST_ROLE		INTEGER NULL,
	   STATUS				VARCHAR2(20) NULL,
	   START_DATE			DATE NULL,
       END_DATE				DATE NULL, 
       PRIMARY KEY (RESOURCE_USER_ID), 
	CONSTRAINT FK_RESOURCE_USER_USERS
       FOREIGN KEY (USER_ID)
                             REFERENCES openiam.USERS(USER_ID), 
       FOREIGN KEY (RESOURCE_ID)
                             REFERENCES openiam.RES(RESOURCE_ID)
);
     
ALTER TABLE openiam.RESOURCE_ROLE
ADD
   (
       START_DATE			DATE NULL,
       END_DATE				DATE NULL,
       PERMIT					INTEGER NULL
);

CREATE TABLE openiam.RESOURCE_GROUP(
       RES_GROUP_ID         VARCHAR2(32) NOT NULL,
       RESOURCE_ID          varchar2(32) NOT NULL,
       GRP_ID               varchar2(32) NOT NULL,
       START_DATE			DATE NULL,
       END_DATE				DATE NULL,
       PRIMARY KEY (RES_GROUP_ID),
	CONSTRAINT FK_RESOURCE_GRP
       FOREIGN KEY (GRP_ID)
                             REFERENCES openiam.GRP(GRP_ID),
	CONSTRAINT FK_RESOURCE_GRP_RESOURCE
       FOREIGN KEY (RESOURCE_ID)
                             REFERENCES openiam.RES(RESOURCE_ID)
);

CREATE TABLE openiam.RESOURCE_COMPANY(
       RESOURCE_ID      varchar2(32) NOT NULL,
       COMPANY_ID       varchar2(32) NOT NULL,
	   		STATUS					VARCHAR2(20) NULL,
	   		START_DATE			DATE NULL,
	   		LAST_DATE 			DATE NULL,
       PRIMARY KEY (RESOURCE_ID, COMPANY_ID), 
       CONSTRAINT FK_RESOURCE_COMPANY
       FOREIGN KEY (COMPANY_ID)
				 REFERENCES openiam.COMPANY(COMPANY_ID)
);

ALTER TABLE openiam.LOGIN
ADD
   (
  LAST_LOGIN_IP        VARCHAR2(60) NULL,
	PREV_LOGIN           DATE NULL,
	PREV_LOGIN_IP        VARCHAR2(60) NULL,
  PSWD_RESET_TOKEN     VARCHAR2(80) NULL,
  PSWD_RESET_TOKEN_EXP DATE NULL,
  LOGIN_ATTR_IN_TARGET_SYS     VARCHAR2(40) NULL
);


drop table openiam.AUTH_STATE;

CREATE TABLE openiam.AUTH_STATE (
       AUTH_STATE_ID        VARCHAR2(32) NOT NULL,
       USER_ID              VARCHAR2(32) NOT NULL,
       AUTH_STATE           numeric(5,1) NULL,
       TOKEN                VARCHAR2(2000) NULL,
       AA                   VARCHAR2(20) NULL,
       EXPIRATION           numeric(18,0) NULL,
       LAST_LOGIN	    DATE NULL,
       IP_ADDRESS	    VARCHAR2(20) NULL,
       PRIMARY KEY (AUTH_STATE_ID),
	CONSTRAINT FK_AUTH_STATE_USERS FOREIGN KEY (USER_ID) REFERENCES openiam.USERS (USER_ID)
);



ALTER TABLE openiam.IDM_AUDIT_LOG
ADD
   (
  NODE_IP              VARCHAR2(60) NULL
);


ALTER TABLE openiam.RESOURCE_PROP
MODIFY
   (
   NAME					VARCHAR2(40)  
);

ALTER TABLE openiam.IDM_AUDIT_LOG
MODIFY
   (
  ACTION_ID         VARCHAR2(50),            /* TYPE OF ACTION                              */
  ACTION_STATUS     VARCHAR2(100),                /* STATUS OF THE ACTION                               */                                 
  REASON            VARCHAR2(1000),
  HOST                 VARCHAR2(100),
  REQUEST_ID			VARCHAR2(40),
  SESSION_ID			VARCHAR2(40)
);

CREATE TABLE openiam.NOTIFICATION_CONFIG (
	   NOTIFICATION_CONFIG_ID 	VARCHAR2(32) NOT NULL,
	   NAME                     VARCHAR2(40) NULL,
	   SELECTION_PARAM_XML      CLOB,
	   MSG_SUBJECT 				VARCHAR2(100) NULL,
       MSG_TEMPLATE_URL 		VARCHAR2(100) NULL,
       MSG_FROM					VARCHAR2(100) NULL,  /* IF ITS AN EMAIL */
       MSG_BCC					VARCHAR2(100) NULL,  /* IF ITS AN EMAIL */
       SEARCH_COMPANY_ID        VARCHAR2(32) NULL,
       SEARCH_LAST_NAME         VARCHAR2(50) NULL,
       SEARCH_DEPT_ID           VARCHAR2(32) NULL,
       SEARCH_DIVISION          VARCHAR2(32) NULL,
       SEARCH_USER_STATUS       VARCHAR2(20) NULL,
       TEMPLATE_URL             VARCHAR2(80) NULL,
       MSG_TEXT                 CLOB NULL,
       PRIMARY KEY (NOTIFICATION_CONFIG_ID)
);


CREATE TABLE openiam.RESOURCE_PRIVILEGE (
  RESOURCE_PRIVLEGE_ID VARCHAR(32) NOT NULL,
  RESOURCE_ID     VARCHAR2(32)   NULL,
  PRIVILEGE_NAME  VARCHAR2(32)   NULL,
  PRIVILEGE_TYPE  VARCHAR2(20)   NULL, /* VALUE LIKE ROLE, GROUP, MODULE NAME */
  DESCRIPTION     VARCHAR2(40)   NULL,
  PRIMARY KEY (RESOURCE_PRIVLEGE_ID),
  CONSTRAINT FK_RESOURCE_PRIVILEGE_RES
    FOREIGN KEY (RESOURCE_ID )
    REFERENCES openiam.RES (RESOURCE_ID )
 );


CREATE  TABLE openiam.USER_PRIVILEGE (
  USER_PRIVILEGE_ID   VARCHAR2(32) NOT NULL,
  USER_ID             VARCHAR2(32) NULL ,
  RESOURCE_ID         VARCHAR2(32) NULL ,
  PRIVILEGE_ID        VARCHAR2(32) NULL ,
  PERMIT              INTEGER DEFAULT (0) NULL,
  START_DATE 	      DATE NULL ,
  END_DATE 	      DATE NULL ,
  PRIMARY KEY (USER_PRIVILEGE_ID) 
  );



CREATE TABLE openiam.REPORT_INFO(
	REPORT_INFO_ID 			varchar2(32) NOT NULL,
	REPORT_NAME 			VARCHAR2(64) NOT NULL UNIQUE,
    DATASOURCE_FILE_PATH 	    VARCHAR2(255) NOT NULL,
    REPORT_FILE_PATH 			VARCHAR2(255),
  PRIMARY KEY (REPORT_INFO_ID)
);

CREATE TABLE openiam.REPORT_PARAMETER_TYPE (
    RCPT_ID           VARCHAR2(32) NOT NULL,
    TYPE_NAME         VARCHAR2(64) NOT NULL UNIQUE,
    TYPE_DESCRIPTION  VARCHAR2(128),
    PRIMARY KEY (RCPT_ID)
);

CREATE TABLE openiam.REPORT_CRITERIA_PARAMETER (
    RCP_ID          VARCHAR2(32) NOT NULL,
    REPORT_INFO_ID  VARCHAR2(32) NOT NULL,
    PARAM_NAME      VARCHAR2(64) NOT NULL,
    PARAM_VALUE     VARCHAR2(64),
    RCPT_ID         VARCHAR2(64) NOT NULL,
    PRIMARY KEY (RCP_ID),
    CONSTRAINT FK_RCP_REPORT_INFO
       FOREIGN KEY (REPORT_INFO_ID)
       REFERENCES openiam.REPORT_INFO(REPORT_INFO_ID),
    CONSTRAINT FK_RCP_REPORT_PARAMETER_TYPE
       FOREIGN KEY (RCPT_ID)
       REFERENCES openiam.REPORT_PARAMETER_TYPE(RCPT_ID),
    CONSTRAINT UK_RPT_INFO_ID_PARAM_NAME UNIQUE (REPORT_INFO_ID, PARAM_NAME)
);


GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.ORG_POLICY TO openiam;
GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.ORG_POLICY_USER_LOG TO openiam;
GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.IAM_SYS_MESSAGES TO openiam;
GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.USER_AFFILIATION TO openiam;
GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.NOTIFICATION_CONFIG TO openiam;
GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.RESOURCE_PRIVILEGE TO openiam;
GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.USER_PRIVILEGE TO openiam;
GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.REPORT_INFO TO openiam;
GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.REPORT_CRITERIA_PARAMETER TO openiam;
GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.REPORT_SUBSCRIPTIONS TO openiam;
GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.REPORT_SUB_CRITERIA_PARAM TO openiam;
GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.REPORT_PARAMETER_TYPE TO openiam;
