ALTER TABLE openiam.IDENTITY_QUEST_GRP
MODIFY
   (
  IDENTITY_QUEST_GRP_ID			      VARCHAR2(32)
);


ALTER TABLE openiam.IDENTITY_QUESTION
MODIFY
   (
  IDENTITY_QUESTION_ID            VARCHAR2(32),
  IDENTITY_QUEST_GRP_ID			      VARCHAR2(32)
);

ALTER TABLE openiam.POLICY
MODIFY
   (
  POLICY_DEF_ID        VARCHAR2(32)
);

ALTER TABLE openiam.POLICY
drop
   (
  ENABLEMENT
);

ALTER TABLE openiam.POLICY
ADD
   (
  RULE_TEXT		CLOB  NULL
);

UPDATE openiam.POLICY
 SET RULE_TEXT = RULE;

ALTER TABLE openiam.POLICY
drop
   (
  RULE
);


ALTER TABLE openiam.POLICY_DEF_PARAM
ADD
   (
  HANDLER_LANGUAGE		VARCHAR2(20)  NULL
);

ALTER TABLE openiam.POLICY_ATTRIBUTE
DROP
   (
   RULE
);


ALTER TABLE openiam.POLICY_ATTRIBUTE
ADD
   (
   RULE_TEXT			CLOB NULL
);

ALTER TABLE openiam.ROLE_ENTITLEMENT
ADD
   (
    SERVICE_ID           VARCHAR2(20) NOT NULL
);


ALTER TABLE openiam.RESOURCE_POLICY
ADD
   (
    SERVICE_ID           VARCHAR2(20) NOT NULL
);

ALTER TABLE openiam.RESOURCE_POLICY
modify
   (
    RESOURCE_POLICY_ID   VARCHAR2(32),
    ROLE_ID              VARCHAR2(32)
);


ALTER TABLE openiam.PROVISION_CONNECTOR
ADD
   (
    CONNECTOR_INTERFACE 			VARCHAR2(20) NULL
);

ALTER TABLE openiam.MANAGED_SYS
ADD
   (
    APPL_URL								VARCHAR2(80) NULL,
    PRIMARY_REPOSITORY 				INTEGER NULL,
	   SECONDARY_REPOSITORY_ID 		VARCHAR2(32) NULL,
	   ALWAYS_UPDATE_SECONDARY 		INTEGER NULL,
	   RES_DEPENDENCY						VARCHAR2(32) NULL,
	   ADD_HNDLR							VARCHAR2(100) NULL,
	   MODIFY_HNDLR							VARCHAR2(100) NULL,
	   DELETE_HNDLR							VARCHAR2(100) NULL,
	   SETPASS_HNDLR						VARCHAR2(100) NULL,
	   SUSPEND_HNDLR						VARCHAR2(100) NULL,	   
	   SEARCH_HNDLR							VARCHAR2(100) NULL,
	   LOOKUP_HNDLR							VARCHAR2(100) NULL,
 	   TEST_CONNECTION_HNDLR				VARCHAR2(100) NULL,
 	   RECONCILE_RESOURCE_HNDLR				VARCHAR2(100) NULL,
	   HNDLR_5									VARCHAR2(100) NULL,
       DRIVER_URL                             VARCHAR2(100) NULL,
       CONNECTION_STRING                      VARCHAR2(100) NULL
    
);

ALTER TABLE openiam.MANAGED_SYS
modify
   (
    USER_ID								VARCHAR2(150),
    PSWD									VARCHAR2(100)
);

ALTER TABLE openiam.MANAGED_SYS
modify
   (
    CONNECTOR_ID NULL
);

ALTER TABLE openiam.MANAGED_SYS
modify
   (
    DOMAIN_ID NULL
);



CREATE TABLE openiam.MANAGED_SYS_ATTRIBUTE (
       MNG_SYS_ATTR_ID        varchar2(32) NOT NULL,
       NAME                   varchar2(60) NULL,
       VALUE1                 varchar2(255) NULL,
       VALUE2                 varchar2(255) NULL,
       MANAGED_SYS_ID         VARCHAR2(32) NULL,
       PRIMARY KEY (MNG_SYS_ATTR_ID),
       CONSTRAINT FK_MNG_MNG_ATTR
       		FOREIGN KEY (MANAGED_SYS_ID) REFERENCES openiam.MANAGED_SYS(MANAGED_SYS_ID)
);


CREATE TABLE openiam.APPROVER_ASSOC(
	APPROVER_ASSOC_ID           VARCHAR2(32)    NOT NULL,
	REQUEST_TYPE	            VARCHAR2(32) NULL,			/* Each type of request can have a different approval process. */
	APPROVER_LEVEL              INTEGER DEFAULT (1) NULL,   /* approval level */
	ASSOCIATION_TYPE            VARCHAR2(20)	   NULL,	/* GROUP, ROLE, SUPERVISOR, INDIVIDUAL, RESOURCE  */
	ASSOCIATION_OBJ_ID          VARCHAR2(32)	   NULL,	/* ID OF GROUP, ROLE, SUPERVISOR,  OR RESOURCE   */
	APPROVER_USER_ID            VARCHAR2(32)	   NULL,    /* ID OF THE APPROVER - WE CAN HAVE MANY APPROVERS  */
	ON_APPROVE_NOTIFY_USER_ID   VARCHAR2(32)   NULL,
	ON_REJECT_NOTIFY_USER_ID    VARCHAR2(32)   NULL,
	APPROVE_NOTIFY_USER_TYPE    VARCHAR2(20)   NULL,  /* USER, SUPERVISOR, TARGET_USER*/
	REJECT_NOTIFY_USER_TYPE     VARCHAR2(20)   NULL,
	ACTN    		    VARCHAR2(32) DEFAULT ('START') NULL,   /* START, ACCEPT, REJECT - FUTURE USE  */
	APPROVER_ROLE_ID 	    VARCHAR2(32)  NULL,
	APPROVER_ROLE_DOMAIN 	    VARCHAR2(20)  NULL,
	APPLY_DELEGATION_FILTER     INTEGER  NULL,
PRIMARY KEY (APPROVER_ASSOC_ID) 
);


CREATE TABLE openiam.MNG_SYS_GROUP(
    MNG_SYS_GROUP_ID    VARCHAR2(32)    NOT NULL,
    MANAGED_SYS_ID      VARCHAR2(32)    NOT NULL,
    PRIMARY KEY (MANAGED_SYS_ID, MNG_SYS_GROUP_ID), 
    CONSTRAINT Refmanaged_sys831 FOREIGN KEY (MANAGED_SYS_ID)
    REFERENCES openiam.MANAGED_SYS(MANAGED_SYS_ID)
);

ALTER TABLE openiam.PROV_REQUEST
ADD
   (
REQUESTOR_FIRSTNAME   VARCHAR2(50),   /* AVOIDS A LOOKUP ON USERS*/
REQUESTOR_LASTNAME    VARCHAR2(50), 
WORKFLOW_NAME       VARCHAR2(50),
	CHANGE_ACCESS_BY	VARCHAR2(32),
	REQUEST_XML 		CLOB,
	REQUEST_TITLE       varchar2(200) NULL,
    NEW_ROLE_ID              varchar2(32) NULL,
    NEW_SERVICE_ID           varchar2(20) NULL,
	MANAGED_RESOURCE_ID	VARCHAR2(32) NULL,
    REQUEST_FOR_ORG_ID  VARCHAR2(32) NULL
    );
    
    
ALTER TABLE openiam.PROV_REQUEST
modify
   (    
REQUEST_REASON      VARCHAR2(1000),
REQUEST_TYPE        VARCHAR2(50)
);

DROP TABLE openiam.REQUEST_APPROVER;
CREATE TABLE openiam.REQ_APPROVER(
    REQ_APPROVER_ID     VARCHAR2(32)    NOT NULL,
    APPROVER_ID         VARCHAR2(32)	   NULL,
    APPROVER_TYPE		VARCHAR2(20)    NULL,   /* MANAGER, APP_APPROVER, FORM_APPROVER */
    APPROVER_LEVEL      INTEGER	   NULL,
    REQUEST_ID          VARCHAR2(32)    NULL,
    ACTION_DATE         DATE       NULL,
    STATUS              VARCHAR2(20)    NULL,  /* PENDING, COMPLETE */
    ACTION              VARCHAR2(20)    NULL,  /* APPROVE, REJECT, DELEGATE */
    CMT             VARCHAR2(1000)   NULL,      /* COMMENT */
    MANAGED_SYS_ID      VARCHAR2(32)    NULL,
       ROLE_DOMAIN	        VARCHAR2(20)	NULL,
    MNG_SYS_GROUP_ID	VARCHAR2(32)	NULL,
    PRIMARY KEY (REQ_APPROVER_ID)
);


CREATE TABLE openiam.MNG_SYS_LIST(
    MANAGED_SYS_ID    VARCHAR2(32)    NOT NULL,
    REQUEST_ID        VARCHAR2(32)    NOT NULL,
    PRIMARY KEY (MANAGED_SYS_ID, REQUEST_ID), 
    CONSTRAINT Refmanaged_sys941 FOREIGN KEY (MANAGED_SYS_ID)
    REFERENCES openiam.MANAGED_SYS(MANAGED_SYS_ID),
    CONSTRAINT RefPROV_REQUEST951 FOREIGN KEY (REQUEST_ID)
    REFERENCES openiam.PROV_REQUEST(REQUEST_ID)
); 

CREATE TABLE openiam.REQUEST_ATTACHMENT(
    REQUEST_ATTACHMENT_ID    VARCHAR2(32)    NOT NULL,
    NAME                     VARCHAR2(20),
    ATTACHMENT               VARCHAR2(20),
    USER_ID                  VARCHAR2(32),
    ATTACHMENT_DATE          VARCHAR2(20),
    REQUEST_ID               VARCHAR2(32)    NOT NULL,
    PRIMARY KEY (REQUEST_ATTACHMENT_ID), 
    CONSTRAINT RefPROV_REQUEST1001 FOREIGN KEY (REQUEST_ID)
    REFERENCES openiam.PROV_REQUEST(REQUEST_ID)
) ; 


CREATE TABLE openiam.REQUEST_ATTRIBUTE(
    REQUEST_ATTR_ID    VARCHAR2(32)    NOT NULL,
    NAME               VARCHAR2(20)	NULL,
    VALUE              VARCHAR2(20)	NULL,
    METADATA_ID        VARCHAR2(20)	NULL,
    ATTR_GROUP         VARCHAR2(20)	NULL,
    REQUEST_ID         VARCHAR2(32)   NULL,
    PRIMARY KEY (REQUEST_ATTR_ID), 
    CONSTRAINT RefPROV_REQUEST1011 FOREIGN KEY (REQUEST_ID)
    REFERENCES openiam.PROV_REQUEST(REQUEST_ID)
); 

DROP TABLE openiam.REQUEST_USER;

CREATE TABLE openiam.REQUEST_USER(
    REQ_USER_ID         VARCHAR2(32)    NOT NULL,
    USER_ID             VARCHAR2(32),
    FIRST_NAME          VARCHAR2(50),
    LAST_NAME           VARCHAR2(50),
    MIDDLE_INIT         VARCHAR2(20),
    DEPT_CD             VARCHAR2(32),
    DIVISION            VARCHAR2(32),
    LOCATION_CD         VARCHAR2(32),
    AFFILIATION         VARCHAR2(32),
    REQUEST_ID          VARCHAR2(32)   NULL,
    PRIMARY KEY (REQ_USER_ID), 
    CONSTRAINT RefPROV_REQUEST931 FOREIGN KEY (REQUEST_ID)
    REFERENCES openiam.PROV_REQUEST(REQUEST_ID)
); 

ALTER TABLE openiam.ATTRIBUTE_MAP
ADD
   (
    RULE_TEXT               CLOB,
    DATA_TYPE               VARCHAR2(20) NULL,
    DEFAULT_VALUE           varchar2(32) NULL
);

UPDATE openiam.attribute_map
  SET RULE_TEXT = RULE;

ALTER TABLE openiam.ATTRIBUTE_MAP
drop
   (
    RULE
);

CREATE TABLE openiam.RECONCILIATION_CONFIG (
  RECON_CONFIG_ID	          varchar2(32) NOT NULL,
  RESOURCE_ID 		          VARCHAR2(32) NULL,
  FREQUENCY                   VARCHAR2(20) NULL,
  STATUS                      VARCHAR2(20) NULL,
  CSV_LINE_SEPARATOR          VARCHAR2(10) DEFAULT ('comma'),
  CSV_END_OF_LINE             VARCHAR2(10) DEFAULT ('enter'),
  NOTIFICATION_EMAIL_ADDRESS  VARCHAR2(80) NULL,
  TARGET_SYS_MATCH_SCRIPT     VARCHAR2(120) NULL,
  PRIMARY KEY (RECON_CONFIG_ID)
);

CREATE TABLE openiam.RECONCILIATION_SITUATION (
  RECON_SITUATION_ID	 	varchar2(32) NOT NULL,
  RECON_CONFIG_ID 			VARCHAR2(32) NULL,
  SITUATION					VARCHAR2(40) NULL,
  SITUATION_RESP		    VARCHAR2(40) NULL,
  SCRIPT				    VARCHAR2(80) NULL,
  PRIMARY KEY  (RECON_SITUATION_ID),
CONSTRAINT RECON_SITUATION FOREIGN KEY (RECON_CONFIG_ID)
    REFERENCES openiam.RECONCILIATION_CONFIG(RECON_CONFIG_ID)
);

CREATE TABLE openiam.SYNCH_CONFIG (
      SYNCH_CONFIG_ID        	varchar2(32) NOT NULL,
      NAME       		varchar2(60) 	NULL,
      STATUS       		VARCHAR2(20) 	NULL,
      SYNCH_SRC			VARCHAR2(20) 	NULL, /* CSV FILE, MANAGED_RESOURCE */ 
      FILE_NAME			VARCHAR2(80) 	NULL,
      SRC_LOGIN_ID		          VARCHAR2(100) 	NULL,
      SRC_PASSWORD		          VARCHAR2(100) 	NULL,
      SRC_HOST			            VARCHAR2(100) 	NULL,
      DRIVER			              VARCHAR2(100)	  NULL,
      CONNECTION_URL		        VARCHAR2(100)   NULL,
      QUERY			                VARCHAR2(1000) 	NULL,
      QUERY_TIME_FIELD	        VARCHAR2(50)	  NULL,   /* FIELD IN THE TABLE THAT SHOULD BE USED WHEN DOING INCREMENTAL SEARCH */
      BASE_DN                   VARCHAR2(200)    NULL,
      LAST_EXEC_TIME	          DATE		        NULL,
      LAST_REC_PROCESSED        VARCHAR2(32)	  NULL,
      MANAGED_SYS_ID		      VARCHAR2(32) 	NULL, 
      LOAD_MATCH_ONLY		      INTEGER	DEFAULT (0) NULL,
      UPDATE_ATTRIBUTE     	  INTEGER	DEFAULT (1) NULL,
      SYNCH_FREQUENCY		      VARCHAR2(20) 	NULL,
      SYNCH_TYPE		          VARCHAR2(20) 	NULL,
      DELETE_RULE		          VARCHAR2(80) 	NULL,
      PROCESS_RULE		        VARCHAR2(80)	NULL,
      VALIDATION_RULE		      VARCHAR2(80) 	NULL,
      TRANSFORMATION_RULE	    VARCHAR2(80) 	NULL,
      MATCH_FIELD_NAME		    VARCHAR2(40) 	NULL,
      MATCH_MANAGED_SYS_ID 	   VARCHAR2(32) 	NULL,
      MATCH_SRC_FIELD_NAME 	VARCHAR2(40) 	NULL,
      CUSTOM_MATCH_RULE		VARCHAR2(100) 	NULL,
      CUSTOM_ADAPTER_SCRIPT	VARCHAR2(100) 	NULL,	
      CUSTOM_MATCH_ATTR		VARCHAR2(40) 	NULL,
      WS_URL	                VARCHAR2(100) 	NULL,
      WS_SCRIPT		        VARCHAR2(100) 	NULL,
       WS_ENDPOINT              VARCHAR2(100)    NULL,
PRIMARY KEY (SYNCH_CONFIG_ID) 
);


CREATE TABLE openiam.SYNCH_CONFIG_DATA_MAPPING(
    MAPPING_ID    			VARCHAR2(32)    NOT NULL,
    SYNCH_CONFIG_ID     VARCHAR2(32) NULL,
    IDM_FIELD_NAME      VARCHAR2(40),
		SRC_FIELD_NAME			VARCHAR2(40),
		MULTIVALUED         INTEGER NULL,
    PRIMARY KEY (MAPPING_ID), 
    CONSTRAINT SYNCH_DATA_MAP FOREIGN KEY (SYNCH_CONFIG_ID)
    REFERENCES openiam.SYNCH_CONFIG(SYNCH_CONFIG_ID)
);

CREATE TABLE openiam.WEB_RESOURCE_ATTRIBUTE(
	ATTRIBUTE_MAP_ID      varchar2(32) NOT NULL,
	RESOURCE_ID           varchar2(32) NOT NULL,
	TARGET_ATTRIBUTE_NAME varchar2(100) NOT NULL,
	AM_ATTRIBUTE_NAME     varchar2(100) NULL,
	AM_POLICY_URL         varchar2(100) NULL,
	PRIMARY KEY(ATTRIBUTE_MAP_ID)
);

CREATE TABLE openiam.MAIL_TEMPLATE(
	TMPL_ID       VARCHAR2(32) NOT NULL,
	TMPL_NAME     VARCHAR2(64) NOT NULL ,
    TMPL_SUBJECT  VARCHAR2(64) NOT NULL,
    BODY_TYPE     VARCHAR2(16) NOT NULL,
    ATTACHMENT_FILE_PATH  VARCHAR2(64) NULL,
    BODY          CLOB NULL,
    PRIMARY KEY (TMPL_ID)
);

ALTER TABLE openiam.MAIL_TEMPLATE
add CONSTRAINT MAIL_TEMPLATE_NAME UNIQUE (TMPL_NAME);

CREATE TABLE openiam.NOTIFICATION(
	MSG_ID          VARCHAR2(32) NOT NULL,
	MSG_NAME        VARCHAR2(64) NOT NULL,
    PROVIDER_SCRIPT VARCHAR2(64),
    TMPL_ID         VARCHAR2(32),
    START_DATE      DATE NULL,
    END_DATE        DATE NULL,
    MSG_TYPE        VARCHAR2(32),
    PRIMARY KEY (MSG_ID),
    CONSTRAINT FK_MESSAGE_MAIL_TEMPLATE
       FOREIGN KEY (TMPL_ID)
       REFERENCES openiam.MAIL_TEMPLATE(TMPL_ID)
);

ALTER TABLE openiam.NOTIFICATION
add CONSTRAINT NOTIFICATION_MSG_NAME UNIQUE (MSG_NAME);



GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.REQ_APPROVER TO openiam;
GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.MNG_SYS_LIST TO openiam;
GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.WEB_RESOURCE_ATTRIBUTE TO openiam;
GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.REQUEST_ATTACHMENT TO openiam;
GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.REQUEST_ATTRIBUTE TO openiam;
GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.REQUEST_USER TO openiam;
GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.ATTRIBUTE_MAP TO openiam;
GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.RECONCILIATION_CONFIG TO openiam;
GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.RECONCILIATION_SITUATION TO openiam;
GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.SYNCH_CONFIG TO openiam;
GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.SYNCH_CONFIG_DATA_MAPPING TO openiam;
GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.MAIL_TEMPLATE TO openiam;
GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.NOTIFICATION TO openiam;
GRANT DELETE, INSERT, SELECT, UPDATE ON  openiam.POLICY_OBJECT_ASSOC TO openiam;